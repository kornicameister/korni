{"version":3,"sources":["../static/js/5.921f0179.chunk.js","../node_modules/@firebase/firestore/dist/esm/src/util/assert.js","../node_modules/@firebase/firestore/dist/esm/src/util/error.js","../node_modules/@firebase/firestore/dist/esm/src/model/collections.js","../node_modules/@firebase/firestore/dist/esm/src/model/document_key.js","../node_modules/@firebase/firestore/dist/esm/src/util/log.js","../node_modules/@firebase/firestore/dist/esm/src/util/misc.js","../node_modules/@firebase/firestore/dist/esm/src/local/persistence_promise.js","../node_modules/@firebase/firestore/dist/esm/src/model/document.js","../node_modules/@firebase/firestore/dist/esm/src/core/snapshot_version.js","../node_modules/@firebase/firestore/dist/esm/src/util/obj.js","../node_modules/@firebase/firestore/dist/esm/src/platform/platform.js","../node_modules/process/browser.js","../node_modules/@firebase/firestore/dist/esm/src/model/path.js","../node_modules/@firebase/firestore/dist/esm/src/util/sorted_map.js","../node_modules/@firebase/firestore/dist/esm/src/model/field_value.js","../node_modules/@firebase/firestore/dist/esm/src/core/timestamp.js","../node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_schema.js","../node_modules/@firebase/firestore/dist/esm/src/util/input_validation.js","../node_modules/@firebase/firestore/dist/esm/src/util/types.js","../node_modules/@firebase/firestore/dist/esm/src/local/query_data.js","../node_modules/@firebase/firestore/dist/esm/src/remote/remote_event.js","../node_modules/@firebase/firestore/dist/esm/src/model/mutation_batch.js","../node_modules/timers-browserify/main.js","../node_modules/@firebase/firestore/dist/esm/src/model/mutation.js","../node_modules/@firebase/firestore/dist/esm/src/util/sorted_set.js","../node_modules/@firebase/firestore/dist/esm/src/core/view_snapshot.js","../node_modules/@firebase/firestore/dist/esm/src/local/reference_set.js","../node_modules/@firebase/firestore/dist/esm/src/local/simple_db.js","../node_modules/setimmediate/setImmediate.js","../node_modules/moment/moment.js","../node_modules/webpack/buildin/module.js","../node_modules/@firebase/app/dist/esm/index.js","../node_modules/@firebase/util/dist/cjs/src/constants.js","../node_modules/@firebase/firestore/dist/esm/src/core/version.js","../node_modules/@firebase/firestore/dist/esm/src/api/blob.js","../node_modules/@firebase/firestore/dist/esm/src/util/api.js","../node_modules/@firebase/firestore/dist/esm/src/api/geo_point.js","../node_modules/@firebase/firestore/dist/esm/src/core/query.js","../node_modules/@firebase/firestore/dist/esm/src/remote/rpc_error.js","../node_modules/@firebase/firestore/dist/esm/src/api/field_path.js","../node_modules/@firebase/firestore/dist/esm/src/core/types.js","../node_modules/@firebase/firestore/dist/esm/src/util/obj_map.js","../node_modules/@firebase/firestore/dist/esm/src/local/encoded_resource_path.js","../node_modules/@firebase/firestore/dist/esm/src/util/promise.js","../node_modules/@firebase/util/dist/cjs/src/assert.js","../node_modules/@firebase/util/dist/cjs/src/crypt.js","../node_modules/@firebase/util/dist/cjs/src/json.js","../node_modules/@firebase/util/dist/cjs/src/obj.js","../node_modules/@firebase/firestore/dist/esm/src/remote/serializer.js","../node_modules/@firebase/firestore/dist/esm/src/core/database_info.js","../node_modules/@firebase/firestore/dist/esm/src/remote/watch_change.js","../node_modules/@firebase/firestore/dist/esm/src/model/document_set.js","../node_modules/@firebase/firestore/dist/esm/src/local/eager_garbage_collector.js","../node_modules/@firebase/firestore/dist/esm/src/core/target_id_generator.js","../node_modules/@firebase/firestore/dist/esm/src/api/field_value.js","pages/stats/pages/stats_github.tsx","data/firebase.tsx","data/store.ts","../node_modules/firebase/app/index.js","../node_modules/@firebase/polyfill/dist/esm/index.js","../node_modules/@firebase/polyfill/dist/esm/src/polyfills/promise.js","../node_modules/promise-polyfill/promise.js","../node_modules/@firebase/polyfill/dist/esm/src/shims/find.js","../node_modules/@firebase/polyfill/dist/esm/src/shims/findIndex.js","../node_modules/@firebase/app/dist/esm/src/firebaseApp.js","../node_modules/@firebase/util/dist/cjs/index.js","../node_modules/@firebase/util/dist/cjs/src/deepCopy.js","../node_modules/@firebase/util/dist/cjs/src/deferred.js","../node_modules/@firebase/util/dist/cjs/src/environment.js","../node_modules/@firebase/util/dist/cjs/src/errors.js","../node_modules/@firebase/util/dist/cjs/src/jwt.js","../node_modules/@firebase/util/dist/cjs/src/query.js","../node_modules/@firebase/util/dist/cjs/src/sha1.js","../node_modules/@firebase/util/dist/cjs/src/hash.js","../node_modules/@firebase/util/dist/cjs/src/subscribe.js","../node_modules/@firebase/util/dist/cjs/src/validation.js","../node_modules/@firebase/util/dist/cjs/src/utf8.js","../node_modules/firebase/firestore/index.js","../node_modules/@firebase/firestore/dist/esm/index.js","../node_modules/@firebase/firestore/dist/esm/src/platform_browser/browser_init.js","../node_modules/@firebase/firestore/dist/esm/src/platform_browser/browser_platform.js","../node_modules/@firebase/firestore/dist/esm/src/remote/existence_filter.js","../node_modules/@firebase/firestore/dist/esm/src/platform_browser/webchannel_connection.js","../node_modules/@firebase/webchannel-wrapper/dist/index.js","../node_modules/@firebase/firestore/dist/esm/src/remote/stream_bridge.js","../node_modules/@firebase/firestore/dist/esm/src/platform/config.js","../node_modules/@firebase/firestore/dist/esm/src/api/database.js","../node_modules/@firebase/firestore/dist/esm/src/core/firestore_client.js","../node_modules/@firebase/firestore/dist/esm/src/core/event_manager.js","../node_modules/@firebase/firestore/dist/esm/src/core/sync_engine.js","../node_modules/@firebase/firestore/dist/esm/src/local/local_view_changes.js","../node_modules/@firebase/firestore/dist/esm/src/core/view.js","../node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_persistence.js","../node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_mutation_queue.js","../node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_query_cache.js","../node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_remote_document_cache.js","../node_modules/@firebase/firestore/dist/esm/src/local/local_serializer.js","../node_modules/@firebase/firestore/dist/esm/src/local/local_store.js","../node_modules/@firebase/firestore/dist/esm/src/local/local_documents_view.js","../node_modules/@firebase/firestore/dist/esm/src/local/remote_document_change_buffer.js","../node_modules/@firebase/firestore/dist/esm/src/local/memory_persistence.js","../node_modules/@firebase/firestore/dist/esm/src/local/memory_mutation_queue.js","../node_modules/@firebase/firestore/dist/esm/src/local/memory_query_cache.js","../node_modules/@firebase/firestore/dist/esm/src/local/memory_remote_document_cache.js","../node_modules/@firebase/firestore/dist/esm/src/local/no_op_garbage_collector.js","../node_modules/@firebase/firestore/dist/esm/src/remote/datastore.js","../node_modules/@firebase/firestore/dist/esm/src/remote/persistent_stream.js","../node_modules/@firebase/firestore/dist/esm/src/remote/backoff.js","../node_modules/@firebase/firestore/dist/esm/src/remote/remote_store.js","../node_modules/@firebase/firestore/dist/esm/src/core/transaction.js","../node_modules/@firebase/firestore/dist/esm/src/util/async_observer.js","../node_modules/@firebase/firestore/dist/esm/src/util/async_queue.js","../node_modules/@firebase/firestore/dist/esm/src/api/credentials.js","../node_modules/@firebase/firestore/dist/esm/src/auth/user.js","../node_modules/@firebase/firestore/dist/esm/src/api/observer.js","../node_modules/@firebase/firestore/dist/esm/src/api/user_data_converter.js"],"names":["webpackJsonp","Array","concat","module","__webpack_exports__","__webpack_require__","fail","failure","message","__WEBPACK_IMPORTED_MODULE_0__core_version__","Object","__WEBPACK_IMPORTED_MODULE_1__log__","Error","assert","assertion","d","Code","FirestoreError","__extends","this","extendStatics","setPrototypeOf","__proto__","b","p","hasOwnProperty","__","constructor","prototype","create","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","_super","code","_this","call","name","toString","maybeDocumentMap","EMPTY_MAYBE_DOCUMENT_MAP","documentMap","EMPTY_DOCUMENT_MAP","documentVersionMap","EMPTY_DOCUMENT_VERSION_MAP","documentKeySet","EMPTY_DOCUMENT_KEY_SET","__WEBPACK_IMPORTED_MODULE_0__util_sorted_map__","__WEBPACK_IMPORTED_MODULE_1__util_sorted_set__","__WEBPACK_IMPORTED_MODULE_2__document_key__","comparator","DocumentKey","__WEBPACK_IMPORTED_MODULE_0__util_assert__","__WEBPACK_IMPORTED_MODULE_1__path__","path","isDocumentKey","toArray","join","isEqual","other","k1","k2","length","fromSegments","segments","slice","fromPathString","fromString","EMPTY","getLogLevel","logLevel","setLogLevel","newLevel","debug","tag","msg","obj","_i","arguments","LogLevel","DEBUG","time","Date","toISOString","args","map","argToString","console","log","apply","error","ERROR","platform","__WEBPACK_IMPORTED_MODULE_1__platform_platform__","getPlatform","formatJSON","e","primitiveComparator","left","right","equals","undefined","arrayEquals","i","immediatePredecessor","s","lastIndex","charAt","substring","String","fromCharCode","charCodeAt","immediateSuccessor","AutoId","__WEBPACK_IMPORTED_MODULE_0__assert__","newId","chars","autoId","Math","floor","random","PersistencePromise","callback","nextCallback","catchCallback","result","isDone","callbackAttached","value","catch","fn","next","nextFn","catchFn","wrapFailure","wrapSuccess","resolve","reject","toPromise","Promise","wrapUserFunction","waitFor","all","reduce","promise","nextPromise","idx","results","first","initial","push","Document","NoDocument","__WEBPACK_IMPORTED_MODULE_1__document_key__","key","version","data","options","hasLocalMutations","field","fieldValue","compareByKey","d1","d2","compareByField","v1","v2","compareTo","SnapshotVersion","__WEBPACK_IMPORTED_MODULE_0__timestamp__","timestamp","fromMicroseconds","seconds","nanos","fromTimestamp","forDeletedDoc","MIN","toMicroseconds","toTimestamp","contains","defaulted","defaultValue","forEachNumber","num","Number","isNaN","forEach","isEmpty","shallowCopy","emptyByteString","PlatformSupport","setPlatform","exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","ResourcePath","FieldPath","__WEBPACK_IMPORTED_MODULE_1__util_error__","Path","offset","init","construct","getPrototypeOf","defineProperty","get","enumerable","configurable","child","nameOrPath","limit","segment","popFirst","size","popLast","firstSegment","lastSegment","index","isPrefixOf","end","p1","p2","min","canonicalString","indexOf","split","filter","EMPTY_PATH","identifierRegExp","isValidIdentifier","test","str","replace","isKeyField","keyField","fromServerFormat","current","addCurrentSegment","inBackticks","c","SortedMap","root","LLRBNode","insert","copy","BLACK","remove","node","cmp","getPredecessorKey","rightParent","prunedNodes","minKey","maxKey","inorderTraversal","action","k","v","reverseTraversal","getIterator","SortedMapIterator","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","startKey","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","n","fixUp","removeMin","isRed","moveRedLeft","smallest","rotateRight","moveRedRight","rotateLeft","colorFlip","nl","nr","checkMaxDepth","blackDepth","check","pow","LLRBEmptyNode","numericComparator","numericEquals","FieldValueOptions","NullValue","BooleanValue","IntegerValue","DoubleValue","StringValue","TimestampValue","ServerTimestampValue","BlobValue","RefValue","GeoPointValue","ObjectValue","ArrayValue","TypeOrder","__WEBPACK_IMPORTED_MODULE_1__util_misc__","__WEBPACK_IMPORTED_MODULE_2__util_sorted_map__","__WEBPACK_IMPORTED_MODULE_3__document_key__","ServerTimestampBehavior","serverTimestampBehavior","fromSnapshotOptions","serverTimestamps","Estimate","Previous","defaultOptions","Default","FieldValue","val","defaultCompareTo","typeOrder","internalValue","INSTANCE","of","TRUE","FALSE","NumberValue","NAN","NaN","POSITIVE_INFINITY","Infinity","NEGATIVE_INFINITY","toDate","localWriteTime","previousValue","_compareTo","databaseId","it1","it2","next1","next2","set","to","setChild","newChild","delete","pathSegment","JSON","stringify","childName","minLength","Timestamp","isoRegExp","RegExp","now","fromEpochMilliseconds","fromDate","date","getTime","milliseconds","fromISOString","utc","fraction","exec","nanoStr","substr","toEpochMilliseconds","createOrUpgradeDb","db","oldVersion","createObjectStore","DbMutationQueue","store","keyPath","DbMutationBatch","DbTargetDocument","createIndex","documentTargetsIndex","documentTargetsKeyPath","unique","DbTarget","queryTargetsIndexName","queryTargetsKeyPath","DbDocumentMutation","DbRemoteDocument","DbOwner","DbTargetGlobal","SCHEMA_VERSION","DbTimestamp","DbNoDocument","ALL_STORES","__WEBPACK_IMPORTED_MODULE_1__encoded_resource_path__","ownerId","leaseTimestampMs","userId","lastAcknowledgedBatchId","lastStreamToken","batchId","localWriteTimeMs","mutations","prefixForUser","prefixForPath","PLACEHOLDER","readTime","noDocument","document","targetId","canonicalId","resumeToken","lastListenSequenceNumber","query","highestTargetId","highestListenSequenceNumber","lastRemoteSnapshotVersion","validateExactNumberOfArgs","functionName","numberOfArgs","__WEBPACK_IMPORTED_MODULE_1__error__","formatPlural","validateAtLeastNumberOfArgs","minNumberOfArgs","validateBetweenNumberOfArgs","maxNumberOfArgs","validateNamedArrayAtLeastNumberOfElements","minNumberOfElements","validateArgType","type","position","argument","validateType","ordinal","validateOptionalArgType","validateNamedType","optionName","validateNamedOptionalType","validateNamedPropertyEquals","inputName","input","expected","expectedDescription","expected_1","valueDescription","actualDescription","validateNamedOptionalPropertyEquals","isPlainObject","description","customObjectName","tryGetCustomObjectType","funcNameRegex","validateDefined","validateOptionNames","optionNames","__WEBPACK_IMPORTED_MODULE_2__obj__","_","invalidClassError","isNullOrUndefined","isSafeInteger","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","NumberAsAny","isFinite","QueryPurpose","QueryData","__WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__","purpose","snapshotVersion","update","updated","RemoteEvent","CurrentStatusUpdate","ResetMapping","UpdateMapping","__WEBPACK_IMPORTED_MODULE_1__model_collections__","__WEBPACK_IMPORTED_MODULE_2__platform_platform__","targetChanges","documentUpdates","addDocumentUpdate","doc","handleExistenceFilterMismatch","mapping","currentStatusUpdate","MarkNotCurrent","EMPTY_KEY_SET","docs","add","addedDocuments","removedDocuments","applyToKeySet","keys","BATCHID_UNKNOWN","MutationBatch","MutationBatchResult","__WEBPACK_IMPORTED_MODULE_0__collections__","__WEBPACK_IMPORTED_MODULE_1__util_assert__","__WEBPACK_IMPORTED_MODULE_2__util_misc__","applyToRemoteDocument","docKey","maybeDoc","batchResult","mutationResults","mutation","mutationResult","applyToLocalView","baseDoc","keySet","_a","isTombstone","toTombstone","batch","commitVersion","streamToken","docVersions","from","versionMap","Timeout","id","clearFn","_id","_clearFn","Function","window","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","FieldMask","ServerTimestampTransform","FieldTransform","MutationResult","Precondition","SetMutation","PatchMutation","TransformMutation","DeleteMutation","MutationType","__WEBPACK_IMPORTED_MODULE_3__document__","__WEBPACK_IMPORTED_MODULE_4__field_value__","fields","instance","transform","transformResults","updateTime","exists","isValidFor","isNone","NONE","Mutation","verifyKeyMatches","getPostMutationVersion","precondition","Set","fieldMask","Patch","newData","patchDocument","patchObject","fieldPath","newValue","fieldTransforms","Transform","requireDocument","transformObject","localTransformResults","fieldTransform","Delete","SortedSet","__WEBPACK_IMPORTED_MODULE_0__sorted_map__","fromMapKeys","has","elem","last","cb","forEachInRange","range","iter","forEachWhile","start","firstAfterOrEqual","unionWith","thisIt","otherIt","thisElem","otherElem","ChangeType","SyncState","DocumentChangeSet","ViewSnapshot","__WEBPACK_IMPORTED_MODULE_0__model_document_key__","changeMap","track","change","oldChange","Added","Metadata","Removed","Modified","getChanges","changes","oldDocs","docChanges","fromCache","hasPendingWrites","syncStateChanged","otherChanges","ReferenceSet","DocReference","__WEBPACK_IMPORTED_MODULE_0__model_collections__","__WEBPACK_IMPORTED_MODULE_1__model_document_key__","__WEBPACK_IMPORTED_MODULE_3__util_sorted_set__","__WEBPACK_IMPORTED_MODULE_4__persistence_promise__","refsByKey","refsByTarget","compareByTargetId","garbageCollector","addReference","addReferences","removeReference","removeRef","removeReferences","removeReferencesForId","emptyKey","startRef","endRef","removeAllReferences","addPotentialGarbageKey","referencesForId","setGarbageCollector","containsKey","txn","firstRef","targetOrBatchId","wrapRequest","request","__WEBPACK_IMPORTED_MODULE_2__persistence_promise__","onsuccess","event","target","onerror","SimpleDb","SimpleDbTransaction","__WEBPACK_IMPORTED_MODULE_1__util_log__","LOG_TAG","openOrCreate","runUpgrade","isAvailable","indexedDB","open","onupgradeneeded","deleteDatabase","ua","navigator","userAgent","runTransaction","mode","objectStores","transactionFn","transaction","transactionFnResult","abort","completionPromise","then","IterationController","dbCursor","shouldStop","nextKey","done","skip","objectStoresNames","aborted","onabort","oncomplete","storeName","objectStore","SimpleDbStore","put","keyOrValue","loadAll","indexOrRange","cursor","iterateCursor","deleteAll","keysOnly","control","iterate","optionsOrCallback","cursorRequest","controller","userResult","primaryKey","skipToKey","continue","indexName","direction","reverse","openKeyCursor","openCursor","global","task","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","attachTo","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","onGlobalMessage","source","addEventListener","attachEvent","MessageChannel","channel","port1","port2","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","self","factory","hooks","hookCallback","isArray","isObject","isObjectEmpty","getOwnPropertyNames","isUndefined","isNumber","isDate","arr","res","hasOwnProp","a","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","_d","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","copyConfig","prop","_isAMomentObject","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","ceil","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","abs","diffs","warn","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","arg","stack","deprecateSimple","deprecations","isFunction","_config","_dayOfMonthOrdinalParseLenient","_dayOfMonthOrdinalParse","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","invalidDate","_invalidDate","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","zeroFill","targetLength","forceSign","absNumber","zerosToFill","max","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","daysInYear","year","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","month","daysInMonth","stringGet","stringSet","prioritized","mod","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","y","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","loadLocale","oldLocale","locales","globalLocale","_abbr","getSetGlobalLocale","values","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","updateLocale","tmpLocale","listLocales","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","trim","checkWeekday","weekdayStr","parsedInput","defaultLocaleWeekdaysShort","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","keepOffset","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","withSuffix","toISOString$1","abs$1","Y","D","toFixed","total","asSeconds","totalSign","ymSign","daysSign","hmsSign","t","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","o","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","webpackPolyfill","paths","children","firebase","__WEBPACK_IMPORTED_MODULE_0__src_firebaseApp__","CONSTANTS","NODE_CLIENT","NODE_ADMIN","SDK_VERSION","__WEBPACK_IMPORTED_MODULE_0__firebase_app__","assertUint8ArrayAvailable","Uint8Array","__WEBPACK_IMPORTED_MODULE_2__util_error__","assertBase64Available","__WEBPACK_IMPORTED_MODULE_0__platform_platform__","base64Available","Blob","PublicBlob","__WEBPACK_IMPORTED_MODULE_1__util_api__","__WEBPACK_IMPORTED_MODULE_3__util_input_validation__","__WEBPACK_IMPORTED_MODULE_4__util_misc__","binaryString","_binaryString","fromBase64String","base64","atob","fromUint8Array","char","toBase64","btoa","toUint8Array","buffer","makeConstructorPrivate","cls","optionalMessage","PublicConstructor","__WEBPACK_IMPORTED_MODULE_0__error__","staticProperty","GeoPoint","__WEBPACK_IMPORTED_MODULE_0__util_error__","__WEBPACK_IMPORTED_MODULE_1__util_input_validation__","latitude","longitude","_lat","_long","fieldFilter","op","__WEBPACK_IMPORTED_MODULE_2__model_field_value__","RelationOp","EQUAL","__WEBPACK_IMPORTED_MODULE_5__util_error__","NullFilter","NanFilter","RelationFilter","Query","Direction","Bound","OrderBy","__WEBPACK_IMPORTED_MODULE_0__model_document__","__WEBPACK_IMPORTED_MODULE_3__model_path__","__WEBPACK_IMPORTED_MODULE_4__util_assert__","__WEBPACK_IMPORTED_MODULE_6__util_types__","explicitOrderBy","filters","startAt","endAt","memoizedCanonicalId","memoizedOrderBy","assertValidBound","atPath","inequalityField","getInequalityFilterField","firstOrderByField","getFirstOrderByField","KEY_ORDERING_ASC","foundKeyOrdering","orderBy","lastDirection","ASCENDING","KEY_ORDERING_DESC","addFilter","isInequality","newFilters","addOrderBy","newOrderBy","withLimit","withStartAt","bound","withEndAt","_b","_c","docComparator","comparedOnKeyField","comp","compare","matchesAncestor","matchesOrderBy","matchesFilters","matchesBounds","hasLimit","isDocumentQuery","docPath","sortsBeforeDocument","LESS_THAN","LESS_THAN_OR_EQUAL","GREATER_THAN_OR_EQUAL","GREATER_THAN","refValue","comparison","matchesComparison","matchesValue","DESCENDING","before","orderByComponent","component","docValue","thisPosition","otherPosition","isKeyOrderBy","isPermanentError","mapCodeFromRpcStatus","status","RpcCode","mapCodeFromRpcCode","__WEBPACK_IMPORTED_MODULE_2__util_log__","mapRpcCodeFromCode","mapCodeFromHttpStatus","fromDotSeparatedString","search","RESERVED","bind","__WEBPACK_IMPORTED_MODULE_0__model_path__","__WEBPACK_IMPORTED_MODULE_2__util_input_validation__","fieldNames","_internalPath","documentId","_DOCUMENT_ID","OnlineState","ObjectMap","__WEBPACK_IMPORTED_MODULE_0__obj__","mapKeyFn","inner","matches_1","otherKey","splice","entries","entries_1","encode","encodeSeparator","encodeSegment","resultBuf","escapeChar","encodedNul","encodedEscape","encodedSeparatorChar","decode","lastReasonableEscapeIndex","segmentBuilder","currentPiece","Deferred","constants_1","assertionError","stringToByteArray","byteArrayToString","bytes","c1","c2","c3","c4","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","encodeByteArray","opt_webSafe","init_","byteToCharMap","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","base64Encode","utf8Bytes","base64Decode","jsonEval","parse","safeGet","objTo","objFrom","isNonNullObject","getCount","rv","f","opt_obj","findKey","opt_this","findValue","getAnyKey","getValues","every","assertPresent","__WEBPACK_IMPORTED_MODULE_12__util_assert__","__WEBPACK_IMPORTED_MODULE_15__util_types__","parseInt64","hasTag","JsonProtoSerializer","__WEBPACK_IMPORTED_MODULE_0__api_blob__","__WEBPACK_IMPORTED_MODULE_1__api_geo_point__","__WEBPACK_IMPORTED_MODULE_2__core_database_info__","__WEBPACK_IMPORTED_MODULE_3__core_query__","__WEBPACK_IMPORTED_MODULE_4__core_snapshot_version__","__WEBPACK_IMPORTED_MODULE_5__core_timestamp__","__WEBPACK_IMPORTED_MODULE_6__local_query_data__","__WEBPACK_IMPORTED_MODULE_7__model_document__","__WEBPACK_IMPORTED_MODULE_8__model_document_key__","__WEBPACK_IMPORTED_MODULE_9__model_field_value__","__WEBPACK_IMPORTED_MODULE_10__model_mutation__","__WEBPACK_IMPORTED_MODULE_11__model_path__","__WEBPACK_IMPORTED_MODULE_13__util_error__","__WEBPACK_IMPORTED_MODULE_14__util_obj__","__WEBPACK_IMPORTED_MODULE_16__existence_filter__","__WEBPACK_IMPORTED_MODULE_17__rpc_error__","__WEBPACK_IMPORTED_MODULE_18__watch_change__","DIRECTIONS","dirs","OPERATORS","ops","useProto3Json","unsafeCastProtoByteString","byteString","fromRpcStatus","toInt32Value","fromInt32Value","toBytes","fromBlob","blob","toVersion","fromVersion","toResourceName","fullyQualifiedPrefixPath","fromResourceName","resource","isValidResourceName","toName","fromName","projectId","database","extractLocalPathFromResourceName","toQueryPath","encodedDatabaseId","fromQueryPath","resourceName","toValue","nullValue","booleanValue","integerValue","doubleValue","stringValue","mapValue","toMapValue","arrayValue","toArrayValue","timestampValue","geoPointValue","bytesValue","referenceValue","fromValue","fromFields","dbId","toMutationDocument","toFields","toDocument","fromDocument","object","fromFound","found","fromMissing","missing","fromMaybeDocument","toWatchTargetChangeState","state","Current","NoChange","Reset","toTestWatchChange","watchChange","count","existenceFilter","newDoc","documentChange","targetIds","updatedTargetIds","removedTargetIds","documentDelete","documentRemove","cause","targetChange","targetChangeType","fromWatchChange","fromWatchTargetChangeState","causeProto","entityChange","docDelete","docRemove","versionFromListenResponse","toMutation","updateMask","toDocumentMask","toFieldTransform","currentDocument","toPrecondition","fromMutation","fromPrecondition","fromDocumentMask","fromFieldTransform","fromWriteResult","fromWriteResults","protos","setToServerValue","toDocumentsTarget","documents","fromDocumentsTarget","documentsTarget","toQueryTarget","structuredQuery","parent","collectionId","where","toFilter","toOrder","toCursor","fromQueryTarget","fromCount","filterBy","fromFilter","fromOrder","fromCursor","toListenRequestLabels","queryData","toLabel","goog-listen-tags","Listen","ExistenceFilterMismatch","LimboResolution","toTarget","toRelationFilter","toUnaryFilter","compositeFilter","unaryFilter","fromUnaryFilter","fromRelationFilter","accum","orderBys","order","toPropertyOrder","fromPropertyOrder","toDirection","fromDirection","toOperatorName","fromOperatorName","toFieldPathReference","fromFieldPathReference","fieldReference","nanField","nullField","fieldPaths","DatabaseInfo","DatabaseId","__WEBPACK_IMPORTED_MODULE_0__util_misc__","persistenceKey","host","ssl","DEFAULT_DATABASE_NAME","applyResumeToken","DocumentWatchChange","ExistenceFilterChange","WatchTargetChangeState","WatchTargetChange","WatchChangeAggregator","__WEBPACK_IMPORTED_MODULE_2__util_assert__","__WEBPACK_IMPORTED_MODULE_3__util_obj__","__WEBPACK_IMPORTED_MODULE_4__remote_event__","listenTargets","pendingTargetResponses","existenceFilters","frozen","addDocumentChange","addTargetChange","addExistenceFilterChange","addChanges","watchChanges","createRemoteEvent","isActiveTarget","ensureTargetChange","None","docChange","relevant","recordTargetResponse","MarkCurrent","newCount","DocumentSet","__WEBPACK_IMPORTED_MODULE_1__util_sorted_map__","__WEBPACK_IMPORTED_MODULE_2__collections__","keyedMap","sortedSet","emptySet","oldSet","prevDoc","thisDoc","otherDoc","docStrings","newSet","EagerGarbageCollector","__WEBPACK_IMPORTED_MODULE_1__persistence_promise__","isEager","sources","potentialGarbage","addGarbageSource","garbageSource","removeGarbageSource","collectGarbage","promises","garbageKeys","hasRefsPromise","documentHasAnyReferences","hasRefs","TargetIdGenerator","GeneratorIds","RESERVED_BITS","generatorId","initAfter","afterWithoutGenerator","afterGenerator","previousId","forLocalStore","LocalStore","forSyncEngine","SyncEngine","FieldValueImpl","DeleteFieldValueImpl","ServerTimestampFieldValueImpl","PublicFieldValue","__WEBPACK_IMPORTED_MODULE_0__util_api__","serverTimestamp","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_1_moment__","__WEBPACK_IMPORTED_MODULE_2__data_firebase__","GithubContributionsStats","GithubContributions","render","props","contributions","localeCompare","contrib","contribKind","isPrivate","contribs","className","kind","summary","contribution","repo","repoSummary","find","issues","issueCount","authored","commits","commitsCount","pullRequests","pullRequestCount","merged","collection","isFork","Meta","ContributionMeta","GithubStats","withDocument","Comp","WithFirestoreComponent","__WEBPACK_IMPORTED_MODULE_1__store__","componentWillMount","setState","updateListener","onSnapshot","snapshot","Err","componentWillUnmount","__assign","withCollection","assign","Status","__WEBPACK_IMPORTED_MODULE_0_firebase_app__","__WEBPACK_IMPORTED_MODULE_1_firebase_firestore__","app","apiKey","messagingSenderId","authDomain","databaseURL","storageBucket","firestore","default","__WEBPACK_IMPORTED_MODULE_0__src_polyfills_promise__","__WEBPACK_IMPORTED_MODULE_1__src_shims_find__","__WEBPACK_IMPORTED_MODULE_2__src_shims_findIndex__","__global","thisArg","TypeError","_state","_handled","_value","_deferreds","doResolve","deferred","_immediateFn","onFulfilled","onRejected","finale","_unhandledRejectionFn","Handler","reason","ex","setTimeoutFunc","prom","remaining","race","err","_setImmediateFn","_setUnhandledRejectionFn","predicate","kValue","findIndex","createFirebaseNamespace","removeApp","callAppHooks","apps_","DEFAULT_ENTRY_NAME","initializeApp","FirebaseAppImpl","namespace","getApps","registerService","createService","serviceProperties","appHook","allowMultipleInstances","factories","appHooks","serviceNamespace","appArg","__WEBPACK_IMPORTED_MODULE_0__firebase_util__","_getService","extendNamespace","eventName","serviceName","factoryName","useAsService","useService","__esModule","apps","createSubscribe","ErrorFactory","deepExtend","appErrors","tokenListeners","firebase_","isDeleted_","services_","name_","options_","getUid","getToken","addAuthTokenListener","removeAuthTokenListener","listener","checkDestroyed_","services","serviceKey","instanceKey","service","instanceIdentifier","instanceSpecifier","extendApp","errors","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","__export","deepCopy","dateValue","patchProperty","wrapCallback","getUA","isMobileCordova","isReactNative","isNodeSdk","patchCapture","captureFake","captureStackTrace","ERROR_NAME","FirebaseError","err_1","pattern","template","fullCode","crypt_1","json_1","header","claims","signature","isValidTimestamp","validSince","validUntil","issuedAtTime","isValidFormat","decoded","isAdmin","obj_1","querystring","querystringParams","params","arrayVal","encodeURIComponent","querystringDecode","hash_1","Sha1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","opt_offset","opt_length","lengthMinusBlock","inbuf","digest","totalBits","Hash","executor","onNoObservers","proxy","ObserverProxy","subscribe","async","onError","implementsAnyMethods","methods","methods_1","method","observers","unsubscribes","observerCount","finalized","forEachObserver","observer","complete","nextOrObserver","unsub","unsubscribeOne","finalError","sendOne","errorPrefix","fnName","argumentNumber","optional","argName","validateNamespace","validateCallback","validateContextObject","context","validateArgCount","minCount","maxCount","argCount","argError","assert_1","high","registerFirestore","__WEBPACK_IMPORTED_MODULE_2__src_platform_config__","__WEBPACK_IMPORTED_MODULE_1__browser_platform__","BrowserPlatform","__WEBPACK_IMPORTED_MODULE_0__remote_serializer__","__WEBPACK_IMPORTED_MODULE_1__webchannel_connection__","loadConnection","databaseInfo","newSerializer","encoded","raw","ExistenceFilter","WebChannelConnection","__WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__","__WEBPACK_IMPORTED_MODULE_1__core_version__","__WEBPACK_IMPORTED_MODULE_2__remote_rpc_error__","__WEBPACK_IMPORTED_MODULE_3__remote_stream_bridge__","__WEBPACK_IMPORTED_MODULE_6__util_log__","RPC_NAME_REST_MAPPING","BatchGetDocuments","Commit","X_GOOG_API_CLIENT_VALUE","info","pool","baseUrl","modifyHeadersForRequest","headers","authHeaders","invokeRPC","rpcName","url","makeUrl","getObject","xhr","listenOnce","COMPLETE","getLastErrorCode","NO_ERROR","json","getResponseJson","TIMEOUT","HTTP_ERROR","status_1","getStatus","getResponseText","getStatusText","getLastError","releaseObject","requestString","Content-Type","send","invokeStreamingRPC","openStream","urlParts","webchannelTransport","backgroundChannelTest","httpSessionIdParam","initMessageHeaders","httpHeadersOverwriteParam","sendRawJson","supportsCrossDomainXhr","createWebChannel","opened","closed","streamBridge","sendFn","closeFn","unguardedEventListen","listen","param","EventType","OPEN","CLOSE","callOnClose","MESSAGE","msgData","status_2","callOnMessage","callOnOpen","urlRpcName","aa","ba","propertyIsEnumerable","ca","da","fa","ha","unshift","r","ia","H","Cb","ja","ka","ma","na","oa","qa","ra","q","ea","va","wa","xa","ya","Ba","Ca","Da","Ea","Ga","Fa","Ha","Ia","Ja","Oa","documentMode","Ta","la","Pa","A","$a","relatedTarget","button","screenY","screenX","clientY","clientX","metaKey","shiftKey","altKey","ctrlKey","pointerId","pointerType","changedTouches","srcElement","Ma","nodeName","fromElement","toElement","pageX","pageY","ab","defaultPrevented","bb","eb","src","capture","ga","fb","gb","ib","sa","jb","hb","nb","ob","pb","qb","rb","kb","sb","Za","tb","mb","ub","Xa","vb","wb","removeEventListener","detachEvent","lb","xb","yb","keyCode","returnValue","parentNode","zb","handleEvent","B","P","K","Ab","Bb","eval","Db","Eb","Fb","Boolean","Gb","Ib","Hb","Jb","Kb","Ob","Pb","Lb","Qb","Sb","style","display","contentWindow","write","location","protocol","origin","za","Ub","Tb","Vb","Window","Rb","Nb","Wb","Xb","g","Yb","$","Zb","$b","ac","X","C","cc","dc","fc","lc","oc","nc","mc","jc","lastIndexOf","hc","pc","ic","F","kc","qc","rc","G","Z","Mb","sc","tc","uc","vc","I","wc","gc","xc","zc","Ac","yc","dispatchEvent","Bc","J","Cc","Dc","Ec","Hc","Ic","Jc","Lc","Mc","ActiveXObject","XMLHttpRequest","T","N","S","Nc","Oc","U","Pc","Sc","Tc","Uc","Vc","Wc","Xc","Qa","Yc","Ka","V","Zc","$c","ad","bd","cd","ed","Rc","Qc","fd","gd","hd","ta","O","jd","kd","md","decodeURIComponent","nd","od","pd","qd","rd","ld","sd","td","zd","ud","Ad","Q","Bd","Cd","Dd","decodeURI","encodeURI","Ed","R","Gd","Fd","Hd","Id","Kd","Jd","Ld","Md","Od","Pd","Qd","Rd","Sd","Td","Vd","Wd","Xd","Yd","Zd","pa","$d","ae","be","ce","de","ee","fe","ge","he","ie","je","Image","onload","ke","ontimeout","le","qe","z","oe","re","se","te","goog","La","me","pe","readyState","ue","ve","we","Ua","concurrentRequestLimit","fastHandshake","xe","ye","ze","sendBeacon","Ae","cancel","Be","Ce","De","Ee","Fe","He","Ge","Va","Ie","Na","Je","Ke","Ud","Aa","Le","hostname","port","Me","Ne","Oe","testUrl","messageUrlParams","messageHeaders","clientProtocolHeaderRequired","X-Client-Protocol","messageContentType","X-WebChannel-Content-Type","Pe","Qe","__sm__","Re","Te","Ue","Ve","We","Xe","Ye","Ze","$e","af","Ra","Sa","compatMode","Wa","freeze","Ya","2","3","4","preventDefault","\"","\\","/","\b","\f","\n","\r","\t","\u000b","bc","ec","Fc","Gc","Kc","vd","wd","xd","yd","Nd","getResponseHeader","ne","FormData","setRequestHeader","responseType","withCredentials","statusText","responseText","__data__","Se","createWebChannelTransport","ErrorCode","WebChannel","XhrIoPool","StreamBridge","onOpen","wrappedOnOpen","onClose","wrappedOnClose","onMessage","wrappedOnMessage","configureForFirebase","__WEBPACK_IMPORTED_MODULE_1__api_database__","__WEBPACK_IMPORTED_MODULE_5__util_obj__","firestoreNamespace","__WEBPACK_IMPORTED_MODULE_2__api_field_path__","__WEBPACK_IMPORTED_MODULE_3__api_field_value__","__WEBPACK_IMPORTED_MODULE_4__api_geo_point__","Firestore","Transaction","WriteBatch","DocumentReference","DocumentSnapshot","QueryDocumentSnapshot","QuerySnapshot","CollectionReference","validateSetOptions","methodName","merge","__WEBPACK_IMPORTED_MODULE_16__util_input_validation__","validateSnapshotOptions","validateReference","documentRef","__WEBPACK_IMPORTED_MODULE_15__util_error__","changesFromSnapshot","lastDoc_1","index_1","__WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__","oldIndex","newIndex","indexTracker_1","resultChangeType","PublicFirestore","PublicTransaction","PublicWriteBatch","PublicDocumentReference","PublicDocumentSnapshot","PublicQueryDocumentSnapshot","PublicQuery","PublicQuerySnapshot","PublicCollectionReference","__WEBPACK_IMPORTED_MODULE_0__field_path__","__WEBPACK_IMPORTED_MODULE_1__core_database_info__","__WEBPACK_IMPORTED_MODULE_2__core_firestore_client__","__WEBPACK_IMPORTED_MODULE_5__model_document__","__WEBPACK_IMPORTED_MODULE_6__model_document_key__","__WEBPACK_IMPORTED_MODULE_7__model_field_value__","__WEBPACK_IMPORTED_MODULE_8__model_mutation__","__WEBPACK_IMPORTED_MODULE_9__model_path__","__WEBPACK_IMPORTED_MODULE_10__platform_platform__","__WEBPACK_IMPORTED_MODULE_11__util_api__","__WEBPACK_IMPORTED_MODULE_13__util_async_observer__","__WEBPACK_IMPORTED_MODULE_14__util_async_queue__","__WEBPACK_IMPORTED_MODULE_17__util_log__","__WEBPACK_IMPORTED_MODULE_18__util_misc__","__WEBPACK_IMPORTED_MODULE_19__util_obj__","__WEBPACK_IMPORTED_MODULE_20__credentials__","__WEBPACK_IMPORTED_MODULE_21__observer__","__WEBPACK_IMPORTED_MODULE_22__user_data_converter__","DEFAULT_HOST","DEFAULT_SSL","FirestoreSettings","settings","credentials","FirestoreConfig","databaseIdOrApp","_queue","_firestoreClient","shutdown","drainAsyncQueue","executeDelayedTasks","drain","firebaseApp","databaseIdFromApp","external_1","_databaseId","settingsLiteral","newSettings","enableNetwork","ensureClientConfigured","disableNetwork","enablePersistence","configureClient","persistence","preConverter","thisDb","otherDb","_key","_dataConverter","pathString","forPath","updateFunction","SILENT","level","_firestore","_transaction","lookup","parsed","parseMergeData","parseSetData","fieldOrUpdateData","moreFieldsAndValues","parseUpdateVarargs","parseUpdateData","_mutations","_committed","verifyNotCommitted","toMutations","commit","includeMetadataChanges","currArg","internalOptions","includeDocumentMetadataChanges","includeQueryMetadataChanges","onSnapshotInternal","errHandler","asyncObserver","internalListener","mute","unlisten","waitForSyncWhenOnline","snap","metadata","SnapshotMetadata","_document","_fromCache","convertObject","convertValue","convertArray","_query","opStr","parseQueryValue","validateNewFilter","directionStr","validateNewOrderBy","docOrField","boundFromDocOrFields","startAfter","endBefore","boundFromDocument","allFields","boundFromFields","components","rawValue","wrapped","firestoreClient","existingField","validateOrderByAndInequalityMatch","inequality","_originalQuery","_snapshot","_cachedChanges","convertToDocumentImpl","parentPath","docRef","FirestoreClient","__WEBPACK_IMPORTED_MODULE_0__event_manager__","__WEBPACK_IMPORTED_MODULE_1__sync_engine__","__WEBPACK_IMPORTED_MODULE_2__local_eager_garbage_collector__","__WEBPACK_IMPORTED_MODULE_3__local_indexeddb_persistence__","__WEBPACK_IMPORTED_MODULE_4__local_local_store__","__WEBPACK_IMPORTED_MODULE_5__local_memory_persistence__","__WEBPACK_IMPORTED_MODULE_6__local_no_op_garbage_collector__","__WEBPACK_IMPORTED_MODULE_7__remote_datastore__","__WEBPACK_IMPORTED_MODULE_8__remote_remote_store__","__WEBPACK_IMPORTED_MODULE_9__remote_serializer__","__WEBPACK_IMPORTED_MODULE_10__util_error__","__WEBPACK_IMPORTED_MODULE_11__util_log__","__WEBPACK_IMPORTED_MODULE_12__util_promise__","asyncQueue","usePersistence","initializationDone","persistenceResult","initialized","setUserChangeListener","user","schedule","handleUserChange","initializePersistence","initializeRest","remoteStore","startIndexedDbPersistence","canFallback","startMemoryPersistence","storagePrefix","buildStoragePrefix","serializer","connection","localStore","datastore","onlineStateChangedHandler","onlineState","syncEngine","applyOnlineStateChange","eventMgr","verifyOperationInProgress","uid","removeUserChangeListener","EventManager","QueryListener","__WEBPACK_IMPORTED_MODULE_0__types__","__WEBPACK_IMPORTED_MODULE_1__view_snapshot__","__WEBPACK_IMPORTED_MODULE_2__model_document_set__","__WEBPACK_IMPORTED_MODULE_3__util_assert__","__WEBPACK_IMPORTED_MODULE_4__util_obj_map__","QueryListenersInfo","queries","Unknown","onChange","firstListen","queryInfo","viewSnap","onViewSnapshot","lastListen","viewSnaps","viewSnaps_1","queryObserver","raisedInitialEvent","shouldRaiseEvent","shouldRaiseInitialEvent","raiseInitialEvent","maybeOnline","Failed","hasPendingWritesChanged","getInitialViewChanges","__WEBPACK_IMPORTED_MODULE_0__local_eager_garbage_collector__","__WEBPACK_IMPORTED_MODULE_1__local_local_view_changes__","__WEBPACK_IMPORTED_MODULE_2__local_query_data__","__WEBPACK_IMPORTED_MODULE_3__local_reference_set__","__WEBPACK_IMPORTED_MODULE_4__model_document__","__WEBPACK_IMPORTED_MODULE_5__model_document_key__","__WEBPACK_IMPORTED_MODULE_6__remote_remote_event__","__WEBPACK_IMPORTED_MODULE_7__util_assert__","__WEBPACK_IMPORTED_MODULE_8__util_log__","__WEBPACK_IMPORTED_MODULE_9__util_misc__","__WEBPACK_IMPORTED_MODULE_10__util_obj__","__WEBPACK_IMPORTED_MODULE_11__util_obj_map__","__WEBPACK_IMPORTED_MODULE_12__util_sorted_map__","__WEBPACK_IMPORTED_MODULE_13__util_types__","__WEBPACK_IMPORTED_MODULE_14__query__","__WEBPACK_IMPORTED_MODULE_15__snapshot_version__","__WEBPACK_IMPORTED_MODULE_16__target_id_generator__","__WEBPACK_IMPORTED_MODULE_17__view__","QueryView","view","currentUser","viewHandler","errorHandler","queryViewsByQuery","queryViewsByTarget","limboTargetsByKey","limboKeysByTarget","limboDocumentRefs","limboCollector","mutationUserCallbacks","targetIdGenerator","assertSubscribed","allocateQuery","executeQuery","remoteDocumentKeys","remoteKeys","viewDocChanges","computeDocChanges","viewChange","applyChanges","limboChanges","queryView","releaseQuery","removeAndCleanupQuery","userCallback","localWrite","addMutationCallback","emitNewSnapsAndNotifyLocalStore","fillWritePipeline","wrapUpdateFunctionError","retries","createTransaction","userPromise","applyRemoteEvent","remoteEvent","limboKey","newViewSnapshots","rejectListen","docMap","event_1","queryView_1","applySuccessfulWrite","mutationBatchResult","processUserCallback","acknowledgeBatch","rejectFailedWrite","rejectBatch","newCallbacks","toKey","gcLimboDocuments","updateTrackedLimbos","limboChanges_1","limboChange","trackLimboChange","limboTargetId","currentLimboDocs","newSnaps","docChangesInAllViews","queriesProcessed","needsRefill","fromSnapshot","notifyLocalViewChanges","LocalViewChanges","__WEBPACK_IMPORTED_MODULE_0__core_view_snapshot__","addedKeys","removedKeys","viewSnapshot","compareChangeType","__WEBPACK_IMPORTED_MODULE_6__view_snapshot__","AddedLimboDocument","RemovedLimboDocument","View","__WEBPACK_IMPORTED_MODULE_1__model_document__","__WEBPACK_IMPORTED_MODULE_3__remote_remote_event__","__WEBPACK_IMPORTED_MODULE_5__types__","syncedDocuments","syncState","limboDocuments","mutatedKeys","documentSet","previousChanges","changeSet","oldDocumentSet","newMutatedKeys","newDocumentSet","lastDocInLimit","newMaybeDoc","oldDoc","docsEqual","applyTargetChange","synced","newSyncState","Synced","Local","shouldBeInLimbo","targetMapping","oldLimboDocuments","IndexedDbPersistence","__WEBPACK_IMPORTED_MODULE_3__util_misc__","__WEBPACK_IMPORTED_MODULE_4__indexeddb_mutation_queue__","__WEBPACK_IMPORTED_MODULE_5__indexeddb_query_cache__","__WEBPACK_IMPORTED_MODULE_6__indexeddb_remote_document_cache__","__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__","__WEBPACK_IMPORTED_MODULE_8__local_serializer__","__WEBPACK_IMPORTED_MODULE_9__persistence_promise__","__WEBPACK_IMPORTED_MODULE_10__simple_db__","EXISTING_OWNER_ERROR_MSG","generateOwnerId","dbName","MAIN_DATABASE","localStoragePrefix","started","simpleDb","tryAcquireOwnerLease","scheduleOwnerLeaseRefreshes","attachWindowUnloadHook","persistenceError","detachWindowUnloadHook","stopOwnerLeaseRefreshes","releaseOwnerLease","getMutationQueue","forUser","getQueryCache","getRemoteDocumentCache","operation","ensureOwnerLease","isDefaultDatabase","dbOwner","validOwner","newDbOwner","minAcceptable","maxAcceptable","getZombiedOwnerId","ownerLeaseRefreshHandle","windowUnloadHandler","setZombiedOwnerId","zombiedOwnerId","localStorage","getItem","zombiedOwnerLocalStorageKey","zombieOwnerId","removeItem","setItem","validateStreamToken","mutationsStore","getStore","__WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__","documentMutationsStore","mutationQueuesStore","__WEBPACK_IMPORTED_MODULE_7__simple_db__","IndexedDbMutationQueue","__WEBPACK_IMPORTED_MODULE_0__model_mutation_batch__","__WEBPACK_IMPORTED_MODULE_4__encoded_resource_path__","__WEBPACK_IMPORTED_MODULE_6__persistence_promise__","isUnauthenticated","loadNextBatchIdFromDb","nextBatchId","checkEmpty","maxBatchId","nextUser","IDBKeyRange","keyForBatchId","getNextBatchId","getHighestAcknowledgedBatchId","getLastStreamToken","setLastStreamToken","addMutationBatch","dbBatch","toDbMutationBatch","mutations_1","indexKey","lookupMutationBatch","fromDbMutationBatch","getNextMutationBatchAfterBatchId","lowerBound","foundBatch","getAllMutationBatches","dbBatches","getAllMutationBatchesThroughBatchId","getAllMutationBatchesAffectingDocumentKey","documentKey","indexPrefix","indexStart","userID","encodedPath","batchID","mutationKey","getAllMutationBatchesAffectingQuery","queryPath","immediateChildrenLength","uniqueBatchIDs","removeMutationBatches","batches","indexTxn","this_1","batches_1","only","numDeleted","removePromise","performConsistencyCheck","startRange","danglingMutationReferences","targetsStore","globalTargetStore","documentTargetStore","__WEBPACK_IMPORTED_MODULE_9__simple_db__","IndexedDbQueryCache","__WEBPACK_IMPORTED_MODULE_1__core_timestamp__","__WEBPACK_IMPORTED_MODULE_2__model_collections__","__WEBPACK_IMPORTED_MODULE_3__model_document_key__","__WEBPACK_IMPORTED_MODULE_5__util_misc__","__WEBPACK_IMPORTED_MODULE_6__encoded_resource_path__","__WEBPACK_IMPORTED_MODULE_8__persistence_promise__","lastSavedVersion","getHighestTargetId","getLastRemoteSnapshotVersion","setLastRemoteSnapshotVersion","addQueryData","addedQueryPromise","toDbTarget","removeQueryData","removeMatchingKeysForTargetId","getQueryData","fromDbTarget","addMatchingKeys","removeMatchingKeys","notifyGCForRemovedKeys","getMatchingKeysForTargetId","remoteDocumentsStore","__WEBPACK_IMPORTED_MODULE_4__simple_db__","__WEBPACK_IMPORTED_MODULE_3__indexeddb_schema__","dbKey","IndexedDbRemoteDocumentCache","addEntry","maybeDocument","toDbRemoteDocument","removeEntry","getEntry","dbRemoteDoc","fromDbRemoteDocument","getDocumentsMatchingQuery","dbQuery","LocalSerializer","__WEBPACK_IMPORTED_MODULE_2__model_document__","__WEBPACK_IMPORTED_MODULE_4__model_mutation_batch__","__WEBPACK_IMPORTED_MODULE_5__util_assert__","__WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__","__WEBPACK_IMPORTED_MODULE_7__query_data__","remoteSerializer","remoteDoc","serializedMutations","dbTarget","queryProto","dbTimestamp","__WEBPACK_IMPORTED_MODULE_1__core_target_id_generator__","__WEBPACK_IMPORTED_MODULE_2__core_timestamp__","__WEBPACK_IMPORTED_MODULE_3__model_collections__","__WEBPACK_IMPORTED_MODULE_5__remote_remote_event__","__WEBPACK_IMPORTED_MODULE_6__util_assert__","__WEBPACK_IMPORTED_MODULE_7__util_log__","__WEBPACK_IMPORTED_MODULE_8__util_obj__","__WEBPACK_IMPORTED_MODULE_9__local_documents_view__","__WEBPACK_IMPORTED_MODULE_10__persistence_promise__","__WEBPACK_IMPORTED_MODULE_11__query_data__","__WEBPACK_IMPORTED_MODULE_12__reference_set__","__WEBPACK_IMPORTED_MODULE_13__remote_document_change_buffer__","initialUser","localViewReferences","heldBatchResults","mutationQueue","remoteDocuments","queryCache","localDocuments","startMutationQueue","startQueryCache","oldBatches","promisedOldBatches","newBatches","changedKeys","getDocuments","highestAck","ackedBatches","promisedBatch","changedDocuments","affected","shouldHoldBatchResult","documentBuffer_1","releaseBatchResults","promisedAffectedKeys","toReject","affectedKeys","promisedToReject","lastAcked","removeMutationBatch","documentBuffer","changedDocKeys","existingDoc","lastRemoteVersion","remoteVersion","releasedWriteKeys","releaseHeldBatchResults","promisedReleasedWriteKeys","viewChanges","viewChanges_1","nextMutationBatch","afterBatchId","readDocument","getDocument","cached","documentBuffer_2","garbage","toRelease","isRemoteUpToVersion","batchResults","promiseChain","batchResults_1","applyWriteToRemoteDocuments","affectedDocs","batches_2","docKeys","ackVersion","LocalDocumentsView","__WEBPACK_IMPORTED_MODULE_5__persistence_promise__","remoteDocumentCache","computeLocalDocument","getDocumentsMatchingDocumentQuery","getDocumentsMatchingCollectionQuery","queryResults","computeLocalDocuments","promisedResults","matchingMutationBatches","matchingKeys","matchingMutationBatches_1","mutatedDoc","RemoteDocumentChangeBuffer","assertChanges","bufferedEntry","MemoryPersistence","__WEBPACK_IMPORTED_MODULE_2__memory_mutation_queue__","__WEBPACK_IMPORTED_MODULE_3__memory_query_cache__","__WEBPACK_IMPORTED_MODULE_4__memory_remote_document_cache__","mutationQueues","MemoryPersistenceTransaction","MemoryMutationQueue","__WEBPACK_IMPORTED_MODULE_1__model_mutation_batch__","__WEBPACK_IMPORTED_MODULE_5__util_sorted_set__","__WEBPACK_IMPORTED_MODULE_7__reference_set__","highestAcknowledgedBatchId","batchesByDocumentKey","batchIndex","indexOfExistingBatchId","prior","findMutationBatch","rawIndex","indexOfBatchId","getAllLiveMutationBatchesBeforeIndex","endIndex","immediateChildrenPathLength","startPath","rowKeyPath","batchCount","firstBatchId","queueCount","startIndex","length_1","references","MemoryQueryCache","__WEBPACK_IMPORTED_MODULE_1__util_obj_map__","__WEBPACK_IMPORTED_MODULE_3__reference_set__","MemoryRemoteDocumentCache","__WEBPACK_IMPORTED_MODULE_2__model_document_key__","__WEBPACK_IMPORTED_MODULE_3__persistence_promise__","iterator","NoOpGarbageCollector","Datastore","__WEBPACK_IMPORTED_MODULE_2__persistent_stream__","initialBackoffDelay","newPersistentWriteStream","newPersistentWatchStream","writes","response","writeResults","PersistentListenStream","PersistentWriteStream","PersistentStreamState","__WEBPACK_IMPORTED_MODULE_3__backoff__","__WEBPACK_IMPORTED_MODULE_4__util_types__","BACKOFF_INITIAL_DELAY_MS","BACKOFF_MAX_DELAY_MS","BACKOFF_FACTOR","PersistentStream","credentialsProvider","idle","stream","backoff","Initial","isStarted","Backoff","Auth","Open","isOpen","performBackoff","auth","stop","Stopped","inhibitBackoff","markIdle","handleIdleCloseTimer","sendRequest","cancelIdleCheck","finalState","resetToMax","tearDown","startStream","rpcError","handleStreamClose","dispatchIfStillActive","currentStream_1","startRpc","backoffAndWait","watchChangeProto","onWatchChange","watch","addTarget","labels","unwatch","removeTarget","handshakeComplete_","writeMutations","responseProto","commitTime","onMutationResult","onHandshakeComplete","writeHandshake","ExponentialBackoff","__WEBPACK_IMPORTED_MODULE_0__util_log__","__WEBPACK_IMPORTED_MODULE_1__util_promise__","initialDelayMs","backoffFactor","maxDelayMs","currentBaseMs","def","delayWithJitterMs","jitterDelayMs","RemoteStore","__WEBPACK_IMPORTED_MODULE_1__core_transaction__","__WEBPACK_IMPORTED_MODULE_2__core_types__","__WEBPACK_IMPORTED_MODULE_3__local_query_data__","__WEBPACK_IMPORTED_MODULE_6__model_mutation_batch__","__WEBPACK_IMPORTED_MODULE_7__platform_platform__","__WEBPACK_IMPORTED_MODULE_8__util_assert__","__WEBPACK_IMPORTED_MODULE_9__util_error__","__WEBPACK_IMPORTED_MODULE_10__util_log__","__WEBPACK_IMPORTED_MODULE_11__util_obj__","__WEBPACK_IMPORTED_MODULE_12__remote_event__","__WEBPACK_IMPORTED_MODULE_13__rpc_error__","__WEBPACK_IMPORTED_MODULE_14__watch_change__","onlineStateHandler","pendingWrites","lastBatchSeen","accumulatedWatchChanges","watchStream","writeStream","watchStreamOnlineState","watchStreamFailures","shouldWarnOffline","updateOnlineState","newState","Healthy","updateOnlineStateAfterFailure","isNetworkEnabled","shouldStartWatchStream","startWatchStream","disableNetworkInternal","cleanUpWatchStreamState","cleanUpWriteStreamState","sendWatchRequest","sendUnwatchRequest","recordPendingTargetRequest","onWatchStreamOpen","onWatchStreamClose","onWatchStreamChange","handleTargetError","handleWatchChangeBatch","aggregator","deletedDoc","trackedRemote","newQueryData","requestQueryData","canWriteMutations","outstandingWrites","shouldStartWriteStream","startWriteStream","handshakeComplete","onWriteStreamOpen","onWriteStreamClose","onWriteHandshakeComplete","success","errorHandling","handleWriteError","handleHandshakeError","__WEBPACK_IMPORTED_MODULE_0__snapshot_version__","__WEBPACK_IMPORTED_MODULE_3__model_mutation__","__WEBPACK_IMPORTED_MODULE_4__util_error__","readVersions","committed","recordVersion","docVersion","existingVersion","preconditionForUpdate","unwritten","AsyncObserver","muted","scheduleEvent","eventHandler","AsyncQueue","__WEBPACK_IMPORTED_MODULE_2__promise__","__WEBPACK_IMPORTED_MODULE_3__error__","tail","delayedOperations","delayedOperationsCount","operationInProgress","delay","delayedOp_1","scheduleInternal","entry","makeCredentialsProvider","EmptyCredentialsProvider","FirstPartyCredentialsProvider","client","sessionIndex","FirebaseCredentialsProvider","__WEBPACK_IMPORTED_MODULE_0__auth_user__","OAuthToken","Authorization","userListener","forceRefresh","tokenListener","userCounter","newUser","getUser","initialUserCounter","tokenData","accessToken","currentUid","FirstPartyToken","gapi","FIRST_PARTY","X-Goog-AuthUser","User","otherUser","GOOGLE_CREDENTIALS","isPartialObserver","isWrite","dataSource","UserDataSource","MergeSet","Update","QueryValue","looksLikeJsonObject","__WEBPACK_IMPORTED_MODULE_14__geo_point__","__WEBPACK_IMPORTED_MODULE_11__blob__","DocumentKeyReference","__WEBPACK_IMPORTED_MODULE_13__field_value__","validatePlainObject","__WEBPACK_IMPORTED_MODULE_6__util_input_validation__","createError","fieldPathFromArgument","__WEBPACK_IMPORTED_MODULE_12__field_path__","fieldPathFromDotSeparatedString","errorMessage","UserDataConverter","__WEBPACK_IMPORTED_MODULE_0__core_timestamp__","__WEBPACK_IMPORTED_MODULE_1__model_field_value__","__WEBPACK_IMPORTED_MODULE_2__model_mutation__","__WEBPACK_IMPORTED_MODULE_7__util_misc__","__WEBPACK_IMPORTED_MODULE_9__util_sorted_map__","__WEBPACK_IMPORTED_MODULE_10__util_types__","RESERVED_FIELD_REGEX","ParsedSetData","ParsedUpdateData","ParseContext","arrayElement","validatePath","childContextForField","childPath","validatePathSegment","childContextForFieldPath","childContextForArray","fieldDescription","updateData","parseData","fieldMaskPaths","childContext","runPreConverter","parsedValue","mask","value_1","parseArray","parseObject","parseScalarValue","entryIndex","array_1","parsedEntry"],"mappings":"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","file":"static/js/5.921f0179.chunk.js","sourcesContent":["webpackJsonp([5],Array(117).concat([\n/* 117 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = fail;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = assert;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_version__ = __webpack_require__(180);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__(121);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n *\n * Returns any so it can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nfunction fail(failure) {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    var message = \"FIRESTORE (\" + __WEBPACK_IMPORTED_MODULE_0__core_version__[\"a\" /* SDK_VERSION */] + \") INTERNAL ASSERTION FAILED: \" + failure;\n    Object(__WEBPACK_IMPORTED_MODULE_1__log__[\"c\" /* error */])(message);\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw new Error(message);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n */\nfunction assert(assertion, message) {\n    if (!assertion) {\n        fail(message);\n    }\n}\n\n//# sourceMappingURL=assert.js.map\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Code; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return FirestoreError; });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// TODO(mcg): Change to a string enum once we've upgraded to typescript 2.4.\n//  tslint:disable-next-line:variable-name Intended to look like a TS 2.4 enum\nvar Code = {\n    // Causes are copied from:\n    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n    /** Not an error; returned on success. */\n    OK: 'ok',\n    /** The operation was cancelled (typically by the caller). */\n    CANCELLED: 'cancelled',\n    /** Unknown error or an error from a different error domain. */\n    UNKNOWN: 'unknown',\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    INVALID_ARGUMENT: 'invalid-argument',\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\n    /** Some requested entity (e.g., file or directory) was not found. */\n    NOT_FOUND: 'not-found',\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    ALREADY_EXISTS: 'already-exists',\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    PERMISSION_DENIED: 'permission-denied',\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    UNAUTHENTICATED: 'unauthenticated',\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operation's execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    FAILED_PRECONDITION: 'failed-precondition',\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    ABORTED: 'aborted',\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    OUT_OF_RANGE: 'out-of-range',\n    /** Operation is not implemented or not supported/enabled in this service. */\n    UNIMPLEMENTED: 'unimplemented',\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    INTERNAL: 'internal',\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    UNAVAILABLE: 'unavailable',\n    /** Unrecoverable data loss or corruption. */\n    DATA_LOSS: 'data-loss'\n};\n/**\n * An error class used for Firestore-generated errors. Ideally we should be\n * using FirebaseError, but integrating with it is overly arduous at the moment,\n * so we define our own compatible error class (with a `name` of 'FirebaseError'\n * and compatible `code` and `message` fields.)\n */\nvar FirestoreError = /** @class */ (function (_super) {\n    __extends(FirestoreError, _super);\n    function FirestoreError(code, message) {\n        var _this = _super.call(this, message) || this;\n        _this.code = code;\n        _this.message = message;\n        _this.name = 'FirebaseError';\n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        _this.toString = function () { return _this.name + \": [code=\" + _this.code + \"]: \" + _this.message; };\n        return _this;\n    }\n    return FirestoreError;\n}(Error));\n\n\n//# sourceMappingURL=error.js.map\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = maybeDocumentMap;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = documentMap;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = documentVersionMap;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = documentKeySet;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_sorted_map__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_sorted_set__ = __webpack_require__(164);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__document_key__ = __webpack_require__(120);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar EMPTY_MAYBE_DOCUMENT_MAP = new __WEBPACK_IMPORTED_MODULE_0__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_2__document_key__[\"a\" /* DocumentKey */].comparator);\nfunction maybeDocumentMap() {\n    return EMPTY_MAYBE_DOCUMENT_MAP;\n}\nvar EMPTY_DOCUMENT_MAP = new __WEBPACK_IMPORTED_MODULE_0__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_2__document_key__[\"a\" /* DocumentKey */].comparator);\nfunction documentMap() {\n    return EMPTY_DOCUMENT_MAP;\n}\nvar EMPTY_DOCUMENT_VERSION_MAP = new __WEBPACK_IMPORTED_MODULE_0__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_2__document_key__[\"a\" /* DocumentKey */].comparator);\nfunction documentVersionMap() {\n    return EMPTY_DOCUMENT_VERSION_MAP;\n}\nvar EMPTY_DOCUMENT_KEY_SET = new __WEBPACK_IMPORTED_MODULE_1__util_sorted_set__[\"a\" /* SortedSet */](__WEBPACK_IMPORTED_MODULE_2__document_key__[\"a\" /* DocumentKey */].comparator);\nfunction documentKeySet() {\n    return EMPTY_DOCUMENT_KEY_SET;\n}\n\n//# sourceMappingURL=collections.js.map\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DocumentKey; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__path__ = __webpack_require__(133);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar DocumentKey = /** @class */ (function () {\n    function DocumentKey(path) {\n        this.path = path;\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(DocumentKey.isDocumentKey(path), 'Invalid DocumentKey with an odd number of segments: ' +\n            path.toArray().join('/'));\n    }\n    DocumentKey.prototype.isEqual = function (other) {\n        return (other !== null && __WEBPACK_IMPORTED_MODULE_1__path__[\"b\" /* ResourcePath */].comparator(this.path, other.path) === 0);\n    };\n    DocumentKey.prototype.toString = function () {\n        return this.path.toString();\n    };\n    DocumentKey.comparator = function (k1, k2) {\n        return __WEBPACK_IMPORTED_MODULE_1__path__[\"b\" /* ResourcePath */].comparator(k1.path, k2.path);\n    };\n    DocumentKey.isDocumentKey = function (path) {\n        return path.length % 2 === 0;\n    };\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param path The segments of the path to the document\n     * @return A new instance of DocumentKey\n     */\n    DocumentKey.fromSegments = function (segments) {\n        return new DocumentKey(new __WEBPACK_IMPORTED_MODULE_1__path__[\"b\" /* ResourcePath */](segments.slice()));\n    };\n    /**\n     * Creates and returns a new document key using '/' to split the string into\n     * segments.\n     *\n     * @param path The slash-separated path string to the document\n     * @return A new instance of DocumentKey\n     */\n    DocumentKey.fromPathString = function (path) {\n        return new DocumentKey(__WEBPACK_IMPORTED_MODULE_1__path__[\"b\" /* ResourcePath */].fromString(path));\n    };\n    DocumentKey.EMPTY = new DocumentKey(new __WEBPACK_IMPORTED_MODULE_1__path__[\"b\" /* ResourcePath */]([]));\n    return DocumentKey;\n}());\n\n\n//# sourceMappingURL=document_key.js.map\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LogLevel; });\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = getLogLevel;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = setLogLevel;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = debug;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = error;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_version__ = __webpack_require__(180);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__platform_platform__ = __webpack_require__(129);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* tslint:disable:no-console */\n\n\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 2] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\nvar logLevel = LogLevel.ERROR;\n// Helper methods are needed because variables can't be exported as read/write\nfunction getLogLevel() {\n    return logLevel;\n}\nfunction setLogLevel(newLevel) {\n    logLevel = newLevel;\n}\nfunction debug(tag, msg) {\n    var obj = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        obj[_i - 2] = arguments[_i];\n    }\n    if (logLevel <= LogLevel.DEBUG) {\n        var time = new Date().toISOString();\n        var args = obj.map(argToString);\n        console.log.apply(console, [\"Firestore (\" + __WEBPACK_IMPORTED_MODULE_0__core_version__[\"a\" /* SDK_VERSION */] + \") \" + time + \" [\" + tag + \"]: \" + msg].concat(args));\n    }\n}\nfunction error(msg) {\n    var obj = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        obj[_i - 1] = arguments[_i];\n    }\n    if (logLevel <= LogLevel.ERROR) {\n        var time = new Date().toISOString();\n        var args = obj.map(argToString);\n        console.error.apply(console, [\"Firestore (\" + __WEBPACK_IMPORTED_MODULE_0__core_version__[\"a\" /* SDK_VERSION */] + \") \" + time + \": \" + msg].concat(args));\n    }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction argToString(obj) {\n    if (typeof obj === 'string') {\n        return obj;\n    }\n    else {\n        var platform = __WEBPACK_IMPORTED_MODULE_1__platform_platform__[\"a\" /* PlatformSupport */].getPlatform();\n        try {\n            return platform.formatJSON(obj);\n        }\n        catch (e) {\n            // Converting to JSON failed, just log the object directly\n            return obj;\n        }\n    }\n}\n\n//# sourceMappingURL=log.js.map\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AutoId; });\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = primitiveComparator;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = equals;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = arrayEquals;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = immediatePredecessor;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = immediateSuccessor;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assert__ = __webpack_require__(117);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// tslint:disable-next-line:class-as-namespace\nvar AutoId = /** @class */ (function () {\n    function AutoId() {\n    }\n    AutoId.newId = function () {\n        // Alphanumeric characters\n        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var autoId = '';\n        for (var i = 0; i < 20; i++) {\n            autoId += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"a\" /* assert */])(autoId.length === 20, 'Invalid auto ID: ' + autoId);\n        return autoId;\n    };\n    return AutoId;\n}());\n\nfunction primitiveComparator(left, right) {\n    if (left < right)\n        return -1;\n    if (left > right)\n        return 1;\n    return 0;\n}\n/** Helper to compare nullable (or undefined-able) objects using isEqual(). */\nfunction equals(left, right) {\n    if (left !== null && left !== undefined) {\n        return !!(right && left.isEqual(right));\n    }\n    else {\n        // HACK: Explicitly cast since TypeScript's type narrowing apparently isn't\n        // smart enough.\n        return left === right;\n    }\n}\n/** Helper to compare arrays using isEqual(). */\nfunction arrayEquals(left, right) {\n    if (left.length !== right.length) {\n        return false;\n    }\n    for (var i = 0; i < left.length; i++) {\n        if (!left[i].isEqual(right[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns the largest lexicographically smaller string of equal or smaller\n * length. Returns an empty string if there is no such predecessor (if the input\n * is empty).\n *\n * Strings returned from this method can be invalid UTF-16 but this is sufficent\n * in use for indexeddb because that depends on lexicographical ordering but\n * shouldn't be used elsewhere.\n */\nfunction immediatePredecessor(s) {\n    // We can decrement the last character in the string and be done\n    // unless that character is 0 (0x0000), in which case we have to erase the\n    // last character.\n    var lastIndex = s.length - 1;\n    if (s.length === 0) {\n        // Special case the empty string.\n        return '';\n    }\n    else if (s.charAt(lastIndex) === '\\0') {\n        return s.substring(0, lastIndex);\n    }\n    else {\n        return (s.substring(0, lastIndex) +\n            String.fromCharCode(s.charCodeAt(lastIndex) - 1));\n    }\n}\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */\nfunction immediateSuccessor(s) {\n    // Return the input string, with an additional NUL byte appended.\n    return s + '\\0';\n}\n\n//# sourceMappingURL=misc.js.map\n\n\n/***/ }),\n/* 123 */,\n/* 124 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PersistencePromise; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PersistencePromise<> is essentially a re-implementation of Promise<> except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise<> implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */\nvar PersistencePromise = /** @class */ (function () {\n    function PersistencePromise(callback) {\n        var _this = this;\n        // NOTE: next/catchCallback will always point to our own wrapper functions,\n        // not the user's raw next() or catch() callbacks.\n        // tslint:disable-next-line:no-any Accept any result type for the next call in the Promise chain.\n        this.nextCallback = null;\n        // tslint:disable-next-line:no-any Accept any result type for the error handler.\n        this.catchCallback = null;\n        // When the operation resolves, we'll set result or error and mark isDone.\n        this.result = undefined;\n        this.error = undefined;\n        this.isDone = false;\n        // Set to true when .then() or .catch() are called and prevents additional\n        // chaining.\n        this.callbackAttached = false;\n        callback(function (value) {\n            _this.isDone = true;\n            _this.result = value;\n            if (_this.nextCallback) {\n                // value should be defined unless T is Void, but we can't express\n                // that in the type system.\n                _this.nextCallback(value);\n            }\n        }, function (error) {\n            _this.isDone = true;\n            _this.error = error;\n            if (_this.catchCallback) {\n                _this.catchCallback(error);\n            }\n        });\n    }\n    PersistencePromise.prototype.catch = function (fn) {\n        return this.next(undefined, fn);\n    };\n    PersistencePromise.prototype.next = function (nextFn, catchFn) {\n        var _this = this;\n        if (this.callbackAttached) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('Called next() or catch() twice for PersistencePromise');\n        }\n        this.callbackAttached = true;\n        if (this.isDone) {\n            if (!this.error) {\n                return this.wrapSuccess(nextFn, this.result);\n            }\n            else {\n                return this.wrapFailure(catchFn, this.error);\n            }\n        }\n        else {\n            return new PersistencePromise(function (resolve, reject) {\n                _this.nextCallback = function (value) {\n                    _this.wrapSuccess(nextFn, value).next(resolve, reject);\n                };\n                _this.catchCallback = function (error) {\n                    _this.wrapFailure(catchFn, error).next(resolve, reject);\n                };\n            });\n        }\n    };\n    PersistencePromise.prototype.toPromise = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.next(resolve, reject);\n        });\n    };\n    PersistencePromise.prototype.wrapUserFunction = function (fn) {\n        try {\n            var result = fn();\n            if (result instanceof PersistencePromise) {\n                return result;\n            }\n            else {\n                return PersistencePromise.resolve(result);\n            }\n        }\n        catch (e) {\n            return PersistencePromise.reject(e);\n        }\n    };\n    PersistencePromise.prototype.wrapSuccess = function (nextFn, value) {\n        if (nextFn) {\n            return this.wrapUserFunction(function () { return nextFn(value); });\n        }\n        else {\n            // If there's no nextFn, then R must be the same as T but we\n            // can't express that in the type system.\n            // tslint:disable-next-line:no-any\n            return PersistencePromise.resolve(value);\n        }\n    };\n    PersistencePromise.prototype.wrapFailure = function (catchFn, error) {\n        if (catchFn) {\n            return this.wrapUserFunction(function () { return catchFn(error); });\n        }\n        else {\n            return PersistencePromise.reject(error);\n        }\n    };\n    PersistencePromise.resolve = function (result) {\n        return new PersistencePromise(function (resolve, reject) {\n            resolve(result);\n        });\n    };\n    PersistencePromise.reject = function (error) {\n        return new PersistencePromise(function (resolve, reject) {\n            reject(error);\n        });\n    };\n    PersistencePromise.waitFor = function (\n        // tslint:disable-next-line:no-any Accept all Promise types in waitFor().\n        all) {\n        return all.reduce(function (promise, nextPromise, idx) {\n            return promise.next(function () {\n                return nextPromise;\n            });\n        }, PersistencePromise.resolve());\n    };\n    PersistencePromise.map = function (all) {\n        var results = [];\n        var first = true;\n        // initial is ignored, so we can cheat on the type.\n        // tslint:disable-next-line:no-any\n        var initial = PersistencePromise.resolve(null);\n        return all\n            .reduce(function (promise, nextPromise) {\n            return promise.next(function (result) {\n                if (!first) {\n                    results.push(result);\n                }\n                first = false;\n                return nextPromise;\n            });\n        }, initial)\n            .next(function (result) {\n            results.push(result);\n            return results;\n        });\n    };\n    return PersistencePromise;\n}());\n\n\n//# sourceMappingURL=persistence_promise.js.map\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Document; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return NoDocument; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__document_key__ = __webpack_require__(120);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Document = /** @class */ (function () {\n    function Document(key, version, data, options) {\n        this.key = key;\n        this.version = version;\n        this.data = data;\n        this.hasLocalMutations = options.hasLocalMutations;\n    }\n    Document.prototype.field = function (path) {\n        return this.data.field(path);\n    };\n    Document.prototype.fieldValue = function (path) {\n        var field = this.field(path);\n        return field ? field.value() : undefined;\n    };\n    Document.prototype.value = function () {\n        return this.data.value();\n    };\n    Document.prototype.isEqual = function (other) {\n        return (other instanceof Document &&\n            this.key.isEqual(other.key) &&\n            this.version.isEqual(other.version) &&\n            this.data.isEqual(other.data) &&\n            this.hasLocalMutations === other.hasLocalMutations);\n    };\n    Document.prototype.toString = function () {\n        return (\"Document(\" + this.key + \", \" + this.version + \", \" + this.data.toString() + \", \" +\n            (\"{hasLocalMutations: \" + this.hasLocalMutations + \"})\"));\n    };\n    Document.compareByKey = function (d1, d2) {\n        return __WEBPACK_IMPORTED_MODULE_1__document_key__[\"a\" /* DocumentKey */].comparator(d1.key, d2.key);\n    };\n    Document.compareByField = function (field, d1, d2) {\n        var v1 = d1.field(field);\n        var v2 = d2.field(field);\n        if (v1 !== undefined && v2 !== undefined) {\n            return v1.compareTo(v2);\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])(\"Trying to compare documents on fields that don't exist\");\n        }\n    };\n    return Document;\n}());\n\n/**\n * A class representing a deleted document.\n * Version is set to 0 if we don't point to any specific time, otherwise it\n * denotes time we know it didn't exist at.\n */\nvar NoDocument = /** @class */ (function () {\n    function NoDocument(key, version) {\n        this.key = key;\n        this.version = version;\n    }\n    NoDocument.prototype.toString = function () {\n        return \"NoDocument(\" + this.key + \", \" + this.version + \")\";\n    };\n    NoDocument.prototype.isEqual = function (other) {\n        return (other &&\n            other.version.isEqual(this.version) &&\n            other.key.isEqual(this.key));\n    };\n    NoDocument.compareByKey = function (d1, d2) {\n        return __WEBPACK_IMPORTED_MODULE_1__document_key__[\"a\" /* DocumentKey */].comparator(d1.key, d2.key);\n    };\n    return NoDocument;\n}());\n\n\n//# sourceMappingURL=document.js.map\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SnapshotVersion; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timestamp__ = __webpack_require__(137);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nvar SnapshotVersion = /** @class */ (function () {\n    function SnapshotVersion(timestamp) {\n        this.timestamp = timestamp;\n    }\n    // TODO(b/34176344): Once we no longer need to use the old alpha protos,\n    // delete this constructor and use a timestamp-backed version everywhere.\n    SnapshotVersion.fromMicroseconds = function (value) {\n        var seconds = Math.floor(value / 1e6);\n        var nanos = (value % 1e6) * 1e3;\n        return new SnapshotVersion(new __WEBPACK_IMPORTED_MODULE_0__timestamp__[\"a\" /* Timestamp */](seconds, nanos));\n    };\n    SnapshotVersion.fromTimestamp = function (value) {\n        return new SnapshotVersion(value);\n    };\n    SnapshotVersion.forDeletedDoc = function () {\n        return SnapshotVersion.MIN;\n    };\n    SnapshotVersion.prototype.compareTo = function (other) {\n        return this.timestamp.compareTo(other.timestamp);\n    };\n    SnapshotVersion.prototype.isEqual = function (other) {\n        return this.timestamp.isEqual(other.timestamp);\n    };\n    /** Returns a number representation of the version for use in spec tests. */\n    SnapshotVersion.prototype.toMicroseconds = function () {\n        // Convert to microseconds.\n        return this.timestamp.seconds * 1e6 + this.timestamp.nanos / 1000;\n    };\n    SnapshotVersion.prototype.toString = function () {\n        return 'SnapshotVersion(' + this.timestamp.toString() + ')';\n    };\n    SnapshotVersion.prototype.toTimestamp = function () {\n        return this.timestamp;\n    };\n    SnapshotVersion.MIN = new SnapshotVersion(new __WEBPACK_IMPORTED_MODULE_0__timestamp__[\"a\" /* Timestamp */](0, 0));\n    return SnapshotVersion;\n}());\n\n\n//# sourceMappingURL=snapshot_version.js.map\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = contains;\n/* unused harmony export get */\n/* unused harmony export size */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = defaulted;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = forEachNumber;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = forEach;\n/* unused harmony export lookupOrInsert */\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = isEmpty;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = shallowCopy;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assert__ = __webpack_require__(117);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction get(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key) ? obj[key] : null;\n}\nfunction size(obj) {\n    var count = 0;\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            count++;\n        }\n    }\n    return count;\n}\n/** Returns the given value if it's defined or the defaultValue otherwise. */\nfunction defaulted(value, defaultValue) {\n    return value !== undefined ? value : defaultValue;\n}\nfunction forEachNumber(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            var num = Number(key);\n            if (!isNaN(num)) {\n                fn(num, obj[key]);\n            }\n        }\n    }\n}\nfunction forEach(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n}\nfunction lookupOrInsert(obj, key, valFn) {\n    if (!contains(obj, key)) {\n        obj[key] = valFn();\n    }\n    return obj[key];\n}\nfunction isEmpty(obj) {\n    Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"a\" /* assert */])(obj != null && typeof obj === 'object', 'isEmpty() expects object parameter.');\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction shallowCopy(obj) {\n    Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"a\" /* assert */])(obj && typeof obj === 'object', 'shallowCopy() expects object parameter.');\n    var result = {};\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n//# sourceMappingURL=obj.js.map\n\n\n/***/ }),\n/* 128 */,\n/* 129 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PlatformSupport; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = emptyByteString;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides singleton helpers where setup code can inject a platform at runtime.\n * setPlatform needs to be set before Firestore is used and must be set exactly\n * once.\n */\nvar PlatformSupport = /** @class */ (function () {\n    function PlatformSupport() {\n    }\n    PlatformSupport.setPlatform = function (platform) {\n        if (PlatformSupport.platform) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('Platform already defined');\n        }\n        PlatformSupport.platform = platform;\n    };\n    PlatformSupport.getPlatform = function () {\n        if (!PlatformSupport.platform) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('Platform not set');\n        }\n        return PlatformSupport.platform;\n    };\n    return PlatformSupport;\n}());\n\n/**\n * Returns the representation of an empty \"proto\" byte string for the\n * platform.\n */\nfunction emptyByteString() {\n    return PlatformSupport.getPlatform().emptyByteString;\n}\n\n//# sourceMappingURL=platform.js.map\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 131 */,\n/* 132 */,\n/* 133 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export DOCUMENT_KEY_NAME */\n/* unused harmony export Path */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ResourcePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FieldPath; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_error__ = __webpack_require__(118);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar DOCUMENT_KEY_NAME = '__name__';\n/**\n * Path represents an ordered sequence of string segments.\n */\nvar Path = /** @class */ (function () {\n    function Path(segments, offset, length) {\n        this.init(segments, offset, length);\n    }\n    /**\n     * An initialization method that can be called from outside the constructor.\n     * We need this so that we can have a non-static construct method that returns\n     * the polymorphic `this` type.\n     */\n    Path.prototype.init = function (segments, offset, length) {\n        if (offset === undefined) {\n            offset = 0;\n        }\n        else if (offset > segments.length) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('offset ' + offset + ' out of range ' + segments.length);\n        }\n        if (length === undefined) {\n            length = segments.length - offset;\n        }\n        else if (length > segments.length - offset) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('length ' + length + ' out of range ' + (segments.length - offset));\n        }\n        this.segments = segments;\n        this.offset = offset;\n        this.len = length;\n    };\n    /**\n     * Constructs a new instance of Path using the same concrete type as `this`.\n     * We need this instead of using the normal constructor, because polymorphic\n     * `this` doesn't work on static methods.\n     */\n    Path.prototype.construct = function (segments, offset, length) {\n        var path = Object.create(Object.getPrototypeOf(this));\n        path.init(segments, offset, length);\n        return path;\n    };\n    Object.defineProperty(Path.prototype, \"length\", {\n        get: function () {\n            return this.len;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.isEqual = function (other) {\n        return Path.comparator(this, other) === 0;\n    };\n    Path.prototype.child = function (nameOrPath) {\n        var segments = this.segments.slice(this.offset, this.limit());\n        if (nameOrPath instanceof Path) {\n            nameOrPath.forEach(function (segment) {\n                segments.push(segment);\n            });\n        }\n        else if (typeof nameOrPath === 'string') {\n            segments.push(nameOrPath);\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('Unknown parameter type for Path.child(): ' + nameOrPath);\n        }\n        return this.construct(segments);\n    };\n    /** The index of one past the last segment of the path. */\n    Path.prototype.limit = function () {\n        return this.offset + this.length;\n    };\n    Path.prototype.popFirst = function (size) {\n        size = size === undefined ? 1 : size;\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.length >= size, \"Can't call popFirst() with less segments\");\n        return this.construct(this.segments, this.offset + size, this.length - size);\n    };\n    Path.prototype.popLast = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.isEmpty(), \"Can't call popLast() on empty path\");\n        return this.construct(this.segments, this.offset, this.length - 1);\n    };\n    Path.prototype.firstSegment = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.isEmpty(), \"Can't call firstSegment() on empty path\");\n        return this.segments[this.offset];\n    };\n    Path.prototype.lastSegment = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.isEmpty(), \"Can't call lastSegment() on empty path\");\n        return this.segments[this.limit() - 1];\n    };\n    Path.prototype.get = function (index) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(index < this.length, 'Index out of range');\n        return this.segments[this.offset + index];\n    };\n    Path.prototype.isEmpty = function () {\n        return this.length === 0;\n    };\n    Path.prototype.isPrefixOf = function (other) {\n        if (other.length < this.length) {\n            return false;\n        }\n        for (var i = 0; i < this.length; i++) {\n            if (this.get(i) !== other.get(i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Path.prototype.forEach = function (fn) {\n        for (var i = this.offset, end = this.limit(); i < end; i++) {\n            fn(this.segments[i]);\n        }\n    };\n    Path.prototype.toArray = function () {\n        return this.segments.slice(this.offset, this.limit());\n    };\n    Path.comparator = function (p1, p2) {\n        var len = Math.min(p1.length, p2.length);\n        for (var i = 0; i < len; i++) {\n            var left = p1.get(i);\n            var right = p2.get(i);\n            if (left < right)\n                return -1;\n            if (left > right)\n                return 1;\n        }\n        if (p1.length < p2.length)\n            return -1;\n        if (p1.length > p2.length)\n            return 1;\n        return 0;\n    };\n    return Path;\n}());\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n */\nvar ResourcePath = /** @class */ (function (_super) {\n    __extends(ResourcePath, _super);\n    function ResourcePath() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ResourcePath.prototype.canonicalString = function () {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join('/');\n    };\n    ResourcePath.prototype.toString = function () {\n        return this.canonicalString();\n    };\n    /**\n     * Creates a resource path from the given slash-delimited string.\n     */\n    ResourcePath.fromString = function (path) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        if (path.indexOf('//') >= 0) {\n            throw new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid path (\" + path + \"). Paths must not contain // in them.\");\n        }\n        // We may still have an empty segment at the beginning or end if they had a\n        // leading or trailing slash (which we allow).\n        var segments = path.split('/').filter(function (segment) { return segment.length > 0; });\n        return new ResourcePath(segments);\n    };\n    ResourcePath.EMPTY_PATH = new ResourcePath([]);\n    return ResourcePath;\n}(Path));\n\nvar identifierRegExp = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/** A dot-separated path for navigating sub-objects within a document. */\nvar FieldPath = /** @class */ (function (_super) {\n    __extends(FieldPath, _super);\n    function FieldPath() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n    FieldPath.isValidIdentifier = function (segment) {\n        return identifierRegExp.test(segment);\n    };\n    FieldPath.prototype.canonicalString = function () {\n        return this.toArray()\n            .map(function (str) {\n            str = str.replace('\\\\', '\\\\\\\\').replace('`', '\\\\`');\n            if (!FieldPath.isValidIdentifier(str)) {\n                str = '`' + str + '`';\n            }\n            return str;\n        })\n            .join('.');\n    };\n    FieldPath.prototype.toString = function () {\n        return this.canonicalString();\n    };\n    /**\n     * Returns true if this field references the key of a document.\n     */\n    FieldPath.prototype.isKeyField = function () {\n        return this.length === 1 && this.get(0) === DOCUMENT_KEY_NAME;\n    };\n    /**\n     * The field designating the key of a document.\n     */\n    FieldPath.keyField = function () {\n        return new FieldPath([DOCUMENT_KEY_NAME]);\n    };\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n    FieldPath.fromServerFormat = function (path) {\n        var segments = [];\n        var current = '';\n        var i = 0;\n        var addCurrentSegment = function () {\n            if (current.length === 0) {\n                throw new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not be empty, begin \" +\n                    \"with '.', end with '.', or contain '..'\");\n            }\n            segments.push(current);\n            current = '';\n        };\n        var inBackticks = false;\n        while (i < path.length) {\n            var c = path[i];\n            if (c === '\\\\') {\n                if (i + 1 === path.length) {\n                    throw new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Path has trailing escape character: ' + path);\n                }\n                var next = path[i + 1];\n                if (!(next === '\\\\' || next === '.' || next === '`')) {\n                    throw new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Path has invalid escape sequence: ' + path);\n                }\n                current += next;\n                i += 2;\n            }\n            else if (c === '`') {\n                inBackticks = !inBackticks;\n                i++;\n            }\n            else if (c === '.' && !inBackticks) {\n                addCurrentSegment();\n                i++;\n            }\n            else {\n                current += c;\n                i++;\n            }\n        }\n        addCurrentSegment();\n        if (inBackticks) {\n            throw new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Unterminated ` in path: ' + path);\n        }\n        return new FieldPath(segments);\n    };\n    FieldPath.EMPTY_PATH = new FieldPath([]);\n    return FieldPath;\n}(Path));\n\n\n//# sourceMappingURL=path.js.map\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SortedMap; });\n/* unused harmony export SortedMapIterator */\n/* unused harmony export LLRBNode */\n/* unused harmony export LLRBEmptyNode */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assert__ = __webpack_require__(117);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nvar SortedMap = /** @class */ (function () {\n    function SortedMap(comparator, root) {\n        this.comparator = comparator;\n        this.root = root ? root : LLRBNode.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    SortedMap.prototype.insert = function (key, value) {\n        return new SortedMap(this.comparator, this.root\n            .insert(key, value, this.comparator)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    // Returns a copy of the map, with the specified key removed.\n    SortedMap.prototype.remove = function (key) {\n        return new SortedMap(this.comparator, this.root\n            .remove(key, this.comparator)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    // Returns the value of the node with the given key, or null.\n    SortedMap.prototype.get = function (key) {\n        var node = this.root;\n        while (!node.isEmpty()) {\n            var cmp = this.comparator(key, node.key);\n            if (cmp === 0) {\n                return node.value;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                node = node.right;\n            }\n        }\n        return null;\n    };\n    // Returns the key of the item *before* the specified key, or null if key is\n    // the first item.\n    SortedMap.prototype.getPredecessorKey = function (key) {\n        var node = this.root;\n        var rightParent = null;\n        while (!node.isEmpty()) {\n            var cmp = this.comparator(key, node.key);\n            if (cmp === 0) {\n                if (!node.left.isEmpty()) {\n                    node = node.left;\n                    while (!node.right.isEmpty())\n                        node = node.right;\n                    return node.key;\n                }\n                else if (rightParent) {\n                    return rightParent.key;\n                }\n                else {\n                    return null; // first item.\n                }\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                rightParent = node;\n                node = node.right;\n            }\n        }\n        throw Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"b\" /* fail */])('Attempted to find predecessor key for a nonexistent key.' +\n            '  What gives?');\n    };\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    SortedMap.prototype.indexOf = function (key) {\n        // Number of nodes that were pruned when descending right\n        var prunedNodes = 0;\n        var node = this.root;\n        while (!node.isEmpty()) {\n            var cmp = this.comparator(key, node.key);\n            if (cmp === 0) {\n                return prunedNodes + node.left.size;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else {\n                // Count all nodes left of the node plus the node itself\n                prunedNodes += node.left.size + 1;\n                node = node.right;\n            }\n        }\n        // Node not found\n        return -1;\n    };\n    SortedMap.prototype.isEmpty = function () {\n        return this.root.isEmpty();\n    };\n    Object.defineProperty(SortedMap.prototype, \"size\", {\n        // Returns the total number of nodes in the map.\n        get: function () {\n            return this.root.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Returns the minimum key in the map.\n    SortedMap.prototype.minKey = function () {\n        return this.root.minKey();\n    };\n    // Returns the maximum key in the map.\n    SortedMap.prototype.maxKey = function () {\n        return this.root.maxKey();\n    };\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    SortedMap.prototype.inorderTraversal = function (action) {\n        return this.root.inorderTraversal(action);\n    };\n    SortedMap.prototype.forEach = function (fn) {\n        this.inorderTraversal(function (k, v) {\n            fn(k, v);\n            return false;\n        });\n    };\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    SortedMap.prototype.reverseTraversal = function (action) {\n        return this.root.reverseTraversal(action);\n    };\n    // Returns an iterator over the SortedMap.\n    SortedMap.prototype.getIterator = function () {\n        return new SortedMapIterator(this.root, null, this.comparator, false);\n    };\n    SortedMap.prototype.getIteratorFrom = function (key) {\n        return new SortedMapIterator(this.root, key, this.comparator, false);\n    };\n    SortedMap.prototype.getReverseIterator = function () {\n        return new SortedMapIterator(this.root, null, this.comparator, true);\n    };\n    SortedMap.prototype.getReverseIteratorFrom = function (key) {\n        return new SortedMapIterator(this.root, key, this.comparator, true);\n    };\n    return SortedMap;\n}()); // end SortedMap\n\n// An iterator over an LLRBNode.\nvar SortedMapIterator = /** @class */ (function () {\n    function SortedMapIterator(node, startKey, comparator, isReverse) {\n        this.isReverse = isReverse;\n        this.nodeStack = [];\n        var cmp = 1;\n        while (!node.isEmpty()) {\n            cmp = startKey ? comparator(node.key, startKey) : 1;\n            // flip the comparison if we're going in reverse\n            if (isReverse)\n                cmp *= -1;\n            if (cmp < 0) {\n                // This node is less than our start key. ignore it\n                if (this.isReverse) {\n                    node = node.left;\n                }\n                else {\n                    node = node.right;\n                }\n            }\n            else if (cmp === 0) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(node);\n                break;\n            }\n            else {\n                // This node is greater than our start key, add it to the stack and move\n                // to the next one\n                this.nodeStack.push(node);\n                if (this.isReverse) {\n                    node = node.right;\n                }\n                else {\n                    node = node.left;\n                }\n            }\n        }\n    }\n    SortedMapIterator.prototype.getNext = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"a\" /* assert */])(this.nodeStack.length > 0, 'getNext() called on iterator when hasNext() is false.');\n        var node = this.nodeStack.pop();\n        var result = { key: node.key, value: node.value };\n        if (this.isReverse) {\n            node = node.left;\n            while (!node.isEmpty()) {\n                this.nodeStack.push(node);\n                node = node.right;\n            }\n        }\n        else {\n            node = node.right;\n            while (!node.isEmpty()) {\n                this.nodeStack.push(node);\n                node = node.left;\n            }\n        }\n        return result;\n    };\n    SortedMapIterator.prototype.hasNext = function () {\n        return this.nodeStack.length > 0;\n    };\n    SortedMapIterator.prototype.peek = function () {\n        if (this.nodeStack.length === 0)\n            return null;\n        var node = this.nodeStack[this.nodeStack.length - 1];\n        return { key: node.key, value: node.value };\n    };\n    return SortedMapIterator;\n}()); // end SortedMapIterator\n\n// Represents a node in a Left-leaning Red-Black tree.\nvar LLRBNode = /** @class */ (function () {\n    function LLRBNode(key, value, color, left, right) {\n        this.key = key;\n        this.value = value;\n        this.color = color != null ? color : LLRBNode.RED;\n        this.left = left != null ? left : LLRBNode.EMPTY;\n        this.right = right != null ? right : LLRBNode.EMPTY;\n        this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n    };\n    LLRBNode.prototype.isEmpty = function () {\n        return false;\n    };\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    LLRBNode.prototype.inorderTraversal = function (action) {\n        return (this.left.inorderTraversal(action) ||\n            action(this.key, this.value) ||\n            this.right.inorderTraversal(action));\n    };\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    LLRBNode.prototype.reverseTraversal = function (action) {\n        return (this.right.reverseTraversal(action) ||\n            action(this.key, this.value) ||\n            this.left.reverseTraversal(action));\n    };\n    // Returns the minimum node in the tree.\n    LLRBNode.prototype.min = function () {\n        if (this.left.isEmpty()) {\n            return this;\n        }\n        else {\n            return this.left.min();\n        }\n    };\n    // Returns the maximum key in the tree.\n    LLRBNode.prototype.minKey = function () {\n        return this.min().key;\n    };\n    // Returns the maximum key in the tree.\n    LLRBNode.prototype.maxKey = function () {\n        if (this.right.isEmpty()) {\n            return this.key;\n        }\n        else {\n            return this.right.maxKey();\n        }\n    };\n    // Returns new tree, with the key/value added.\n    LLRBNode.prototype.insert = function (key, value, comparator) {\n        var n = this;\n        var cmp = comparator(key, n.key);\n        if (cmp < 0) {\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n        }\n        else if (cmp === 0) {\n            n = n.copy(null, value, null, null, null);\n        }\n        else {\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n        }\n        return n.fixUp();\n    };\n    LLRBNode.prototype.removeMin = function () {\n        if (this.left.isEmpty()) {\n            return LLRBNode.EMPTY;\n        }\n        var n = this;\n        if (!n.left.isRed() && !n.left.left.isRed())\n            n = n.moveRedLeft();\n        n = n.copy(null, null, null, n.left.removeMin(), null);\n        return n.fixUp();\n    };\n    // Returns new tree, with the specified item removed.\n    LLRBNode.prototype.remove = function (key, comparator) {\n        var smallest;\n        var n = this;\n        if (comparator(key, n.key) < 0) {\n            if (!n.left.isEmpty() && !n.left.isRed() && !n.left.left.isRed()) {\n                n = n.moveRedLeft();\n            }\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n        }\n        else {\n            if (n.left.isRed())\n                n = n.rotateRight();\n            if (!n.right.isEmpty() && !n.right.isRed() && !n.right.left.isRed()) {\n                n = n.moveRedRight();\n            }\n            if (comparator(key, n.key) === 0) {\n                if (n.right.isEmpty()) {\n                    return LLRBNode.EMPTY;\n                }\n                else {\n                    smallest = n.right.min();\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin());\n                }\n            }\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n        }\n        return n.fixUp();\n    };\n    LLRBNode.prototype.isRed = function () {\n        return this.color;\n    };\n    // Returns new tree after performing any needed rotations.\n    LLRBNode.prototype.fixUp = function () {\n        var n = this;\n        if (n.right.isRed() && !n.left.isRed())\n            n = n.rotateLeft();\n        if (n.left.isRed() && n.left.left.isRed())\n            n = n.rotateRight();\n        if (n.left.isRed() && n.right.isRed())\n            n = n.colorFlip();\n        return n;\n    };\n    LLRBNode.prototype.moveRedLeft = function () {\n        var n = this.colorFlip();\n        if (n.right.left.isRed()) {\n            n = n.copy(null, null, null, null, n.right.rotateRight());\n            n = n.rotateLeft();\n            n = n.colorFlip();\n        }\n        return n;\n    };\n    LLRBNode.prototype.moveRedRight = function () {\n        var n = this.colorFlip();\n        if (n.left.left.isRed()) {\n            n = n.rotateRight();\n            n = n.colorFlip();\n        }\n        return n;\n    };\n    LLRBNode.prototype.rotateLeft = function () {\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, nl, null);\n    };\n    LLRBNode.prototype.rotateRight = function () {\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, nr);\n    };\n    LLRBNode.prototype.colorFlip = function () {\n        var left = this.left.copy(null, null, !this.left.color, null, null);\n        var right = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, left, right);\n    };\n    // For testing.\n    LLRBNode.prototype.checkMaxDepth = function () {\n        var blackDepth = this.check();\n        if (Math.pow(2.0, blackDepth) <= this.size + 1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    LLRBNode.prototype.check = function () {\n        if (this.isRed() && this.left.isRed()) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"b\" /* fail */])('Red node has red child(' + this.key + ',' + this.value + ')');\n        }\n        if (this.right.isRed()) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"b\" /* fail */])('Right child of (' + this.key + ',' + this.value + ') is red');\n        }\n        var blackDepth = this.left.check();\n        if (blackDepth !== this.right.check()) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"b\" /* fail */])('Black depths differ');\n        }\n        else {\n            return blackDepth + (this.isRed() ? 0 : 1);\n        }\n    };\n    // tslint:disable-next-line:no-any Empty node is shared between all LLRB trees.\n    LLRBNode.EMPTY = null;\n    LLRBNode.RED = true;\n    LLRBNode.BLACK = false;\n    return LLRBNode;\n}()); // end LLRBNode\n\n// Represents an empty node (a leaf node in the Red-Black Tree).\nvar LLRBEmptyNode = /** @class */ (function () {\n    function LLRBEmptyNode() {\n        this.size = 0;\n    }\n    // Returns a copy of the current node.\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n        return this;\n    };\n    // Returns a copy of the tree, with the specified key/value added.\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n        return new LLRBNode(key, value);\n    };\n    // Returns a copy of the tree, with the specified key removed.\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\n        return this;\n    };\n    LLRBEmptyNode.prototype.isEmpty = function () {\n        return true;\n    };\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n        return false;\n    };\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n        return false;\n    };\n    LLRBEmptyNode.prototype.minKey = function () {\n        return null;\n    };\n    LLRBEmptyNode.prototype.maxKey = function () {\n        return null;\n    };\n    LLRBEmptyNode.prototype.isRed = function () {\n        return false;\n    };\n    // For testing.\n    LLRBEmptyNode.prototype.checkMaxDepth = function () {\n        return true;\n    };\n    LLRBEmptyNode.prototype.check = function () {\n        return 0;\n    };\n    return LLRBEmptyNode;\n}()); // end LLRBEmptyNode\n\nLLRBNode.EMPTY = new LLRBEmptyNode();\n\n//# sourceMappingURL=sorted_map.js.map\n\n\n/***/ }),\n/* 135 */,\n/* 136 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export TypeOrder */\n/* unused harmony export ServerTimestampBehavior */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return FieldValueOptions; });\n/* unused harmony export FieldValue */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return NullValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return BooleanValue; });\n/* unused harmony export NumberValue */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return IntegerValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return DoubleValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return StringValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return TimestampValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return ServerTimestampValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BlobValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return RefValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return GeoPointValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return ObjectValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ArrayValue; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_sorted_map__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__document_key__ = __webpack_require__(120);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar TypeOrder;\n(function (TypeOrder) {\n    // This order is defined by the backend.\n    TypeOrder[TypeOrder[\"NullValue\"] = 0] = \"NullValue\";\n    TypeOrder[TypeOrder[\"BooleanValue\"] = 1] = \"BooleanValue\";\n    TypeOrder[TypeOrder[\"NumberValue\"] = 2] = \"NumberValue\";\n    TypeOrder[TypeOrder[\"TimestampValue\"] = 3] = \"TimestampValue\";\n    TypeOrder[TypeOrder[\"StringValue\"] = 4] = \"StringValue\";\n    TypeOrder[TypeOrder[\"BlobValue\"] = 5] = \"BlobValue\";\n    TypeOrder[TypeOrder[\"RefValue\"] = 6] = \"RefValue\";\n    TypeOrder[TypeOrder[\"GeoPointValue\"] = 7] = \"GeoPointValue\";\n    TypeOrder[TypeOrder[\"ArrayValue\"] = 8] = \"ArrayValue\";\n    TypeOrder[TypeOrder[\"ObjectValue\"] = 9] = \"ObjectValue\";\n})(TypeOrder || (TypeOrder = {}));\n/** Defines the return value for pending server timestamps. */\nvar ServerTimestampBehavior;\n(function (ServerTimestampBehavior) {\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Default\"] = 0] = \"Default\";\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Estimate\"] = 1] = \"Estimate\";\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Previous\"] = 2] = \"Previous\";\n})(ServerTimestampBehavior || (ServerTimestampBehavior = {}));\n/** Holds properties that define field value deserialization options. */\nvar FieldValueOptions = /** @class */ (function () {\n    function FieldValueOptions(serverTimestampBehavior) {\n        this.serverTimestampBehavior = serverTimestampBehavior;\n    }\n    FieldValueOptions.fromSnapshotOptions = function (options) {\n        switch (options.serverTimestamps) {\n            case 'estimate':\n                return new FieldValueOptions(ServerTimestampBehavior.Estimate);\n            case 'previous':\n                return new FieldValueOptions(ServerTimestampBehavior.Previous);\n            case 'none': // Fall-through intended.\n            case undefined:\n                return FieldValueOptions.defaultOptions;\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('fromSnapshotOptions() called with invalid options.');\n        }\n    };\n    FieldValueOptions.defaultOptions = new FieldValueOptions(ServerTimestampBehavior.Default);\n    return FieldValueOptions;\n}());\n\n/**\n * A field value represents a datatype as stored by Firestore.\n */\nvar FieldValue = /** @class */ (function () {\n    function FieldValue() {\n    }\n    FieldValue.prototype.toString = function () {\n        var val = this.value();\n        return val === null ? 'null' : val.toString();\n    };\n    FieldValue.prototype.defaultCompareTo = function (other) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.typeOrder !== other.typeOrder, 'Default compareTo should not be used for values of same type.');\n        var cmp = Object(__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */])(this.typeOrder, other.typeOrder);\n        return cmp;\n    };\n    return FieldValue;\n}());\n\nvar NullValue = /** @class */ (function (_super) {\n    __extends(NullValue, _super);\n    function NullValue() {\n        var _this = _super.call(this) || this;\n        _this.typeOrder = TypeOrder.NullValue;\n        // internalValue is unused but we add it to work around\n        // https://github.com/Microsoft/TypeScript/issues/15585\n        _this.internalValue = null;\n        return _this;\n    }\n    NullValue.prototype.value = function (options) {\n        return null;\n    };\n    NullValue.prototype.isEqual = function (other) {\n        return other instanceof NullValue;\n    };\n    NullValue.prototype.compareTo = function (other) {\n        if (other instanceof NullValue) {\n            return 0;\n        }\n        return this.defaultCompareTo(other);\n    };\n    NullValue.INSTANCE = new NullValue();\n    return NullValue;\n}(FieldValue));\n\nvar BooleanValue = /** @class */ (function (_super) {\n    __extends(BooleanValue, _super);\n    function BooleanValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.BooleanValue;\n        return _this;\n    }\n    BooleanValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    BooleanValue.prototype.isEqual = function (other) {\n        return (other instanceof BooleanValue &&\n            this.internalValue === other.internalValue);\n    };\n    BooleanValue.prototype.compareTo = function (other) {\n        if (other instanceof BooleanValue) {\n            return Object(__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */])(this, other);\n        }\n        return this.defaultCompareTo(other);\n    };\n    BooleanValue.of = function (value) {\n        return value ? BooleanValue.TRUE : BooleanValue.FALSE;\n    };\n    BooleanValue.TRUE = new BooleanValue(true);\n    BooleanValue.FALSE = new BooleanValue(false);\n    return BooleanValue;\n}(FieldValue));\n\n/** Base class for IntegerValue and DoubleValue. */\nvar NumberValue = /** @class */ (function (_super) {\n    __extends(NumberValue, _super);\n    function NumberValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.NumberValue;\n        return _this;\n    }\n    NumberValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    NumberValue.prototype.compareTo = function (other) {\n        if (other instanceof NumberValue) {\n            return numericComparator(this.internalValue, other.internalValue);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return NumberValue;\n}(FieldValue));\n\n/** Utility function to compare doubles (using Firestore semantics for NaN). */\nfunction numericComparator(left, right) {\n    if (left < right) {\n        return -1;\n    }\n    else if (left > right) {\n        return 1;\n    }\n    else if (left === right) {\n        return 0;\n    }\n    else {\n        // one or both are NaN.\n        if (isNaN(left)) {\n            return isNaN(right) ? 0 : -1;\n        }\n        else {\n            return 1;\n        }\n    }\n}\n/**\n * Utility function to check numbers for equality using Firestore semantics\n * (NaN === NaN, -0.0 !== 0.0).\n */\nfunction numericEquals(left, right) {\n    // Implemented based on Object.is() polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    if (left === right) {\n        // +0 != -0\n        return left !== 0 || 1 / left === 1 / right;\n    }\n    else {\n        // NaN == NaN\n        return left !== left && right !== right;\n    }\n}\nvar IntegerValue = /** @class */ (function (_super) {\n    __extends(IntegerValue, _super);\n    function IntegerValue(internalValue) {\n        return _super.call(this, internalValue) || this;\n    }\n    IntegerValue.prototype.isEqual = function (other) {\n        // NOTE: DoubleValue and IntegerValue instances may compareTo() the same,\n        // but that doesn't make them equal via isEqual().\n        if (other instanceof IntegerValue) {\n            return numericEquals(this.internalValue, other.internalValue);\n        }\n        else {\n            return false;\n        }\n    };\n    return IntegerValue;\n}(NumberValue));\n\nvar DoubleValue = /** @class */ (function (_super) {\n    __extends(DoubleValue, _super);\n    function DoubleValue(internalValue) {\n        var _this = _super.call(this, internalValue) || this;\n        _this.internalValue = internalValue;\n        return _this;\n    }\n    DoubleValue.prototype.isEqual = function (other) {\n        // NOTE: DoubleValue and IntegerValue instances may compareTo() the same,\n        // but that doesn't make them equal via isEqual().\n        if (other instanceof DoubleValue) {\n            return numericEquals(this.internalValue, other.internalValue);\n        }\n        else {\n            return false;\n        }\n    };\n    DoubleValue.NAN = new DoubleValue(NaN);\n    DoubleValue.POSITIVE_INFINITY = new DoubleValue(Infinity);\n    DoubleValue.NEGATIVE_INFINITY = new DoubleValue(-Infinity);\n    return DoubleValue;\n}(NumberValue));\n\n// TODO(b/37267885): Add truncation support\nvar StringValue = /** @class */ (function (_super) {\n    __extends(StringValue, _super);\n    function StringValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.StringValue;\n        return _this;\n    }\n    StringValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    StringValue.prototype.isEqual = function (other) {\n        return (other instanceof StringValue && this.internalValue === other.internalValue);\n    };\n    StringValue.prototype.compareTo = function (other) {\n        if (other instanceof StringValue) {\n            return Object(__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */])(this.internalValue, other.internalValue);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return StringValue;\n}(FieldValue));\n\nvar TimestampValue = /** @class */ (function (_super) {\n    __extends(TimestampValue, _super);\n    function TimestampValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.TimestampValue;\n        return _this;\n    }\n    TimestampValue.prototype.value = function (options) {\n        return this.internalValue.toDate();\n    };\n    TimestampValue.prototype.isEqual = function (other) {\n        return (other instanceof TimestampValue &&\n            this.internalValue.isEqual(other.internalValue));\n    };\n    TimestampValue.prototype.compareTo = function (other) {\n        if (other instanceof TimestampValue) {\n            return this.internalValue.compareTo(other.internalValue);\n        }\n        else if (other instanceof ServerTimestampValue) {\n            // Concrete timestamps come before server timestamps.\n            return -1;\n        }\n        else {\n            return this.defaultCompareTo(other);\n        }\n    };\n    return TimestampValue;\n}(FieldValue));\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   TransformMutation (see TransformMutation.applyTo()). They can only exist in\n *   the local view of a document. Therefore they do not need to be parsed or\n *   serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\nvar ServerTimestampValue = /** @class */ (function (_super) {\n    __extends(ServerTimestampValue, _super);\n    function ServerTimestampValue(localWriteTime, previousValue) {\n        var _this = _super.call(this) || this;\n        _this.localWriteTime = localWriteTime;\n        _this.previousValue = previousValue;\n        _this.typeOrder = TypeOrder.TimestampValue;\n        return _this;\n    }\n    ServerTimestampValue.prototype.value = function (options) {\n        if (options &&\n            options.serverTimestampBehavior === ServerTimestampBehavior.Estimate) {\n            return this.localWriteTime.toDate();\n        }\n        else if (options &&\n            options.serverTimestampBehavior === ServerTimestampBehavior.Previous) {\n            return this.previousValue ? this.previousValue.value(options) : null;\n        }\n        else {\n            return null;\n        }\n    };\n    ServerTimestampValue.prototype.isEqual = function (other) {\n        return (other instanceof ServerTimestampValue &&\n            this.localWriteTime.isEqual(other.localWriteTime));\n    };\n    ServerTimestampValue.prototype.compareTo = function (other) {\n        if (other instanceof ServerTimestampValue) {\n            return this.localWriteTime.compareTo(other.localWriteTime);\n        }\n        else if (other instanceof TimestampValue) {\n            // Server timestamps come after all concrete timestamps.\n            return 1;\n        }\n        else {\n            return this.defaultCompareTo(other);\n        }\n    };\n    ServerTimestampValue.prototype.toString = function () {\n        return '<ServerTimestamp localTime=' + this.localWriteTime.toString() + '>';\n    };\n    return ServerTimestampValue;\n}(FieldValue));\n\nvar BlobValue = /** @class */ (function (_super) {\n    __extends(BlobValue, _super);\n    function BlobValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.BlobValue;\n        return _this;\n    }\n    BlobValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    BlobValue.prototype.isEqual = function (other) {\n        return (other instanceof BlobValue &&\n            this.internalValue.isEqual(other.internalValue));\n    };\n    BlobValue.prototype.compareTo = function (other) {\n        if (other instanceof BlobValue) {\n            return this.internalValue._compareTo(other.internalValue);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return BlobValue;\n}(FieldValue));\n\nvar RefValue = /** @class */ (function (_super) {\n    __extends(RefValue, _super);\n    function RefValue(databaseId, key) {\n        var _this = _super.call(this) || this;\n        _this.databaseId = databaseId;\n        _this.key = key;\n        _this.typeOrder = TypeOrder.RefValue;\n        return _this;\n    }\n    RefValue.prototype.value = function (options) {\n        return this.key;\n    };\n    RefValue.prototype.isEqual = function (other) {\n        if (other instanceof RefValue) {\n            return (this.key.isEqual(other.key) && this.databaseId.isEqual(other.databaseId));\n        }\n        else {\n            return false;\n        }\n    };\n    RefValue.prototype.compareTo = function (other) {\n        if (other instanceof RefValue) {\n            var cmp = this.databaseId.compareTo(other.databaseId);\n            return cmp !== 0 ? cmp : __WEBPACK_IMPORTED_MODULE_3__document_key__[\"a\" /* DocumentKey */].comparator(this.key, other.key);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return RefValue;\n}(FieldValue));\n\nvar GeoPointValue = /** @class */ (function (_super) {\n    __extends(GeoPointValue, _super);\n    function GeoPointValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.GeoPointValue;\n        return _this;\n    }\n    GeoPointValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    GeoPointValue.prototype.isEqual = function (other) {\n        return (other instanceof GeoPointValue &&\n            this.internalValue.isEqual(other.internalValue));\n    };\n    GeoPointValue.prototype.compareTo = function (other) {\n        if (other instanceof GeoPointValue) {\n            return this.internalValue._compareTo(other.internalValue);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return GeoPointValue;\n}(FieldValue));\n\nvar ObjectValue = /** @class */ (function (_super) {\n    __extends(ObjectValue, _super);\n    function ObjectValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.ObjectValue;\n        return _this;\n    }\n    ObjectValue.prototype.value = function (options) {\n        var result = {};\n        this.internalValue.inorderTraversal(function (key, val) {\n            result[key] = val.value(options);\n        });\n        return result;\n    };\n    ObjectValue.prototype.forEach = function (action) {\n        this.internalValue.inorderTraversal(action);\n    };\n    ObjectValue.prototype.isEqual = function (other) {\n        if (other instanceof ObjectValue) {\n            var it1 = this.internalValue.getIterator();\n            var it2 = other.internalValue.getIterator();\n            while (it1.hasNext() && it2.hasNext()) {\n                var next1 = it1.getNext();\n                var next2 = it2.getNext();\n                if (next1.key !== next2.key || !next1.value.isEqual(next2.value)) {\n                    return false;\n                }\n            }\n            return !it1.hasNext() && !it2.hasNext();\n        }\n        return false;\n    };\n    ObjectValue.prototype.compareTo = function (other) {\n        if (other instanceof ObjectValue) {\n            var it1 = this.internalValue.getIterator();\n            var it2 = other.internalValue.getIterator();\n            while (it1.hasNext() && it2.hasNext()) {\n                var next1 = it1.getNext();\n                var next2 = it2.getNext();\n                var cmp = Object(__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */])(next1.key, next2.key) ||\n                    next1.value.compareTo(next2.value);\n                if (cmp) {\n                    return cmp;\n                }\n            }\n            // Only equal if both iterators are exhausted\n            return Object(__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */])(it1.hasNext(), it2.hasNext());\n        }\n        else {\n            return this.defaultCompareTo(other);\n        }\n    };\n    ObjectValue.prototype.set = function (path, to) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!path.isEmpty(), 'Cannot set field for empty path on ObjectValue');\n        if (path.length === 1) {\n            return this.setChild(path.firstSegment(), to);\n        }\n        else {\n            var child = this.child(path.firstSegment());\n            if (!(child instanceof ObjectValue)) {\n                child = ObjectValue.EMPTY;\n            }\n            var newChild = child.set(path.popFirst(), to);\n            return this.setChild(path.firstSegment(), newChild);\n        }\n    };\n    ObjectValue.prototype.delete = function (path) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!path.isEmpty(), 'Cannot delete field for empty path on ObjectValue');\n        if (path.length === 1) {\n            return new ObjectValue(this.internalValue.remove(path.firstSegment()));\n        }\n        else {\n            // nested field\n            var child = this.child(path.firstSegment());\n            if (child instanceof ObjectValue) {\n                var newChild = child.delete(path.popFirst());\n                return new ObjectValue(this.internalValue.insert(path.firstSegment(), newChild));\n            }\n            else {\n                // Don't actually change a primitive value to an object for a delete\n                return this;\n            }\n        }\n    };\n    ObjectValue.prototype.contains = function (path) {\n        return this.field(path) !== undefined;\n    };\n    ObjectValue.prototype.field = function (path) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!path.isEmpty(), \"Can't get field of empty path\");\n        var field = this;\n        path.forEach(function (pathSegment) {\n            if (field instanceof ObjectValue) {\n                field = field.internalValue.get(pathSegment) || undefined;\n            }\n            else {\n                field = undefined;\n            }\n        });\n        return field;\n    };\n    ObjectValue.prototype.toString = function () {\n        return JSON.stringify(this.value());\n    };\n    ObjectValue.prototype.child = function (childName) {\n        return this.internalValue.get(childName) || undefined;\n    };\n    ObjectValue.prototype.setChild = function (childName, value) {\n        return new ObjectValue(this.internalValue.insert(childName, value));\n    };\n    ObjectValue.EMPTY = new ObjectValue(new __WEBPACK_IMPORTED_MODULE_2__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */]));\n    return ObjectValue;\n}(FieldValue));\n\nvar ArrayValue = /** @class */ (function (_super) {\n    __extends(ArrayValue, _super);\n    function ArrayValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.ArrayValue;\n        return _this;\n    }\n    ArrayValue.prototype.value = function (options) {\n        return this.internalValue.map(function (v) { return v.value(options); });\n    };\n    ArrayValue.prototype.forEach = function (action) {\n        this.internalValue.forEach(action);\n    };\n    ArrayValue.prototype.isEqual = function (other) {\n        if (other instanceof ArrayValue) {\n            if (this.internalValue.length !== other.internalValue.length) {\n                return false;\n            }\n            for (var i = 0; i < this.internalValue.length; i++) {\n                if (!this.internalValue[i].isEqual(other.internalValue[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    ArrayValue.prototype.compareTo = function (other) {\n        if (other instanceof ArrayValue) {\n            var minLength = Math.min(this.internalValue.length, other.internalValue.length);\n            for (var i = 0; i < minLength; i++) {\n                var cmp = this.internalValue[i].compareTo(other.internalValue[i]);\n                if (cmp) {\n                    return cmp;\n                }\n            }\n            return Object(__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */])(this.internalValue.length, other.internalValue.length);\n        }\n        else {\n            return this.defaultCompareTo(other);\n        }\n    };\n    ArrayValue.prototype.toString = function () {\n        return JSON.stringify(this.value());\n    };\n    return ArrayValue;\n}(FieldValue));\n\n\n//# sourceMappingURL=field_value.js.map\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Timestamp; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_misc__ = __webpack_require__(122);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// A RegExp matching ISO 8601 UTC timestamps with optional fraction.\nvar isoRegExp = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\nvar Timestamp = /** @class */ (function () {\n    function Timestamp(seconds, nanos) {\n        this.seconds = seconds;\n        this.nanos = nanos;\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(nanos >= 0, 'timestamp nanoseconds out of range: ' + nanos);\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(nanos < 1e9, 'timestamp nanoseconds out of range' + nanos);\n        // Midnight at the beginning of 1/1/1 is the earliest Firestore supports.\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(seconds >= -62135596800, 'timestamp seconds out of range: ' + seconds);\n        // This will break in the year 10,000.\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(seconds < 253402300800, 'timestamp seconds out of range' + seconds);\n    }\n    Timestamp.now = function () {\n        return Timestamp.fromEpochMilliseconds(Date.now());\n    };\n    Timestamp.fromDate = function (date) {\n        return Timestamp.fromEpochMilliseconds(date.getTime());\n    };\n    Timestamp.fromEpochMilliseconds = function (milliseconds) {\n        var seconds = Math.floor(milliseconds / 1000);\n        var nanos = (milliseconds - seconds * 1000) * 1e6;\n        return new Timestamp(seconds, nanos);\n    };\n    Timestamp.fromISOString = function (utc) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        var nanos = 0;\n        var fraction = isoRegExp.exec(utc);\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!!fraction, 'invalid timestamp: ' + utc);\n        if (fraction[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            var nanoStr = fraction[1];\n            nanoStr = (nanoStr + '000000000').substr(0, 9);\n            nanos = Number(nanoStr);\n        }\n        // Parse the date to get the seconds.\n        var date = new Date(utc);\n        var seconds = Math.floor(date.getTime() / 1000);\n        return new Timestamp(seconds, nanos);\n    };\n    Timestamp.prototype.toDate = function () {\n        return new Date(this.toEpochMilliseconds());\n    };\n    Timestamp.prototype.toEpochMilliseconds = function () {\n        return this.seconds * 1000 + this.nanos / 1e6;\n    };\n    Timestamp.prototype.compareTo = function (other) {\n        if (this.seconds === other.seconds) {\n            return Object(__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */])(this.nanos, other.nanos);\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_1__util_misc__[\"f\" /* primitiveComparator */])(this.seconds, other.seconds);\n    };\n    Timestamp.prototype.isEqual = function (other) {\n        return other.seconds === this.seconds && other.nanos === this.nanos;\n    };\n    Timestamp.prototype.toString = function () {\n        return 'Timestamp(seconds=' + this.seconds + ', nanos=' + this.nanos + ')';\n    };\n    return Timestamp;\n}());\n\n\n//# sourceMappingURL=timestamp.js.map\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return SCHEMA_VERSION; });\n/* harmony export (immutable) */ __webpack_exports__[\"m\"] = createOrUpgradeDb;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return DbTimestamp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return DbOwner; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return DbMutationQueue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DbMutationBatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DbDocumentMutation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return DbNoDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return DbRemoteDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return DbTarget; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return DbTargetDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return DbTargetGlobal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ALL_STORES; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__encoded_resource_path__ = __webpack_require__(189);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar SCHEMA_VERSION = 1;\n/** Performs database creation and (in the future) upgrades between versions. */\nfunction createOrUpgradeDb(db, oldVersion) {\n    Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(oldVersion === 0, 'Unexpected upgrade from version ' + oldVersion);\n    db.createObjectStore(DbMutationQueue.store, {\n        keyPath: DbMutationQueue.keyPath\n    });\n    // TODO(mikelehen): Get rid of \"as any\" if/when TypeScript fixes their\n    // types. https://github.com/Microsoft/TypeScript/issues/14322\n    db.createObjectStore(DbMutationBatch.store, \n    // tslint:disable-next-line:no-any\n    { keyPath: DbMutationBatch.keyPath });\n    var targetDocumentsStore = db.createObjectStore(DbTargetDocument.store, \n    // tslint:disable-next-line:no-any\n    { keyPath: DbTargetDocument.keyPath });\n    targetDocumentsStore.createIndex(DbTargetDocument.documentTargetsIndex, DbTargetDocument.documentTargetsKeyPath, { unique: true });\n    var targetStore = db.createObjectStore(DbTarget.store, {\n        keyPath: DbTarget.keyPath\n    });\n    // NOTE: This is unique only because the TargetId is the suffix.\n    targetStore.createIndex(DbTarget.queryTargetsIndexName, DbTarget.queryTargetsKeyPath, { unique: true });\n    // NOTE: keys for these stores are specified explicitly rather than using a\n    // keyPath.\n    db.createObjectStore(DbDocumentMutation.store);\n    db.createObjectStore(DbRemoteDocument.store);\n    db.createObjectStore(DbOwner.store);\n    db.createObjectStore(DbTargetGlobal.store);\n}\n/**\n * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.\n */\nvar DbTimestamp = /** @class */ (function () {\n    function DbTimestamp(seconds, nanos) {\n        this.seconds = seconds;\n        this.nanos = nanos;\n    }\n    return DbTimestamp;\n}());\n\n/**\n * A singleton object to be stored in the 'owner' store in IndexedDb.\n *\n * A given database can be owned by a single tab at a given time. That tab\n * must validate that it is still the owner before every write operation and\n * should regularly write an updated timestamp to prevent other tabs from\n * \"stealing\" ownership of the db.\n */\nvar DbOwner = /** @class */ (function () {\n    function DbOwner(ownerId, leaseTimestampMs) {\n        this.ownerId = ownerId;\n        this.leaseTimestampMs = leaseTimestampMs;\n    }\n    /** Name of the IndexedDb object store. */\n    DbOwner.store = 'owner';\n    return DbOwner;\n}());\n\n/**\n * An object to be stored in the 'mutationQueues' store in IndexedDb.\n *\n * Each user gets a single queue of MutationBatches to apply to the server.\n * DbMutationQueue tracks the metadata about the queue.\n */\nvar DbMutationQueue = /** @class */ (function () {\n    function DbMutationQueue(\n        /**\n         * The normalized user ID to which this queue belongs.\n         */\n        userId, \n        /**\n         * An identifier for the highest numbered batch that has been acknowledged\n         * by the server. All MutationBatches in this queue with batchIds less\n         * than or equal to this value are considered to have been acknowledged by\n         * the server.\n         */\n        lastAcknowledgedBatchId, \n        /**\n         * A stream token that was previously sent by the server.\n         *\n         * See StreamingWriteRequest in datastore.proto for more details about\n         * usage.\n         *\n         * After sending this token, earlier tokens may not be used anymore so\n         * only a single stream token is retained.\n         */\n        lastStreamToken) {\n        this.userId = userId;\n        this.lastAcknowledgedBatchId = lastAcknowledgedBatchId;\n        this.lastStreamToken = lastStreamToken;\n    }\n    /** Name of the IndexedDb object store.  */\n    DbMutationQueue.store = 'mutationQueues';\n    /** Keys are automatically assigned via the userId property. */\n    DbMutationQueue.keyPath = 'userId';\n    return DbMutationQueue;\n}());\n\n/**\n * An object to be stored in the 'mutations' store in IndexedDb.\n *\n * Represents a batch of user-level mutations intended to be sent to the server\n * in a single write. Each user-level batch gets a separate DbMutationBatch\n * with a new batchId.\n */\nvar DbMutationBatch = /** @class */ (function () {\n    function DbMutationBatch(\n        /**\n         * The normalized user ID to which this batch belongs.\n         */\n        userId, \n        /**\n         * An identifier for this batch, allocated by the mutation queue in a\n         * monotonically increasing manner.\n         */\n        batchId, \n        /**\n         * The local write time of the batch, stored as milliseconds since the\n         * epoch.\n         */\n        localWriteTimeMs, \n        /**\n         * A list of mutations to apply. All mutations will be applied atomically.\n         *\n         * Mutations are serialized via JsonProtoSerializer.toMutation().\n         */\n        mutations) {\n        this.userId = userId;\n        this.batchId = batchId;\n        this.localWriteTimeMs = localWriteTimeMs;\n        this.mutations = mutations;\n    }\n    /** Name of the IndexedDb object store.  */\n    DbMutationBatch.store = 'mutations';\n    /** Keys are automatically assigned via the userId, batchId properties. */\n    DbMutationBatch.keyPath = ['userId', 'batchId'];\n    return DbMutationBatch;\n}());\n\n/**\n * An object to be stored in the 'documentMutations' store in IndexedDb.\n *\n * A manually maintained index of all the mutation batches that affect a given\n * document key. The rows in this table are references based on the contents of\n * DbMutationBatch.mutations.\n */\nvar DbDocumentMutation = /** @class */ (function () {\n    function DbDocumentMutation() {\n    }\n    /**\n     * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n     * over all of a user's document mutations.\n     */\n    DbDocumentMutation.prefixForUser = function (userId) {\n        return [userId];\n    };\n    /**\n     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n     * index to iterate over all at document mutations for a given path or lower.\n     */\n    DbDocumentMutation.prefixForPath = function (userId, path) {\n        return [userId, Object(__WEBPACK_IMPORTED_MODULE_1__encoded_resource_path__[\"b\" /* encode */])(path)];\n    };\n    /**\n     * Creates a full index key of [userId, encodedPath, batchId] for inserting\n     * and deleting into the DbDocumentMutations index.\n     */\n    DbDocumentMutation.key = function (userId, path, batchId) {\n        return [userId, Object(__WEBPACK_IMPORTED_MODULE_1__encoded_resource_path__[\"b\" /* encode */])(path), batchId];\n    };\n    DbDocumentMutation.store = 'documentMutations';\n    /**\n     * Because we store all the useful information for this store in the key,\n     * there is no useful information to store as the value. The raw (unencoded)\n     * path cannot be stored because IndexedDb doesn't store prototype\n     * information.\n     */\n    DbDocumentMutation.PLACEHOLDER = new DbDocumentMutation();\n    return DbDocumentMutation;\n}());\n\n/**\n * Represents the known absence of a document at a particular version.\n * Stored in IndexedDb as part of a DbRemoteDocument object.\n */\nvar DbNoDocument = /** @class */ (function () {\n    function DbNoDocument(path, readTime) {\n        this.path = path;\n        this.readTime = readTime;\n    }\n    return DbNoDocument;\n}());\n\n/**\n * An object to be stored in the 'remoteDocuments' store in IndexedDb. It\n * represents either a cached document (if it exists) or a cached \"no-document\"\n * (if it is known to not exist).\n *\n * Note: This is the persisted equivalent of a MaybeDocument and could perhaps\n * be made more general if necessary.\n */\nvar DbRemoteDocument = /** @class */ (function () {\n    function DbRemoteDocument(\n        /**\n         * Set to an instance of a DbNoDocument if it is known that no document\n         * exists.\n         */\n        noDocument, \n        /**\n         * Set to an instance of a Document if there's a cached version of the\n         * document.\n         */\n        document) {\n        this.noDocument = noDocument;\n        this.document = document;\n    }\n    DbRemoteDocument.store = 'remoteDocuments';\n    return DbRemoteDocument;\n}());\n\n/**\n * An object to be stored in the 'targets' store in IndexedDb.\n *\n * This is based on and should be kept in sync with the proto used in the iOS\n * client.\n *\n * Each query the client listens to against the server is tracked on disk so\n * that the query can be efficiently resumed on restart.\n */\nvar DbTarget = /** @class */ (function () {\n    function DbTarget(\n        /**\n         * An auto-generated sequential numeric identifier for the query.\n         *\n         * Queries are stored using their canonicalId as the key, but these\n         * canonicalIds can be quite long so we additionally assign a unique\n         * queryId which can be used by referenced data structures (e.g.\n         * indexes) to minimize the on-disk cost.\n         */\n        targetId, \n        /**\n         * The canonical string representing this query. This is not unique.\n         */\n        canonicalId, \n        /**\n         * The last readTime received from the Watch Service for this query.\n         *\n         * This is the same value as TargetChange.read_time in the protos.\n         */\n        readTime, \n        /**\n         * An opaque, server-assigned token that allows watching a query to be\n         * resumed after disconnecting without retransmitting all the data\n         * that matches the query. The resume token essentially identifies a\n         * point in time from which the server should resume sending results.\n         *\n         * This is related to the snapshotVersion in that the resumeToken\n         * effectively also encodes that value, but the resumeToken is opaque\n         * and sometimes encodes additional information.\n         *\n         * A consequence of this is that the resumeToken should be used when\n         * asking the server to reason about where this client is in the watch\n         * stream, but the client should use the snapshotVersion for its own\n         * purposes.\n         *\n         * This is the same value as TargetChange.resume_token in the protos.\n         */\n        resumeToken, \n        /**\n         * A sequence number representing the last time this query was\n         * listened to, used for garbage collection purposes.\n         *\n         * Conventionally this would be a timestamp value, but device-local\n         * clocks are unreliable and they must be able to create new listens\n         * even while disconnected. Instead this should be a monotonically\n         * increasing number that's incremented on each listen call.\n         *\n         * This is different from the queryId since the queryId is an\n         * immutable identifier assigned to the Query on first use while\n         * lastListenSequenceNumber is updated every time the query is\n         * listened to.\n         */\n        lastListenSequenceNumber, \n        /**\n         * The query for this target.\n         *\n         * Because canonical ids are not unique we must store the actual query. We\n         * use the proto to have an object we can persist without having to\n         * duplicate translation logic to and from a `Query` object.\n         */\n        query) {\n        this.targetId = targetId;\n        this.canonicalId = canonicalId;\n        this.readTime = readTime;\n        this.resumeToken = resumeToken;\n        this.lastListenSequenceNumber = lastListenSequenceNumber;\n        this.query = query;\n    }\n    DbTarget.store = 'targets';\n    /** Keys are automatically assigned via the targetId property. */\n    DbTarget.keyPath = 'targetId';\n    /** The name of the queryTargets index. */\n    DbTarget.queryTargetsIndexName = 'queryTargetsIndex';\n    /**\n     * The index of all canonicalIds to the targets that they match. This is not\n     * a unique mapping because canonicalId does not promise a unique name for all\n     * possible queries, so we append the targetId to make the mapping unique.\n     */\n    DbTarget.queryTargetsKeyPath = ['canonicalId', 'targetId'];\n    return DbTarget;\n}());\n\n/**\n * An object representing an association between a target and a document.\n * Stored in the targetDocument object store to store the documents tracked by a\n * particular target.\n */\nvar DbTargetDocument = /** @class */ (function () {\n    function DbTargetDocument(\n        /**\n         * The targetId identifying a target.\n         */\n        targetId, \n        /**\n         * The path to the document, as encoded in the key.\n         */\n        path) {\n        this.targetId = targetId;\n        this.path = path;\n    }\n    /** Name of the IndexedDb object store.  */\n    DbTargetDocument.store = 'targetDocuments';\n    /** Keys are automatically assigned via the targetId, path properties. */\n    DbTargetDocument.keyPath = ['targetId', 'path'];\n    /** The index name for the reverse index. */\n    DbTargetDocument.documentTargetsIndex = 'documentTargetsIndex';\n    /** We also need to create the reverse index for these properties. */\n    DbTargetDocument.documentTargetsKeyPath = ['path', 'targetId'];\n    return DbTargetDocument;\n}());\n\n/**\n * A record of global state tracked across all Targets, tracked separately\n * to avoid the need for extra indexes.\n *\n * This should be kept in-sync with the proto used in the iOS client.\n */\nvar DbTargetGlobal = /** @class */ (function () {\n    function DbTargetGlobal(\n        /**\n         * The highest numbered target id across all targets.\n         *\n         * See DbTarget.targetId.\n         */\n        highestTargetId, \n        /**\n         * The highest numbered lastListenSequenceNumber across all targets.\n         *\n         * See DbTarget.lastListenSequenceNumber.\n         */\n        highestListenSequenceNumber, \n        /**\n         * A global snapshot version representing the last consistent snapshot we\n         * received from the backend. This is monotonically increasing and any\n         * snapshots received from the backend prior to this version (e.g. for\n         * targets resumed with a resumeToken) should be suppressed (buffered)\n         * until the backend has caught up to this snapshot version again. This\n         * prevents our cache from ever going backwards in time.\n         */\n        lastRemoteSnapshotVersion) {\n        this.highestTargetId = highestTargetId;\n        this.highestListenSequenceNumber = highestListenSequenceNumber;\n        this.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion;\n    }\n    /**\n     * The key string used for the single object that exists in the\n     * DbTargetGlobal store.\n     */\n    DbTargetGlobal.key = 'targetGlobalKey';\n    DbTargetGlobal.store = 'targetGlobal';\n    return DbTargetGlobal;\n}());\n\n/**\n * The list of all IndexedDB stored used by the SDK. This is used when creating\n * transactions so that access across all stores is done atomically.\n */\nvar ALL_STORES = [\n    DbMutationQueue.store,\n    DbMutationBatch.store,\n    DbDocumentMutation.store,\n    DbRemoteDocument.store,\n    DbTarget.store,\n    DbOwner.store,\n    DbTargetGlobal.store,\n    DbTargetDocument.store\n];\n\n//# sourceMappingURL=indexeddb_schema.js.map\n\n\n/***/ }),\n/* 139 */,\n/* 140 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = validateExactNumberOfArgs;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = validateAtLeastNumberOfArgs;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = validateBetweenNumberOfArgs;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = validateNamedArrayAtLeastNumberOfElements;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = validateArgType;\n/* harmony export (immutable) */ __webpack_exports__[\"m\"] = validateOptionalArgType;\n/* harmony export (immutable) */ __webpack_exports__[\"k\"] = validateNamedType;\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = validateNamedOptionalType;\n/* unused harmony export validateNamedPropertyEquals */\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = validateNamedOptionalPropertyEquals;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isPlainObject;\n/* harmony export (immutable) */ __webpack_exports__[\"n\"] = valueDescription;\n/* unused harmony export tryGetCustomObjectType */\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = validateDefined;\n/* harmony export (immutable) */ __webpack_exports__[\"l\"] = validateOptionNames;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = invalidClassError;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__obj__ = __webpack_require__(127);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Validates the invocation of functionName has the exact number of arguments.\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateExactNumberOfArgs('myFunction', arguments, 2);\n */\nfunction validateExactNumberOfArgs(functionName, args, numberOfArgs) {\n    if (args.length !== numberOfArgs) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + functionName + \"() requires \" +\n            formatPlural(numberOfArgs, 'argument') +\n            ', but was called with ' +\n            formatPlural(args.length, 'argument') +\n            '.');\n    }\n}\n/**\n * Validates the invocation of functionName has at least the provided number of\n * arguments (but can have many more).\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateAtLeastNumberOfArgs('myFunction', arguments, 2);\n */\nfunction validateAtLeastNumberOfArgs(functionName, args, minNumberOfArgs) {\n    if (args.length < minNumberOfArgs) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + functionName + \"() requires at least \" +\n            formatPlural(minNumberOfArgs, 'argument') +\n            ', but was called with ' +\n            formatPlural(args.length, 'argument') +\n            '.');\n    }\n}\n/**\n * Validates the invocation of functionName has number of arguments between\n * the values provided.\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);\n */\nfunction validateBetweenNumberOfArgs(functionName, args, minNumberOfArgs, maxNumberOfArgs) {\n    if (args.length < minNumberOfArgs || args.length > maxNumberOfArgs) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + functionName + \"() requires between \" + minNumberOfArgs + \" and \" +\n            (maxNumberOfArgs + \" arguments, but was called with \") +\n            formatPlural(args.length, 'argument') +\n            '.');\n    }\n}\n/**\n * Validates the provided argument is an array and has as least the expected\n * number of elements.\n */\nfunction validateNamedArrayAtLeastNumberOfElements(functionName, value, name, minNumberOfElements) {\n    if (!(value instanceof Array) || value.length < minNumberOfElements) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + name + \" argument to be an \" +\n            'array with at least ' +\n            (formatPlural(minNumberOfElements, 'element') + \".\"));\n    }\n}\n/**\n * Validates the provided positional argument has the native JavaScript type\n * using typeof checks.\n */\nfunction validateArgType(functionName, type, position, argument) {\n    validateType(functionName, type, ordinal(position) + \" argument\", argument);\n}\n/**\n * Validates the provided argument has the native JavaScript type using\n * typeof checks or is undefined.\n */\nfunction validateOptionalArgType(functionName, type, position, argument) {\n    if (argument !== undefined) {\n        validateArgType(functionName, type, position, argument);\n    }\n}\n/**\n * Validates the provided named option has the native JavaScript type using\n * typeof checks.\n */\nfunction validateNamedType(functionName, type, optionName, argument) {\n    validateType(functionName, type, optionName + \" option\", argument);\n}\n/**\n * Validates the provided named option has the native JavaScript type using\n * typeof checks or is undefined.\n */\nfunction validateNamedOptionalType(functionName, type, optionName, argument) {\n    if (argument !== undefined) {\n        validateNamedType(functionName, type, optionName, argument);\n    }\n}\n/**\n * Validates that the provided named option equals one of the expected values.\n */\nfunction validateNamedPropertyEquals(functionName, inputName, optionName, input, expected) {\n    var expectedDescription = [];\n    for (var _i = 0, expected_1 = expected; _i < expected_1.length; _i++) {\n        var val = expected_1[_i];\n        if (val === input) {\n            return;\n        }\n        expectedDescription.push(valueDescription(val));\n    }\n    var actualDescription = valueDescription(input);\n    throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid value \" + actualDescription + \" provided to function \" + functionName + \"() for option \\\"serverTimestamps\\\". Acceptable values: \" + expectedDescription.join(', '));\n}\n/**\n * Validates that the provided named option equals one of the expected values or\n * is undefined.\n */\nfunction validateNamedOptionalPropertyEquals(functionName, inputName, optionName, input, expected) {\n    if (input !== undefined) {\n        validateNamedPropertyEquals(functionName, inputName, optionName, input, expected);\n    }\n}\n/** Helper to validate the type of a provided input. */\nfunction validateType(functionName, type, inputName, input) {\n    if (typeof input !== type || (type === 'object' && !isPlainObject(input))) {\n        var description = valueDescription(input);\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + inputName + \" \" +\n            (\"to be of type \" + type + \", but it was: \" + description));\n    }\n}\n/**\n * Returns true iff it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\nfunction isPlainObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        Object.getPrototypeOf(input) === Object.prototype);\n}\n/** Returns a string describing the type / value of the provided input. */\nfunction valueDescription(input) {\n    if (input === undefined) {\n        return 'undefined';\n    }\n    else if (input === null) {\n        return 'null';\n    }\n    else if (typeof input === 'string') {\n        if (input.length > 20) {\n            input = input.substring(0, 20) + \"...\";\n        }\n        return JSON.stringify(input);\n    }\n    else if (typeof input === 'number' || typeof input === 'boolean') {\n        return '' + input;\n    }\n    else if (typeof input === 'object') {\n        if (input instanceof Array) {\n            return 'an array';\n        }\n        else {\n            var customObjectName = tryGetCustomObjectType(input);\n            if (customObjectName) {\n                return \"a custom \" + customObjectName + \" object\";\n            }\n            else {\n                return 'an object';\n            }\n        }\n    }\n    else if (typeof input === 'function') {\n        return 'a function';\n    }\n    else {\n        return Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"b\" /* fail */])('Unknown wrong type: ' + typeof input);\n    }\n}\n/** Hacky method to try to get the constructor name for an object. */\nfunction tryGetCustomObjectType(input) {\n    if (input.constructor) {\n        var funcNameRegex = /function\\s+([^\\s(]+)\\s*\\(/;\n        var results = funcNameRegex.exec(input.constructor.toString());\n        if (results && results.length > 1) {\n            return results[1];\n        }\n    }\n    return null;\n}\n/** Validates the provided argument is defined. */\nfunction validateDefined(functionName, position, argument) {\n    if (argument === undefined) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + functionName + \"() requires a valid \" + ordinal(position) + \" \" +\n            \"argument, but it was undefined.\");\n    }\n}\n/**\n * Validates the provided positional argument is an object, and its keys and\n * values match the expected keys and types provided in optionTypes.\n */\nfunction validateOptionNames(functionName, options, optionNames) {\n    __WEBPACK_IMPORTED_MODULE_2__obj__[\"c\" /* forEach */](options, function (key, _) {\n        if (optionNames.indexOf(key) < 0) {\n            throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Unknown option '\" + key + \"' passed to function \" + functionName + \"(). \" +\n                'Available options: ' +\n                optionNames.join(', '));\n        }\n    });\n}\n/**\n * Helper method to throw an error that the provided argument did not pass\n * an instanceof check.\n */\nfunction invalidClassError(functionName, type, position, argument) {\n    var description = valueDescription(argument);\n    return new __WEBPACK_IMPORTED_MODULE_1__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + ordinal(position) + \" \" +\n        (\"argument to be a \" + type + \", but it was: \" + description));\n}\n/** Converts a number to its english word representation */\nfunction ordinal(num) {\n    switch (num) {\n        case 1:\n            return 'first';\n        case 2:\n            return 'second';\n        case 3:\n            return 'third';\n        default:\n            return num + 'th';\n    }\n}\n/**\n * Formats the given word as plural conditionally given the preceding number.\n */\nfunction formatPlural(num, str) {\n    return num + \" \" + str + (num === 1 ? '' : 's');\n}\n\n//# sourceMappingURL=input_validation.js.map\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MIN_SAFE_INTEGER */\n/* unused harmony export MAX_SAFE_INTEGER */\n/* unused harmony export isInteger */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isNullOrUndefined;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isSafeInteger;\n/* unused harmony export safeIsNaN */\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Untyped Number alias we can use to check for ES6 methods / properties.\n// tslint:disable-next-line:no-any variable-name\nvar NumberAsAny = Number;\n/**\n * Minimum safe integer in Javascript because of floating point precision.\n * Added to not rely on ES6 features.\n */\nvar MIN_SAFE_INTEGER = NumberAsAny.MIN_SAFE_INTEGER || -(Math.pow(2, 53) - 1);\n/**\n * Maximum safe integer in Javascript because of floating point precision.\n * Added to not rely on ES6 features.\n */\nvar MAX_SAFE_INTEGER = NumberAsAny.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n/**\n * Returns whether an number is an integer, uses native implementation if\n * available.\n * Added to not rely on ES6 features.\n * @param value The value to test for being an integer\n */\nvar isInteger = NumberAsAny.isInteger ||\n    (function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    });\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value The value to test for being an integer and in the safe range\n */\nfunction isSafeInteger(value) {\n    return (isInteger(value) &&\n        value <= MAX_SAFE_INTEGER &&\n        value >= MIN_SAFE_INTEGER);\n}\n/**\n * Safely checks if the number is NaN.\n */\nfunction safeIsNaN(value) {\n    if (NumberAsAny.IsNaN) {\n        return NumberAsAny.IsNaN(value);\n    }\n    else {\n        return typeof value === 'number' && isNaN(value);\n    }\n}\n\n//# sourceMappingURL=types.js.map\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return QueryPurpose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QueryData; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__platform_platform__ = __webpack_require__(129);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** An enumeration of the different purposes we have for queries. */\nvar QueryPurpose;\n(function (QueryPurpose) {\n    /** A regular, normal query. */\n    QueryPurpose[QueryPurpose[\"Listen\"] = 0] = \"Listen\";\n    /**\n     * The query was used to refill a query after an existence filter mismatch.\n     */\n    QueryPurpose[QueryPurpose[\"ExistenceFilterMismatch\"] = 1] = \"ExistenceFilterMismatch\";\n    /** The query was used to resolve a limbo document. */\n    QueryPurpose[QueryPurpose[\"LimboResolution\"] = 2] = \"LimboResolution\";\n})(QueryPurpose || (QueryPurpose = {}));\n/**\n * An immutable set of metadata that the local store tracks for each query.\n */\nvar QueryData = /** @class */ (function () {\n    function QueryData(\n        /** The query being listened to. */\n        query, \n        /**\n         * The target ID to which the query corresponds; Assigned by the\n         * LocalStore for user listens and by the SyncEngine for limbo watches.\n         */\n        targetId, \n        /** The purpose of the query. */\n        purpose, \n        /** The latest snapshot version seen for this target. */\n        snapshotVersion, \n        /**\n         * An opaque, server-assigned token that allows watching a query to be\n         * resumed after disconnecting without retransmitting all the data that\n         * matches the query. The resume token essentially identifies a point in\n         * time from which the server should resume sending results.\n         */\n        resumeToken) {\n        if (snapshotVersion === void 0) { snapshotVersion = __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN; }\n        if (resumeToken === void 0) { resumeToken = Object(__WEBPACK_IMPORTED_MODULE_1__platform_platform__[\"b\" /* emptyByteString */])(); }\n        this.query = query;\n        this.targetId = targetId;\n        this.purpose = purpose;\n        this.snapshotVersion = snapshotVersion;\n        this.resumeToken = resumeToken;\n    }\n    /**\n     * Creates a new query data instance with an updated snapshot version and\n     * resume token.\n     */\n    QueryData.prototype.update = function (updated) {\n        return new QueryData(this.query, this.targetId, this.purpose, updated.snapshotVersion, updated.resumeToken);\n    };\n    QueryData.prototype.isEqual = function (other) {\n        return (this.targetId === other.targetId &&\n            this.purpose === other.purpose &&\n            this.snapshotVersion.isEqual(other.snapshotVersion) &&\n            this.resumeToken === other.resumeToken &&\n            this.query.isEqual(other.query));\n    };\n    return QueryData;\n}());\n\n\n//# sourceMappingURL=query_data.js.map\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return RemoteEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CurrentStatusUpdate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return ResetMapping; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return UpdateMapping; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__platform_platform__ = __webpack_require__(129);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */\nvar RemoteEvent = /** @class */ (function () {\n    function RemoteEvent(\n        /**\n         * The snapshot version this event brings us up to, or MIN if not set.\n         */\n        snapshotVersion, \n        /**\n         * A map from target to changes to the target. See TargetChange.\n         */\n        targetChanges, \n        /**\n         * A set of which documents have changed or been deleted, along with the\n         * doc's new values (if not deleted).\n         */\n        documentUpdates) {\n        this.snapshotVersion = snapshotVersion;\n        this.targetChanges = targetChanges;\n        this.documentUpdates = documentUpdates;\n    }\n    RemoteEvent.prototype.addDocumentUpdate = function (doc) {\n        this.documentUpdates = this.documentUpdates.insert(doc.key, doc);\n    };\n    RemoteEvent.prototype.handleExistenceFilterMismatch = function (targetId) {\n        /*\n         * An existence filter mismatch will reset the query and we need to reset\n         * the mapping to contain no documents and an empty resume token.\n         *\n         * Note:\n         *   * The reset mapping is empty, specifically forcing the consumer of the\n         *     change to forget all keys for this targetID;\n         *   * The resume snapshot for this target must be reset\n         *   * The target must be unacked because unwatching and rewatching\n         *     introduces a race for changes.\n         */\n        this.targetChanges[targetId] = {\n            mapping: new ResetMapping(),\n            snapshotVersion: __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN,\n            currentStatusUpdate: CurrentStatusUpdate.MarkNotCurrent,\n            resumeToken: Object(__WEBPACK_IMPORTED_MODULE_2__platform_platform__[\"b\" /* emptyByteString */])()\n        };\n    };\n    return RemoteEvent;\n}());\n\n/**\n * Represents an update to the current status of a target, either explicitly\n * having no new state, or the new value to set. Note \"current\" has special\n * meaning for in the RPC protocol that implies that a target is both up-to-date\n * and consistent with the rest of the watch stream.\n */\nvar CurrentStatusUpdate;\n(function (CurrentStatusUpdate) {\n    /** The current status is not affected and should not be modified. */\n    CurrentStatusUpdate[CurrentStatusUpdate[\"None\"] = 0] = \"None\";\n    /** The target must be marked as no longer \"current\". */\n    CurrentStatusUpdate[CurrentStatusUpdate[\"MarkNotCurrent\"] = 1] = \"MarkNotCurrent\";\n    /** The target must be marked as \"current\". */\n    CurrentStatusUpdate[CurrentStatusUpdate[\"MarkCurrent\"] = 2] = \"MarkCurrent\";\n})(CurrentStatusUpdate || (CurrentStatusUpdate = {}));\nvar EMPTY_KEY_SET = Object(__WEBPACK_IMPORTED_MODULE_1__model_collections__[\"a\" /* documentKeySet */])();\nvar ResetMapping = /** @class */ (function () {\n    function ResetMapping() {\n        this.docs = EMPTY_KEY_SET;\n    }\n    Object.defineProperty(ResetMapping.prototype, \"documents\", {\n        get: function () {\n            return this.docs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResetMapping.prototype.add = function (key) {\n        this.docs = this.docs.add(key);\n    };\n    ResetMapping.prototype.delete = function (key) {\n        this.docs = this.docs.delete(key);\n    };\n    ResetMapping.prototype.isEqual = function (other) {\n        return other !== null && this.docs.isEqual(other.docs);\n    };\n    return ResetMapping;\n}());\n\nvar UpdateMapping = /** @class */ (function () {\n    function UpdateMapping() {\n        this.addedDocuments = EMPTY_KEY_SET;\n        this.removedDocuments = EMPTY_KEY_SET;\n    }\n    UpdateMapping.prototype.applyToKeySet = function (keys) {\n        var result = keys;\n        this.addedDocuments.forEach(function (key) { return (result = result.add(key)); });\n        this.removedDocuments.forEach(function (key) { return (result = result.delete(key)); });\n        return result;\n    };\n    UpdateMapping.prototype.add = function (key) {\n        this.addedDocuments = this.addedDocuments.add(key);\n        this.removedDocuments = this.removedDocuments.delete(key);\n    };\n    UpdateMapping.prototype.delete = function (key) {\n        this.addedDocuments = this.addedDocuments.delete(key);\n        this.removedDocuments = this.removedDocuments.add(key);\n    };\n    UpdateMapping.prototype.isEqual = function (other) {\n        return (other !== null &&\n            this.addedDocuments.isEqual(other.addedDocuments) &&\n            this.removedDocuments.isEqual(other.removedDocuments));\n    };\n    return UpdateMapping;\n}());\n\n\n//# sourceMappingURL=remote_event.js.map\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BATCHID_UNKNOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MutationBatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return MutationBatchResult; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_misc__ = __webpack_require__(122);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar BATCHID_UNKNOWN = -1;\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */\nvar MutationBatch = /** @class */ (function () {\n    function MutationBatch(batchId, localWriteTime, mutations) {\n        this.batchId = batchId;\n        this.localWriteTime = localWriteTime;\n        this.mutations = mutations;\n    }\n    /**\n     * Applies all the mutations in this MutationBatch to the specified document\n     * to create a new remote document\n     *\n     * @param docKey The key of the document to apply mutations to.\n     * @param maybeDoc The document to apply mutations to.\n     * @param batchResult The result of applying the MutationBatch to the\n     * backend.\n     */\n    MutationBatch.prototype.applyToRemoteDocument = function (docKey, maybeDoc, batchResult) {\n        if (maybeDoc) {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(maybeDoc.key.isEqual(docKey), \"applyToRemoteDocument: key \" + docKey + \" should match maybeDoc key\\n        \" + maybeDoc.key);\n        }\n        var mutationResults = batchResult.mutationResults;\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(mutationResults.length === this.mutations.length, \"Mismatch between mutations length\\n      (\" + this.mutations.length + \") and mutation results length\\n      (\" + mutationResults.length + \").\");\n        for (var i = 0; i < this.mutations.length; i++) {\n            var mutation = this.mutations[i];\n            if (mutation.key.isEqual(docKey)) {\n                var mutationResult = mutationResults[i];\n                maybeDoc = mutation.applyToRemoteDocument(maybeDoc, mutationResult);\n            }\n        }\n        return maybeDoc;\n    };\n    /**\n     * Computes the local view of a document given all the mutations in this\n     * batch.\n     *\n     * @param docKey The key of the document to apply mutations to.\n     * @param maybeDoc The document to apply mutations to.\n     */\n    MutationBatch.prototype.applyToLocalView = function (docKey, maybeDoc) {\n        if (maybeDoc) {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(maybeDoc.key.isEqual(docKey), \"applyToLocalDocument: key \" + docKey + \" should match maybeDoc key\\n        \" + maybeDoc.key);\n        }\n        var baseDoc = maybeDoc;\n        for (var i = 0; i < this.mutations.length; i++) {\n            var mutation = this.mutations[i];\n            if (mutation.key.isEqual(docKey)) {\n                maybeDoc = mutation.applyToLocalView(maybeDoc, baseDoc, this.localWriteTime);\n            }\n        }\n        return maybeDoc;\n    };\n    MutationBatch.prototype.keys = function () {\n        var keySet = Object(__WEBPACK_IMPORTED_MODULE_0__collections__[\"a\" /* documentKeySet */])();\n        for (var _i = 0, _a = this.mutations; _i < _a.length; _i++) {\n            var mutation = _a[_i];\n            keySet = keySet.add(mutation.key);\n        }\n        return keySet;\n    };\n    MutationBatch.prototype.isEqual = function (other) {\n        return (this.batchId === other.batchId &&\n            __WEBPACK_IMPORTED_MODULE_2__util_misc__[\"b\" /* arrayEquals */](this.mutations, other.mutations));\n    };\n    /**\n     * Returns true if this mutation batch has already been removed from the\n     * mutation queue.\n     *\n     * Note that not all implementations of the MutationQueue necessarily use\n     * tombstones as part of their implementation and generally speaking no code\n     * outside the mutation queues should really care about this.\n     */\n    MutationBatch.prototype.isTombstone = function () {\n        return this.mutations.length === 0;\n    };\n    /** Converts this batch into a tombstone */\n    MutationBatch.prototype.toTombstone = function () {\n        return new MutationBatch(this.batchId, this.localWriteTime, []);\n    };\n    return MutationBatch;\n}());\n\n/** The result of applying a mutation batch to the backend. */\nvar MutationBatchResult = /** @class */ (function () {\n    function MutationBatchResult(batch, commitVersion, mutationResults, streamToken, \n        /**\n         * A pre-computed mapping from each mutated document to the resulting\n         * version.\n         */\n        docVersions) {\n        this.batch = batch;\n        this.commitVersion = commitVersion;\n        this.mutationResults = mutationResults;\n        this.streamToken = streamToken;\n        this.docVersions = docVersions;\n    }\n    /**\n     * Creates a new MutationBatchResult for the given batch and results. There\n     * must be one result for each mutation in the batch. This static factory\n     * caches a document=>version mapping (docVersions).\n     */\n    MutationBatchResult.from = function (batch, commitVersion, results, streamToken) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(batch.mutations.length === results.length, 'Mutations sent ' +\n            batch.mutations.length +\n            ' must equal results received ' +\n            results.length);\n        var versionMap = Object(__WEBPACK_IMPORTED_MODULE_0__collections__[\"c\" /* documentVersionMap */])();\n        var mutations = batch.mutations;\n        for (var i = 0; i < mutations.length; i++) {\n            var version = results[i].version;\n            if (version === null) {\n                // deletes don't have a version, so we substitute the commitVersion\n                // of the entire batch.\n                version = commitVersion;\n            }\n            versionMap = versionMap.insert(mutations[i].key, version);\n        }\n        return new MutationBatchResult(batch, commitVersion, results, streamToken, versionMap);\n    };\n    return MutationBatchResult;\n}());\n\n\n//# sourceMappingURL=mutation_batch.js.map\n\n\n/***/ }),\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(174);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return FieldMask; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return ServerTimestampTransform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return FieldTransform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return MutationResult; });\n/* unused harmony export MutationType */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return Precondition; });\n/* unused harmony export Mutation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return SetMutation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return PatchMutation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return TransformMutation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DeleteMutation; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__field_value__ = __webpack_require__(136);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nvar FieldMask = /** @class */ (function () {\n    function FieldMask(fields) {\n        this.fields = fields;\n        // TODO(dimond): validation of FieldMask\n    }\n    FieldMask.prototype.isEqual = function (other) {\n        return __WEBPACK_IMPORTED_MODULE_2__util_misc__[\"b\" /* arrayEquals */](this.fields, other.fields);\n    };\n    return FieldMask;\n}());\n\n/** Transforms a value into a server-generated timestamp. */\nvar ServerTimestampTransform = /** @class */ (function () {\n    function ServerTimestampTransform() {\n    }\n    ServerTimestampTransform.prototype.isEqual = function (other) {\n        return other instanceof ServerTimestampTransform;\n    };\n    ServerTimestampTransform.instance = new ServerTimestampTransform();\n    return ServerTimestampTransform;\n}());\n\n/** A field path and the TransformOperation to perform upon it. */\nvar FieldTransform = /** @class */ (function () {\n    function FieldTransform(field, transform) {\n        this.field = field;\n        this.transform = transform;\n    }\n    FieldTransform.prototype.isEqual = function (other) {\n        return (this.field.isEqual(other.field) && this.transform.isEqual(other.transform));\n    };\n    return FieldTransform;\n}());\n\n/** The result of successfully applying a mutation to the backend. */\nvar MutationResult = /** @class */ (function () {\n    function MutationResult(\n        /**\n         * The version at which the mutation was committed or null for a delete.\n         */\n        version, \n        /**\n         * The resulting fields returned from the backend after a\n         * TransformMutation has been committed. Contains one FieldValue for each\n         * FieldTransform that was in the mutation.\n         *\n         * Will be null if the mutation was not a TransformMutation.\n         */\n        transformResults) {\n        this.version = version;\n        this.transformResults = transformResults;\n    }\n    return MutationResult;\n}());\n\nvar MutationType;\n(function (MutationType) {\n    MutationType[MutationType[\"Set\"] = 0] = \"Set\";\n    MutationType[MutationType[\"Patch\"] = 1] = \"Patch\";\n    MutationType[MutationType[\"Transform\"] = 2] = \"Transform\";\n    MutationType[MutationType[\"Delete\"] = 3] = \"Delete\";\n})(MutationType || (MutationType = {}));\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nvar Precondition = /** @class */ (function () {\n    function Precondition(updateTime, exists) {\n        this.updateTime = updateTime;\n        this.exists = exists;\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(updateTime === undefined || exists === undefined, 'Precondition can specify \"exists\" or \"updateTime\" but not both');\n    }\n    /** Creates a new Precondition with an exists flag. */\n    Precondition.exists = function (exists) {\n        return new Precondition(undefined, exists);\n    };\n    /** Creates a new Precondition based on a version a document exists at. */\n    Precondition.updateTime = function (version) {\n        return new Precondition(version);\n    };\n    Object.defineProperty(Precondition.prototype, \"isNone\", {\n        /** Returns whether this Precondition is empty. */\n        get: function () {\n            return this.updateTime === undefined && this.exists === undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns true if the preconditions is valid for the given document\n     * (or null if no document is available).\n     */\n    Precondition.prototype.isValidFor = function (maybeDoc) {\n        if (this.updateTime !== undefined) {\n            return (maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */] &&\n                maybeDoc.version.isEqual(this.updateTime));\n        }\n        else if (this.exists !== undefined) {\n            if (this.exists) {\n                return maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */];\n            }\n            else {\n                return maybeDoc === null || maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_3__document__[\"b\" /* NoDocument */];\n            }\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(this.isNone, 'Precondition should be empty');\n            return true;\n        }\n    };\n    Precondition.prototype.isEqual = function (other) {\n        return (__WEBPACK_IMPORTED_MODULE_2__util_misc__[\"c\" /* equals */](this.updateTime, other.updateTime) &&\n            this.exists === other.exists);\n    };\n    Precondition.NONE = new Precondition();\n    return Precondition;\n}());\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also it version.\n * In the case of Set, Patch, and Transform mutations we preserve the existing\n * version. In the case of Delete mutations, we reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        null                  Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      null                  null\n * TransformMutation  Document(v3)          Document(v3)\n * TransformMutation  NoDocument(v3)        NoDocument(v3)\n * TransformMutation  null                  null\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     null                  NoDocument(v0)\n *\n * Note that TransformMutations don't create Documents (in the case of being\n * applied to a NoDocument), even though they would on the backend. This is\n * because the client always combines the TransformMutation with a SetMutation\n * or PatchMutation and we only want to apply the transform if the prior\n * mutation resulted in a Document (always true for a SetMutation, but not\n * necessarily for a PatchMutation).\n *\n * ## Subclassing Notes\n *\n * Subclasses of Mutation need to implement applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document.\n */\nvar Mutation = /** @class */ (function () {\n    function Mutation() {\n    }\n    Mutation.prototype.verifyKeyMatches = function (maybeDoc) {\n        if (maybeDoc != null) {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(maybeDoc.key.isEqual(this.key), 'Can only apply a mutation to a document with the same key');\n        }\n    };\n    /**\n     * Returns the version from the given document for use as the result of a\n     * mutation. Mutations are defined to return the version of the base document\n     * only if it is an existing document. Deleted and unknown documents have a\n     * post-mutation version of SnapshotVersion.MIN.\n     */\n    Mutation.getPostMutationVersion = function (maybeDoc) {\n        if (maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */]) {\n            return maybeDoc.version;\n        }\n        else {\n            return __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN;\n        }\n    };\n    return Mutation;\n}());\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nvar SetMutation = /** @class */ (function (_super) {\n    __extends(SetMutation, _super);\n    function SetMutation(key, value, precondition) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.value = value;\n        _this.precondition = precondition;\n        _this.type = MutationType.Set;\n        return _this;\n    }\n    SetMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n        this.verifyKeyMatches(maybeDoc);\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(mutationResult.transformResults == null, 'Transform results received by SetMutation.');\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\n        // document the server has accepted the mutation so the precondition must\n        // have held.\n        var version = Mutation.getPostMutationVersion(maybeDoc);\n        return new __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */](this.key, version, this.value, {\n            hasLocalMutations: false\n        });\n    };\n    SetMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n        this.verifyKeyMatches(maybeDoc);\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var version = Mutation.getPostMutationVersion(maybeDoc);\n        return new __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */](this.key, version, this.value, {\n            hasLocalMutations: true\n        });\n    };\n    SetMutation.prototype.isEqual = function (other) {\n        return (other instanceof SetMutation &&\n            this.key.isEqual(other.key) &&\n            this.value.isEqual(other.value) &&\n            this.precondition.isEqual(other.precondition));\n    };\n    return SetMutation;\n}(Mutation));\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nvar PatchMutation = /** @class */ (function (_super) {\n    __extends(PatchMutation, _super);\n    function PatchMutation(key, data, fieldMask, precondition) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.data = data;\n        _this.fieldMask = fieldMask;\n        _this.precondition = precondition;\n        _this.type = MutationType.Patch;\n        return _this;\n    }\n    PatchMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n        this.verifyKeyMatches(maybeDoc);\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(mutationResult.transformResults == null, 'Transform results received by PatchMutation.');\n        // TODO(mcg): Relax enforcement of this precondition\n        //\n        // We shouldn't actually enforce the precondition since it already passed on\n        // the backend, but we may not have a local version of the document to\n        // patch, so we use the precondition to prevent incorrectly putting a\n        // partial document into our cache.\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var version = Mutation.getPostMutationVersion(maybeDoc);\n        var newData = this.patchDocument(maybeDoc);\n        return new __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */](this.key, version, newData, {\n            hasLocalMutations: false\n        });\n    };\n    PatchMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n        this.verifyKeyMatches(maybeDoc);\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var version = Mutation.getPostMutationVersion(maybeDoc);\n        var newData = this.patchDocument(maybeDoc);\n        return new __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */](this.key, version, newData, {\n            hasLocalMutations: true\n        });\n    };\n    PatchMutation.prototype.isEqual = function (other) {\n        return (other instanceof PatchMutation &&\n            this.key.isEqual(other.key) &&\n            this.fieldMask.isEqual(other.fieldMask) &&\n            this.precondition.isEqual(other.precondition));\n    };\n    /**\n     * Patches the data of document if available or creates a new document. Note\n     * that this does not check whether or not the precondition of this patch\n     * holds.\n     */\n    PatchMutation.prototype.patchDocument = function (maybeDoc) {\n        var data;\n        if (maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */]) {\n            data = maybeDoc.data;\n        }\n        else {\n            data = __WEBPACK_IMPORTED_MODULE_4__field_value__[\"i\" /* ObjectValue */].EMPTY;\n        }\n        return this.patchObject(data);\n    };\n    PatchMutation.prototype.patchObject = function (data) {\n        for (var _i = 0, _a = this.fieldMask.fields; _i < _a.length; _i++) {\n            var fieldPath = _a[_i];\n            var newValue = this.data.field(fieldPath);\n            if (newValue !== undefined) {\n                data = data.set(fieldPath, newValue);\n            }\n            else {\n                data = data.delete(fieldPath);\n            }\n        }\n        return data;\n    };\n    return PatchMutation;\n}(Mutation));\n\n/**\n * A mutation that modifies specific fields of the document with transform\n * operations. Currently the only supported transform is a server timestamp, but\n * IP Address, increment(n), etc. could be supported in the future.\n *\n * It is somewhat similar to a PatchMutation in that it patches specific fields\n * and has no effect when applied to a null or NoDocument (see comment on\n * Mutation for rationale).\n */\nvar TransformMutation = /** @class */ (function (_super) {\n    __extends(TransformMutation, _super);\n    function TransformMutation(key, fieldTransforms) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.fieldTransforms = fieldTransforms;\n        _this.type = MutationType.Transform;\n        // NOTE: We set a precondition of exists: true as a safety-check, since we\n        // always combine TransformMutations with a SetMutation or PatchMutation which\n        // (if successful) should end up with an existing document.\n        _this.precondition = Precondition.exists(true);\n        return _this;\n    }\n    TransformMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n        this.verifyKeyMatches(maybeDoc);\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(mutationResult.transformResults != null, 'Transform results missing for TransformMutation.');\n        var transformResults = mutationResult.transformResults;\n        // TODO(mcg): Relax enforcement of this precondition\n        //\n        // We shouldn't actually enforce the precondition since it already passed on\n        // the backend, but we may not have a local version of the document to\n        // patch, so we use the precondition to prevent incorrectly putting a\n        // partial document into our cache.\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var doc = this.requireDocument(maybeDoc);\n        var newData = this.transformObject(doc.data, transformResults);\n        return new __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */](this.key, doc.version, newData, {\n            hasLocalMutations: false\n        });\n    };\n    TransformMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n        this.verifyKeyMatches(maybeDoc);\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var doc = this.requireDocument(maybeDoc);\n        var transformResults = this.localTransformResults(localWriteTime, baseDoc);\n        var newData = this.transformObject(doc.data, transformResults);\n        return new __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */](this.key, doc.version, newData, {\n            hasLocalMutations: true\n        });\n    };\n    TransformMutation.prototype.isEqual = function (other) {\n        return (other instanceof TransformMutation &&\n            this.key.isEqual(other.key) &&\n            __WEBPACK_IMPORTED_MODULE_2__util_misc__[\"b\" /* arrayEquals */](this.fieldTransforms, other.fieldTransforms) &&\n            this.precondition.isEqual(other.precondition));\n    };\n    /**\n     * Asserts that the given MaybeDocument is actually a Document and verifies\n     * that it matches the key for this mutation. Since we only support\n     * transformations with precondition exists this method is guaranteed to be\n     * safe.\n     */\n    TransformMutation.prototype.requireDocument = function (maybeDoc) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */], 'Unknown MaybeDocument type ' + maybeDoc);\n        var doc = maybeDoc;\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(doc.key.isEqual(this.key), 'Can only transform a document with the same key');\n        return doc;\n    };\n    /**\n     * Creates a list of \"transform results\" (a transform result is a field value\n     * representing the result of applying a transform) for use when applying a\n     * TransformMutation locally.\n     *\n     * @param localWriteTime The local time of the transform mutation (used to\n     *     generate ServerTimestampValues).\n     * @param baseDoc The document prior to applying this mutation batch.\n     * @return The transform results list.\n     */\n    TransformMutation.prototype.localTransformResults = function (localWriteTime, baseDoc) {\n        var transformResults = [];\n        for (var _i = 0, _a = this.fieldTransforms; _i < _a.length; _i++) {\n            var fieldTransform = _a[_i];\n            var transform = fieldTransform.transform;\n            if (transform instanceof ServerTimestampTransform) {\n                var previousValue = null;\n                if (baseDoc instanceof __WEBPACK_IMPORTED_MODULE_3__document__[\"a\" /* Document */]) {\n                    previousValue = baseDoc.field(fieldTransform.field) || null;\n                }\n                transformResults.push(new __WEBPACK_IMPORTED_MODULE_4__field_value__[\"k\" /* ServerTimestampValue */](localWriteTime, previousValue));\n            }\n            else {\n                return Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('Encountered unknown transform: ' + transform);\n            }\n        }\n        return transformResults;\n    };\n    TransformMutation.prototype.transformObject = function (data, transformResults) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(transformResults.length === this.fieldTransforms.length, 'TransformResults length mismatch.');\n        for (var i = 0; i < this.fieldTransforms.length; i++) {\n            var fieldTransform = this.fieldTransforms[i];\n            var transform = fieldTransform.transform;\n            var fieldPath = fieldTransform.field;\n            if (transform instanceof ServerTimestampTransform) {\n                data = data.set(fieldPath, transformResults[i]);\n            }\n            else {\n                return Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('Encountered unknown transform: ' + transform);\n            }\n        }\n        return data;\n    };\n    return TransformMutation;\n}(Mutation));\n\n/** A mutation that deletes the document at the given key. */\nvar DeleteMutation = /** @class */ (function (_super) {\n    __extends(DeleteMutation, _super);\n    function DeleteMutation(key, precondition) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.precondition = precondition;\n        _this.type = MutationType.Delete;\n        return _this;\n    }\n    DeleteMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n        this.verifyKeyMatches(maybeDoc);\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(mutationResult.transformResults == null, 'Transform results received by DeleteMutation.');\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\n        // document the server has accepted the mutation so the precondition must\n        // have held.\n        return new __WEBPACK_IMPORTED_MODULE_3__document__[\"b\" /* NoDocument */](this.key, __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN);\n    };\n    DeleteMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n        this.verifyKeyMatches(maybeDoc);\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        if (maybeDoc) {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(maybeDoc.key.isEqual(this.key), 'Can only apply mutation to document with same key');\n        }\n        return new __WEBPACK_IMPORTED_MODULE_3__document__[\"b\" /* NoDocument */](this.key, __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].forDeletedDoc());\n    };\n    DeleteMutation.prototype.isEqual = function (other) {\n        return (other instanceof DeleteMutation &&\n            this.key.isEqual(other.key) &&\n            this.precondition.isEqual(other.precondition));\n    };\n    return DeleteMutation;\n}(Mutation));\n\n\n//# sourceMappingURL=mutation.js.map\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SortedSet; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sorted_map__ = __webpack_require__(134);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nvar SortedSet = /** @class */ (function () {\n    function SortedSet(comparator) {\n        this.comparator = comparator;\n        this.data = new __WEBPACK_IMPORTED_MODULE_0__sorted_map__[\"a\" /* SortedMap */](this.comparator);\n    }\n    /**\n     * Creates a SortedSet from the keys of the map.\n     * This is currently implemented as an O(n) copy.\n     */\n    SortedSet.fromMapKeys = function (map) {\n        var keys = new SortedSet(map.comparator);\n        map.forEach(function (key) {\n            keys = keys.add(key);\n        });\n        return keys;\n    };\n    SortedSet.prototype.has = function (elem) {\n        return this.data.get(elem) !== null;\n    };\n    SortedSet.prototype.first = function () {\n        return this.data.minKey();\n    };\n    SortedSet.prototype.last = function () {\n        return this.data.maxKey();\n    };\n    Object.defineProperty(SortedSet.prototype, \"size\", {\n        get: function () {\n            return this.data.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SortedSet.prototype.indexOf = function (elem) {\n        return this.data.indexOf(elem);\n    };\n    /** Iterates elements in order defined by \"comparator\" */\n    SortedSet.prototype.forEach = function (cb) {\n        this.data.inorderTraversal(function (k, v) {\n            cb(k);\n            return false;\n        });\n    };\n    /** Iterates over `elem`s such that: range[0] <= elem < range[1]. */\n    SortedSet.prototype.forEachInRange = function (range, cb) {\n        var iter = this.data.getIteratorFrom(range[0]);\n        while (iter.hasNext()) {\n            var elem = iter.getNext();\n            if (this.comparator(elem.key, range[1]) >= 0)\n                return;\n            cb(elem.key);\n        }\n    };\n    /**\n     * Iterates over `elem`s such that: start <= elem until false is returned.\n     */\n    SortedSet.prototype.forEachWhile = function (cb, start) {\n        var iter;\n        if (start !== undefined) {\n            iter = this.data.getIteratorFrom(start);\n        }\n        else {\n            iter = this.data.getIterator();\n        }\n        while (iter.hasNext()) {\n            var elem = iter.getNext();\n            var result = cb(elem.key);\n            if (!result)\n                return;\n        }\n    };\n    /** Finds the least element greater than or equal to `elem`. */\n    SortedSet.prototype.firstAfterOrEqual = function (elem) {\n        var iter = this.data.getIteratorFrom(elem);\n        return iter.hasNext() ? iter.getNext().key : null;\n    };\n    /** Inserts or updates an element */\n    SortedSet.prototype.add = function (elem) {\n        return this.copy(this.data.remove(elem).insert(elem, true));\n    };\n    /** Deletes an element */\n    SortedSet.prototype.delete = function (elem) {\n        if (!this.has(elem))\n            return this;\n        return this.copy(this.data.remove(elem));\n    };\n    SortedSet.prototype.isEmpty = function () {\n        return this.data.isEmpty();\n    };\n    SortedSet.prototype.unionWith = function (other) {\n        var result = this;\n        other.forEach(function (elem) {\n            result = result.add(elem);\n        });\n        return result;\n    };\n    SortedSet.prototype.isEqual = function (other) {\n        if (!(other instanceof SortedSet))\n            return false;\n        if (this.size !== other.size)\n            return false;\n        var thisIt = this.data.getIterator();\n        var otherIt = other.data.getIterator();\n        while (thisIt.hasNext()) {\n            var thisElem = thisIt.getNext().key;\n            var otherElem = otherIt.getNext().key;\n            if (this.comparator(thisElem, otherElem) !== 0)\n                return false;\n        }\n        return true;\n    };\n    SortedSet.prototype.toString = function () {\n        var result = [];\n        this.forEach(function (elem) { return result.push(elem); });\n        return 'SortedSet(' + result.toString() + ')';\n    };\n    SortedSet.prototype.copy = function (data) {\n        var result = new SortedSet(this.comparator);\n        result.data = data;\n        return result;\n    };\n    return SortedSet;\n}());\n\n\n//# sourceMappingURL=sorted_set.js.map\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ChangeType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return SyncState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DocumentChangeSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return ViewSnapshot; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_sorted_map__ = __webpack_require__(134);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar ChangeType;\n(function (ChangeType) {\n    ChangeType[ChangeType[\"Added\"] = 0] = \"Added\";\n    ChangeType[ChangeType[\"Removed\"] = 1] = \"Removed\";\n    ChangeType[ChangeType[\"Modified\"] = 2] = \"Modified\";\n    ChangeType[ChangeType[\"Metadata\"] = 3] = \"Metadata\";\n})(ChangeType || (ChangeType = {}));\nvar SyncState;\n(function (SyncState) {\n    SyncState[SyncState[\"Local\"] = 0] = \"Local\";\n    SyncState[SyncState[\"Synced\"] = 1] = \"Synced\";\n})(SyncState || (SyncState = {}));\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */\nvar DocumentChangeSet = /** @class */ (function () {\n    function DocumentChangeSet() {\n        this.changeMap = new __WEBPACK_IMPORTED_MODULE_2__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_0__model_document_key__[\"a\" /* DocumentKey */].comparator);\n    }\n    DocumentChangeSet.prototype.track = function (change) {\n        var key = change.doc.key;\n        var oldChange = this.changeMap.get(key);\n        if (!oldChange) {\n            this.changeMap = this.changeMap.insert(key, change);\n            return;\n        }\n        // Merge the new change with the existing change.\n        if (change.type !== ChangeType.Added &&\n            oldChange.type === ChangeType.Metadata) {\n            this.changeMap = this.changeMap.insert(key, change);\n        }\n        else if (change.type === ChangeType.Metadata &&\n            oldChange.type !== ChangeType.Removed) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: oldChange.type,\n                doc: change.doc\n            });\n        }\n        else if (change.type === ChangeType.Modified &&\n            oldChange.type === ChangeType.Modified) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: ChangeType.Modified,\n                doc: change.doc\n            });\n        }\n        else if (change.type === ChangeType.Modified &&\n            oldChange.type === ChangeType.Added) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: ChangeType.Added,\n                doc: change.doc\n            });\n        }\n        else if (change.type === ChangeType.Removed &&\n            oldChange.type === ChangeType.Added) {\n            this.changeMap = this.changeMap.remove(key);\n        }\n        else if (change.type === ChangeType.Removed &&\n            oldChange.type === ChangeType.Modified) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: ChangeType.Removed,\n                doc: oldChange.doc\n            });\n        }\n        else if (change.type === ChangeType.Added &&\n            oldChange.type === ChangeType.Removed) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: ChangeType.Modified,\n                doc: change.doc\n            });\n        }\n        else {\n            // This includes these cases, which don't make sense:\n            // Added->Added\n            // Removed->Removed\n            // Modified->Added\n            // Removed->Modified\n            // Metadata->Added\n            // Removed->Metadata\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('unsupported combination of changes: ' +\n                JSON.stringify(change) +\n                ' after ' +\n                JSON.stringify(oldChange));\n        }\n    };\n    DocumentChangeSet.prototype.getChanges = function () {\n        var changes = [];\n        this.changeMap.inorderTraversal(function (key, change) {\n            changes.push(change);\n        });\n        return changes;\n    };\n    return DocumentChangeSet;\n}());\n\nvar ViewSnapshot = /** @class */ (function () {\n    function ViewSnapshot(query, docs, oldDocs, docChanges, fromCache, hasPendingWrites, syncStateChanged) {\n        this.query = query;\n        this.docs = docs;\n        this.oldDocs = oldDocs;\n        this.docChanges = docChanges;\n        this.fromCache = fromCache;\n        this.hasPendingWrites = hasPendingWrites;\n        this.syncStateChanged = syncStateChanged;\n    }\n    ViewSnapshot.prototype.isEqual = function (other) {\n        if (this.fromCache !== other.fromCache ||\n            this.hasPendingWrites !== other.hasPendingWrites ||\n            this.syncStateChanged !== other.syncStateChanged ||\n            !this.query.isEqual(other.query) ||\n            !this.docs.isEqual(other.docs) ||\n            !this.oldDocs.isEqual(other.oldDocs)) {\n            return false;\n        }\n        var changes = this.docChanges;\n        var otherChanges = other.docChanges;\n        if (changes.length !== otherChanges.length) {\n            return false;\n        }\n        for (var i = 0; i < changes.length; i++) {\n            if (changes[i].type !== otherChanges[i].type ||\n                !changes[i].doc.isEqual(otherChanges[i].doc)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ViewSnapshot;\n}());\n\n\n//# sourceMappingURL=view_snapshot.js.map\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ReferenceSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DocReference; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_sorted_set__ = __webpack_require__(164);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__persistence_promise__ = __webpack_require__(124);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */\nvar ReferenceSet = /** @class */ (function () {\n    function ReferenceSet() {\n        // A set of outstanding references to a document sorted by key.\n        this.refsByKey = new __WEBPACK_IMPORTED_MODULE_3__util_sorted_set__[\"a\" /* SortedSet */](DocReference.compareByKey);\n        // A set of outstanding references to a document sorted by target id.\n        this.refsByTarget = new __WEBPACK_IMPORTED_MODULE_3__util_sorted_set__[\"a\" /* SortedSet */](DocReference.compareByTargetId);\n        /** Keeps track of keys that have references */\n        this.garbageCollector = null;\n    }\n    /** Returns true if the reference set contains no references. */\n    ReferenceSet.prototype.isEmpty = function () {\n        return this.refsByKey.isEmpty();\n    };\n    /** Adds a reference to the given document key for the given ID. */\n    ReferenceSet.prototype.addReference = function (key, id) {\n        var ref = new DocReference(key, id);\n        this.refsByKey = this.refsByKey.add(ref);\n        this.refsByTarget = this.refsByTarget.add(ref);\n    };\n    /** Add references to the given document keys for the given ID. */\n    ReferenceSet.prototype.addReferences = function (keys, id) {\n        var _this = this;\n        keys.forEach(function (key) { return _this.addReference(key, id); });\n    };\n    /**\n     * Removes a reference to the given document key for the given\n     * ID.\n     */\n    ReferenceSet.prototype.removeReference = function (key, id) {\n        this.removeRef(new DocReference(key, id));\n    };\n    ReferenceSet.prototype.removeReferences = function (keys, id) {\n        var _this = this;\n        keys.forEach(function (key) { return _this.removeReference(key, id); });\n    };\n    /**\n     * Clears all references with a given ID. Calls removeRef() for each key\n     * removed.\n     */\n    ReferenceSet.prototype.removeReferencesForId = function (id) {\n        var _this = this;\n        var emptyKey = __WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].EMPTY;\n        var startRef = new DocReference(emptyKey, id);\n        var endRef = new DocReference(emptyKey, id + 1);\n        this.refsByTarget.forEachInRange([startRef, endRef], function (ref) {\n            _this.removeRef(ref);\n        });\n    };\n    ReferenceSet.prototype.removeAllReferences = function () {\n        var _this = this;\n        this.refsByKey.forEach(function (ref) { return _this.removeRef(ref); });\n    };\n    ReferenceSet.prototype.removeRef = function (ref) {\n        this.refsByKey = this.refsByKey.delete(ref);\n        this.refsByTarget = this.refsByTarget.delete(ref);\n        if (this.garbageCollector !== null) {\n            this.garbageCollector.addPotentialGarbageKey(ref.key);\n        }\n    };\n    ReferenceSet.prototype.referencesForId = function (id) {\n        var emptyKey = __WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].EMPTY;\n        var startRef = new DocReference(emptyKey, id);\n        var endRef = new DocReference(emptyKey, id + 1);\n        var keys = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"a\" /* documentKeySet */])();\n        this.refsByTarget.forEachInRange([startRef, endRef], function (ref) {\n            keys = keys.add(ref.key);\n        });\n        return keys;\n    };\n    ReferenceSet.prototype.setGarbageCollector = function (garbageCollector) {\n        this.garbageCollector = garbageCollector;\n    };\n    ReferenceSet.prototype.containsKey = function (txn, key) {\n        var ref = new DocReference(key, 0);\n        var firstRef = this.refsByKey.firstAfterOrEqual(ref);\n        return __WEBPACK_IMPORTED_MODULE_4__persistence_promise__[\"a\" /* PersistencePromise */].resolve(firstRef !== null && key.isEqual(firstRef.key));\n    };\n    return ReferenceSet;\n}());\n\nvar DocReference = /** @class */ (function () {\n    function DocReference(key, targetOrBatchId) {\n        this.key = key;\n        this.targetOrBatchId = targetOrBatchId;\n    }\n    /** Compare by key then by ID */\n    DocReference.compareByKey = function (left, right) {\n        return (__WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].comparator(left.key, right.key) ||\n            Object(__WEBPACK_IMPORTED_MODULE_2__util_misc__[\"f\" /* primitiveComparator */])(left.targetOrBatchId, right.targetOrBatchId));\n    };\n    /** Compare by ID then by key */\n    DocReference.compareByTargetId = function (left, right) {\n        return (Object(__WEBPACK_IMPORTED_MODULE_2__util_misc__[\"f\" /* primitiveComparator */])(left.targetOrBatchId, right.targetOrBatchId) ||\n            __WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].comparator(left.key, right.key));\n    };\n    return DocReference;\n}());\n\n\n//# sourceMappingURL=reference_set.js.map\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SimpleDb; });\n/* unused harmony export IterationController */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return SimpleDbTransaction; });\n/* unused harmony export SimpleDbStore */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__persistence_promise__ = __webpack_require__(124);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar LOG_TAG = 'SimpleDb';\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */\nvar SimpleDb = /** @class */ (function () {\n    function SimpleDb(db) {\n        this.db = db;\n    }\n    /** Opens the specified database, creating or upgrading it if necessary. */\n    SimpleDb.openOrCreate = function (name, version, runUpgrade) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(SimpleDb.isAvailable(), 'IndexedDB not supported in current environment.');\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'Opening database:', name);\n        return new __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */](function (resolve, reject) {\n            // TODO(mikelehen): Investigate browser compatibility.\n            // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n            // suggests IE9 and older WebKit browsers handle upgrade\n            // differently.\n            var request = window.indexedDB.open(name, version);\n            request.onsuccess = function (event) {\n                var db = event.target.result;\n                resolve(new SimpleDb(db));\n            };\n            request.onerror = function (event) {\n                reject(event.target.error);\n            };\n            request.onupgradeneeded = function (event) {\n                Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'Database \"' + name + '\" requires upgrade from version:', event.oldVersion);\n                // TODO(mikelehen): If/when we need to do an actual data\n                // migration, we'll want to wrap db in a SimpleDb and have the\n                // runUpgrade function return a PersistencePromise, since we'll\n                // likely need to do async reads and writes. For now we're\n                // cheating and just passing the raw IndexedDB in, since\n                // createObjectStore(), etc. are synchronous.\n                var db = event.target.result;\n                runUpgrade(db, event.oldVersion);\n            };\n        }).toPromise();\n    };\n    /** Deletes the specified database. */\n    SimpleDb.delete = function (name) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'Removing database:', name);\n        return wrapRequest(window.indexedDB.deleteDatabase(name)).toPromise();\n    };\n    /** Returns true if IndexedDB is available in the current environment. */\n    SimpleDb.isAvailable = function () {\n        if (typeof window === 'undefined' || window.indexedDB == null) {\n            return false;\n        }\n        // We extensively use indexed array values and compound keys,\n        // which IE and Edge do not support. However, they still have indexedDB\n        // defined on the window, so we need to check for them here and make sure\n        // to return that persistence is not enabled for those browsers.\n        // For tracking support of this feature, see here:\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n        // Check the UA string to find out the browser.\n        var ua = window.navigator.userAgent;\n        // IE 10\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n        // IE 11\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n        // Edge\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n        if (ua.indexOf('MSIE ') > 0 ||\n            ua.indexOf('Trident/') > 0 ||\n            ua.indexOf('Edge/') > 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    SimpleDb.prototype.runTransaction = function (mode, objectStores, transactionFn) {\n        var transaction = new SimpleDbTransaction(this.db, mode, objectStores);\n        var transactionFnResult = transactionFn(transaction)\n            .catch(function (error) {\n            // Abort the transaction if there was an\n            // error.\n            transaction.abort();\n            return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].reject(error);\n        })\n            .toPromise();\n        // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n        // fire), but still return the original transactionFnResult back to the\n        // caller.\n        return transaction.completionPromise.then(function () { return transactionFnResult; });\n    };\n    SimpleDb.prototype.close = function () {\n        this.db.close();\n    };\n    return SimpleDb;\n}());\n\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */\nvar IterationController = /** @class */ (function () {\n    function IterationController(dbCursor) {\n        this.dbCursor = dbCursor;\n        this.shouldStop = false;\n        this.nextKey = null;\n    }\n    Object.defineProperty(IterationController.prototype, \"isDone\", {\n        get: function () {\n            return this.shouldStop;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IterationController.prototype, \"skipToKey\", {\n        get: function () {\n            return this.nextKey;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IterationController.prototype, \"cursor\", {\n        set: function (value) {\n            this.dbCursor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This function can be called to stop iteration at any point.\n     */\n    IterationController.prototype.done = function () {\n        this.shouldStop = true;\n    };\n    /**\n     * This function can be called to skip to that next key, which could be\n     * an index or a primary key.\n     */\n    IterationController.prototype.skip = function (key) {\n        this.nextKey = key;\n    };\n    /**\n     * Delete the current cursor value from the object store.\n     *\n     * NOTE: You CANNOT do this with a keysOnly query.\n     */\n    IterationController.prototype.delete = function () {\n        return wrapRequest(this.dbCursor.delete());\n    };\n    return IterationController;\n}());\n\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nvar SimpleDbTransaction = /** @class */ (function () {\n    function SimpleDbTransaction(db, mode, objectStoresNames) {\n        var _this = this;\n        this.aborted = false;\n        this.transaction = db.transaction(objectStoresNames, mode);\n        this.completionPromise = new Promise(function (resolve, reject) {\n            // We consider aborting to be \"normal\" and just resolve the promise.\n            // May need to revisit if/when we actually need to abort transactions.\n            _this.transaction.onabort = _this.transaction.oncomplete = function (event) {\n                resolve();\n            };\n            _this.transaction.onerror = function (event) {\n                reject(event.target.error);\n            };\n        });\n    }\n    SimpleDbTransaction.prototype.abort = function () {\n        if (!this.aborted) {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'Aborting transaction.');\n            this.aborted = true;\n            this.transaction.abort();\n        }\n    };\n    /**\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n     * operations performed on the SimpleDbStore happen within the context of this\n     * transaction and it cannot be used anymore once the transaction is\n     * completed.\n     *\n     * Note that we can't actually enforce that the KeyType and ValueType are\n     * correct, but they allow type safety through the rest of the consuming code.\n     */\n    SimpleDbTransaction.prototype.store = function (storeName) {\n        var store = this.transaction.objectStore(storeName);\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!!store, 'Object store not part of transaction: ' + storeName);\n        return new SimpleDbStore(store);\n    };\n    return SimpleDbTransaction;\n}());\n\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */\nvar SimpleDbStore = /** @class */ (function () {\n    function SimpleDbStore(store) {\n        this.store = store;\n    }\n    SimpleDbStore.prototype.put = function (keyOrValue, value) {\n        var request;\n        if (value !== undefined) {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'PUT', this.store.name, keyOrValue, value);\n            request = this.store.put(value, keyOrValue);\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'PUT', this.store.name, '<auto-key>', keyOrValue);\n            request = this.store.put(keyOrValue);\n        }\n        return wrapRequest(request);\n    };\n    /**\n     * Gets the object with the specified key from the specified store, or null\n     * if no object exists with the specified key.\n     *\n     * @key The key of the object to get.\n     * @return The object with the specified key or null if no object exists.\n     */\n    SimpleDbStore.prototype.get = function (key) {\n        var _this = this;\n        var request = this.store.get(key);\n        // tslint:disable-next-line:no-any We're doing an unsafe cast to ValueType.\n        return wrapRequest(request).next(function (result) {\n            // Normalize nonexistence to null.\n            if (result === undefined) {\n                result = null;\n            }\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'GET', _this.store.name, key, result);\n            return result;\n        });\n    };\n    SimpleDbStore.prototype.delete = function (key) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'DELETE', this.store.name, key);\n        var request = this.store.delete(key);\n        return wrapRequest(request);\n    };\n    SimpleDbStore.prototype.loadAll = function (indexOrRange, range) {\n        var cursor = this.cursor(this.options(indexOrRange, range));\n        var results = [];\n        return this.iterateCursor(cursor, function (key, value) {\n            results.push(value);\n        }).next(function () {\n            return results;\n        });\n    };\n    SimpleDbStore.prototype.deleteAll = function (indexOrRange, range) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'DELETE ALL', this.store.name);\n        var options = this.options(indexOrRange, range);\n        options.keysOnly = false;\n        var cursor = this.cursor(options);\n        return this.iterateCursor(cursor, function (key, value, control) {\n            // NOTE: Calling delete() on a cursor is documented as more efficient than\n            // calling delete() on an object store with a single key\n            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),\n            // however, this requires us *not* to use a keysOnly cursor\n            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We\n            // may want to compare the performance of each method.\n            return control.delete();\n        });\n    };\n    SimpleDbStore.prototype.iterate = function (optionsOrCallback, callback) {\n        var options;\n        if (!callback) {\n            options = {};\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        var cursor = this.cursor(options);\n        return this.iterateCursor(cursor, callback);\n    };\n    SimpleDbStore.prototype.iterateCursor = function (cursorRequest, fn) {\n        var results = [];\n        return new __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */](function (resolve, reject) {\n            cursorRequest.onerror = function (event) {\n                reject(event.target.error);\n            };\n            cursorRequest.onsuccess = function (event) {\n                var cursor = event.target.result;\n                if (!cursor) {\n                    resolve();\n                    return;\n                }\n                var controller = new IterationController(cursor);\n                var userResult = fn(cursor.primaryKey, cursor.value, controller);\n                if (userResult instanceof __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */]) {\n                    results.push(userResult);\n                }\n                if (controller.isDone) {\n                    resolve();\n                }\n                else if (controller.skipToKey === null) {\n                    cursor.continue();\n                }\n                else {\n                    cursor.continue(controller.skipToKey);\n                }\n            };\n        }).next(function () {\n            return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(results);\n        });\n    };\n    SimpleDbStore.prototype.options = function (indexOrRange, range) {\n        var indexName = undefined;\n        if (indexOrRange !== undefined) {\n            if (typeof indexOrRange === 'string') {\n                indexName = indexOrRange;\n            }\n            else {\n                Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(range === undefined, '3rd argument must not be defined if 2nd is a range.');\n                range = indexOrRange;\n            }\n        }\n        return { index: indexName, range: range };\n    };\n    SimpleDbStore.prototype.cursor = function (options) {\n        var direction = 'next';\n        if (options.reverse) {\n            direction = 'prev';\n        }\n        if (options.index) {\n            var index = this.store.index(options.index);\n            if (options.keysOnly) {\n                return index.openKeyCursor(options.range, direction);\n            }\n            else {\n                return index.openCursor(options.range, direction);\n            }\n        }\n        else {\n            return this.store.openCursor(options.range, direction);\n        }\n    };\n    return SimpleDbStore;\n}());\n\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */\nfunction wrapRequest(request) {\n    return new __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */](function (resolve, reject) {\n        request.onsuccess = function (event) {\n            var result = event.target.result;\n            resolve(result);\n        };\n        request.onerror = function (event) {\n            reject(event.target.error);\n        };\n    });\n}\n\n//# sourceMappingURL=simple_db.js.map\n\n\n/***/ }),\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17), __webpack_require__(130)))\n\n/***/ }),\n/* 175 */,\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js\n//! version : 2.20.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    } else {\n        var k;\n        for (k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n        }\n        else {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction mod(n, x) {\n    return ((n % x) + x) % x;\n}\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            var aliasedRequire = require;\n            !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n            getSetGlobalLocale(oldLocale);\n        } catch (e) {}\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, tmpLocale, parentConfig = baseConfig;\n        // MERGE\n        tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n}\n\nfunction untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n        return 2000 + year;\n    } else if (year <= 999) {\n        return 1900 + year;\n    }\n    return year;\n}\n\nfunction preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\n\nvar obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    } else {\n        var hm = parseInt(numOffset, 10);\n        var m = hm % 100, h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (match) {\n        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n        if (!checkWeekday(match[1], parsedArray, config)) {\n            return;\n        }\n\n        config._a = parsedArray;\n        config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n        config._d = createUTCDate.apply(null, config._a);\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n        case 'year': output = monthDiff(this, that) / 12; break;\n        case 'month': output = monthDiff(this, that); break;\n        case 'quarter': output = monthDiff(this, that) / 3; break;\n        case 'second': output = (this - that) / 1e3; break; // 1000\n        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n        default: output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString(keepOffset) {\n    if (!this.isValid()) {\n        return null;\n    }\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        if (utc) {\n            return this.toDate().toISOString();\n        } else {\n            return new Date(this._d.valueOf()).toISOString().replace('Z', formatMoment(m, 'Z'));\n        }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction clone$1 () {\n    return createDuration(this);\n}\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction sign(x) {\n    return ((x > 0) - (x < 0)) || +x;\n}\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n    return totalSign + 'P' +\n        (Y ? ymSign + Y + 'Y' : '') +\n        (M ? ymSign + M + 'M' : '') +\n        (D ? daysSign + D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? hmsSign + h + 'H' : '') +\n        (m ? hmsSign + m + 'M' : '') +\n        (s ? hmsSign + s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.clone          = clone$1;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.20.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding  = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\n// currently HTML5 input type only supports 24-hour formats\nhooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n    TIME: 'HH:mm',                                  // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n    MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n};\n\nreturn hooks;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(177)(module)))\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firebase\", function() { return firebase; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_firebaseApp__ = __webpack_require__(260);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar firebase = Object(__WEBPACK_IMPORTED_MODULE_0__src_firebaseApp__[\"a\" /* createFirebaseNamespace */])();\n/* harmony default export */ __webpack_exports__[\"default\"] = (firebase);\n\n\n//# sourceMappingURL=index.js.map\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\nexports.CONSTANTS = {\n    /**\n     * @define {boolean} Whether this is the client Node.js SDK.\n     */\n    NODE_CLIENT: false,\n    /**\n     * @define {boolean} Whether this is the Admin Node.js SDK.\n     */\n    NODE_ADMIN: false,\n    /**\n     * Firebase SDK Version\n     */\n    SDK_VERSION: '${JSCORE_VERSION}'\n};\n\n//# sourceMappingURL=constants.js.map\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SDK_VERSION; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app__ = __webpack_require__(178);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nvar SDK_VERSION = __WEBPACK_IMPORTED_MODULE_0__firebase_app__[\"default\"].SDK_VERSION;\n\n//# sourceMappingURL=version.js.map\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Blob; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PublicBlob; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__platform_platform__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_api__ = __webpack_require__(182);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_input_validation__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_misc__ = __webpack_require__(122);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/** Helper function to assert Uint8Array is available at runtime. */\nfunction assertUint8ArrayAvailable() {\n    if (typeof Uint8Array === 'undefined') {\n        throw new __WEBPACK_IMPORTED_MODULE_2__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_2__util_error__[\"a\" /* Code */].UNIMPLEMENTED, 'Uint8Arrays are not available in this environment.');\n    }\n}\n/** Helper function to assert Base64 functions are available at runtime. */\nfunction assertBase64Available() {\n    if (!__WEBPACK_IMPORTED_MODULE_0__platform_platform__[\"a\" /* PlatformSupport */].getPlatform().base64Available) {\n        throw new __WEBPACK_IMPORTED_MODULE_2__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_2__util_error__[\"a\" /* Code */].UNIMPLEMENTED, 'Blobs are unavailable in Firestore in this environment.');\n    }\n}\n/**\n * Immutable class holding a blob (binary data).\n * This class is directly exposed in the public API.\n *\n * Note that while you can't hide the constructor in JavaScript code, we are\n * using the hack above to make sure no-one outside this module can call it.\n */\nvar Blob = /** @class */ (function () {\n    function Blob(binaryString) {\n        assertBase64Available();\n        this._binaryString = binaryString;\n    }\n    Blob.fromBase64String = function (base64) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Blob.fromBase64String', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_input_validation__[\"c\" /* validateArgType */])('Blob.fromBase64String', 'string', 1, base64);\n        assertBase64Available();\n        try {\n            var binaryString = __WEBPACK_IMPORTED_MODULE_0__platform_platform__[\"a\" /* PlatformSupport */].getPlatform().atob(base64);\n            return new Blob(binaryString);\n        }\n        catch (e) {\n            throw new __WEBPACK_IMPORTED_MODULE_2__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_2__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Failed to construct Blob from Base64 string: ' + e);\n        }\n    };\n    Blob.fromUint8Array = function (array) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Blob.fromUint8Array', arguments, 1);\n        assertUint8ArrayAvailable();\n        if (!(array instanceof Uint8Array)) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_3__util_input_validation__[\"a\" /* invalidClassError */])('Blob.fromUint8Array', 'Uint8Array', 1, array);\n        }\n        // We can't call array.map directly because it expects the return type to\n        // be a Uint8Array, whereas we can convert it to a regular array by invoking\n        // map on the Array prototype.\n        var binaryString = Array.prototype.map\n            .call(array, function (char) {\n            return String.fromCharCode(char);\n        })\n            .join('');\n        return new Blob(binaryString);\n    };\n    Blob.prototype.toBase64 = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Blob.toBase64', arguments, 0);\n        assertBase64Available();\n        return __WEBPACK_IMPORTED_MODULE_0__platform_platform__[\"a\" /* PlatformSupport */].getPlatform().btoa(this._binaryString);\n    };\n    Blob.prototype.toUint8Array = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Blob.toUint8Array', arguments, 0);\n        assertUint8ArrayAvailable();\n        var buffer = new Uint8Array(this._binaryString.length);\n        for (var i = 0; i < this._binaryString.length; i++) {\n            buffer[i] = this._binaryString.charCodeAt(i);\n        }\n        return buffer;\n    };\n    Blob.prototype.toString = function () {\n        return 'Blob(base64: ' + this.toBase64() + ')';\n    };\n    Blob.prototype.isEqual = function (other) {\n        return this._binaryString === other._binaryString;\n    };\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n    Blob.prototype._compareTo = function (other) {\n        return Object(__WEBPACK_IMPORTED_MODULE_4__util_misc__[\"f\" /* primitiveComparator */])(this._binaryString, other._binaryString);\n    };\n    return Blob;\n}());\n\n// Public instance that disallows construction at runtime. This constructor is\n// used when exporting Blob on firebase.firestore.Blob and will be called Blob\n// publicly. Internally we still use Blob which has a type checked private\n// constructor. Note that Blob and PublicBlob can be used interchangeably in\n// instanceof checks.\n// For our internal TypeScript code PublicBlob doesn't exist as a type, and so\n// we need to use Blob as type and export it too.\n// tslint:disable-next-line:variable-name We're treating this as a class name.\nvar PublicBlob = Object(__WEBPACK_IMPORTED_MODULE_1__util_api__[\"a\" /* makeConstructorPrivate */])(Blob, 'Use Blob.fromUint8Array() or Blob.fromBase64String() instead.');\n\n//# sourceMappingURL=blob.js.map\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makeConstructorPrivate;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(118);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// We are doing some heavy reflective stuff, lots of any casting necessary\n/* tslint:disable:no-any */\n\n/**\n * Helper function to prevent instantiation through the constructor.\n *\n * This method creates a new constructor that throws when it's invoked.\n * The prototype of that constructor is then set to the prototype of the hidden\n * \"class\" to expose all the prototype methods and allow for instanceof\n * checks.\n *\n * To also make all the static methods available, all properties of the\n * original constructor are copied to the new constructor.\n */\nfunction makeConstructorPrivate(cls, optionalMessage) {\n    function PublicConstructor() {\n        var error = 'This constructor is private.';\n        if (optionalMessage) {\n            error += ' ';\n            error += optionalMessage;\n        }\n        throw new __WEBPACK_IMPORTED_MODULE_0__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* Code */].INVALID_ARGUMENT, error);\n    }\n    // Make sure instanceof checks work and all methods are exposed on the public\n    // constructor\n    PublicConstructor.prototype = cls.prototype;\n    // Copy any static methods/members\n    for (var staticProperty in cls) {\n        if (cls.hasOwnProperty(staticProperty)) {\n            PublicConstructor[staticProperty] = cls[staticProperty];\n        }\n    }\n    return PublicConstructor;\n}\n\n//# sourceMappingURL=api.js.map\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GeoPoint; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_input_validation__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_misc__ = __webpack_require__(122);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Immutable class representing a geo point as latitude-longitude pair.\n * This class is directly exposed in the public API, including its constructor.\n */\nvar GeoPoint = /** @class */ (function () {\n    function GeoPoint(latitude, longitude) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('GeoPoint', arguments, 2);\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_input_validation__[\"c\" /* validateArgType */])('GeoPoint', 'number', 1, latitude);\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_input_validation__[\"c\" /* validateArgType */])('GeoPoint', 'number', 2, longitude);\n        if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n            throw new __WEBPACK_IMPORTED_MODULE_0__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_0__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Latitude must be a number between -90 and 90, but was: ' + latitude);\n        }\n        if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n            throw new __WEBPACK_IMPORTED_MODULE_0__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_0__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Longitude must be a number between -180 and 180, but was: ' + longitude);\n        }\n        this._lat = latitude;\n        this._long = longitude;\n    }\n    Object.defineProperty(GeoPoint.prototype, \"latitude\", {\n        /**\n         * Returns the latitude of this geo point, a number between -90 and 90.\n         */\n        get: function () {\n            return this._lat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoPoint.prototype, \"longitude\", {\n        /**\n         * Returns the longitude of this geo point, a number between -180 and 180.\n         */\n        get: function () {\n            return this._long;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GeoPoint.prototype.isEqual = function (other) {\n        return this._lat === other._lat && this._long === other._long;\n    };\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n    GeoPoint.prototype._compareTo = function (other) {\n        return (Object(__WEBPACK_IMPORTED_MODULE_2__util_misc__[\"f\" /* primitiveComparator */])(this._lat, other._lat) ||\n            Object(__WEBPACK_IMPORTED_MODULE_2__util_misc__[\"f\" /* primitiveComparator */])(this._long, other._long));\n    };\n    return GeoPoint;\n}());\n\n\n//# sourceMappingURL=geo_point.js.map\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return Query; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return RelationOp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return RelationFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NullFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return NanFilter; });\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = fieldFilter;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Direction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Bound; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return OrderBy; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_field_value__ = __webpack_require__(136);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_path__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_types__ = __webpack_require__(141);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\nvar Query = /** @class */ (function () {\n    function Query(path, explicitOrderBy, filters, limit, startAt, endAt) {\n        if (explicitOrderBy === void 0) { explicitOrderBy = []; }\n        if (filters === void 0) { filters = []; }\n        if (limit === void 0) { limit = null; }\n        if (startAt === void 0) { startAt = null; }\n        if (endAt === void 0) { endAt = null; }\n        this.path = path;\n        this.explicitOrderBy = explicitOrderBy;\n        this.filters = filters;\n        this.limit = limit;\n        this.startAt = startAt;\n        this.endAt = endAt;\n        this.memoizedCanonicalId = null;\n        this.memoizedOrderBy = null;\n        if (this.startAt) {\n            this.assertValidBound(this.startAt);\n        }\n        if (this.endAt) {\n            this.assertValidBound(this.endAt);\n        }\n    }\n    Query.atPath = function (path) {\n        return new Query(path);\n    };\n    Object.defineProperty(Query.prototype, \"orderBy\", {\n        get: function () {\n            if (this.memoizedOrderBy === null) {\n                var inequalityField = this.getInequalityFilterField();\n                var firstOrderByField = this.getFirstOrderByField();\n                if (inequalityField !== null && firstOrderByField === null) {\n                    // In order to implicitly add key ordering, we must also add the\n                    // inequality filter field for it to be a valid query.\n                    // Note that the default inequality field and key ordering is ascending.\n                    if (inequalityField.isKeyField()) {\n                        this.memoizedOrderBy = [KEY_ORDERING_ASC];\n                    }\n                    else {\n                        this.memoizedOrderBy = [\n                            new OrderBy(inequalityField),\n                            KEY_ORDERING_ASC\n                        ];\n                    }\n                }\n                else {\n                    Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(inequalityField === null ||\n                        (firstOrderByField !== null &&\n                            inequalityField.isEqual(firstOrderByField)), 'First orderBy should match inequality field.');\n                    this.memoizedOrderBy = [];\n                    var foundKeyOrdering = false;\n                    for (var _i = 0, _a = this.explicitOrderBy; _i < _a.length; _i++) {\n                        var orderBy = _a[_i];\n                        this.memoizedOrderBy.push(orderBy);\n                        if (orderBy.field.isKeyField()) {\n                            foundKeyOrdering = true;\n                        }\n                    }\n                    if (!foundKeyOrdering) {\n                        // The order of the implicit key ordering always matches the last\n                        // explicit order by\n                        var lastDirection = this.explicitOrderBy.length > 0\n                            ? this.explicitOrderBy[this.explicitOrderBy.length - 1].dir\n                            : Direction.ASCENDING;\n                        this.memoizedOrderBy.push(lastDirection === Direction.ASCENDING\n                            ? KEY_ORDERING_ASC\n                            : KEY_ORDERING_DESC);\n                    }\n                }\n            }\n            return this.memoizedOrderBy;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Query.prototype.addFilter = function (filter) {\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(this.getInequalityFilterField() == null ||\n            !(filter instanceof RelationFilter) ||\n            !filter.isInequality() ||\n            filter.field.isEqual(this.getInequalityFilterField()), 'Query must only have one inequality field.');\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(!__WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].isDocumentKey(this.path), 'No filtering allowed for document query');\n        var newFilters = this.filters.concat([filter]);\n        return new Query(this.path, this.explicitOrderBy.slice(), newFilters, this.limit, this.startAt, this.endAt);\n    };\n    Query.prototype.addOrderBy = function (orderBy) {\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(!__WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].isDocumentKey(this.path), 'No ordering allowed for document query');\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(!this.startAt && !this.endAt, 'Bounds must be set after orderBy');\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var newOrderBy = this.explicitOrderBy.concat([orderBy]);\n        return new Query(this.path, newOrderBy, this.filters.slice(), this.limit, this.startAt, this.endAt);\n    };\n    Query.prototype.withLimit = function (limit) {\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), limit, this.startAt, this.endAt);\n    };\n    Query.prototype.withStartAt = function (bound) {\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, bound, this.endAt);\n    };\n    Query.prototype.withEndAt = function (bound) {\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, this.startAt, bound);\n    };\n    // TODO(b/29183165): This is used to get a unique string from a query to, for\n    // example, use as a dictionary key, but the implementation is subject to\n    // collisions. Make it collision-free.\n    Query.prototype.canonicalId = function () {\n        if (this.memoizedCanonicalId === null) {\n            var canonicalId = this.path.canonicalString();\n            canonicalId += '|f:';\n            for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n                var filter = _a[_i];\n                canonicalId += filter.canonicalId();\n                canonicalId += ',';\n            }\n            canonicalId += '|ob:';\n            // TODO(dimond): make this collision resistant\n            for (var _b = 0, _c = this.orderBy; _b < _c.length; _b++) {\n                var orderBy = _c[_b];\n                canonicalId += orderBy.canonicalId();\n                canonicalId += ',';\n            }\n            if (!Object(__WEBPACK_IMPORTED_MODULE_6__util_types__[\"a\" /* isNullOrUndefined */])(this.limit)) {\n                canonicalId += '|l:';\n                canonicalId += this.limit;\n            }\n            if (this.startAt) {\n                canonicalId += '|lb:';\n                canonicalId += this.startAt.canonicalId();\n            }\n            if (this.endAt) {\n                canonicalId += '|ub:';\n                canonicalId += this.endAt.canonicalId();\n            }\n            this.memoizedCanonicalId = canonicalId;\n        }\n        return this.memoizedCanonicalId;\n    };\n    Query.prototype.toString = function () {\n        var str = 'Query(' + this.path.canonicalString();\n        if (this.filters.length > 0) {\n            str += \", filters: [\" + this.filters.join(', ') + \"]\";\n        }\n        if (!Object(__WEBPACK_IMPORTED_MODULE_6__util_types__[\"a\" /* isNullOrUndefined */])(this.limit)) {\n            str += ', limit: ' + this.limit;\n        }\n        if (this.explicitOrderBy.length > 0) {\n            str += \", orderBy: [\" + this.explicitOrderBy.join(', ') + \"]\";\n        }\n        if (this.startAt) {\n            str += ', startAt: ' + this.startAt.canonicalId();\n        }\n        if (this.endAt) {\n            str += ', endAt: ' + this.endAt.canonicalId();\n        }\n        return str + ')';\n    };\n    Query.prototype.isEqual = function (other) {\n        if (this.limit !== other.limit) {\n            return false;\n        }\n        if (this.orderBy.length !== other.orderBy.length) {\n            return false;\n        }\n        for (var i = 0; i < this.orderBy.length; i++) {\n            if (!this.orderBy[i].isEqual(other.orderBy[i])) {\n                return false;\n            }\n        }\n        if (this.filters.length !== other.filters.length) {\n            return false;\n        }\n        for (var i = 0; i < this.filters.length; i++) {\n            if (!this.filters[i].isEqual(other.filters[i])) {\n                return false;\n            }\n        }\n        if (!this.path.isEqual(other.path)) {\n            return false;\n        }\n        if (this.startAt !== null\n            ? !this.startAt.isEqual(other.startAt)\n            : other.startAt !== null) {\n            return false;\n        }\n        return this.endAt !== null\n            ? this.endAt.isEqual(other.endAt)\n            : other.endAt === null;\n    };\n    Query.prototype.docComparator = function (d1, d2) {\n        var comparedOnKeyField = false;\n        for (var _i = 0, _a = this.orderBy; _i < _a.length; _i++) {\n            var orderBy = _a[_i];\n            var comp = orderBy.compare(d1, d2);\n            if (comp !== 0)\n                return comp;\n            comparedOnKeyField = comparedOnKeyField || orderBy.field.isKeyField();\n        }\n        // Assert that we actually compared by key\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(comparedOnKeyField, \"orderBy used that doesn't compare on key field\");\n        return 0;\n    };\n    Query.prototype.matches = function (doc) {\n        return (this.matchesAncestor(doc) &&\n            this.matchesOrderBy(doc) &&\n            this.matchesFilters(doc) &&\n            this.matchesBounds(doc));\n    };\n    Query.prototype.hasLimit = function () {\n        return !Object(__WEBPACK_IMPORTED_MODULE_6__util_types__[\"a\" /* isNullOrUndefined */])(this.limit);\n    };\n    Query.prototype.getFirstOrderByField = function () {\n        return this.explicitOrderBy.length > 0\n            ? this.explicitOrderBy[0].field\n            : null;\n    };\n    Query.prototype.getInequalityFilterField = function () {\n        for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n            var filter = _a[_i];\n            if (filter instanceof RelationFilter && filter.isInequality()) {\n                return filter.field;\n            }\n        }\n        return null;\n    };\n    Query.prototype.isDocumentQuery = function () {\n        return __WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].isDocumentKey(this.path) && this.filters.length === 0;\n    };\n    Query.prototype.matchesAncestor = function (doc) {\n        var docPath = doc.key.path;\n        if (__WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].isDocumentKey(this.path)) {\n            // exact match for document queries\n            return this.path.isEqual(docPath);\n        }\n        else {\n            // shallow ancestor queries by default\n            return (this.path.isPrefixOf(docPath) && this.path.length === docPath.length - 1);\n        }\n    };\n    /**\n     * A document must have a value for every ordering clause in order to show up\n     * in the results.\n     */\n    Query.prototype.matchesOrderBy = function (doc) {\n        for (var _i = 0, _a = this.explicitOrderBy; _i < _a.length; _i++) {\n            var orderBy = _a[_i];\n            // order by key always matches\n            if (!orderBy.field.isKeyField() &&\n                doc.field(orderBy.field) === undefined) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Query.prototype.matchesFilters = function (doc) {\n        for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n            var filter = _a[_i];\n            if (!filter.matches(doc)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Makes sure a document is within the bounds, if provided.\n     */\n    Query.prototype.matchesBounds = function (doc) {\n        if (this.startAt && !this.startAt.sortsBeforeDocument(this.orderBy, doc)) {\n            return false;\n        }\n        if (this.endAt && this.endAt.sortsBeforeDocument(this.orderBy, doc)) {\n            return false;\n        }\n        return true;\n    };\n    Query.prototype.assertValidBound = function (bound) {\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(bound.position.length <= this.orderBy.length, 'Bound is longer than orderBy');\n    };\n    return Query;\n}());\n\nvar RelationOp = /** @class */ (function () {\n    function RelationOp(name) {\n        this.name = name;\n    }\n    RelationOp.fromString = function (op) {\n        switch (op) {\n            case '<':\n                return RelationOp.LESS_THAN;\n            case '<=':\n                return RelationOp.LESS_THAN_OR_EQUAL;\n            case '==':\n                return RelationOp.EQUAL;\n            case '>=':\n                return RelationOp.GREATER_THAN_OR_EQUAL;\n            case '>':\n                return RelationOp.GREATER_THAN;\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('Unknown relation: ' + op);\n        }\n    };\n    RelationOp.prototype.toString = function () {\n        return this.name;\n    };\n    RelationOp.prototype.isEqual = function (other) {\n        return this.name === other.name;\n    };\n    RelationOp.LESS_THAN = new RelationOp('<');\n    RelationOp.LESS_THAN_OR_EQUAL = new RelationOp('<=');\n    RelationOp.EQUAL = new RelationOp('==');\n    RelationOp.GREATER_THAN = new RelationOp('>');\n    RelationOp.GREATER_THAN_OR_EQUAL = new RelationOp('>=');\n    return RelationOp;\n}());\n\nvar RelationFilter = /** @class */ (function () {\n    function RelationFilter(field, op, value) {\n        this.field = field;\n        this.op = op;\n        this.value = value;\n    }\n    RelationFilter.prototype.matches = function (doc) {\n        if (this.field.isKeyField()) {\n            Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(this.value instanceof __WEBPACK_IMPORTED_MODULE_2__model_field_value__[\"j\" /* RefValue */], 'Comparing on key, but filter value not a RefValue');\n            var refValue = this.value;\n            var comparison = __WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].comparator(doc.key, refValue.key);\n            return this.matchesComparison(comparison);\n        }\n        else {\n            var val = doc.field(this.field);\n            return val !== undefined && this.matchesValue(val);\n        }\n    };\n    RelationFilter.prototype.matchesValue = function (value) {\n        // Only compare types with matching backend order (such as double and int).\n        if (this.value.typeOrder !== value.typeOrder) {\n            return false;\n        }\n        return this.matchesComparison(value.compareTo(this.value));\n    };\n    RelationFilter.prototype.matchesComparison = function (comparison) {\n        switch (this.op) {\n            case RelationOp.LESS_THAN:\n                return comparison < 0;\n            case RelationOp.LESS_THAN_OR_EQUAL:\n                return comparison <= 0;\n            case RelationOp.EQUAL:\n                return comparison === 0;\n            case RelationOp.GREATER_THAN:\n                return comparison > 0;\n            case RelationOp.GREATER_THAN_OR_EQUAL:\n                return comparison >= 0;\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('Unknown relation op' + this.op);\n        }\n    };\n    RelationFilter.prototype.isInequality = function () {\n        return this.op !== RelationOp.EQUAL;\n    };\n    RelationFilter.prototype.canonicalId = function () {\n        // TODO(b/29183165): Technically, this won't be unique if two values have\n        // the same description, such as the int 3 and the string \"3\". So we should\n        // add the types in here somehow, too.\n        return (this.field.canonicalString() + this.op.toString() + this.value.toString());\n    };\n    RelationFilter.prototype.isEqual = function (other) {\n        if (other instanceof RelationFilter) {\n            return (this.op.isEqual(other.op) &&\n                this.field.isEqual(other.field) &&\n                this.value.isEqual(other.value));\n        }\n        else {\n            return false;\n        }\n    };\n    RelationFilter.prototype.toString = function () {\n        return this.field.canonicalString() + \" \" + this.op + \" \" + this.value.value();\n    };\n    return RelationFilter;\n}());\n\n/**\n * Filter that matches 'null' values.\n */\nvar NullFilter = /** @class */ (function () {\n    function NullFilter(field) {\n        this.field = field;\n    }\n    NullFilter.prototype.matches = function (doc) {\n        var val = doc.field(this.field);\n        return val !== undefined && val.value() === null;\n    };\n    NullFilter.prototype.canonicalId = function () {\n        return this.field.canonicalString() + ' IS null';\n    };\n    NullFilter.prototype.toString = function () {\n        return this.field.canonicalString() + \" IS null\";\n    };\n    NullFilter.prototype.isEqual = function (other) {\n        if (other instanceof NullFilter) {\n            return this.field.isEqual(other.field);\n        }\n        else {\n            return false;\n        }\n    };\n    return NullFilter;\n}());\n\n/**\n * Filter that matches 'NaN' values.\n */\nvar NanFilter = /** @class */ (function () {\n    function NanFilter(field) {\n        this.field = field;\n    }\n    NanFilter.prototype.matches = function (doc) {\n        var val = doc.field(this.field).value();\n        return typeof val === 'number' && isNaN(val);\n    };\n    NanFilter.prototype.canonicalId = function () {\n        return this.field.canonicalString() + ' IS NaN';\n    };\n    NanFilter.prototype.toString = function () {\n        return this.field.canonicalString() + \" IS NaN\";\n    };\n    NanFilter.prototype.isEqual = function (other) {\n        if (other instanceof NanFilter) {\n            return this.field.isEqual(other.field);\n        }\n        else {\n            return false;\n        }\n    };\n    return NanFilter;\n}());\n\n/**\n * Creates a filter based on the provided arguments.\n */\nfunction fieldFilter(field, op, value) {\n    if (value.isEqual(__WEBPACK_IMPORTED_MODULE_2__model_field_value__[\"h\" /* NullValue */].INSTANCE)) {\n        if (op !== RelationOp.EQUAL) {\n            throw new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Invalid query. You can only perform equals ' + 'comparisons on null.');\n        }\n        return new NullFilter(field);\n    }\n    else if (value.isEqual(__WEBPACK_IMPORTED_MODULE_2__model_field_value__[\"d\" /* DoubleValue */].NAN)) {\n        if (op !== RelationOp.EQUAL) {\n            throw new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Invalid query. You can only perform equals ' + 'comparisons on NaN.');\n        }\n        return new NanFilter(field);\n    }\n    else {\n        return new RelationFilter(field, op, value);\n    }\n}\n/**\n * The direction of sorting in an order by.\n */\nvar Direction = /** @class */ (function () {\n    function Direction(name) {\n        this.name = name;\n    }\n    Direction.prototype.toString = function () {\n        return this.name;\n    };\n    Direction.ASCENDING = new Direction('asc');\n    Direction.DESCENDING = new Direction('desc');\n    return Direction;\n}());\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\nvar Bound = /** @class */ (function () {\n    function Bound(position, before) {\n        this.position = position;\n        this.before = before;\n    }\n    Bound.prototype.canonicalId = function () {\n        // TODO(b/29183165): Make this collision robust.\n        var canonicalId = this.before ? 'b:' : 'a:';\n        for (var _i = 0, _a = this.position; _i < _a.length; _i++) {\n            var component = _a[_i];\n            canonicalId += component.toString();\n        }\n        return canonicalId;\n    };\n    /**\n     * Returns true if a document sorts before a bound using the provided sort\n     * order.\n     */\n    Bound.prototype.sortsBeforeDocument = function (orderBy, doc) {\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(this.position.length <= orderBy.length, \"Bound has more components than query's orderBy\");\n        var comparison = 0;\n        for (var i = 0; i < this.position.length; i++) {\n            var orderByComponent = orderBy[i];\n            var component = this.position[i];\n            if (orderByComponent.field.isKeyField()) {\n                Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(component instanceof __WEBPACK_IMPORTED_MODULE_2__model_field_value__[\"j\" /* RefValue */], 'Bound has a non-key value where the key path is being used.');\n                comparison = __WEBPACK_IMPORTED_MODULE_1__model_document_key__[\"a\" /* DocumentKey */].comparator(component.key, doc.key);\n            }\n            else {\n                var docValue = doc.field(orderByComponent.field);\n                Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(docValue !== undefined, 'Field should exist since document matched the orderBy already.');\n                comparison = component.compareTo(docValue);\n            }\n            if (orderByComponent.dir === Direction.DESCENDING) {\n                comparison = comparison * -1;\n            }\n            if (comparison !== 0) {\n                break;\n            }\n        }\n        return this.before ? comparison <= 0 : comparison < 0;\n    };\n    Bound.prototype.isEqual = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.before !== other.before ||\n            this.position.length !== other.position.length) {\n            return false;\n        }\n        for (var i = 0; i < this.position.length; i++) {\n            var thisPosition = this.position[i];\n            var otherPosition = other.position[i];\n            return thisPosition.isEqual(otherPosition);\n        }\n        return true;\n    };\n    return Bound;\n}());\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nvar OrderBy = /** @class */ (function () {\n    function OrderBy(field, dir) {\n        this.field = field;\n        if (dir === undefined) {\n            dir = Direction.ASCENDING;\n        }\n        this.dir = dir;\n        this.isKeyOrderBy = field.isKeyField();\n    }\n    OrderBy.prototype.compare = function (d1, d2) {\n        var comparison = this.isKeyOrderBy\n            ? __WEBPACK_IMPORTED_MODULE_0__model_document__[\"a\" /* Document */].compareByKey(d1, d2)\n            : __WEBPACK_IMPORTED_MODULE_0__model_document__[\"a\" /* Document */].compareByField(this.field, d1, d2);\n        switch (this.dir) {\n            case Direction.ASCENDING:\n                return comparison;\n            case Direction.DESCENDING:\n                return -1 * comparison;\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('Unknown direction: ' + this.dir);\n        }\n    };\n    OrderBy.prototype.canonicalId = function () {\n        // TODO(b/29183165): Make this collision robust.\n        return this.field.canonicalString() + this.dir.toString();\n    };\n    OrderBy.prototype.toString = function () {\n        return this.field.canonicalString() + \" (\" + this.dir + \")\";\n    };\n    OrderBy.prototype.isEqual = function (other) {\n        return this.dir === other.dir && this.field.isEqual(other.field);\n    };\n    return OrderBy;\n}());\n\nvar KEY_ORDERING_ASC = new OrderBy(__WEBPACK_IMPORTED_MODULE_3__model_path__[\"a\" /* FieldPath */].keyField(), Direction.ASCENDING);\nvar KEY_ORDERING_DESC = new OrderBy(__WEBPACK_IMPORTED_MODULE_3__model_path__[\"a\" /* FieldPath */].keyField(), Direction.DESCENDING);\n\n//# sourceMappingURL=query.js.map\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isPermanentError;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = mapCodeFromRpcStatus;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = mapCodeFromRpcCode;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = mapRpcCodeFromCode;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = mapCodeFromHttpStatus;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_log__ = __webpack_require__(121);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers.\n */\nvar RpcCode;\n(function (RpcCode) {\n    RpcCode[RpcCode[\"OK\"] = 0] = \"OK\";\n    RpcCode[RpcCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    RpcCode[RpcCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    RpcCode[RpcCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    RpcCode[RpcCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    RpcCode[RpcCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    RpcCode[RpcCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    RpcCode[RpcCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    RpcCode[RpcCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n    RpcCode[RpcCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    RpcCode[RpcCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    RpcCode[RpcCode[\"ABORTED\"] = 10] = \"ABORTED\";\n    RpcCode[RpcCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    RpcCode[RpcCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    RpcCode[RpcCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    RpcCode[RpcCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    RpcCode[RpcCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n})(RpcCode || (RpcCode = {}));\nfunction isPermanentError(code) {\n    switch (code) {\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OK:\n            return Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('Treated status OK as error');\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].CANCELLED:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNKNOWN:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].DEADLINE_EXCEEDED:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].RESOURCE_EXHAUSTED:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INTERNAL:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNAVAILABLE:\n        // Unauthenticated means something went wrong with our token and we need\n        // to retry with new credentials which will happen automatically.\n        // TODO(b/37325376): Give up after second unauthenticated error.\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNAUTHENTICATED:\n            return false;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].NOT_FOUND:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].ALREADY_EXISTS:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].PERMISSION_DENIED:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].FAILED_PRECONDITION:\n        // Aborted might be retried in some scenarios, but that is dependant on\n        // the context and should handled individually by the calling code.\n        // See https://cloud.google.com/apis/design/errors.\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].ABORTED:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OUT_OF_RANGE:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNIMPLEMENTED:\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].DATA_LOSS:\n            return true;\n        default:\n            return Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('Unknown status code: ' + code);\n    }\n}\n/**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\nfunction mapCodeFromRpcStatus(status) {\n    // tslint:disable-next-line:no-any lookup by string\n    var code = RpcCode[status];\n    if (code === undefined) {\n        return undefined;\n    }\n    return mapCodeFromRpcCode(code);\n}\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nfunction mapCodeFromRpcCode(code) {\n    if (code === undefined) {\n        // This shouldn't normally happen, but in certain error cases (like trying\n        // to send invalid proto messages) we may get an error with no GRPC code.\n        __WEBPACK_IMPORTED_MODULE_2__util_log__[\"c\" /* error */]('GRPC error has no .code');\n        return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNKNOWN;\n    }\n    switch (code) {\n        case RpcCode.OK:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OK;\n        case RpcCode.CANCELLED:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].CANCELLED;\n        case RpcCode.UNKNOWN:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNKNOWN;\n        case RpcCode.DEADLINE_EXCEEDED:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].DEADLINE_EXCEEDED;\n        case RpcCode.RESOURCE_EXHAUSTED:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].RESOURCE_EXHAUSTED;\n        case RpcCode.INTERNAL:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INTERNAL;\n        case RpcCode.UNAVAILABLE:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNAVAILABLE;\n        case RpcCode.UNAUTHENTICATED:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNAUTHENTICATED;\n        case RpcCode.INVALID_ARGUMENT:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT;\n        case RpcCode.NOT_FOUND:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].NOT_FOUND;\n        case RpcCode.ALREADY_EXISTS:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].ALREADY_EXISTS;\n        case RpcCode.PERMISSION_DENIED:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].PERMISSION_DENIED;\n        case RpcCode.FAILED_PRECONDITION:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].FAILED_PRECONDITION;\n        case RpcCode.ABORTED:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].ABORTED;\n        case RpcCode.OUT_OF_RANGE:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OUT_OF_RANGE;\n        case RpcCode.UNIMPLEMENTED:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNIMPLEMENTED;\n        case RpcCode.DATA_LOSS:\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].DATA_LOSS;\n        default:\n            return Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('Unknown status code: ' + code);\n    }\n}\n/**\n * Maps an RPC code from a Code. This is the reverse operation from\n * mapCodeFromRpcCode and should really only be used in tests.\n */\nfunction mapRpcCodeFromCode(code) {\n    if (code === undefined) {\n        return RpcCode.OK;\n    }\n    switch (code) {\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OK:\n            return RpcCode.OK;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].CANCELLED:\n            return RpcCode.CANCELLED;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNKNOWN:\n            return RpcCode.UNKNOWN;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].DEADLINE_EXCEEDED:\n            return RpcCode.DEADLINE_EXCEEDED;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].RESOURCE_EXHAUSTED:\n            return RpcCode.RESOURCE_EXHAUSTED;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INTERNAL:\n            return RpcCode.INTERNAL;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNAVAILABLE:\n            return RpcCode.UNAVAILABLE;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNAUTHENTICATED:\n            return RpcCode.UNAUTHENTICATED;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT:\n            return RpcCode.INVALID_ARGUMENT;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].NOT_FOUND:\n            return RpcCode.NOT_FOUND;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].ALREADY_EXISTS:\n            return RpcCode.ALREADY_EXISTS;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].PERMISSION_DENIED:\n            return RpcCode.PERMISSION_DENIED;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].FAILED_PRECONDITION:\n            return RpcCode.FAILED_PRECONDITION;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].ABORTED:\n            return RpcCode.ABORTED;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OUT_OF_RANGE:\n            return RpcCode.OUT_OF_RANGE;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNIMPLEMENTED:\n            return RpcCode.UNIMPLEMENTED;\n        case __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].DATA_LOSS:\n            return RpcCode.DATA_LOSS;\n        default:\n            return Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"b\" /* fail */])('Unknown status code: ' + code);\n    }\n}\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mapCodeFromHttpStatus(status) {\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    //\n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n    switch (status) {\n        case 200:// OK\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OK;\n        case 400:// Bad Request\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT;\n        // Other possibilities based on the forward mapping\n        // return Code.FAILED_PRECONDITION;\n        // return Code.OUT_OF_RANGE;\n        case 401:// Unauthorized\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNAUTHENTICATED;\n        case 403:// Forbidden\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].PERMISSION_DENIED;\n        case 404:// Not Found\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].NOT_FOUND;\n        case 409:// Conflict\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].ABORTED;\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n        case 416:// Range Not Satisfiable\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OUT_OF_RANGE;\n        case 429:// Too Many Requests\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].RESOURCE_EXHAUSTED;\n        case 499:// Client Closed Request\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].CANCELLED;\n        case 500:// Internal Server Error\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNKNOWN;\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n        case 501:// Unimplemented\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNIMPLEMENTED;\n        case 503:// Service Unavailable\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNAVAILABLE;\n        case 504:// Gateway Timeout\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].DEADLINE_EXCEEDED;\n        default:\n            if (status >= 200 && status < 300)\n                return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].OK;\n            if (status >= 400 && status < 500)\n                return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].FAILED_PRECONDITION;\n            if (status >= 500 && status < 600)\n                return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INTERNAL;\n            return __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNKNOWN;\n    }\n}\n\n//# sourceMappingURL=rpc_error.js.map\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FieldPath; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = fromDotSeparatedString;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_path__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_input_validation__ = __webpack_require__(140);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n// tslint:disable:strip-private-property-underscore\n/**\n * A FieldPath refers to a field in a document. The path may consist of a single\n * field name (referring to a top-level field in the document), or a list of\n * field names (referring to a nested field in the document).\n */\nvar FieldPath = /** @class */ (function () {\n    /**\n     * Creates a FieldPath from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames A list of field names.\n     */\n    function FieldPath() {\n        var fieldNames = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fieldNames[_i] = arguments[_i];\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_2__util_input_validation__[\"h\" /* validateNamedArrayAtLeastNumberOfElements */])('FieldPath', fieldNames, 'fieldNames', 1);\n        for (var i = 0; i < fieldNames.length; ++i) {\n            Object(__WEBPACK_IMPORTED_MODULE_2__util_input_validation__[\"c\" /* validateArgType */])('FieldPath', 'string', i, fieldNames[i]);\n            if (fieldNames[i].length === 0) {\n                throw new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). \" +\n                    'Field names must not be empty.');\n            }\n        }\n        this._internalPath = new __WEBPACK_IMPORTED_MODULE_0__model_path__[\"a\" /* FieldPath */](fieldNames);\n    }\n    FieldPath.documentId = function () {\n        return FieldPath._DOCUMENT_ID;\n    };\n    FieldPath.prototype.isEqual = function (other) {\n        if (!(other instanceof FieldPath)) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_2__util_input_validation__[\"a\" /* invalidClassError */])('isEqual', 'FieldPath', 1, other);\n        }\n        return this._internalPath.isEqual(other._internalPath);\n    };\n    /**\n     * Internal Note: The backend doesn't technically support querying by\n     * document ID. Instead it queries by the entire document name (full path\n     * included), but in the cases we currently support documentId(), the net\n     * effect is the same.\n     */\n    FieldPath._DOCUMENT_ID = new FieldPath(__WEBPACK_IMPORTED_MODULE_0__model_path__[\"a\" /* FieldPath */].keyField().canonicalString());\n    return FieldPath;\n}());\n\n/**\n * Matches any characters in a field path string that are reserved.\n */\nvar RESERVED = new RegExp('[~\\\\*/\\\\[\\\\]]');\n/**\n * Parses a field path string into a FieldPath, treating dots as separators.\n */\nfunction fromDotSeparatedString(path) {\n    var found = path.search(RESERVED);\n    if (found >= 0) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not contain \" +\n            \"'~', '*', '/', '[', or ']'\");\n    }\n    try {\n        return new (FieldPath.bind.apply(FieldPath, [void 0].concat(path.split('.'))))();\n    }\n    catch (e) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not be empty, \" +\n            \"begin with '.', end with '.', or contain '..'\");\n    }\n}\n\n//# sourceMappingURL=field_path.js.map\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return OnlineState; });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Describes the online state of the Firestore client. Note that this does not\n * indicate whether or not the remote store is trying to connect or not. This is\n * primarily used by the View / EventManager code to change their behavior while\n * offline (e.g. get() calls shouldn't wait for data from the server and\n * snapshot events should set metadata.isFromCache=true).\n */\nvar OnlineState;\n(function (OnlineState) {\n    /**\n     * The Firestore client is in an unknown online state. This means the client\n     * is either not actively trying to establish a connection or it is currently\n     * trying to establish a connection, but it has not succeeded or failed yet.\n     * Higher-level components should not operate in offline mode.\n     */\n    OnlineState[OnlineState[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * The client is connected and the connections are healthy. This state is\n     * reached after a successful connection and there has been at least one\n     * successful message received from the backends.\n     */\n    OnlineState[OnlineState[\"Healthy\"] = 1] = \"Healthy\";\n    /**\n     * The client is either trying to establish a connection but failing, or it\n     * has been explicitly marked offline via a call to disableNetwork().\n     * Higher-level components should operate in offline mode.\n     */\n    OnlineState[OnlineState[\"Failed\"] = 2] = \"Failed\";\n})(OnlineState || (OnlineState = {}));\n\n//# sourceMappingURL=types.js.map\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ObjectMap; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__obj__ = __webpack_require__(127);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map implementation that uses objects as keys. Objects must implement the\n * Equatable interface and must be immutable. Entries in the map are stored\n * together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */\nvar ObjectMap = /** @class */ (function () {\n    function ObjectMap(mapKeyFn) {\n        this.mapKeyFn = mapKeyFn;\n        /**\n         * The inner map for a key -> value pair. Due to the possibility of\n         * collisions we keep a list of entries that we do a linear search through\n         * to find an actual match. Note that collisions should be rare, so we still\n         * expect near constant time lookups in practice.\n         */\n        this.inner = {};\n    }\n    /** Get a value for this key, or undefined if it does not exist. */\n    ObjectMap.prototype.get = function (key) {\n        var id = this.mapKeyFn(key);\n        var matches = this.inner[id];\n        if (matches === undefined) {\n            return undefined;\n        }\n        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {\n            var _a = matches_1[_i], otherKey = _a[0], value = _a[1];\n            if (otherKey.isEqual(key)) {\n                return value;\n            }\n        }\n        return undefined;\n    };\n    ObjectMap.prototype.has = function (key) {\n        return this.get(key) !== undefined;\n    };\n    /** Put this key and value in the map. */\n    ObjectMap.prototype.set = function (key, value) {\n        var id = this.mapKeyFn(key);\n        var matches = this.inner[id];\n        if (matches === undefined) {\n            this.inner[id] = [[key, value]];\n            return;\n        }\n        for (var i = 0; i < matches.length; i++) {\n            if (matches[i][0].isEqual(key)) {\n                matches[i] = [key, value];\n                return;\n            }\n        }\n        matches.push([key, value]);\n    };\n    /**\n     * Remove this key from the map. Returns a boolean if anything was deleted.\n     */\n    ObjectMap.prototype.delete = function (key) {\n        var id = this.mapKeyFn(key);\n        var matches = this.inner[id];\n        if (matches === undefined) {\n            return false;\n        }\n        for (var i = 0; i < matches.length; i++) {\n            if (matches[i][0].isEqual(key)) {\n                if (matches.length === 1) {\n                    delete this.inner[id];\n                }\n                else {\n                    matches.splice(i, 1);\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    ObjectMap.prototype.forEach = function (fn) {\n        __WEBPACK_IMPORTED_MODULE_0__obj__[\"c\" /* forEach */](this.inner, function (_, entries) {\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\n                fn(k, v);\n            }\n        });\n    };\n    ObjectMap.prototype.isEmpty = function () {\n        return __WEBPACK_IMPORTED_MODULE_0__obj__[\"e\" /* isEmpty */](this.inner);\n    };\n    return ObjectMap;\n}());\n\n\n//# sourceMappingURL=obj_map.js.map\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = encode;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = decode;\n/* unused harmony export prefixSuccessor */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_path__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assert__ = __webpack_require__(117);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar escapeChar = '\\u0001';\nvar encodedSeparatorChar = '\\u0001';\nvar encodedNul = '\\u0010';\nvar encodedEscape = '\\u0011';\n/**\n * Encodes a resource path into a IndexedDb-compatible string form.\n */\nfunction encode(path) {\n    var result = '';\n    for (var i = 0; i < path.length; i++) {\n        if (result.length > 0) {\n            result = encodeSeparator(result);\n        }\n        result = encodeSegment(path.get(i), result);\n    }\n    return encodeSeparator(result);\n}\n/** Encodes a single segment of a resource path into the given result */\nfunction encodeSegment(segment, resultBuf) {\n    var result = resultBuf;\n    var length = segment.length;\n    for (var i = 0; i < length; i++) {\n        var c = segment.charAt(i);\n        switch (c) {\n            case '\\0':\n                result += escapeChar + encodedNul;\n                break;\n            case escapeChar:\n                result += escapeChar + encodedEscape;\n                break;\n            default:\n                result += c;\n        }\n    }\n    return result;\n}\n/** Encodes a path separator into the given result */\nfunction encodeSeparator(result) {\n    return result + escapeChar + encodedSeparatorChar;\n}\n/**\n * Decodes the given IndexedDb-compatible string form of a resource path into\n * a ResourcePath instance. Note that this method is not suitable for use with\n * decoding resource names from the server; those are One Platform format\n * strings.\n */\nfunction decode(path) {\n    // Event the empty path must encode as a path of at least length 2. A path\n    // with exactly 2 must be the empty path.\n    var length = path.length;\n    Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(length >= 2, 'Invalid path ' + path);\n    if (length === 2) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(path.charAt(0) === escapeChar && path.charAt(1) === encodedSeparatorChar, 'Non-empty path ' + path + ' had length 2');\n        return __WEBPACK_IMPORTED_MODULE_0__model_path__[\"b\" /* ResourcePath */].EMPTY_PATH;\n    }\n    // Escape characters cannot exist past the second-to-last position in the\n    // source value.\n    var lastReasonableEscapeIndex = length - 2;\n    var segments = [];\n    var segmentBuilder = '';\n    for (var start = 0; start < length;) {\n        // The last two characters of a valid encoded path must be a separator, so\n        // there must be an end to this segment.\n        var end = path.indexOf(escapeChar, start);\n        if (end < 0 || end > lastReasonableEscapeIndex) {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('Invalid encoded resource path: \"' + path + '\"');\n        }\n        var next = path.charAt(end + 1);\n        switch (next) {\n            case encodedSeparatorChar:\n                var currentPiece = path.substring(start, end);\n                var segment = void 0;\n                if (segmentBuilder.length === 0) {\n                    // Avoid copying for the common case of a segment that excludes \\0\n                    // and \\001\n                    segment = currentPiece;\n                }\n                else {\n                    segmentBuilder += currentPiece;\n                    segment = segmentBuilder;\n                    segmentBuilder = '';\n                }\n                segments.push(segment);\n                break;\n            case encodedNul:\n                segmentBuilder += path.substring(start, end);\n                segmentBuilder += '\\0';\n                break;\n            case encodedEscape:\n                // The escape character can be used in the output to encode itself.\n                segmentBuilder += path.substring(start, end + 1);\n                break;\n            default:\n                Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('Invalid encoded resource path: \"' + path + '\"');\n        }\n        start = end + 2;\n    }\n    return new __WEBPACK_IMPORTED_MODULE_0__model_path__[\"b\" /* ResourcePath */](segments);\n}\n/**\n * Computes the prefix successor of the given path, computed by encode above.\n * A prefix successor is the first key that cannot be prefixed by the given\n * path. It's useful for defining the end of a prefix scan such that all keys\n * in the scan have the same prefix.\n *\n * Note that this is not a general prefix successor implementation, which is\n * tricky to get right with Strings, given that they encode down to UTF-8.\n * Instead this relies on the fact that all paths encoded by this class are\n * always terminated with a separator, and so a successor can always be\n * cheaply computed by incrementing the last character of the path.\n */\nfunction prefixSuccessor(path) {\n    var c = path.charCodeAt(path.length - 1);\n    // TODO(mcg): this really should be a general thing, but not worth it right\n    // now\n    Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(c === 1, 'successor may only operate on paths generated by encode');\n    return path.substring(0, path.length - 1) + String.fromCharCode(c + 1);\n}\n\n//# sourceMappingURL=encoded_resource_path.js.map\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Deferred; });\n/* unused harmony export sequence */\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    return Deferred;\n}());\n\n/**\n * Takes an array of values and sequences them using the promise (or value)\n * returned by the supplied callback. The callback for each item is called\n * after the promise is resolved for the previous item.\n * The function returns a promise which is resolved after the promise for\n * the last item is resolved.\n */\nfunction sequence(values, fn, initialValue) {\n    var result = Promise.resolve(initialValue);\n    values.forEach(function (value) {\n        result = result.then(function (lastResult) { return fn(value, lastResult); });\n    });\n    return result;\n}\n\n//# sourceMappingURL=promise.js.map\n\n\n/***/ }),\n/* 191 */,\n/* 192 */,\n/* 193 */,\n/* 194 */,\n/* 195 */,\n/* 196 */,\n/* 197 */,\n/* 198 */,\n/* 199 */,\n/* 200 */,\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = __webpack_require__(179);\n/**\n * Throws an error if the provided assertion is falsy\n * @param {*} assertion The assertion to be tested for falsiness\n * @param {!string} message The message to display if the check fails\n */\nexports.assert = function (assertion, message) {\n    if (!assertion) {\n        throw exports.assertionError(message);\n    }\n};\n/**\n * Returns an Error object suitable for throwing.\n * @param {string} message\n * @return {!Error}\n */\nexports.assertionError = function (message) {\n    return new Error('Firebase Database (' +\n        constants_1.CONSTANTS.SDK_VERSION +\n        ') INTERNAL ASSERT FAILED: ' +\n        message);\n};\n\n//# sourceMappingURL=assert.js.map\n\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stringToByteArray = function (str) {\n    // TODO(user): Use native implementations if/when available\n    var out = [], p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if ((c & 0xfc00) == 0xd800 &&\n            i + 1 < str.length &&\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param {Array<number>} bytes Array of numbers representing characters.\n * @return {string} Stringification of the array.\n */\nvar byteArrayToString = function (bytes) {\n    // TODO(user): Use native implementations if/when available\n    var out = [], pos = 0, c = 0;\n    while (pos < bytes.length) {\n        var c1 = bytes[pos++];\n        if (c1 < 128) {\n            out[c++] = String.fromCharCode(c1);\n        }\n        else if (c1 > 191 && c1 < 224) {\n            var c2 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n        }\n        else if (c1 > 239 && c1 < 365) {\n            // Surrogate Pair\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            var c4 = bytes[pos++];\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n                0x10000;\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n        }\n        else {\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n        }\n    }\n    return out.join('');\n};\n// Static lookup maps, lazily populated by init_()\nexports.base64 = {\n    /**\n     * Maps bytes to characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMap_: null,\n    /**\n     * Maps characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMap_: null,\n    /**\n     * Maps bytes to websafe characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMapWebSafe_: null,\n    /**\n     * Maps websafe characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMapWebSafe_: null,\n    /**\n     * Our default alphabet, shared between\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n     * @type {string}\n     */\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n    /**\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n     * @type {string}\n     */\n    get ENCODED_VALS() {\n        return this.ENCODED_VALS_BASE + '+/=';\n    },\n    /**\n     * Our websafe alphabet.\n     * @type {string}\n     */\n    get ENCODED_VALS_WEBSAFE() {\n        return this.ENCODED_VALS_BASE + '-_.';\n    },\n    /**\n     * Whether this browser supports the atob and btoa functions. This extension\n     * started at Mozilla but is now implemented by many browsers. We use the\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\n     * but still allowing the standard per-browser compilations.\n     *\n     * @type {boolean}\n     */\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\n    /**\n     * Base64-encode an array of bytes.\n     *\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\n     *     value in [0, 255]) to encode.\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeByteArray: function (input, opt_webSafe) {\n        if (!Array.isArray(input)) {\n            throw Error('encodeByteArray takes an array as a parameter');\n        }\n        this.init_();\n        var byteToCharMap = opt_webSafe\n            ? this.byteToCharMapWebSafe_\n            : this.byteToCharMap_;\n        var output = [];\n        for (var i = 0; i < input.length; i += 3) {\n            var byte1 = input[i];\n            var haveByte2 = i + 1 < input.length;\n            var byte2 = haveByte2 ? input[i + 1] : 0;\n            var haveByte3 = i + 2 < input.length;\n            var byte3 = haveByte3 ? input[i + 2] : 0;\n            var outByte1 = byte1 >> 2;\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n            var outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                    outByte3 = 64;\n                }\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join('');\n    },\n    /**\n     * Base64-encode a string.\n     *\n     * @param {string} input A string to encode.\n     * @param {boolean=} opt_webSafe If true, we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeString: function (input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return btoa(input);\n        }\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * @param {string} input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the\n     *     alternative alphabet.\n     * @return {string} string representing the decoded value.\n     */\n    decodeString: function (input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return atob(input);\n        }\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * In base-64 decoding, groups of four characters are converted into three\n     * bytes.  If the encoder did not apply padding, the input length may not\n     * be a multiple of 4.\n     *\n     * In this case, the last group will have fewer than 4 characters, and\n     * padding will be inferred.  If the group has one or two characters, it decodes\n     * to one byte.  If the group has three characters, it decodes to two bytes.\n     *\n     * @param {string} input Input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\n     * @return {!Array<number>} bytes representing the decoded value.\n     */\n    decodeStringToByteArray: function (input, opt_webSafe) {\n        this.init_();\n        var charToByteMap = opt_webSafe\n            ? this.charToByteMapWebSafe_\n            : this.charToByteMap_;\n        var output = [];\n        for (var i = 0; i < input.length;) {\n            var byte1 = charToByteMap[input.charAt(i++)];\n            var haveByte2 = i < input.length;\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            var haveByte3 = i < input.length;\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            var haveByte4 = i < input.length;\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n                throw Error();\n            }\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\n            output.push(outByte1);\n            if (byte3 != 64) {\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n                output.push(outByte2);\n                if (byte4 != 64) {\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\n     * Lazy static initialization function. Called before\n     * accessing any of the static map variables.\n     * @private\n     */\n    init_: function () {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n/**\n * URL-safe base64 encoding\n * @param {!string} str\n * @return {!string}\n */\nexports.base64Encode = function (str) {\n    var utf8Bytes = stringToByteArray(str);\n    return exports.base64.encodeByteArray(utf8Bytes, true);\n};\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param {string} str To be decoded\n * @return {?string} Decoded result, if possible\n */\nexports.base64Decode = function (str) {\n    try {\n        return exports.base64.decodeString(str, true);\n    }\n    catch (e) {\n        console.error('base64Decode failed: ', e);\n    }\n    return null;\n};\n\n//# sourceMappingURL=crypt.js.map\n\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nfunction jsonEval(str) {\n    return JSON.parse(str);\n}\nexports.jsonEval = jsonEval;\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nfunction stringify(data) {\n    return JSON.stringify(data);\n}\nexports.stringify = stringify;\n\n//# sourceMappingURL=json.js.map\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\nexports.contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nexports.safeGet = function (obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n        return obj[key];\n    // else return undefined.\n};\n/**\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\n *\n * @param {?Object.<K,V>} obj Object to enumerate.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexports.forEach = function (obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n};\n/**\n * Copies all the (own) properties from one object to another.\n * @param {!Object} objTo\n * @param {!Object} objFrom\n * @return {!Object} objTo\n */\nexports.extend = function (objTo, objFrom) {\n    exports.forEach(objFrom, function (key, value) {\n        objTo[key] = value;\n    });\n    return objTo;\n};\n/**\n * Returns a clone of the specified object.\n * @param {!Object} obj\n * @return {!Object} cloned obj.\n */\nexports.clone = function (obj) {\n    return exports.extend({}, obj);\n};\n/**\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\n * for functions.\n *\n * @param obj {*} A potential object.\n * @returns {boolean} True if it's an object.\n */\nexports.isNonNullObject = function (obj) {\n    return typeof obj === 'object' && obj !== null;\n};\nexports.isEmpty = function (obj) {\n    for (var key in obj) {\n        return false;\n    }\n    return true;\n};\nexports.getCount = function (obj) {\n    var rv = 0;\n    for (var key in obj) {\n        rv++;\n    }\n    return rv;\n};\nexports.map = function (obj, f, opt_obj) {\n    var res = {};\n    for (var key in obj) {\n        res[key] = f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n};\nexports.findKey = function (obj, fn, opt_this) {\n    for (var key in obj) {\n        if (fn.call(opt_this, obj[key], key, obj)) {\n            return key;\n        }\n    }\n    return undefined;\n};\nexports.findValue = function (obj, fn, opt_this) {\n    var key = exports.findKey(obj, fn, opt_this);\n    return key && obj[key];\n};\nexports.getAnyKey = function (obj) {\n    for (var key in obj) {\n        return key;\n    }\n};\nexports.getValues = function (obj) {\n    var res = [];\n    var i = 0;\n    for (var key in obj) {\n        res[i++] = obj[key];\n    }\n    return res;\n};\n/**\n * Tests whether every key/value pair in an object pass the test implemented\n * by the provided function\n *\n * @param {?Object.<K,V>} obj Object to test.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexports.every = function (obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            if (!fn(key, obj[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\n\n//# sourceMappingURL=obj.js.map\n\n\n/***/ }),\n/* 205 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return JsonProtoSerializer; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__api_blob__ = __webpack_require__(181);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api_geo_point__ = __webpack_require__(183);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_database_info__ = __webpack_require__(206);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_query__ = __webpack_require__(184);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_timestamp__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__local_query_data__ = __webpack_require__(142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__model_field_value__ = __webpack_require__(136);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__model_mutation__ = __webpack_require__(163);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__model_path__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__util_obj__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__util_types__ = __webpack_require__(141);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__existence_filter__ = __webpack_require__(277);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__rpc_error__ = __webpack_require__(185);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__watch_change__ = __webpack_require__(207);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar DIRECTIONS = (function () {\n    var dirs = {};\n    dirs[__WEBPACK_IMPORTED_MODULE_3__core_query__[\"b\" /* Direction */].ASCENDING.name] = 'ASCENDING';\n    dirs[__WEBPACK_IMPORTED_MODULE_3__core_query__[\"b\" /* Direction */].DESCENDING.name] = 'DESCENDING';\n    return dirs;\n})();\nvar OPERATORS = (function () {\n    var ops = {};\n    ops[__WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].LESS_THAN.name] = 'LESS_THAN';\n    ops[__WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].LESS_THAN_OR_EQUAL.name] = 'LESS_THAN_OR_EQUAL';\n    ops[__WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].GREATER_THAN.name] = 'GREATER_THAN';\n    ops[__WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].GREATER_THAN_OR_EQUAL.name] = 'GREATER_THAN_OR_EQUAL';\n    ops[__WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].EQUAL.name] = 'EQUAL';\n    return ops;\n})();\nfunction assertPresent(value, description) {\n    Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!__WEBPACK_IMPORTED_MODULE_15__util_types__[\"a\" /* isNullOrUndefined */](value), description + ' is missing');\n}\nfunction parseInt64(value) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    if (typeof value === 'number') {\n        return value;\n    }\n    else if (typeof value === 'string') {\n        return Number(value);\n    }\n    else {\n        return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])(\"can't parse \" + value);\n    }\n}\n/**\n * Generates JsonObject values for the Datastore API suitable for sending to\n * either GRPC stub methods or via the JSON/HTTP REST API.\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nvar JsonProtoSerializer = /** @class */ (function () {\n    function JsonProtoSerializer(databaseId, options) {\n        this.databaseId = databaseId;\n        this.options = options;\n    }\n    JsonProtoSerializer.prototype.emptyByteString = function () {\n        if (this.options.useProto3Json) {\n            return '';\n        }\n        else {\n            return new Uint8Array(0);\n        }\n    };\n    JsonProtoSerializer.prototype.unsafeCastProtoByteString = function (byteString) {\n        // byteStrings can be either string or UInt8Array, but the typings say\n        // it's always a string. Cast as string to avoid type check failing\n        return byteString;\n    };\n    JsonProtoSerializer.prototype.fromRpcStatus = function (status) {\n        var code = status.code === undefined\n            ? __WEBPACK_IMPORTED_MODULE_13__util_error__[\"a\" /* Code */].UNKNOWN\n            : Object(__WEBPACK_IMPORTED_MODULE_17__rpc_error__[\"c\" /* mapCodeFromRpcCode */])(status.code);\n        return new __WEBPACK_IMPORTED_MODULE_13__util_error__[\"b\" /* FirestoreError */](code, status.message || '');\n    };\n    /**\n     * Returns a value for a number (or undefined) that's appropriate to put into\n     * a google.protobuf.Int32Value proto.\n     * DO NOT USE THIS FOR ANYTHING ELSE.\n     * This method cheats. It's typed as returning \"number\" because that's what\n     * our generated proto interfaces say Int32Value must be. But GRPC actually\n     * expects a { value: <number> } struct.\n     */\n    JsonProtoSerializer.prototype.toInt32Value = function (val) {\n        if (!__WEBPACK_IMPORTED_MODULE_15__util_types__[\"a\" /* isNullOrUndefined */](val)) {\n            // tslint:disable-next-line:no-any We need to match generated Proto types.\n            return { value: val };\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * Returns a number (or null) from a google.protobuf.Int32Value proto.\n     * DO NOT USE THIS FOR ANYTHING ELSE.\n     * This method cheats. It's typed as accepting \"number\" because that's what\n     * our generated proto interfaces say Int32Value must be, but it actually\n     * accepts { value: number } to match our serialization in toInt32Value().\n     */\n    JsonProtoSerializer.prototype.fromInt32Value = function (val) {\n        var result;\n        if (typeof val === 'object') {\n            // tslint:disable-next-line:no-any We need to match generated Proto types.\n            result = val.value;\n        }\n        else {\n            // We accept raw numbers (without the {value: ... } wrapper) for\n            // compatibility with legacy persisted data.\n            result = val;\n        }\n        return __WEBPACK_IMPORTED_MODULE_15__util_types__[\"a\" /* isNullOrUndefined */](result) ? null : result;\n    };\n    /**\n     * Returns a value for a Date that's appropriate to put into a proto.\n     * DO NOT USE THIS FOR ANYTHING ELSE.\n     * This method cheats. It's typed as returning \"string\" because that's what\n     * our generated proto interfaces say dates must be. But it's easier and safer\n     * to actually return a Timestamp proto.\n     */\n    JsonProtoSerializer.prototype.toTimestamp = function (timestamp) {\n        return {\n            seconds: timestamp.seconds,\n            nanos: timestamp.nanos\n            // tslint:disable-next-line:no-any\n        };\n    };\n    JsonProtoSerializer.prototype.fromTimestamp = function (date) {\n        // The json interface (for the browser) will return an iso timestamp string,\n        // while the proto js library (for node) will return a\n        // google.protobuf.Timestamp instance.\n        if (typeof date === 'string') {\n            // TODO(b/37282237): Use strings for Proto3 timestamps\n            // assert(this.options.useProto3Json,\n            //   'The timestamp string format requires Proto3.');\n            return __WEBPACK_IMPORTED_MODULE_5__core_timestamp__[\"a\" /* Timestamp */].fromISOString(date);\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!!date, 'Cannot deserialize null or undefined timestamp.');\n            // TODO(b/37282237): Use strings for Proto3 timestamps\n            // assert(!this.options.useProto3Json,\n            //   'The timestamp instance format requires Proto JS.');\n            var seconds = parseInt64(date.seconds || '0');\n            var nanos = date.nanos || 0;\n            return new __WEBPACK_IMPORTED_MODULE_5__core_timestamp__[\"a\" /* Timestamp */](seconds, nanos);\n        }\n    };\n    /**\n     * Returns a value for bytes that's appropriate to put in a proto.\n     * DO NOT USE THIS FOR ANYTHING ELSE.\n     * This method cheats. It's typed as returning \"string\" because that's what\n     * our generated proto interfaces say bytes must be. But it should return\n     * an Uint8Array in Node.\n     */\n    JsonProtoSerializer.prototype.toBytes = function (bytes) {\n        if (this.options.useProto3Json) {\n            return bytes.toBase64();\n        }\n        else {\n            // The typings say it's a string, but it needs to be a Uint8Array in Node.\n            return this.unsafeCastProtoByteString(bytes.toUint8Array());\n        }\n    };\n    /**\n     * Parse the blob from the protos into the internal Blob class. Note that the\n     * typings assume all blobs are strings, but they are actually Uint8Arrays\n     * on Node.\n     */\n    JsonProtoSerializer.prototype.fromBlob = function (blob) {\n        if (typeof blob === 'string') {\n            Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(this.options.useProto3Json, 'Expected bytes to be passed in as Uint8Array, but got a string instead.');\n            return __WEBPACK_IMPORTED_MODULE_0__api_blob__[\"a\" /* Blob */].fromBase64String(blob);\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!this.options.useProto3Json, 'Expected bytes to be passed in as string, but got something else instead.');\n            return __WEBPACK_IMPORTED_MODULE_0__api_blob__[\"a\" /* Blob */].fromUint8Array(blob);\n        }\n    };\n    JsonProtoSerializer.prototype.toVersion = function (version) {\n        return this.toTimestamp(version.toTimestamp());\n    };\n    JsonProtoSerializer.prototype.fromVersion = function (version) {\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!!version, \"Trying to deserialize version that isn't set\");\n        return __WEBPACK_IMPORTED_MODULE_4__core_snapshot_version__[\"a\" /* SnapshotVersion */].fromTimestamp(this.fromTimestamp(version));\n    };\n    JsonProtoSerializer.prototype.toResourceName = function (databaseId, path) {\n        return this.fullyQualifiedPrefixPath(databaseId)\n            .child('documents')\n            .child(path)\n            .canonicalString();\n    };\n    JsonProtoSerializer.prototype.fromResourceName = function (name) {\n        var resource = __WEBPACK_IMPORTED_MODULE_11__model_path__[\"b\" /* ResourcePath */].fromString(name);\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(this.isValidResourceName(resource), 'Tried to deserialize invalid key ' + resource.toString());\n        return resource;\n    };\n    JsonProtoSerializer.prototype.toName = function (key) {\n        return this.toResourceName(this.databaseId, key.path);\n    };\n    JsonProtoSerializer.prototype.fromName = function (name) {\n        var resource = this.fromResourceName(name);\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(resource.get(1) === this.databaseId.projectId, 'Tried to deserialize key from different project: ' +\n            resource.get(1) +\n            ' vs ' +\n            this.databaseId.projectId);\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])((!resource.get(3) && !this.databaseId.database) ||\n            resource.get(3) === this.databaseId.database, 'Tried to deserialize key from different database: ' +\n            resource.get(3) +\n            ' vs ' +\n            this.databaseId.database);\n        return new __WEBPACK_IMPORTED_MODULE_8__model_document_key__[\"a\" /* DocumentKey */](this.extractLocalPathFromResourceName(resource));\n    };\n    JsonProtoSerializer.prototype.toQueryPath = function (path) {\n        if (path.length === 0) {\n            // If the path is empty, the backend requires we leave off the /documents\n            // at the end.\n            return this.encodedDatabaseId;\n        }\n        return this.toResourceName(this.databaseId, path);\n    };\n    JsonProtoSerializer.prototype.fromQueryPath = function (name) {\n        var resourceName = this.fromResourceName(name);\n        if (resourceName.length === 4) {\n            return __WEBPACK_IMPORTED_MODULE_11__model_path__[\"b\" /* ResourcePath */].EMPTY_PATH;\n        }\n        return this.extractLocalPathFromResourceName(resourceName);\n    };\n    Object.defineProperty(JsonProtoSerializer.prototype, \"encodedDatabaseId\", {\n        get: function () {\n            var path = new __WEBPACK_IMPORTED_MODULE_11__model_path__[\"b\" /* ResourcePath */]([\n                'projects',\n                this.databaseId.projectId,\n                'databases',\n                this.databaseId.database\n            ]);\n            return path.canonicalString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JsonProtoSerializer.prototype.fullyQualifiedPrefixPath = function (databaseId) {\n        return new __WEBPACK_IMPORTED_MODULE_11__model_path__[\"b\" /* ResourcePath */]([\n            'projects',\n            databaseId.projectId,\n            'databases',\n            databaseId.database\n        ]);\n    };\n    JsonProtoSerializer.prototype.extractLocalPathFromResourceName = function (resourceName) {\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(resourceName.length > 4 && resourceName.get(4) === 'documents', 'tried to deserialize invalid key ' + resourceName.toString());\n        return resourceName.popFirst(5);\n    };\n    JsonProtoSerializer.prototype.isValidResourceName = function (path) {\n        // Resource names have at least 4 components (project ID, database ID)\n        return (path.length >= 4 &&\n            path.get(0) === 'projects' &&\n            path.get(2) === 'databases');\n    };\n    JsonProtoSerializer.prototype.toValue = function (val) {\n        if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"h\" /* NullValue */]) {\n            return { nullValue: 'NULL_VALUE' };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"c\" /* BooleanValue */]) {\n            return { booleanValue: val.value() };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"g\" /* IntegerValue */]) {\n            return { integerValue: '' + val.value() };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"d\" /* DoubleValue */]) {\n            var doubleValue = val.value();\n            if (this.options.useProto3Json) {\n                // Proto 3 let's us encode NaN and Infinity as string values as\n                // expected by the backend. This is currently not checked by our unit\n                // tests because they rely on protobuf.js.\n                if (isNaN(doubleValue)) {\n                    return { doubleValue: 'NaN' };\n                }\n                else if (doubleValue === Infinity) {\n                    return { doubleValue: 'Infinity' };\n                }\n                else if (doubleValue === -Infinity) {\n                    return { doubleValue: '-Infinity' };\n                }\n            }\n            return { doubleValue: val.value() };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"l\" /* StringValue */]) {\n            return { stringValue: val.value() };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"i\" /* ObjectValue */]) {\n            return { mapValue: this.toMapValue(val) };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"a\" /* ArrayValue */]) {\n            return { arrayValue: this.toArrayValue(val) };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"m\" /* TimestampValue */]) {\n            return {\n                timestampValue: this.toTimestamp(val.internalValue)\n            };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"f\" /* GeoPointValue */]) {\n            return {\n                geoPointValue: {\n                    latitude: val.value().latitude,\n                    longitude: val.value().longitude\n                }\n            };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"b\" /* BlobValue */]) {\n            return {\n                bytesValue: this.toBytes(val.value())\n            };\n        }\n        else if (val instanceof __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"j\" /* RefValue */]) {\n            return {\n                referenceValue: this.toResourceName(val.databaseId, val.key.path)\n            };\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown FieldValue ' + JSON.stringify(val));\n        }\n    };\n    JsonProtoSerializer.prototype.fromValue = function (obj) {\n        var _this = this;\n        // tslint:disable-next-line:no-any\n        var type = obj['value_type'];\n        if (hasTag(obj, type, 'nullValue')) {\n            return __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"h\" /* NullValue */].INSTANCE;\n        }\n        else if (hasTag(obj, type, 'booleanValue')) {\n            return __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"c\" /* BooleanValue */].of(obj.booleanValue);\n        }\n        else if (hasTag(obj, type, 'integerValue')) {\n            return new __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"g\" /* IntegerValue */](parseInt64(obj.integerValue));\n        }\n        else if (hasTag(obj, type, 'doubleValue')) {\n            if (this.options.useProto3Json) {\n                // Proto 3 uses the string values 'NaN' and 'Infinity'.\n                if (obj.doubleValue === 'NaN') {\n                    return __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"d\" /* DoubleValue */].NAN;\n                }\n                else if (obj.doubleValue === 'Infinity') {\n                    return __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"d\" /* DoubleValue */].POSITIVE_INFINITY;\n                }\n                else if (obj.doubleValue === '-Infinity') {\n                    return __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"d\" /* DoubleValue */].NEGATIVE_INFINITY;\n                }\n            }\n            return new __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"d\" /* DoubleValue */](obj.doubleValue);\n        }\n        else if (hasTag(obj, type, 'stringValue')) {\n            return new __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"l\" /* StringValue */](obj.stringValue);\n        }\n        else if (hasTag(obj, type, 'mapValue')) {\n            return this.fromFields(obj.mapValue.fields || {});\n        }\n        else if (hasTag(obj, type, 'arrayValue')) {\n            // \"values\" is not present if the array is empty\n            assertPresent(obj.arrayValue, 'arrayValue');\n            var values = obj.arrayValue.values || [];\n            return new __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"a\" /* ArrayValue */](values.map(function (v) { return _this.fromValue(v); }));\n        }\n        else if (hasTag(obj, type, 'timestampValue')) {\n            assertPresent(obj.timestampValue, 'timestampValue');\n            return new __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"m\" /* TimestampValue */](this.fromTimestamp(obj.timestampValue));\n        }\n        else if (hasTag(obj, type, 'geoPointValue')) {\n            assertPresent(obj.geoPointValue, 'geoPointValue');\n            var latitude = obj.geoPointValue.latitude || 0;\n            var longitude = obj.geoPointValue.longitude || 0;\n            return new __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"f\" /* GeoPointValue */](new __WEBPACK_IMPORTED_MODULE_1__api_geo_point__[\"a\" /* GeoPoint */](latitude, longitude));\n        }\n        else if (hasTag(obj, type, 'bytesValue')) {\n            assertPresent(obj.bytesValue, 'bytesValue');\n            var blob = this.fromBlob(obj.bytesValue);\n            return new __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"b\" /* BlobValue */](blob);\n        }\n        else if (hasTag(obj, type, 'referenceValue')) {\n            assertPresent(obj.referenceValue, 'referenceValue');\n            var resourceName = this.fromResourceName(obj.referenceValue);\n            var dbId = new __WEBPACK_IMPORTED_MODULE_2__core_database_info__[\"a\" /* DatabaseId */](resourceName.get(1), resourceName.get(3));\n            var key = new __WEBPACK_IMPORTED_MODULE_8__model_document_key__[\"a\" /* DocumentKey */](this.extractLocalPathFromResourceName(resourceName));\n            return new __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"j\" /* RefValue */](dbId, key);\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown Value proto ' + JSON.stringify(obj));\n        }\n    };\n    /** Creates an api.Document from key and fields (but no create/update time) */\n    JsonProtoSerializer.prototype.toMutationDocument = function (key, fields) {\n        return {\n            name: this.toName(key),\n            fields: this.toFields(fields)\n        };\n    };\n    JsonProtoSerializer.prototype.toDocument = function (document) {\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!document.hasLocalMutations, \"Can't serialize documents with mutations.\");\n        return {\n            name: this.toName(document.key),\n            fields: this.toFields(document.data),\n            updateTime: this.toTimestamp(document.version.toTimestamp())\n        };\n    };\n    JsonProtoSerializer.prototype.fromDocument = function (document) {\n        return new __WEBPACK_IMPORTED_MODULE_7__model_document__[\"a\" /* Document */](this.fromName(document.name), this.fromVersion(document.updateTime), this.fromFields(document.fields || {}), { hasLocalMutations: false });\n    };\n    JsonProtoSerializer.prototype.toFields = function (fields) {\n        var _this = this;\n        var result = {};\n        fields.forEach(function (key, value) {\n            result[key] = _this.toValue(value);\n        });\n        return result;\n    };\n    JsonProtoSerializer.prototype.fromFields = function (object) {\n        var _this = this;\n        // Proto map<string, Value> gets mapped to Object, so cast it.\n        var map = object;\n        var result = __WEBPACK_IMPORTED_MODULE_9__model_field_value__[\"i\" /* ObjectValue */].EMPTY;\n        __WEBPACK_IMPORTED_MODULE_14__util_obj__[\"c\" /* forEach */](map, function (key, value) {\n            result = result.set(new __WEBPACK_IMPORTED_MODULE_11__model_path__[\"a\" /* FieldPath */]([key]), _this.fromValue(value));\n        });\n        return result;\n    };\n    JsonProtoSerializer.prototype.toMapValue = function (map) {\n        return {\n            fields: this.toFields(map)\n        };\n    };\n    JsonProtoSerializer.prototype.toArrayValue = function (array) {\n        var _this = this;\n        var result = [];\n        array.forEach(function (value) {\n            result.push(_this.toValue(value));\n        });\n        return { values: result };\n    };\n    JsonProtoSerializer.prototype.fromFound = function (doc) {\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!!doc.found, 'Tried to deserialize a found document from a missing document.');\n        assertPresent(doc.found.name, 'doc.found.name');\n        assertPresent(doc.found.updateTime, 'doc.found.updateTime');\n        var key = this.fromName(doc.found.name);\n        var version = this.fromVersion(doc.found.updateTime);\n        var fields = this.fromFields(doc.found.fields || {});\n        return new __WEBPACK_IMPORTED_MODULE_7__model_document__[\"a\" /* Document */](key, version, fields, { hasLocalMutations: false });\n    };\n    JsonProtoSerializer.prototype.fromMissing = function (result) {\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!!result.missing, 'Tried to deserialize a missing document from a found document.');\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!!result.readTime, 'Tried to deserialize a missing document without a read time.');\n        var key = this.fromName(result.missing);\n        var version = this.fromVersion(result.readTime);\n        return new __WEBPACK_IMPORTED_MODULE_7__model_document__[\"b\" /* NoDocument */](key, version);\n    };\n    JsonProtoSerializer.prototype.fromMaybeDocument = function (result) {\n        // tslint:disable-next-line:no-any\n        var type = result['result'];\n        if (hasTag(result, type, 'found')) {\n            return this.fromFound(result);\n        }\n        else if (hasTag(result, type, 'missing')) {\n            return this.fromMissing(result);\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('invalid batch get response: ' + JSON.stringify(result));\n    };\n    JsonProtoSerializer.prototype.toWatchTargetChangeState = function (state) {\n        switch (state) {\n            case __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].Added:\n                return 'ADD';\n            case __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].Current:\n                return 'CURRENT';\n            case __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].NoChange:\n                return 'NO_CHANGE';\n            case __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].Removed:\n                return 'REMOVE';\n            case __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].Reset:\n                return 'RESET';\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown WatchTargetChangeState: ' + state);\n        }\n    };\n    JsonProtoSerializer.prototype.toTestWatchChange = function (watchChange) {\n        if (watchChange instanceof __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"b\" /* ExistenceFilterChange */]) {\n            return {\n                filter: {\n                    count: watchChange.existenceFilter.count,\n                    targetId: watchChange.targetId\n                }\n            };\n        }\n        if (watchChange instanceof __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"a\" /* DocumentWatchChange */]) {\n            if (watchChange.newDoc instanceof __WEBPACK_IMPORTED_MODULE_7__model_document__[\"a\" /* Document */]) {\n                var doc = watchChange.newDoc;\n                return {\n                    documentChange: {\n                        document: {\n                            name: this.toName(doc.key),\n                            fields: this.toFields(doc.data),\n                            updateTime: this.toVersion(doc.version)\n                        },\n                        targetIds: watchChange.updatedTargetIds,\n                        removedTargetIds: watchChange.removedTargetIds\n                    }\n                };\n            }\n            else if (watchChange.newDoc instanceof __WEBPACK_IMPORTED_MODULE_7__model_document__[\"b\" /* NoDocument */]) {\n                var doc = watchChange.newDoc;\n                return {\n                    documentDelete: {\n                        document: this.toName(doc.key),\n                        readTime: this.toVersion(doc.version),\n                        removedTargetIds: watchChange.removedTargetIds\n                    }\n                };\n            }\n            else if (watchChange.newDoc === null) {\n                return {\n                    documentRemove: {\n                        document: this.toName(watchChange.key),\n                        removedTargetIds: watchChange.removedTargetIds\n                    }\n                };\n            }\n        }\n        if (watchChange instanceof __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"d\" /* WatchTargetChange */]) {\n            var cause = undefined;\n            if (watchChange.cause) {\n                cause = {\n                    code: Object(__WEBPACK_IMPORTED_MODULE_17__rpc_error__[\"e\" /* mapRpcCodeFromCode */])(watchChange.cause.code),\n                    message: watchChange.cause.message\n                };\n            }\n            return {\n                targetChange: {\n                    targetChangeType: this.toWatchTargetChangeState(watchChange.state),\n                    targetIds: watchChange.targetIds,\n                    resumeToken: this.unsafeCastProtoByteString(watchChange.resumeToken),\n                    cause: cause\n                }\n            };\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unrecognized watch change: ' + JSON.stringify(watchChange));\n    };\n    JsonProtoSerializer.prototype.fromWatchChange = function (change) {\n        // tslint:disable-next-line:no-any\n        var type = change['response_type'];\n        var watchChange;\n        if (hasTag(change, type, 'targetChange')) {\n            assertPresent(change.targetChange, 'targetChange');\n            // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n            // if unset\n            var state = this.fromWatchTargetChangeState(change.targetChange.targetChangeType || 'NO_CHANGE');\n            var targetIds = change.targetChange.targetIds || [];\n            var resumeToken = change.targetChange.resumeToken || this.emptyByteString();\n            var causeProto = change.targetChange.cause;\n            var cause = causeProto && this.fromRpcStatus(causeProto);\n            watchChange = new __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"d\" /* WatchTargetChange */](state, targetIds, resumeToken, cause || null);\n        }\n        else if (hasTag(change, type, 'documentChange')) {\n            assertPresent(change.documentChange, 'documentChange');\n            assertPresent(change.documentChange.document, 'documentChange.name');\n            assertPresent(change.documentChange.document.name, 'documentChange.document.name');\n            assertPresent(change.documentChange.document.updateTime, 'documentChange.document.updateTime');\n            var entityChange = change.documentChange;\n            var key = this.fromName(entityChange.document.name);\n            var version = this.fromVersion(entityChange.document.updateTime);\n            var fields = this.fromFields(entityChange.document.fields || {});\n            var doc = new __WEBPACK_IMPORTED_MODULE_7__model_document__[\"a\" /* Document */](key, version, fields, {\n                hasLocalMutations: false\n            });\n            var updatedTargetIds = entityChange.targetIds || [];\n            var removedTargetIds = entityChange.removedTargetIds || [];\n            watchChange = new __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"a\" /* DocumentWatchChange */](updatedTargetIds, removedTargetIds, doc.key, doc);\n        }\n        else if (hasTag(change, type, 'documentDelete')) {\n            assertPresent(change.documentDelete, 'documentDelete');\n            assertPresent(change.documentDelete.document, 'documentDelete.document');\n            var docDelete = change.documentDelete;\n            var key = this.fromName(docDelete.document);\n            var version = docDelete.readTime\n                ? this.fromVersion(docDelete.readTime)\n                : __WEBPACK_IMPORTED_MODULE_4__core_snapshot_version__[\"a\" /* SnapshotVersion */].forDeletedDoc();\n            var doc = new __WEBPACK_IMPORTED_MODULE_7__model_document__[\"b\" /* NoDocument */](key, version);\n            var removedTargetIds = docDelete.removedTargetIds || [];\n            watchChange = new __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"a\" /* DocumentWatchChange */]([], removedTargetIds, doc.key, doc);\n        }\n        else if (hasTag(change, type, 'documentRemove')) {\n            assertPresent(change.documentRemove, 'documentRemove');\n            assertPresent(change.documentRemove.document, 'documentRemove');\n            var docRemove = change.documentRemove;\n            var key = this.fromName(docRemove.document);\n            var removedTargetIds = docRemove.removedTargetIds || [];\n            watchChange = new __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"a\" /* DocumentWatchChange */]([], removedTargetIds, key, null);\n        }\n        else if (hasTag(change, type, 'filter')) {\n            // TODO(dimond): implement existence filter parsing with strategy.\n            assertPresent(change.filter, 'filter');\n            assertPresent(change.filter.targetId, 'filter.targetId');\n            var filter = change.filter;\n            var count = filter.count || 0;\n            var existenceFilter = new __WEBPACK_IMPORTED_MODULE_16__existence_filter__[\"a\" /* ExistenceFilter */](count);\n            var targetId = filter.targetId;\n            watchChange = new __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"b\" /* ExistenceFilterChange */](targetId, existenceFilter);\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown change type ' + JSON.stringify(change));\n        }\n        return watchChange;\n    };\n    JsonProtoSerializer.prototype.fromWatchTargetChangeState = function (state) {\n        if (state === 'NO_CHANGE') {\n            return __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].NoChange;\n        }\n        else if (state === 'ADD') {\n            return __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].Added;\n        }\n        else if (state === 'REMOVE') {\n            return __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].Removed;\n        }\n        else if (state === 'CURRENT') {\n            return __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].Current;\n        }\n        else if (state === 'RESET') {\n            return __WEBPACK_IMPORTED_MODULE_18__watch_change__[\"e\" /* WatchTargetChangeState */].Reset;\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Got unexpected TargetChange.state: ' + state);\n        }\n    };\n    JsonProtoSerializer.prototype.versionFromListenResponse = function (change) {\n        // We have only reached a consistent snapshot for the entire stream if there\n        // is a read_time set and it applies to all targets (i.e. the list of\n        // targets is empty). The backend is guaranteed to send such responses.\n        // tslint:disable-next-line:no-any\n        var type = change['response_type'];\n        if (!hasTag(change, type, 'targetChange')) {\n            return __WEBPACK_IMPORTED_MODULE_4__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN;\n        }\n        var targetChange = change.targetChange;\n        if (targetChange.targetIds && targetChange.targetIds.length) {\n            return __WEBPACK_IMPORTED_MODULE_4__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN;\n        }\n        if (!targetChange.readTime) {\n            return __WEBPACK_IMPORTED_MODULE_4__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN;\n        }\n        return this.fromVersion(targetChange.readTime);\n    };\n    JsonProtoSerializer.prototype.toMutation = function (mutation) {\n        var _this = this;\n        var result;\n        if (mutation instanceof __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"h\" /* SetMutation */]) {\n            result = {\n                update: this.toMutationDocument(mutation.key, mutation.value)\n            };\n        }\n        else if (mutation instanceof __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"a\" /* DeleteMutation */]) {\n            result = { delete: this.toName(mutation.key) };\n        }\n        else if (mutation instanceof __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"e\" /* PatchMutation */]) {\n            result = {\n                update: this.toMutationDocument(mutation.key, mutation.data),\n                updateMask: this.toDocumentMask(mutation.fieldMask)\n            };\n        }\n        else if (mutation instanceof __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"i\" /* TransformMutation */]) {\n            result = {\n                transform: {\n                    document: this.toName(mutation.key),\n                    fieldTransforms: mutation.fieldTransforms.map(function (transform) {\n                        return _this.toFieldTransform(transform);\n                    })\n                }\n            };\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown mutation type ' + mutation.type);\n        }\n        if (!mutation.precondition.isNone) {\n            result.currentDocument = this.toPrecondition(mutation.precondition);\n        }\n        return result;\n    };\n    JsonProtoSerializer.prototype.fromMutation = function (proto) {\n        var _this = this;\n        var precondition = proto.currentDocument\n            ? this.fromPrecondition(proto.currentDocument)\n            : __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"f\" /* Precondition */].NONE;\n        if (proto.update) {\n            assertPresent(proto.update.name, 'name');\n            var key = this.fromName(proto.update.name);\n            var value = this.fromFields(proto.update.fields || {});\n            if (proto.updateMask) {\n                var fieldMask = this.fromDocumentMask(proto.updateMask);\n                return new __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"e\" /* PatchMutation */](key, value, fieldMask, precondition);\n            }\n            else {\n                return new __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"h\" /* SetMutation */](key, value, precondition);\n            }\n        }\n        else if (proto.delete) {\n            var key = this.fromName(proto.delete);\n            return new __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"a\" /* DeleteMutation */](key, precondition);\n        }\n        else if (proto.transform) {\n            var key = this.fromName(proto.transform.document);\n            var fieldTransforms = proto.transform.fieldTransforms.map(function (transform) {\n                return _this.fromFieldTransform(transform);\n            });\n            Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(precondition.exists === true, 'Transforms only support precondition \"exists == true\"');\n            return new __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"i\" /* TransformMutation */](key, fieldTransforms);\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('unknown mutation proto: ' + JSON.stringify(proto));\n        }\n    };\n    JsonProtoSerializer.prototype.toPrecondition = function (precondition) {\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!precondition.isNone, \"Can't serialize an empty precondition\");\n        if (precondition.updateTime !== undefined) {\n            return {\n                updateTime: this.toVersion(precondition.updateTime)\n            };\n        }\n        else if (precondition.exists !== undefined) {\n            return { exists: precondition.exists };\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown precondition');\n        }\n    };\n    JsonProtoSerializer.prototype.fromPrecondition = function (precondition) {\n        if (precondition.updateTime !== undefined) {\n            return __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"f\" /* Precondition */].updateTime(this.fromVersion(precondition.updateTime));\n        }\n        else if (precondition.exists !== undefined) {\n            return __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"f\" /* Precondition */].exists(precondition.exists);\n        }\n        else {\n            return __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"f\" /* Precondition */].NONE;\n        }\n    };\n    JsonProtoSerializer.prototype.fromWriteResult = function (proto) {\n        var _this = this;\n        // NOTE: Deletes don't have an updateTime.\n        var version = proto.updateTime\n            ? this.fromVersion(proto.updateTime)\n            : null;\n        var transformResults = null;\n        if (proto.transformResults && proto.transformResults.length > 0) {\n            transformResults = proto.transformResults.map(function (result) {\n                return _this.fromValue(result);\n            });\n        }\n        return new __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"d\" /* MutationResult */](version, transformResults);\n    };\n    JsonProtoSerializer.prototype.fromWriteResults = function (protos) {\n        var _this = this;\n        return (protos || []).map(function (proto) { return _this.fromWriteResult(proto); });\n    };\n    JsonProtoSerializer.prototype.toFieldTransform = function (fieldTransform) {\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(fieldTransform.transform instanceof __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"g\" /* ServerTimestampTransform */], 'Unknown transform: ' + fieldTransform.transform);\n        return {\n            fieldPath: fieldTransform.field.canonicalString(),\n            setToServerValue: 'REQUEST_TIME'\n        };\n    };\n    JsonProtoSerializer.prototype.fromFieldTransform = function (proto) {\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(proto.setToServerValue === 'REQUEST_TIME', 'Unknown transform proto: ' + JSON.stringify(proto));\n        var fieldPath = __WEBPACK_IMPORTED_MODULE_11__model_path__[\"a\" /* FieldPath */].fromServerFormat(proto.fieldPath);\n        return new __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"c\" /* FieldTransform */](fieldPath, __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"g\" /* ServerTimestampTransform */].instance);\n    };\n    JsonProtoSerializer.prototype.toDocumentsTarget = function (query) {\n        return { documents: [this.toQueryPath(query.path)] };\n    };\n    JsonProtoSerializer.prototype.fromDocumentsTarget = function (documentsTarget) {\n        var count = documentsTarget.documents.length;\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(count === 1, 'DocumentsTarget contained other than 1 document: ' + count);\n        var name = documentsTarget.documents[0];\n        return __WEBPACK_IMPORTED_MODULE_3__core_query__[\"f\" /* Query */].atPath(this.fromQueryPath(name));\n    };\n    JsonProtoSerializer.prototype.toQueryTarget = function (query) {\n        // Dissect the path into parent, collectionId, and optional key filter.\n        var result = { structuredQuery: {} };\n        if (query.path.isEmpty()) {\n            result.parent = this.toQueryPath(__WEBPACK_IMPORTED_MODULE_11__model_path__[\"b\" /* ResourcePath */].EMPTY_PATH);\n        }\n        else {\n            var path = query.path;\n            Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(path.length % 2 !== 0, 'Document queries with filters are not supported.');\n            result.parent = this.toQueryPath(path.popLast());\n            result.structuredQuery.from = [{ collectionId: path.lastSegment() }];\n        }\n        var where = this.toFilter(query.filters);\n        if (where) {\n            result.structuredQuery.where = where;\n        }\n        var orderBy = this.toOrder(query.orderBy);\n        if (orderBy) {\n            result.structuredQuery.orderBy = orderBy;\n        }\n        var limit = this.toInt32Value(query.limit);\n        if (limit !== undefined) {\n            result.structuredQuery.limit = limit;\n        }\n        if (query.startAt) {\n            result.structuredQuery.startAt = this.toCursor(query.startAt);\n        }\n        if (query.endAt) {\n            result.structuredQuery.endAt = this.toCursor(query.endAt);\n        }\n        return result;\n    };\n    JsonProtoSerializer.prototype.fromQueryTarget = function (target) {\n        var path = this.fromQueryPath(target.parent);\n        var query = target.structuredQuery;\n        var fromCount = query.from ? query.from.length : 0;\n        if (fromCount > 0) {\n            Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(fromCount === 1, 'StructuredQuery.from with more than one collection is not supported.');\n            var from = query.from[0];\n            path = path.child(from.collectionId);\n        }\n        var filterBy = [];\n        if (query.where) {\n            filterBy = this.fromFilter(query.where);\n        }\n        var orderBy = [];\n        if (query.orderBy) {\n            orderBy = this.fromOrder(query.orderBy);\n        }\n        var limit = null;\n        if (query.limit) {\n            limit = this.fromInt32Value(query.limit);\n        }\n        var startAt = null;\n        if (query.startAt) {\n            startAt = this.fromCursor(query.startAt);\n        }\n        var endAt = null;\n        if (query.endAt) {\n            endAt = this.fromCursor(query.endAt);\n        }\n        return new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"f\" /* Query */](path, orderBy, filterBy, limit, startAt, endAt);\n    };\n    JsonProtoSerializer.prototype.toListenRequestLabels = function (queryData) {\n        var value = this.toLabel(queryData.purpose);\n        if (value == null) {\n            return null;\n        }\n        else {\n            return {\n                'goog-listen-tags': value\n            };\n        }\n    };\n    JsonProtoSerializer.prototype.toLabel = function (purpose) {\n        switch (purpose) {\n            case __WEBPACK_IMPORTED_MODULE_6__local_query_data__[\"b\" /* QueryPurpose */].Listen:\n                return null;\n            case __WEBPACK_IMPORTED_MODULE_6__local_query_data__[\"b\" /* QueryPurpose */].ExistenceFilterMismatch:\n                return 'existence-filter-mismatch';\n            case __WEBPACK_IMPORTED_MODULE_6__local_query_data__[\"b\" /* QueryPurpose */].LimboResolution:\n                return 'limbo-document';\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unrecognized query purpose: ' + purpose);\n        }\n    };\n    JsonProtoSerializer.prototype.toTarget = function (queryData) {\n        var result;\n        var query = queryData.query;\n        if (query.isDocumentQuery()) {\n            result = { documents: this.toDocumentsTarget(query) };\n        }\n        else {\n            result = { query: this.toQueryTarget(query) };\n        }\n        result.targetId = queryData.targetId;\n        if (queryData.resumeToken.length > 0) {\n            result.resumeToken = this.unsafeCastProtoByteString(queryData.resumeToken);\n        }\n        return result;\n    };\n    JsonProtoSerializer.prototype.toFilter = function (filters) {\n        var _this = this;\n        if (filters.length === 0)\n            return;\n        var protos = filters.map(function (filter) {\n            return filter instanceof __WEBPACK_IMPORTED_MODULE_3__core_query__[\"g\" /* RelationFilter */]\n                ? _this.toRelationFilter(filter)\n                : _this.toUnaryFilter(filter);\n        });\n        if (protos.length === 1) {\n            return protos[0];\n        }\n        return { compositeFilter: { op: 'AND', filters: protos } };\n    };\n    JsonProtoSerializer.prototype.fromFilter = function (filter) {\n        var _this = this;\n        if (!filter) {\n            return [];\n        }\n        else if (filter.unaryFilter !== undefined) {\n            return [this.fromUnaryFilter(filter)];\n        }\n        else if (filter.fieldFilter !== undefined) {\n            return [this.fromRelationFilter(filter)];\n        }\n        else if (filter.compositeFilter !== undefined) {\n            return filter.compositeFilter.filters\n                .map(function (f) { return _this.fromFilter(f); })\n                .reduce(function (accum, current) { return accum.concat(current); });\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown filter: ' + JSON.stringify(filter));\n        }\n    };\n    JsonProtoSerializer.prototype.toOrder = function (orderBys) {\n        var _this = this;\n        if (orderBys.length === 0)\n            return;\n        return orderBys.map(function (order) { return _this.toPropertyOrder(order); });\n    };\n    JsonProtoSerializer.prototype.fromOrder = function (orderBys) {\n        var _this = this;\n        return orderBys.map(function (order) { return _this.fromPropertyOrder(order); });\n    };\n    JsonProtoSerializer.prototype.toCursor = function (cursor) {\n        var _this = this;\n        return {\n            before: cursor.before,\n            values: cursor.position.map(function (component) { return _this.toValue(component); })\n        };\n    };\n    JsonProtoSerializer.prototype.fromCursor = function (cursor) {\n        var _this = this;\n        var before = !!cursor.before;\n        var position = cursor.values.map(function (component) { return _this.fromValue(component); });\n        return new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"a\" /* Bound */](position, before);\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toDirection = function (dir) {\n        return DIRECTIONS[dir.name];\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.fromDirection = function (dir) {\n        switch (dir) {\n            case 'ASCENDING':\n                return __WEBPACK_IMPORTED_MODULE_3__core_query__[\"b\" /* Direction */].ASCENDING;\n            case 'DESCENDING':\n                return __WEBPACK_IMPORTED_MODULE_3__core_query__[\"b\" /* Direction */].DESCENDING;\n            default:\n                return undefined;\n        }\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toOperatorName = function (op) {\n        return OPERATORS[op.name];\n    };\n    JsonProtoSerializer.prototype.fromOperatorName = function (op) {\n        switch (op) {\n            case 'EQUAL':\n                return __WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].EQUAL;\n            case 'GREATER_THAN':\n                return __WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].GREATER_THAN;\n            case 'GREATER_THAN_OR_EQUAL':\n                return __WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].GREATER_THAN_OR_EQUAL;\n            case 'LESS_THAN':\n                return __WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].LESS_THAN;\n            case 'LESS_THAN_OR_EQUAL':\n                return __WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].LESS_THAN_OR_EQUAL;\n            case 'OPERATOR_UNSPECIFIED':\n                return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unspecified relation');\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown relation');\n        }\n    };\n    JsonProtoSerializer.prototype.toFieldPathReference = function (path) {\n        return { fieldPath: path.canonicalString() };\n    };\n    JsonProtoSerializer.prototype.fromFieldPathReference = function (fieldReference) {\n        return __WEBPACK_IMPORTED_MODULE_11__model_path__[\"a\" /* FieldPath */].fromServerFormat(fieldReference.fieldPath);\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toPropertyOrder = function (orderBy) {\n        return {\n            field: this.toFieldPathReference(orderBy.field),\n            direction: this.toDirection(orderBy.dir)\n        };\n    };\n    JsonProtoSerializer.prototype.fromPropertyOrder = function (orderBy) {\n        return new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"e\" /* OrderBy */](this.fromFieldPathReference(orderBy.field), this.fromDirection(orderBy.direction));\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toRelationFilter = function (filter) {\n        if (filter instanceof __WEBPACK_IMPORTED_MODULE_3__core_query__[\"g\" /* RelationFilter */]) {\n            return {\n                fieldFilter: {\n                    field: this.toFieldPathReference(filter.field),\n                    op: this.toOperatorName(filter.op),\n                    value: this.toValue(filter.value)\n                }\n            };\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unrecognized filter: ' + JSON.stringify(filter));\n        }\n    };\n    JsonProtoSerializer.prototype.fromRelationFilter = function (filter) {\n        return new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"g\" /* RelationFilter */](this.fromFieldPathReference(filter.fieldFilter.field), this.fromOperatorName(filter.fieldFilter.op), this.fromValue(filter.fieldFilter.value));\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toUnaryFilter = function (filter) {\n        if (filter instanceof __WEBPACK_IMPORTED_MODULE_3__core_query__[\"c\" /* NanFilter */]) {\n            return {\n                unaryFilter: {\n                    field: this.toFieldPathReference(filter.field),\n                    op: 'IS_NAN'\n                }\n            };\n        }\n        else if (filter instanceof __WEBPACK_IMPORTED_MODULE_3__core_query__[\"d\" /* NullFilter */]) {\n            return {\n                unaryFilter: {\n                    field: this.toFieldPathReference(filter.field),\n                    op: 'IS_NULL'\n                }\n            };\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unrecognized filter: ' + JSON.stringify(filter));\n        }\n    };\n    JsonProtoSerializer.prototype.fromUnaryFilter = function (filter) {\n        switch (filter.unaryFilter.op) {\n            case 'IS_NAN':\n                var nanField = this.fromFieldPathReference(filter.unaryFilter.field);\n                return new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"c\" /* NanFilter */](nanField);\n            case 'IS_NULL':\n                var nullField = this.fromFieldPathReference(filter.unaryFilter.field);\n                return new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"d\" /* NullFilter */](nullField);\n            case 'OPERATOR_UNSPECIFIED':\n                return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unspecified filter');\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown filter');\n        }\n    };\n    JsonProtoSerializer.prototype.toDocumentMask = function (fieldMask) {\n        return {\n            fieldPaths: fieldMask.fields.map(function (field) { return field.canonicalString(); })\n        };\n    };\n    JsonProtoSerializer.prototype.fromDocumentMask = function (proto) {\n        var paths = proto.fieldPaths || [];\n        var fields = paths.map(function (path) { return __WEBPACK_IMPORTED_MODULE_11__model_path__[\"a\" /* FieldPath */].fromServerFormat(path); });\n        return new __WEBPACK_IMPORTED_MODULE_10__model_mutation__[\"b\" /* FieldMask */](fields);\n    };\n    return JsonProtoSerializer;\n}());\n\n/**\n * Checks for a specific oneof tag in a protocol buffer message.\n *\n * This intentionally accommodates two distinct cases:\n *\n * 1) Messages containing a type tag: these are the format produced by GRPC in\n * return values. These may contain default-value mappings for all tags in the\n * oneof but the type tag specifies which one was actually set.\n *\n * 2) Messages that don't contain a type tag: these are the format required by\n * GRPC as inputs. If we emitted objects with type tags, ProtoBuf.js would\n * choke claiming that the tags aren't fields in the Message.\n *\n * Allowing both formats here makes the serializer able to consume the outputs\n * it produces: for all messages it supports, fromX(toX(value)) == value.\n *\n * Note that case 2 suffers from ambiguity: if multiple tags are present\n * without a type tag then the callers are structured in such a way that the\n * first invocation will win. Since we only parse in this mode when parsing\n * the output of a serialize method this works, but it's not a general\n * solution.\n *\n * Unfortunately there is no general solution here because proto3 makes it\n * impossible to distinguish unset from explicitly set fields: both have the\n * default value for the type. Without the type tag but multiple value tags\n * it's possible to have default values for each tag in the oneof and not be\n * able to know which was actually in effect.\n */\nfunction hasTag(obj, type, tag) {\n    return type === tag || (!type && tag in obj);\n}\n\n//# sourceMappingURL=serializer.js.map\n\n\n/***/ }),\n/* 206 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DatabaseInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DatabaseId; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_misc__ = __webpack_require__(122);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar DatabaseInfo = /** @class */ (function () {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId The database to use.\n     * @param persistenceKey A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host The Firestore backend host to connect to.\n     * @param ssl Whether to use SSL when connecting.\n     */\n    function DatabaseInfo(databaseId, persistenceKey, host, ssl) {\n        this.databaseId = databaseId;\n        this.persistenceKey = persistenceKey;\n        this.host = host;\n        this.ssl = ssl;\n    }\n    return DatabaseInfo;\n}());\n\n/** The default database name for a project. */\nvar DEFAULT_DATABASE_NAME = '(default)';\n/** Represents the database ID a Firestore client is associated with. */\nvar DatabaseId = /** @class */ (function () {\n    function DatabaseId(projectId, database) {\n        this.projectId = projectId;\n        this.database = database ? database : DEFAULT_DATABASE_NAME;\n    }\n    Object.defineProperty(DatabaseId.prototype, \"isDefaultDatabase\", {\n        get: function () {\n            return this.database === DEFAULT_DATABASE_NAME;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DatabaseId.prototype.isEqual = function (other) {\n        return (other instanceof DatabaseId &&\n            other.projectId === this.projectId &&\n            other.database === this.database);\n    };\n    DatabaseId.prototype.compareTo = function (other) {\n        return (Object(__WEBPACK_IMPORTED_MODULE_0__util_misc__[\"f\" /* primitiveComparator */])(this.projectId, other.projectId) ||\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_misc__[\"f\" /* primitiveComparator */])(this.database, other.database));\n    };\n    return DatabaseId;\n}());\n\n\n//# sourceMappingURL=database_info.js.map\n\n\n/***/ }),\n/* 207 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DocumentWatchChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ExistenceFilterChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return WatchTargetChangeState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return WatchTargetChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return WatchChangeAggregator; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__platform_platform__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_obj__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__remote_event__ = __webpack_require__(143);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */\nvar DocumentWatchChange = /** @class */ (function () {\n    function DocumentWatchChange(\n        /** The new document applies to all of these targets. */\n        updatedTargetIds, \n        /** The new document is removed from all of these targets. */\n        removedTargetIds, \n        /** The key of the document for this change. */\n        key, \n        /**\n         * The new document or NoDocument if it was deleted. Is null if the\n         * document went out of view without the server sending a new document.\n         */\n        newDoc) {\n        this.updatedTargetIds = updatedTargetIds;\n        this.removedTargetIds = removedTargetIds;\n        this.key = key;\n        this.newDoc = newDoc;\n    }\n    return DocumentWatchChange;\n}());\n\nvar ExistenceFilterChange = /** @class */ (function () {\n    function ExistenceFilterChange(targetId, existenceFilter) {\n        this.targetId = targetId;\n        this.existenceFilter = existenceFilter;\n    }\n    return ExistenceFilterChange;\n}());\n\nvar WatchTargetChangeState;\n(function (WatchTargetChangeState) {\n    WatchTargetChangeState[WatchTargetChangeState[\"NoChange\"] = 0] = \"NoChange\";\n    WatchTargetChangeState[WatchTargetChangeState[\"Added\"] = 1] = \"Added\";\n    WatchTargetChangeState[WatchTargetChangeState[\"Removed\"] = 2] = \"Removed\";\n    WatchTargetChangeState[WatchTargetChangeState[\"Current\"] = 3] = \"Current\";\n    WatchTargetChangeState[WatchTargetChangeState[\"Reset\"] = 4] = \"Reset\";\n})(WatchTargetChangeState || (WatchTargetChangeState = {}));\nvar WatchTargetChange = /** @class */ (function () {\n    function WatchTargetChange(\n        /** What kind of change occurred to the watch target. */\n        state, \n        /** The target IDs that were added/removed/set. */\n        targetIds, \n        /**\n         * An opaque, server-assigned token that allows watching a query to be\n         * resumed after disconnecting without retransmitting all the data that\n         * matches the query. The resume token essentially identifies a point in\n         * time from which the server should resume sending results.\n         */\n        resumeToken, \n        /** An RPC error indicating why the watch failed. */\n        cause) {\n        if (resumeToken === void 0) { resumeToken = Object(__WEBPACK_IMPORTED_MODULE_1__platform_platform__[\"b\" /* emptyByteString */])(); }\n        if (cause === void 0) { cause = null; }\n        this.state = state;\n        this.targetIds = targetIds;\n        this.resumeToken = resumeToken;\n        this.cause = cause;\n    }\n    return WatchTargetChange;\n}());\n\n/**\n * A helper class to accumulate watch changes into a RemoteEvent and other\n * target information.\n */\nvar WatchChangeAggregator = /** @class */ (function () {\n    function WatchChangeAggregator(snapshotVersion, listenTargets, pendingTargetResponses) {\n        this.snapshotVersion = snapshotVersion;\n        this.listenTargets = listenTargets;\n        /** The existence filter - if any - for the given target IDs. */\n        this.existenceFilters = {};\n        /** Keeps track of the current target mappings */\n        this.targetChanges = {};\n        /** Keeps track of document to update */\n        this.documentUpdates = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"d\" /* maybeDocumentMap */])();\n        /** Whether this aggregator was frozen and can no longer be modified */\n        this.frozen = false;\n        this.pendingTargetResponses = __WEBPACK_IMPORTED_MODULE_3__util_obj__[\"f\" /* shallowCopy */](pendingTargetResponses);\n    }\n    /** Aggregates a watch change into the current state */\n    WatchChangeAggregator.prototype.add = function (watchChange) {\n        Object(__WEBPACK_IMPORTED_MODULE_2__util_assert__[\"a\" /* assert */])(!this.frozen, 'Trying to modify frozen WatchChangeAggregator.');\n        if (watchChange instanceof DocumentWatchChange) {\n            this.addDocumentChange(watchChange);\n        }\n        else if (watchChange instanceof WatchTargetChange) {\n            this.addTargetChange(watchChange);\n        }\n        else if (watchChange instanceof ExistenceFilterChange) {\n            this.addExistenceFilterChange(watchChange);\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_2__util_assert__[\"b\" /* fail */])('Unknown watch change: ' + watchChange);\n        }\n    };\n    /** Aggregates all provided watch changes to the current state in order */\n    WatchChangeAggregator.prototype.addChanges = function (watchChanges) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_2__util_assert__[\"a\" /* assert */])(!this.frozen, 'Trying to modify frozen WatchChangeAggregator.');\n        watchChanges.forEach(function (change) { return _this.add(change); });\n    };\n    /**\n     * Converts the current state into a remote event with the snapshot version\n     * provided via the constructor.\n     */\n    WatchChangeAggregator.prototype.createRemoteEvent = function () {\n        var _this = this;\n        var targetChanges = this.targetChanges;\n        // Remove all the non-active targets from the remote event.\n        __WEBPACK_IMPORTED_MODULE_3__util_obj__[\"d\" /* forEachNumber */](this.targetChanges, function (targetId) {\n            if (!_this.isActiveTarget(targetId)) {\n                delete targetChanges[targetId];\n            }\n        });\n        // Mark this aggregator as frozen so no further modifications are made\n        this.frozen = true;\n        return new __WEBPACK_IMPORTED_MODULE_4__remote_event__[\"b\" /* RemoteEvent */](this.snapshotVersion, targetChanges, this.documentUpdates);\n    };\n    WatchChangeAggregator.prototype.ensureTargetChange = function (targetId) {\n        var change = this.targetChanges[targetId];\n        if (!change) {\n            // Create an UpdateMapping by default, since resets are always explicit.\n            change = {\n                currentStatusUpdate: __WEBPACK_IMPORTED_MODULE_4__remote_event__[\"a\" /* CurrentStatusUpdate */].None,\n                snapshotVersion: this.snapshotVersion,\n                mapping: new __WEBPACK_IMPORTED_MODULE_4__remote_event__[\"d\" /* UpdateMapping */](),\n                resumeToken: Object(__WEBPACK_IMPORTED_MODULE_1__platform_platform__[\"b\" /* emptyByteString */])()\n            };\n            this.targetChanges[targetId] = change;\n        }\n        return change;\n    };\n    /**\n     * We need to wait for watch to ack targets before we process those events,\n     * so to know if a target is active, there must be no pending acks we're\n     * waiting for and it must be in the current list of targets that the client\n     * cares about.\n     *\n     * This method is visible for testing.\n     */\n    WatchChangeAggregator.prototype.isActiveTarget = function (targetId) {\n        return (!__WEBPACK_IMPORTED_MODULE_3__util_obj__[\"a\" /* contains */](this.pendingTargetResponses, targetId) &&\n            __WEBPACK_IMPORTED_MODULE_3__util_obj__[\"a\" /* contains */](this.listenTargets, targetId));\n    };\n    WatchChangeAggregator.prototype.addDocumentChange = function (docChange) {\n        var relevant = false;\n        for (var _i = 0, _a = docChange.updatedTargetIds; _i < _a.length; _i++) {\n            var targetId = _a[_i];\n            if (this.isActiveTarget(targetId)) {\n                var change = this.ensureTargetChange(targetId);\n                change.mapping.add(docChange.key);\n                relevant = true;\n            }\n        }\n        for (var _b = 0, _c = docChange.removedTargetIds; _b < _c.length; _b++) {\n            var targetId = _c[_b];\n            if (this.isActiveTarget(targetId)) {\n                var change = this.ensureTargetChange(targetId);\n                change.mapping.delete(docChange.key);\n                relevant = true;\n            }\n        }\n        // Only update the document if there is a new document to replace to an\n        // active target that is being listened to, this might be just a target\n        // update instead.\n        if (docChange.newDoc && relevant) {\n            this.documentUpdates = this.documentUpdates.insert(docChange.key, docChange.newDoc);\n        }\n    };\n    WatchChangeAggregator.prototype.addTargetChange = function (targetChange) {\n        var _this = this;\n        targetChange.targetIds.forEach(function (targetId) {\n            var change = _this.ensureTargetChange(targetId);\n            switch (targetChange.state) {\n                case WatchTargetChangeState.NoChange:\n                    if (_this.isActiveTarget(targetId)) {\n                        // Creating the change above satisfies the semantics of no-change.\n                        applyResumeToken(change, targetChange.resumeToken);\n                    }\n                    break;\n                case WatchTargetChangeState.Added:\n                    // We need to decrement the number of pending acks needed from watch\n                    // for this targetId.\n                    _this.recordTargetResponse(targetId);\n                    if (!__WEBPACK_IMPORTED_MODULE_3__util_obj__[\"a\" /* contains */](_this.pendingTargetResponses, targetId)) {\n                        // We have a freshly added target, so we need to reset any state\n                        // that we had previously This can happen e.g. when remove and add\n                        // back a target for existence filter mismatches.\n                        change.mapping = new __WEBPACK_IMPORTED_MODULE_4__remote_event__[\"d\" /* UpdateMapping */]();\n                        change.currentStatusUpdate = __WEBPACK_IMPORTED_MODULE_4__remote_event__[\"a\" /* CurrentStatusUpdate */].None;\n                        delete _this.existenceFilters[targetId];\n                    }\n                    applyResumeToken(change, targetChange.resumeToken);\n                    break;\n                case WatchTargetChangeState.Removed:\n                    // We need to keep track of removed targets to we can\n                    // post-filter and remove any target changes.\n                    // We need to decrement the number of pending acks needed from watch\n                    // for this targetId.\n                    _this.recordTargetResponse(targetId);\n                    Object(__WEBPACK_IMPORTED_MODULE_2__util_assert__[\"a\" /* assert */])(!targetChange.cause, 'WatchChangeAggregator does not handle errored targets');\n                    break;\n                case WatchTargetChangeState.Current:\n                    if (_this.isActiveTarget(targetId)) {\n                        change.currentStatusUpdate = __WEBPACK_IMPORTED_MODULE_4__remote_event__[\"a\" /* CurrentStatusUpdate */].MarkCurrent;\n                        applyResumeToken(change, targetChange.resumeToken);\n                    }\n                    break;\n                case WatchTargetChangeState.Reset:\n                    if (_this.isActiveTarget(targetId)) {\n                        // Overwrite any existing target mapping with a reset\n                        // mapping. Every subsequent update will modify the reset\n                        // mapping, not an update mapping.\n                        change.mapping = new __WEBPACK_IMPORTED_MODULE_4__remote_event__[\"c\" /* ResetMapping */]();\n                        applyResumeToken(change, targetChange.resumeToken);\n                    }\n                    break;\n                default:\n                    Object(__WEBPACK_IMPORTED_MODULE_2__util_assert__[\"b\" /* fail */])('Unknown target watch change state: ' + targetChange.state);\n            }\n        });\n    };\n    /**\n     * Record that we get a watch target add/remove by decrementing the number of\n     * pending target responses that we have.\n     */\n    WatchChangeAggregator.prototype.recordTargetResponse = function (targetId) {\n        var newCount = (this.pendingTargetResponses[targetId] || 0) - 1;\n        if (newCount === 0) {\n            delete this.pendingTargetResponses[targetId];\n        }\n        else {\n            this.pendingTargetResponses[targetId] = newCount;\n        }\n    };\n    WatchChangeAggregator.prototype.addExistenceFilterChange = function (change) {\n        if (this.isActiveTarget(change.targetId)) {\n            this.existenceFilters[change.targetId] = change.existenceFilter;\n        }\n    };\n    return WatchChangeAggregator;\n}());\n\n/**\n * Applies the resume token to the TargetChange, but only when it has a new\n * value. null and empty resumeTokens are discarded.\n */\nfunction applyResumeToken(change, resumeToken) {\n    if (resumeToken.length > 0) {\n        change.resumeToken = resumeToken;\n    }\n}\n\n//# sourceMappingURL=watch_change.js.map\n\n\n/***/ }),\n/* 208 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DocumentSet; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_sorted_map__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__document_key__ = __webpack_require__(120);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */\nvar DocumentSet = /** @class */ (function () {\n    /** The default ordering is by key if the comparator is omitted */\n    function DocumentSet(comp) {\n        // We are adding document key comparator to the end as it's the only\n        // guaranteed unique property of a document.\n        if (comp) {\n            this.comparator = function (d1, d2) {\n                return comp(d1, d2) || __WEBPACK_IMPORTED_MODULE_3__document_key__[\"a\" /* DocumentKey */].comparator(d1.key, d2.key);\n            };\n        }\n        else {\n            this.comparator = function (d1, d2) {\n                return __WEBPACK_IMPORTED_MODULE_3__document_key__[\"a\" /* DocumentKey */].comparator(d1.key, d2.key);\n            };\n        }\n        this.keyedMap = Object(__WEBPACK_IMPORTED_MODULE_2__collections__[\"b\" /* documentMap */])();\n        this.sortedSet = new __WEBPACK_IMPORTED_MODULE_1__util_sorted_map__[\"a\" /* SortedMap */](this.comparator);\n    }\n    /**\n     * Returns an empty copy of the existing DocumentSet, using the same\n     * comparator.\n     */\n    DocumentSet.emptySet = function (oldSet) {\n        return new DocumentSet(oldSet.comparator);\n    };\n    DocumentSet.prototype.has = function (key) {\n        return this.keyedMap.get(key) != null;\n    };\n    DocumentSet.prototype.get = function (key) {\n        return this.keyedMap.get(key);\n    };\n    DocumentSet.prototype.first = function () {\n        return this.sortedSet.minKey();\n    };\n    DocumentSet.prototype.last = function () {\n        return this.sortedSet.maxKey();\n    };\n    DocumentSet.prototype.isEmpty = function () {\n        return this.sortedSet.isEmpty();\n    };\n    /**\n     * Returns previous document or null if it's a first doc.\n     *\n     * @param key A key that MUST be present in the DocumentSet.\n     */\n    DocumentSet.prototype.prevDoc = function (key) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.has(key), 'Trying to get a previous document to non-existing key: ' + key);\n        var doc = this.keyedMap.get(key);\n        return this.sortedSet.getPredecessorKey(doc);\n    };\n    /**\n     * Returns the index of the provided key in the document set, or -1 if the\n     * document key is not present in the set;\n     */\n    DocumentSet.prototype.indexOf = function (key) {\n        var doc = this.keyedMap.get(key);\n        return doc ? this.sortedSet.indexOf(doc) : -1;\n    };\n    Object.defineProperty(DocumentSet.prototype, \"size\", {\n        get: function () {\n            return this.sortedSet.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Iterates documents in order defined by \"comparator\" */\n    DocumentSet.prototype.forEach = function (cb) {\n        this.sortedSet.inorderTraversal(function (k, v) {\n            cb(k);\n            return false;\n        });\n    };\n    /** Inserts or updates a document with the same key */\n    DocumentSet.prototype.add = function (doc) {\n        // First remove the element if we have it.\n        var set = this.delete(doc.key);\n        return set.copy(set.keyedMap.insert(doc.key, doc), set.sortedSet.insert(doc, null));\n    };\n    /** Deletes a document with a given key */\n    DocumentSet.prototype.delete = function (key) {\n        var doc = this.get(key);\n        if (!doc) {\n            return this;\n        }\n        return this.copy(this.keyedMap.remove(key), this.sortedSet.remove(doc));\n    };\n    DocumentSet.prototype.isEqual = function (other) {\n        if (!(other instanceof DocumentSet))\n            return false;\n        if (this.size !== other.size)\n            return false;\n        var thisIt = this.sortedSet.getIterator();\n        var otherIt = other.sortedSet.getIterator();\n        while (thisIt.hasNext()) {\n            var thisDoc = thisIt.getNext().key;\n            var otherDoc = otherIt.getNext().key;\n            if (!thisDoc.isEqual(otherDoc))\n                return false;\n        }\n        return true;\n    };\n    DocumentSet.prototype.toString = function () {\n        var docStrings = [];\n        this.forEach(function (doc) {\n            docStrings.push(doc.toString());\n        });\n        if (docStrings.length === 0) {\n            return 'DocumentSet ()';\n        }\n        else {\n            return 'DocumentSet (\\n  ' + docStrings.join('  \\n') + '\\n)';\n        }\n    };\n    DocumentSet.prototype.copy = function (keyedMap, sortedSet) {\n        var newSet = new DocumentSet();\n        newSet.comparator = this.comparator;\n        newSet.keyedMap = keyedMap;\n        newSet.sortedSet = sortedSet;\n        return newSet;\n    };\n    return DocumentSet;\n}());\n\n\n//# sourceMappingURL=document_set.js.map\n\n\n/***/ }),\n/* 209 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return EagerGarbageCollector; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__persistence_promise__ = __webpack_require__(124);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * A garbage collector implementation that eagerly collects documents as soon as\n * they're no longer referenced in any of its registered GarbageSources.\n *\n * This implementation keeps track of a set of keys that are potentially garbage\n * without keeping an exact reference count. During collectGarbage, the\n * collector verifies that all potential garbage keys actually have no\n * references by consulting its list of garbage sources.\n */\nvar EagerGarbageCollector = /** @class */ (function () {\n    function EagerGarbageCollector() {\n        this.isEager = true;\n        /**\n         * The garbage collectible sources to double-check during garbage collection.\n         */\n        this.sources = [];\n        /**\n         * A set of potentially garbage keys.\n         * PORTING NOTE: This would be a mutable set if Javascript had one.\n         */\n        this.potentialGarbage = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"a\" /* documentKeySet */])();\n    }\n    EagerGarbageCollector.prototype.addGarbageSource = function (garbageSource) {\n        this.sources.push(garbageSource);\n        garbageSource.setGarbageCollector(this);\n    };\n    EagerGarbageCollector.prototype.removeGarbageSource = function (garbageSource) {\n        this.sources.splice(this.sources.indexOf(garbageSource), 1);\n        garbageSource.setGarbageCollector(null);\n    };\n    EagerGarbageCollector.prototype.addPotentialGarbageKey = function (key) {\n        this.potentialGarbage = this.potentialGarbage.add(key);\n    };\n    EagerGarbageCollector.prototype.collectGarbage = function (txn) {\n        var _this = this;\n        var promises = [];\n        var garbageKeys = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"a\" /* documentKeySet */])();\n        this.potentialGarbage.forEach(function (key) {\n            var hasRefsPromise = _this.documentHasAnyReferences(txn, key);\n            promises.push(hasRefsPromise.next(function (hasRefs) {\n                // If there are no references, get the key.\n                if (!hasRefs) {\n                    garbageKeys = garbageKeys.add(key);\n                }\n                return __WEBPACK_IMPORTED_MODULE_1__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n            }));\n        });\n        // Clear locally retained potential keys and returned confirmed garbage.\n        this.potentialGarbage = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"a\" /* documentKeySet */])();\n        return __WEBPACK_IMPORTED_MODULE_1__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises).next(function () { return garbageKeys; });\n    };\n    EagerGarbageCollector.prototype.documentHasAnyReferences = function (txn, key) {\n        var initial = __WEBPACK_IMPORTED_MODULE_1__persistence_promise__[\"a\" /* PersistencePromise */].resolve(false);\n        return this.sources\n            .map(function (source) { return function () { return source.containsKey(txn, key); }; })\n            .reduce(function (promise, nextPromise) {\n            return promise.next(function (result) {\n                if (result) {\n                    return __WEBPACK_IMPORTED_MODULE_1__persistence_promise__[\"a\" /* PersistencePromise */].resolve(true);\n                }\n                else {\n                    return nextPromise();\n                }\n            });\n        }, initial);\n    };\n    return EagerGarbageCollector;\n}());\n\n\n//# sourceMappingURL=eager_garbage_collector.js.map\n\n\n/***/ }),\n/* 210 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TargetIdGenerator; });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar RESERVED_BITS = 1;\nvar GeneratorIds;\n(function (GeneratorIds) {\n    GeneratorIds[GeneratorIds[\"LocalStore\"] = 0] = \"LocalStore\";\n    GeneratorIds[GeneratorIds[\"SyncEngine\"] = 1] = \"SyncEngine\";\n})(GeneratorIds || (GeneratorIds = {}));\n/**\n * TargetIdGenerator generates monotonically increasing integer IDs. There are\n * separate generators for different scopes. While these generators will operate\n * independently of each other, they are scoped, such that no two generators\n * will ever produce the same ID. This is useful, because sometimes the backend\n * may group IDs from separate parts of the client into the same ID space.\n */\nvar TargetIdGenerator = /** @class */ (function () {\n    function TargetIdGenerator(generatorId, initAfter) {\n        if (initAfter === void 0) { initAfter = 0; }\n        this.generatorId = generatorId;\n        // Replace the generator part of initAfter with this generator's ID.\n        var afterWithoutGenerator = (initAfter >> RESERVED_BITS) << RESERVED_BITS;\n        var afterGenerator = initAfter - afterWithoutGenerator;\n        if (afterGenerator >= generatorId) {\n            // For example, if:\n            //   this.generatorId = 0b0000\n            //   after = 0b1011\n            //   afterGenerator = 0b0001\n            // Then:\n            //   previous = 0b1010\n            //   next = 0b1100\n            this.previousId = afterWithoutGenerator | this.generatorId;\n        }\n        else {\n            // For example, if:\n            //   this.generatorId = 0b0001\n            //   after = 0b1010\n            //   afterGenerator = 0b0000\n            // Then:\n            //   previous = 0b1001\n            //   next = 0b1011\n            this.previousId =\n                (afterWithoutGenerator | this.generatorId) - (1 << RESERVED_BITS);\n        }\n    }\n    TargetIdGenerator.prototype.next = function () {\n        this.previousId += 1 << RESERVED_BITS;\n        return this.previousId;\n    };\n    TargetIdGenerator.forLocalStore = function (initAfter) {\n        if (initAfter === void 0) { initAfter = 0; }\n        return new TargetIdGenerator(GeneratorIds.LocalStore, initAfter);\n    };\n    TargetIdGenerator.forSyncEngine = function () {\n        return new TargetIdGenerator(GeneratorIds.SyncEngine);\n    };\n    return TargetIdGenerator;\n}());\n\n\n//# sourceMappingURL=target_id_generator.js.map\n\n\n/***/ }),\n/* 211 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return FieldValueImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DeleteFieldValueImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return ServerTimestampFieldValueImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return PublicFieldValue; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_api__ = __webpack_require__(182);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * An opaque base class for FieldValue sentinel objects in our public API,\n * with public static methods for creating said sentinel objects.\n */\n// tslint:disable-next-line:class-as-namespace  We use this as a base class.\nvar FieldValueImpl = /** @class */ (function () {\n    function FieldValueImpl() {\n    }\n    FieldValueImpl.delete = function () {\n        return DeleteFieldValueImpl.instance;\n    };\n    FieldValueImpl.serverTimestamp = function () {\n        return ServerTimestampFieldValueImpl.instance;\n    };\n    FieldValueImpl.prototype.isEqual = function (other) {\n        return this === other;\n    };\n    return FieldValueImpl;\n}());\n\nvar DeleteFieldValueImpl = /** @class */ (function (_super) {\n    __extends(DeleteFieldValueImpl, _super);\n    function DeleteFieldValueImpl() {\n        return _super.call(this) || this;\n    }\n    /** Singleton instance. */\n    DeleteFieldValueImpl.instance = new DeleteFieldValueImpl();\n    return DeleteFieldValueImpl;\n}(FieldValueImpl));\n\nvar ServerTimestampFieldValueImpl = /** @class */ (function (_super) {\n    __extends(ServerTimestampFieldValueImpl, _super);\n    function ServerTimestampFieldValueImpl() {\n        return _super.call(this) || this;\n    }\n    /** Singleton instance. */\n    ServerTimestampFieldValueImpl.instance = new ServerTimestampFieldValueImpl();\n    return ServerTimestampFieldValueImpl;\n}(FieldValueImpl));\n\n// Public instance that disallows construction at runtime. This constructor is\n// used when exporting FieldValueImpl on firebase.firestore.FieldValue and will\n// be called FieldValue publicly. Internally we still use FieldValueImpl which\n// has a type-checked private constructor. Note that FieldValueImpl and\n// PublicFieldValue can be used interchangeably in instanceof checks.\n// For our internal TypeScript code PublicFieldValue doesn't exist as a type,\n// and so we need to use FieldValueImpl as type and export it too.\n// tslint:disable-next-line:variable-name  We treat this as a class name.\nvar PublicFieldValue = Object(__WEBPACK_IMPORTED_MODULE_0__util_api__[\"a\" /* makeConstructorPrivate */])(FieldValueImpl, 'Use FieldValue.<field>() instead.');\n\n//# sourceMappingURL=field_value.js.map\n\n\n/***/ }),\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */,\n/* 222 */,\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */,\n/* 229 */,\n/* 230 */,\n/* 231 */,\n/* 232 */,\n/* 233 */,\n/* 234 */,\n/* 235 */,\n/* 236 */,\n/* 237 */,\n/* 238 */,\n/* 239 */,\n/* 240 */,\n/* 241 */,\n/* 242 */,\n/* 243 */,\n/* 244 */,\n/* 245 */,\n/* 246 */,\n/* 247 */,\n/* 248 */,\n/* 249 */,\n/* 250 */,\n/* 251 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(176);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_firebase__ = __webpack_require__(252);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar GithubContributionsStats = __WEBPACK_IMPORTED_MODULE_2__data_firebase__[\"a\" /* withCollection */](/** @class */ (function (_super) {\n    __extends(GithubContributions, _super);\n    function GithubContributions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GithubContributions.prototype.render = function () {\n        var data = this.props.data;\n        var contributions = data\n            ? data.sort(function (a, b) { return a.id.localeCompare(b.id); }).reduce(function (contributions, contrib) {\n                var contribKind = contrib.isPrivate ? 'private' : 'public';\n                var contribs = contributions[contribKind];\n                if (contribs) {\n                    contribs.push(contrib);\n                }\n                else {\n                    contributions[contribKind] = [contrib];\n                }\n                return contributions;\n            }, {})\n            : {};\n        return (__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"container-fluid\" },\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"row\" }, Object.keys(contributions).map(function (kind) {\n                var contribs = contributions[kind];\n                return (__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { key: \"contributions-\" + kind, className: \"col-sm text-center\" },\n                    kind === 'public' ? 'Public' : 'Private',\n                    \" contributions :\",\n                    ' ',\n                    __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"strong\", { className: \"text-success\" }, contribs.length)));\n            })),\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"hr\", null),\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"row\" },\n                __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"section\", { className: \"container-fluid\" },\n                    __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"text-center\" },\n                        __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"h4\", null, \"Public contributions for all repositories\")),\n                    __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"card-deck mx-auto\" }, (contributions['public'] || [])\n                        .reduce(function (summary, contribution) {\n                        var repo = contribution.repo;\n                        var repoSummary = summary.find(function (s) { return s.repo === contribution.repo; });\n                        if (repoSummary) {\n                            repoSummary.issues += contribution.issueCount.authored;\n                            repoSummary.commits += contribution.commitsCount.authored;\n                            repoSummary.pullRequests +=\n                                contribution.pullRequestCount.authored.open +\n                                    contribution.pullRequestCount.authored.merged;\n                        }\n                        else {\n                            summary.push({\n                                repo: repo,\n                                commits: contribution.commitsCount.authored,\n                                issues: contribution.issueCount.authored,\n                                pullRequests: contribution.pullRequestCount.authored.open +\n                                    contribution.pullRequestCount.authored.merged,\n                            });\n                        }\n                        return summary;\n                    }, [])\n                        .filter(function (repoSummary) {\n                        return repoSummary.commits > 0 &&\n                            repoSummary.issues > 0 &&\n                            repoSummary.pullRequests > 0;\n                    })\n                        .map(function (repoSummary) { return (__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { key: repoSummary.repo, className: \"col-sm-6\" },\n                        __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"card\" },\n                            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"card-header text-center\" },\n                                __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"h5\", { className: \"card-title\" }, repoSummary.repo)),\n                            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"card-body text-justify\" },\n                                __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"card-text\" },\n                                    __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"ul\", { className: \"list-group list-group-flush\" },\n                                        __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"li\", { className: \"list-group-item\" },\n                                            \"Commits:\",\n                                            ' ',\n                                            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"span\", { className: \"badge badge-pill badge-dark\" }, repoSummary.commits)),\n                                        __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"li\", { className: \"list-group-item\" },\n                                            \"Issues:\",\n                                            ' ',\n                                            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"span\", { className: \"badge badge-pill badge-dark\" }, repoSummary.issues)),\n                                        __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"li\", { className: \"list-group-item\" },\n                                            \"Pull requests:\",\n                                            ' ',\n                                            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"span\", { className: \"badge badge-pill badge-dark\" }, repoSummary.pullRequests)))))))); }))))));\n    };\n    return GithubContributions;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"])), function (db) {\n    return db\n        .collection('contribution')\n        .where('platform', '==', 'github')\n        .orderBy('until', 'desc');\n}, function (doc) { return ({\n    id: doc.id,\n    repo: doc.data()['repo'],\n    isFork: doc.data()['is_fork'],\n    isPrivate: doc.data()['is_private'],\n    issueCount: {\n        total: doc.data()['issues_count']['total'],\n        authored: doc.data()['issues_count']['authored'],\n    },\n    commitsCount: {\n        total: doc.data()['commits_count']['total'],\n        authored: doc.data()['commits_count']['authored'],\n    },\n    pullRequestCount: {\n        total: {\n            open: doc.data()['pull_request_count']['total']['open'],\n            merged: doc.data()['pull_request_count']['total']['merged'],\n        },\n        authored: {\n            open: doc.data()['pull_request_count']['authored']['open'],\n            merged: doc.data()['pull_request_count']['authored']['merged'],\n        },\n    },\n}); });\nvar Meta = __WEBPACK_IMPORTED_MODULE_2__data_firebase__[\"b\" /* withDocument */](/** @class */ (function (_super) {\n    __extends(ContributionMeta, _super);\n    function ContributionMeta() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ContributionMeta.prototype.render = function () {\n        var data = this.props.data;\n        return data ? (__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"text-center\" },\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"h4\", null,\n                \"Last run : \", \"\" + __WEBPACK_IMPORTED_MODULE_1_moment__(data.date).format('DD-MM-YYYY')))) : null;\n    };\n    return ContributionMeta;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"])), function (db) { return db.collection('meta').doc('last_run'); }, function (doc) { return ({\n    id: doc.id,\n    date: doc.data()['date'],\n}); });\nvar GithubStats = /** @class */ (function (_super) {\n    __extends(GithubStats, _super);\n    function GithubStats() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GithubStats.prototype.render = function () {\n        return (__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"div\", { className: \"github\" },\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](Meta, null),\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](\"hr\", null),\n            __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](GithubContributionsStats, null)));\n    };\n    return GithubStats;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]));\n/* harmony default export */ __webpack_exports__[\"default\"] = (GithubStats);\n\n\n/***/ }),\n/* 252 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = withDocument;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = withCollection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__store__ = __webpack_require__(253);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\nfunction withDocument(Comp, query, transform) {\n    var WithFirestoreComponent = /** @class */ (function (_super) {\n        __extends(WithFirestoreComponent, _super);\n        function WithFirestoreComponent(props) {\n            var _this = _super.call(this, props) || this;\n            _this.state = {\n                db: __WEBPACK_IMPORTED_MODULE_1__store__[\"b\" /* ref */](),\n            };\n            return _this;\n        }\n        WithFirestoreComponent.prototype.componentWillMount = function () {\n            var _this = this;\n            var db = this.state.db;\n            switch (db.kind) {\n                case __WEBPACK_IMPORTED_MODULE_1__store__[\"a\" /* Status */].OK:\n                    this.setState({\n                        updateListener: query(db.ref).onSnapshot(function (snapshot) {\n                            _this.setState({\n                                data: transform(snapshot),\n                            });\n                        }),\n                    });\n                case __WEBPACK_IMPORTED_MODULE_1__store__[\"a\" /* Status */].Err:\n                    return;\n            }\n        };\n        WithFirestoreComponent.prototype.componentWillUnmount = function () {\n            var updateListener = this.state.updateListener;\n            updateListener && updateListener();\n        };\n        WithFirestoreComponent.prototype.render = function () {\n            var data = this.state.data;\n            return __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](Comp, __assign({ data: data }, this.props));\n        };\n        return WithFirestoreComponent;\n    }(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]));\n    return WithFirestoreComponent;\n}\nfunction withCollection(Comp, query, transform) {\n    var WithFirestoreComponent = /** @class */ (function (_super) {\n        __extends(WithFirestoreComponent, _super);\n        function WithFirestoreComponent(props) {\n            var _this = _super.call(this, props) || this;\n            _this.state = {\n                db: __WEBPACK_IMPORTED_MODULE_1__store__[\"b\" /* ref */](),\n            };\n            return _this;\n        }\n        WithFirestoreComponent.prototype.componentWillMount = function () {\n            var _this = this;\n            var db = this.state.db;\n            switch (db.kind) {\n                case __WEBPACK_IMPORTED_MODULE_1__store__[\"a\" /* Status */].OK:\n                    this.setState({\n                        updateListener: query(db.ref).onSnapshot(function (snapshot) {\n                            _this.setState({\n                                data: snapshot.docs.map(function (doc) { return transform(doc); }),\n                            });\n                        }),\n                    });\n                case __WEBPACK_IMPORTED_MODULE_1__store__[\"a\" /* Status */].Err:\n                    return;\n            }\n        };\n        WithFirestoreComponent.prototype.componentWillUnmount = function () {\n            var updateListener = this.state.updateListener;\n            updateListener && updateListener();\n        };\n        WithFirestoreComponent.prototype.render = function () {\n            var data = this.state.data;\n            return __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"](Comp, __assign({ data: data }, this.props));\n        };\n        return WithFirestoreComponent;\n    }(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]));\n    return WithFirestoreComponent;\n}\n\n\n/***/ }),\n/* 253 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Status; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ref; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_firebase_app__ = __webpack_require__(254);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_firebase_app___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_firebase_app__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_firebase_firestore__ = __webpack_require__(273);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_firebase_firestore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_firebase_firestore__);\n\n\nvar app = __WEBPACK_IMPORTED_MODULE_0_firebase_app__[\"initializeApp\"]({\n    apiKey: \"AIzaSyAvVi-BxqW-sOj1bN4CZK2Jmh2DQxrLKrE\",\n    messagingSenderId: \"479365693908\",\n    authDomain: \"korni-stats\" + \".firebaseapp.com\",\n    databaseURL: \"https://\" + \"korni-stats\" + \".firebaseio.com\",\n    projectId: \"korni-stats\",\n    storageBucket: \"korni-stats\" + \".appspot.com\",\n}, \"korni-stats\");\nvar Status;\n(function (Status) {\n    Status[Status[\"OK\"] = 0] = \"OK\";\n    Status[Status[\"Err\"] = 1] = \"Err\";\n})(Status || (Status = {}));\nvar ref = function () {\n    if (app && app.firestore) {\n        return {\n            kind: Status.OK,\n            ref: app.firestore(),\n        };\n    }\n    return {\n        kind: Status.Err,\n        message: 'Failed to initialize Firestore',\n    };\n};\n\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(255);\nmodule.exports = __webpack_require__(178).default;\n\n\n/***/ }),\n/* 255 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_polyfills_promise__ = __webpack_require__(256);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_polyfills_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__src_polyfills_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_shims_find__ = __webpack_require__(258);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_shims_find___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__src_shims_find__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_shims_findIndex__ = __webpack_require__(259);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_shims_findIndex___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__src_shims_findIndex__);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __global = (function () {\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    throw new Error('unable to locate global object');\n})();\n// Polyfill Promise\nif (typeof Promise === 'undefined') {\n    // HACK: TS throws an error if I attempt to use 'dot-notation'\n    __global['Promise'] = Promise = __webpack_require__(257);\n}\n\n//# sourceMappingURL=promise.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    return new Promise(function (resolve, reject) {\n      if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');\n      var args = Array.prototype.slice.call(arr);\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(162).setImmediate))\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * This is the Array.prototype.find polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * https://tc39.github.io/ecma262/#sec-array.prototype.find\n */\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function (predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return undefined.\n            return undefined;\n        }\n    });\n}\n\n//# sourceMappingURL=find.js.map\n\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * This is the Array.prototype.findIndex polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n * https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n */\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function (predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return -1.\n            return -1;\n        }\n    });\n}\n\n//# sourceMappingURL=findIndex.js.map\n\n\n/***/ }),\n/* 260 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createFirebaseNamespace;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_util__ = __webpack_require__(261);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_util__);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n// An array to capture listeners before the true auth functions\n// exist\nvar tokenListeners = [];\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nvar FirebaseAppImpl = /** @class */ (function () {\n    function FirebaseAppImpl(options, name, firebase_) {\n        this.firebase_ = firebase_;\n        this.isDeleted_ = false;\n        this.services_ = {};\n        this.name_ = name;\n        this.options_ = Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepCopy\"])(options);\n        this.INTERNAL = {\n            getUid: function () { return null; },\n            getToken: function () { return Promise.resolve(null); },\n            addAuthTokenListener: function (callback) {\n                tokenListeners.push(callback);\n                // Make sure callback is called, asynchronously, in the absence of the auth module\n                setTimeout(function () { return callback(null); }, 0);\n            },\n            removeAuthTokenListener: function (callback) {\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\n            }\n        };\n    }\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.options_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAppImpl.prototype.delete = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.checkDestroyed_();\n            resolve();\n        })\n            .then(function () {\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\n            var services = [];\n            Object.keys(_this.services_).forEach(function (serviceKey) {\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n                    services.push(_this.services_[serviceKey][instanceKey]);\n                });\n            });\n            return Promise.all(services.map(function (service) {\n                return service.INTERNAL.delete();\n            }));\n        })\n            .then(function () {\n            _this.isDeleted_ = true;\n            _this.services_ = {};\n        });\n    };\n    /**\n     * Return a service instance associated with this app (creating it\n     * on demand), identified by the passed instanceIdentifier.\n     *\n     * NOTE: Currently storage is the only one that is leveraging this\n     * functionality. They invoke it by calling:\n     *\n     * ```javascript\n     * firebase.app().storage('STORAGE BUCKET ID')\n     * ```\n     *\n     * The service name is passed to this already\n     * @internal\n     */\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\n        this.checkDestroyed_();\n        if (!this.services_[name]) {\n            this.services_[name] = {};\n        }\n        if (!this.services_[name][instanceIdentifier]) {\n            /**\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\n             * then we will pass that instance on, otherwise we pass `null`\n             */\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\n                ? instanceIdentifier\n                : undefined;\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n            this.services_[name][instanceIdentifier] = service;\n        }\n        return this.services_[name][instanceIdentifier];\n    };\n    /**\n     * Callback function used to extend an App instance at the time\n     * of service instance creation.\n     */\n    FirebaseAppImpl.prototype.extendApp = function (props) {\n        var _this = this;\n        // Copy the object onto the FirebaseAppImpl prototype\n        Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(this, props);\n        /**\n         * If the app has overwritten the addAuthTokenListener stub, forward\n         * the active token listeners on to the true fxn.\n         *\n         * TODO: This function is required due to our current module\n         * structure. Once we are able to rely strictly upon a single module\n         * implementation, this code should be refactored and Auth should\n         * provide these stubs and the upgrade logic\n         */\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n            tokenListeners.forEach(function (listener) {\n                _this.INTERNAL.addAuthTokenListener(listener);\n            });\n            tokenListeners = [];\n        }\n    };\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            error('app-deleted', { name: this.name_ });\n        }\n    };\n    return FirebaseAppImpl;\n}());\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n    FirebaseAppImpl.prototype.delete ||\n    console.log('dc');\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nfunction createFirebaseNamespace() {\n    var apps_ = {};\n    var factories = {};\n    var appHooks = {};\n    // A namespace is a plain JavaScript Object.\n    var namespace = {\n        // Hack to prevent Babel from modifying the object returned\n        // as the firebase namespace.\n        __esModule: true,\n        initializeApp: initializeApp,\n        app: app,\n        apps: null,\n        Promise: Promise,\n        SDK_VERSION: '4.9.0',\n        INTERNAL: {\n            registerService: registerService,\n            createFirebaseNamespace: createFirebaseNamespace,\n            extendNamespace: extendNamespace,\n            createSubscribe: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"createSubscribe\"],\n            ErrorFactory: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"ErrorFactory\"],\n            removeApp: removeApp,\n            factories: factories,\n            useAsService: useAsService,\n            Promise: Promise,\n            deepExtend: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"]\n        }\n    };\n    // Inject a circular default export to allow Babel users who were previously\n    // using:\n    //\n    //   import firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase').default;\n    //\n    // instead of\n    //\n    //   import * as firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase');\n    Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"patchProperty\"])(namespace, 'default', namespace);\n    // firebase.apps is a read-only getter.\n    Object.defineProperty(namespace, 'apps', {\n        get: getApps\n    });\n    /**\n     * Called by App.delete() - but before any services associated with the App\n     * are deleted.\n     */\n    function removeApp(name) {\n        var app = apps_[name];\n        callAppHooks(app, 'delete');\n        delete apps_[name];\n    }\n    /**\n     * Get the App object for a given name (or DEFAULT).\n     */\n    function app(name) {\n        name = name || DEFAULT_ENTRY_NAME;\n        if (!contains(apps_, name)) {\n            error('no-app', { name: name });\n        }\n        return apps_[name];\n    }\n    Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"patchProperty\"])(app, 'App', FirebaseAppImpl);\n    /**\n     * Create a new App instance (name must be unique).\n     */\n    function initializeApp(options, name) {\n        if (name === undefined) {\n            name = DEFAULT_ENTRY_NAME;\n        }\n        else {\n            if (typeof name !== 'string' || name === '') {\n                error('bad-app-name', { name: name + '' });\n            }\n        }\n        if (contains(apps_, name)) {\n            error('duplicate-app', { name: name });\n        }\n        var app = new FirebaseAppImpl(options, name, namespace);\n        apps_[name] = app;\n        callAppHooks(app, 'create');\n        return app;\n    }\n    /*\n     * Return an array of all the non-deleted FirebaseApps.\n     */\n    function getApps() {\n        // Make a copy so caller cannot mutate the apps list.\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\n    }\n    /*\n     * Register a Firebase Service.\n     *\n     * firebase.INTERNAL.registerService()\n     *\n     * TODO: Implement serviceProperties.\n     */\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n        // Cannot re-register a service that already exists\n        if (factories[name]) {\n            error('duplicate-service', { name: name });\n        }\n        // Capture the service factory for later service instantiation\n        factories[name] = createService;\n        // Capture the appHook, if passed\n        if (appHook) {\n            appHooks[name] = appHook;\n            // Run the **new** app hook on all existing apps\n            getApps().forEach(function (app) {\n                appHook('create', app);\n            });\n        }\n        // The Service namespace is an accessor function ...\n        var serviceNamespace = function (appArg) {\n            if (appArg === void 0) { appArg = app(); }\n            if (typeof appArg[name] !== 'function') {\n                // Invalid argument.\n                // This happens in the following case: firebase.storage('gs:/')\n                error('invalid-app-argument', { name: name });\n            }\n            // Forward service instance lookup to the FirebaseApp.\n            return appArg[name]();\n        };\n        // ... and a container for service-level properties.\n        if (serviceProperties !== undefined) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(serviceNamespace, serviceProperties);\n        }\n        // Monkey-patch the serviceNamespace onto the firebase namespace\n        namespace[name] = serviceNamespace;\n        // Patch the FirebaseAppImpl prototype\n        FirebaseAppImpl.prototype[name] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var serviceFxn = this._getService.bind(this, name);\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n        };\n        return serviceNamespace;\n    }\n    /**\n     * Patch the top-level firebase namespace with additional properties.\n     *\n     * firebase.INTERNAL.extendNamespace()\n     */\n    function extendNamespace(props) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(namespace, props);\n    }\n    function callAppHooks(app, eventName) {\n        Object.keys(factories).forEach(function (serviceName) {\n            // Ignore virtual services\n            var factoryName = useAsService(app, serviceName);\n            if (factoryName === null) {\n                return;\n            }\n            if (appHooks[factoryName]) {\n                appHooks[factoryName](eventName, app);\n            }\n        });\n    }\n    // Map the requested service to a registered service name\n    // (used to map auth to serverAuth service when needed).\n    function useAsService(app, name) {\n        if (name === 'serverAuth') {\n            return null;\n        }\n        var useService = name;\n        var options = app.options;\n        return useService;\n    }\n    return namespace;\n}\nfunction error(code, args) {\n    throw appErrors.create(code, args);\n}\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nvar errors = {\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\n        'call Firebase App.initializeApp()',\n    'bad-app-name': \"Illegal App name: '{$name}\",\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\n        'account is only allowed in a Node.js environment. On client ' +\n        'devices, you should instead initialize the SDK with an api key and ' +\n        'auth domain',\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\n        'Firebase App instance.'\n};\nvar appErrors = new __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"ErrorFactory\"]('app', 'Firebase', errors);\n\n\n//# sourceMappingURL=firebaseApp.js.map\n\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(201));\n__export(__webpack_require__(202));\n__export(__webpack_require__(179));\n__export(__webpack_require__(262));\n__export(__webpack_require__(263));\n__export(__webpack_require__(264));\n__export(__webpack_require__(265));\n__export(__webpack_require__(203));\n__export(__webpack_require__(266));\n__export(__webpack_require__(204));\n__export(__webpack_require__(267));\n__export(__webpack_require__(268));\n__export(__webpack_require__(270));\n__export(__webpack_require__(271));\n__export(__webpack_require__(272));\n\n//# sourceMappingURL=index.js.map\n\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\nexports.deepCopy = deepCopy;\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!source.hasOwnProperty(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\nexports.deepExtend = deepExtend;\n// TODO: Really needed (for JSCompiler type checking)?\nfunction patchProperty(obj, prop, value) {\n    obj[prop] = value;\n}\nexports.patchProperty = patchProperty;\n\n//# sourceMappingURL=deepCopy.js.map\n\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    /**\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\n     * @return {!function(?(Error), ?=)}\n     */\n    Deferred.prototype.wrapCallback = function (callback) {\n        var _this = this;\n        return function (error, value) {\n            if (error) {\n                _this.reject(error);\n            }\n            else {\n                _this.resolve(value);\n            }\n            if (typeof callback === 'function') {\n                // Attaching noop handler just in case developer wasn't expecting\n                // promises\n                _this.promise.catch(function () { });\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (callback.length === 1) {\n                    callback(error);\n                }\n                else {\n                    callback(error, value);\n                }\n            }\n        };\n    };\n    return Deferred;\n}());\nexports.Deferred = Deferred;\n\n//# sourceMappingURL=deferred.js.map\n\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = __webpack_require__(179);\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nexports.getUA = function () {\n    if (typeof navigator !== 'undefined' &&\n        typeof navigator['userAgent'] === 'string') {\n        return navigator['userAgent'];\n    }\n    else {\n        return '';\n    }\n};\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nexports.isMobileCordova = function () {\n    return (typeof window !== 'undefined' &&\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(exports.getUA()));\n};\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nexports.isReactNative = function () {\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\n};\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nexports.isNodeSdk = function () {\n    return constants_1.CONSTANTS.NODE_CLIENT === true || constants_1.CONSTANTS.NODE_ADMIN === true;\n};\n\n//# sourceMappingURL=environment.js.map\n\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERROR_NAME = 'FirebaseError';\nvar captureStackTrace = Error\n    .captureStackTrace;\n// Export for faking in tests\nfunction patchCapture(captureFake) {\n    var result = captureStackTrace;\n    captureStackTrace = captureFake;\n    return result;\n}\nexports.patchCapture = patchCapture;\nvar FirebaseError = /** @class */ (function () {\n    function FirebaseError(code, message) {\n        this.code = code;\n        this.message = message;\n        var stack;\n        // We want the stack value, if implemented by Error\n        if (captureStackTrace) {\n            // Patches this.stack, omitted calls above ErrorFactory#create\n            captureStackTrace(this, ErrorFactory.prototype.create);\n        }\n        else {\n            var err_1 = Error.apply(this, arguments);\n            this.name = ERROR_NAME;\n            // Make non-enumerable getter for the property.\n            Object.defineProperty(this, 'stack', {\n                get: function () {\n                    return err_1.stack;\n                }\n            });\n        }\n    }\n    return FirebaseError;\n}());\nexports.FirebaseError = FirebaseError;\n// Back-door inheritance\nFirebaseError.prototype = Object.create(Error.prototype);\nFirebaseError.prototype.constructor = FirebaseError;\nFirebaseError.prototype.name = ERROR_NAME;\nvar ErrorFactory = /** @class */ (function () {\n    function ErrorFactory(service, serviceName, errors) {\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n        // Matches {$name}, by default.\n        this.pattern = /\\{\\$([^}]+)}/g;\n        // empty\n    }\n    ErrorFactory.prototype.create = function (code, data) {\n        if (data === undefined) {\n            data = {};\n        }\n        var template = this.errors[code];\n        var fullCode = this.service + '/' + code;\n        var message;\n        if (template === undefined) {\n            message = 'Error';\n        }\n        else {\n            message = template.replace(this.pattern, function (match, key) {\n                var value = data[key];\n                return value !== undefined ? value.toString() : '<' + key + '?>';\n            });\n        }\n        // Service: Error message (service/code).\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\n        var err = new FirebaseError(fullCode, message);\n        // Populate the Error object with message parts for programmatic\n        // accesses (e.g., e.file).\n        for (var prop in data) {\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\n                continue;\n            }\n            err[prop] = data[prop];\n        }\n        return err;\n    };\n    return ErrorFactory;\n}());\nexports.ErrorFactory = ErrorFactory;\n\n//# sourceMappingURL=errors.js.map\n\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypt_1 = __webpack_require__(202);\nvar json_1 = __webpack_require__(203);\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {{header: *, claims: *, data: *, signature: string}}\n */\nexports.decode = function (token) {\n    var header = {}, claims = {}, data = {}, signature = '';\n    try {\n        var parts = token.split('.');\n        header = json_1.jsonEval(crypt_1.base64Decode(parts[0]) || '');\n        claims = json_1.jsonEval(crypt_1.base64Decode(parts[1]) || '');\n        signature = parts[2];\n        data = claims['d'] || {};\n        delete claims['d'];\n    }\n    catch (e) { }\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isValidTimestamp = function (token) {\n    var claims = exports.decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\n    if (typeof claims === 'object') {\n        if (claims.hasOwnProperty('nbf')) {\n            validSince = claims['nbf'];\n        }\n        else if (claims.hasOwnProperty('iat')) {\n            validSince = claims['iat'];\n        }\n        if (claims.hasOwnProperty('exp')) {\n            validUntil = claims['exp'];\n        }\n        else {\n            // token will expire after 24h by default\n            validUntil = validSince + 86400;\n        }\n    }\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\n};\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {?number}\n */\nexports.issuedAtTime = function (token) {\n    var claims = exports.decode(token).claims;\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n        return claims['iat'];\n    }\n    return null;\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\n * signature.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isValidFormat = function (token) {\n    var decoded = exports.decode(token), claims = decoded.claims;\n    return (!!decoded.signature &&\n        !!claims &&\n        typeof claims === 'object' &&\n        claims.hasOwnProperty('iat'));\n};\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isAdmin = function (token) {\n    var claims = exports.decode(token).claims;\n    return typeof claims === 'object' && claims['admin'] === true;\n};\n\n//# sourceMappingURL=jwt.js.map\n\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar obj_1 = __webpack_require__(204);\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nexports.querystring = function (querystringParams) {\n    var params = [];\n    obj_1.forEach(querystringParams, function (key, value) {\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayVal) {\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n            });\n        }\n        else {\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        }\n    });\n    return params.length ? '&' + params.join('&') : '';\n};\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\nexports.querystringDecode = function (querystring) {\n    var obj = {};\n    var tokens = querystring.replace(/^\\?/, '').split('&');\n    tokens.forEach(function (token) {\n        if (token) {\n            var key = token.split('=');\n            obj[key[0]] = key[1];\n        }\n    });\n    return obj;\n};\n\n//# sourceMappingURL=query.js.map\n\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_1 = __webpack_require__(269);\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @extends {Hash}\n * @final\n * @struct\n */\nvar Sha1 = /** @class */ (function (_super) {\n    __extends(Sha1, _super);\n    function Sha1() {\n        var _this = _super.call(this) || this;\n        /**\n         * Holds the previous values of accumulated variables a-e in the compress_\n         * function.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.chain_ = [];\n        /**\n         * A buffer holding the partially computed hash result.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.buf_ = [];\n        /**\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n         * as the message schedule in the docs.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.W_ = [];\n        /**\n         * Contains data needed to pad messages less than 64 bytes.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.pad_ = [];\n        /**\n         * @private {number}\n         */\n        _this.inbuf_ = 0;\n        /**\n         * @private {number}\n         */\n        _this.total_ = 0;\n        _this.blockSize = 512 / 8;\n        _this.pad_[0] = 128;\n        for (var i = 1; i < _this.blockSize; ++i) {\n            _this.pad_[i] = 0;\n        }\n        _this.reset();\n        return _this;\n    }\n    Sha1.prototype.reset = function () {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    };\n    /**\n     * Internal compress helper function.\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\n     * @param {number=} opt_offset Offset of the block in the buffer.\n     * @private\n     */\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\n        if (!opt_offset) {\n            opt_offset = 0;\n        }\n        var W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (var i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] =\n                    (buf.charCodeAt(opt_offset) << 24) |\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\n                        buf.charCodeAt(opt_offset + 3);\n                opt_offset += 4;\n            }\n        }\n        else {\n            for (var i = 0; i < 16; i++) {\n                W[i] =\n                    (buf[opt_offset] << 24) |\n                        (buf[opt_offset + 1] << 16) |\n                        (buf[opt_offset + 2] << 8) |\n                        buf[opt_offset + 3];\n                opt_offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (var i = 16; i < 80; i++) {\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n        }\n        var a = this.chain_[0];\n        var b = this.chain_[1];\n        var c = this.chain_[2];\n        var d = this.chain_[3];\n        var e = this.chain_[4];\n        var f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (var i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ (b & (c ^ d));\n                    k = 0x5a827999;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            }\n            else {\n                if (i < 60) {\n                    f = (b & c) | (d & (b | c));\n                    k = 0x8f1bbcdc;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n            e = d;\n            d = c;\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n    };\n    Sha1.prototype.update = function (bytes, opt_length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (opt_length === undefined) {\n            opt_length = bytes.length;\n        }\n        var lengthMinusBlock = opt_length - this.blockSize;\n        var n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        var buf = this.buf_;\n        var inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < opt_length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf == 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n            else {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += opt_length;\n    };\n    /** @override */\n    Sha1.prototype.digest = function () {\n        var digest = [];\n        var totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        }\n        else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (var i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        var n = 0;\n        for (var i = 0; i < 5; i++) {\n            for (var j = 24; j >= 0; j -= 8) {\n                digest[n] = (this.chain_[i] >> j) & 255;\n                ++n;\n            }\n        }\n        return digest;\n    };\n    return Sha1;\n}(hash_1.Hash));\nexports.Sha1 = Sha1;\n\n//# sourceMappingURL=sha1.js.map\n\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See Sha1 and Md5 for sample implementations.\n *\n */\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        /**\n         * The block size for the hasher.\n         * @type {number}\n         */\n        this.blockSize = -1;\n    }\n    return Hash;\n}());\nexports.Hash = Hash;\n\n//# sourceMappingURL=hash.js.map\n\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nfunction createSubscribe(executor, onNoObservers) {\n    var proxy = new ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\nexports.createSubscribe = createSubscribe;\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nvar ObserverProxy = /** @class */ (function () {\n    /**\n     * @param executor Function which can make calls to a single Observer\n     *     as a proxy.\n     * @param onNoObservers Callback when count of Observers goes to zero.\n     */\n    function ObserverProxy(executor, onNoObservers) {\n        var _this = this;\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = Promise.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task\n            .then(function () {\n            executor(_this);\n        })\n            .catch(function (e) {\n            _this.error(e);\n        });\n    }\n    ObserverProxy.prototype.next = function (value) {\n        this.forEachObserver(function (observer) {\n            observer.next(value);\n        });\n    };\n    ObserverProxy.prototype.error = function (error) {\n        this.forEachObserver(function (observer) {\n            observer.error(error);\n        });\n        this.close(error);\n    };\n    ObserverProxy.prototype.complete = function () {\n        this.forEachObserver(function (observer) {\n            observer.complete();\n        });\n        this.close();\n    };\n    /**\n     * Subscribe function that can be used to add an Observer to the fan-out list.\n     *\n     * - We require that no event is sent to a subscriber sychronously to their\n     *   call to subscribe().\n     */\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\n        var _this = this;\n        var observer;\n        if (nextOrObserver === undefined &&\n            error === undefined &&\n            complete === undefined) {\n            throw new Error('Missing Observer.');\n        }\n        // Assemble an Observer object when passed as callback functions.\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n            observer = nextOrObserver;\n        }\n        else {\n            observer = {\n                next: nextOrObserver,\n                error: error,\n                complete: complete\n            };\n        }\n        if (observer.next === undefined) {\n            observer.next = noop;\n        }\n        if (observer.error === undefined) {\n            observer.error = noop;\n        }\n        if (observer.complete === undefined) {\n            observer.complete = noop;\n        }\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) {\n            this.task.then(function () {\n                try {\n                    if (_this.finalError) {\n                        observer.error(_this.finalError);\n                    }\n                    else {\n                        observer.complete();\n                    }\n                }\n                catch (e) {\n                    // nothing\n                }\n                return;\n            });\n        }\n        this.observers.push(observer);\n        return unsub;\n    };\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\n        if (this.observers === undefined || this.observers[i] === undefined) {\n            return;\n        }\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n            this.onNoObservers(this);\n        }\n    };\n    ObserverProxy.prototype.forEachObserver = function (fn) {\n        if (this.finalized) {\n            // Already closed by previous event....just eat the additional values.\n            return;\n        }\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for (var i = 0; i < this.observers.length; i++) {\n            this.sendOne(i, fn);\n        }\n    };\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    ObserverProxy.prototype.sendOne = function (i, fn) {\n        var _this = this;\n        // Execute the callback asynchronously\n        this.task.then(function () {\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\n                try {\n                    fn(_this.observers[i]);\n                }\n                catch (e) {\n                    // Ignore exceptions raised in Observers or missing methods of an\n                    // Observer.\n                    // Log error to console. b/31404806\n                    if (typeof console !== 'undefined' && console.error) {\n                        console.error(e);\n                    }\n                }\n            }\n        });\n    };\n    ObserverProxy.prototype.close = function (err) {\n        var _this = this;\n        if (this.finalized) {\n            return;\n        }\n        this.finalized = true;\n        if (err !== undefined) {\n            this.finalError = err;\n        }\n        // Proxy is no longer needed - garbage collect references\n        this.task.then(function () {\n            _this.observers = undefined;\n            _this.onNoObservers = undefined;\n        });\n    };\n    return ObserverProxy;\n}());\n/** Turn synchronous function into one called asynchronously. */\nfunction async(fn, onError) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        Promise.resolve(true)\n            .then(function () {\n            fn.apply(void 0, args);\n        })\n            .catch(function (error) {\n            if (onError) {\n                onError(error);\n            }\n        });\n    };\n}\nexports.async = async;\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in obj && typeof obj[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction noop() {\n    // do nothing\n}\n\n//# sourceMappingURL=subscribe.js.map\n\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param {!string} fnName The function name\n * @param {!number} minCount The minimum number of arguments to allow for the function call\n * @param {!number} maxCount The maximum number of argument to allow for the function call\n * @param {!number} argCount The actual number of arguments provided.\n */\nexports.validateArgCount = function (fnName, minCount, maxCount, argCount) {\n    var argError;\n    if (argCount < minCount) {\n        argError = 'at least ' + minCount;\n    }\n    else if (argCount > maxCount) {\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n    }\n    if (argError) {\n        var error = fnName +\n            ' failed: Was called with ' +\n            argCount +\n            (argCount === 1 ? ' argument.' : ' arguments.') +\n            ' Expects ' +\n            argError +\n            '.';\n        throw new Error(error);\n    }\n};\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param {!string} fnName The function name\n * @param {!number} argumentNumber The index of the argument\n * @param {boolean} optional Whether or not the argument is optional\n * @return {!string} The prefix to add to the error thrown for validation.\n */\nfunction errorPrefix(fnName, argumentNumber, optional) {\n    var argName = '';\n    switch (argumentNumber) {\n        case 1:\n            argName = optional ? 'first' : 'First';\n            break;\n        case 2:\n            argName = optional ? 'second' : 'Second';\n            break;\n        case 3:\n            argName = optional ? 'third' : 'Third';\n            break;\n        case 4:\n            argName = optional ? 'fourth' : 'Fourth';\n            break;\n        default:\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\n    }\n    var error = fnName + ' failed: ';\n    error += argName + ' argument ';\n    return error;\n}\nexports.errorPrefix = errorPrefix;\n/**\n * @param {!string} fnName\n * @param {!number} argumentNumber\n * @param {!string} namespace\n * @param {boolean} optional\n */\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\n    if (optional && !namespace)\n        return;\n    if (typeof namespace !== 'string') {\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid firebase namespace.');\n    }\n}\nexports.validateNamespace = validateNamespace;\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\n    if (optional && !callback)\n        return;\n    if (typeof callback !== 'function')\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid function.');\n}\nexports.validateCallback = validateCallback;\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\n    if (optional && !context)\n        return;\n    if (typeof context !== 'object' || context === null)\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid context object.');\n}\nexports.validateContextObject = validateContextObject;\n\n//# sourceMappingURL=validation.js.map\n\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert_1 = __webpack_require__(201);\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\n * @param {string} str\n * @return {Array}\n */\nexports.stringToByteArray = function (str) {\n    var out = [], p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            var high = c - 0xd800; // the high 10 bits.\n            i++;\n            assert_1.assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if (c < 65536) {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexports.stringLength = function (str) {\n    var p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            p++;\n        }\n        else if (c < 2048) {\n            p += 2;\n        }\n        else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        }\n        else {\n            p += 3;\n        }\n    }\n    return p;\n};\n\n//# sourceMappingURL=utf8.js.map\n\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n__webpack_require__(274);\n\n\n/***/ }),\n/* 274 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"registerFirestore\"] = registerFirestore;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app__ = __webpack_require__(178);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_platform_browser_browser_init__ = __webpack_require__(275);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_platform_config__ = __webpack_require__(281);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nfunction registerFirestore(instance) {\n    Object(__WEBPACK_IMPORTED_MODULE_2__src_platform_config__[\"a\" /* configureForFirebase */])(instance);\n}\nregisterFirestore(__WEBPACK_IMPORTED_MODULE_0__firebase_app__[\"default\"]);\n\n//# sourceMappingURL=index.js.map\n\n\n/***/ }),\n/* 275 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__platform_platform__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__browser_platform__ = __webpack_require__(276);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * This code needs to run before Firestore is used. This can be achieved in\n * several ways:\n *   1) Through the JSCompiler compiling this code and then (automatically)\n *      executing it before exporting the Firestore symbols.\n *   2) Through importing this module first in a Firestore main module\n */\n__WEBPACK_IMPORTED_MODULE_0__platform_platform__[\"a\" /* PlatformSupport */].setPlatform(new __WEBPACK_IMPORTED_MODULE_1__browser_platform__[\"a\" /* BrowserPlatform */]());\n\n//# sourceMappingURL=browser_init.js.map\n\n\n/***/ }),\n/* 276 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BrowserPlatform; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__remote_serializer__ = __webpack_require__(205);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__webchannel_connection__ = __webpack_require__(278);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar BrowserPlatform = /** @class */ (function () {\n    function BrowserPlatform() {\n        this.emptyByteString = '';\n        this.base64Available = typeof atob !== 'undefined';\n    }\n    BrowserPlatform.prototype.loadConnection = function (databaseInfo) {\n        return Promise.resolve(new __WEBPACK_IMPORTED_MODULE_1__webchannel_connection__[\"a\" /* WebChannelConnection */](databaseInfo));\n    };\n    BrowserPlatform.prototype.newSerializer = function (databaseId) {\n        return new __WEBPACK_IMPORTED_MODULE_0__remote_serializer__[\"a\" /* JsonProtoSerializer */](databaseId, { useProto3Json: true });\n    };\n    BrowserPlatform.prototype.formatJSON = function (value) {\n        return JSON.stringify(value);\n    };\n    BrowserPlatform.prototype.atob = function (encoded) {\n        return atob(encoded);\n    };\n    BrowserPlatform.prototype.btoa = function (raw) {\n        return btoa(raw);\n    };\n    return BrowserPlatform;\n}());\n\n\n//# sourceMappingURL=browser_platform.js.map\n\n\n/***/ }),\n/* 277 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ExistenceFilter; });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ExistenceFilter = /** @class */ (function () {\n    // TODO(b/33078163): just use simplest form of existence filter for now\n    function ExistenceFilter(count) {\n        this.count = count;\n    }\n    ExistenceFilter.prototype.isEqual = function (other) {\n        return other && other.count === this.count;\n    };\n    return ExistenceFilter;\n}());\n\n\n//# sourceMappingURL=existence_filter.js.map\n\n\n/***/ }),\n/* 278 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WebChannelConnection; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__ = __webpack_require__(279);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_version__ = __webpack_require__(180);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__remote_rpc_error__ = __webpack_require__(185);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__remote_stream_bridge__ = __webpack_require__(280);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_log__ = __webpack_require__(121);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\nvar LOG_TAG = 'Connection';\nvar RPC_STREAM_SERVICE = 'google.firestore.v1beta1.Firestore';\nvar RPC_URL_VERSION = 'v1beta1';\n/** Maps RPC names to the corresponding REST endpoint name. */\nvar RPC_NAME_REST_MAPPING = {\n    BatchGetDocuments: 'batchGet',\n    Commit: 'commit'\n};\n// TODO(b/38203344): The SDK_VERSION is set independently from Firebase because\n// we are doing out-of-band releases. Once we release as part of Firebase, we\n// should use the Firebase version instead.\nvar X_GOOG_API_CLIENT_VALUE = 'gl-js/ fire/' + __WEBPACK_IMPORTED_MODULE_1__core_version__[\"a\" /* SDK_VERSION */];\nvar XHR_TIMEOUT_SECS = 15;\nvar WebChannelConnection = /** @class */ (function () {\n    function WebChannelConnection(info) {\n        this.databaseId = info.databaseId;\n        this.pool = new __WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"XhrIoPool\"]();\n        var proto = info.ssl ? 'https' : 'http';\n        this.baseUrl = proto + '://' + info.host;\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n    WebChannelConnection.prototype.modifyHeadersForRequest = function (headers, token) {\n        if (token) {\n            for (var header in token.authHeaders) {\n                if (token.authHeaders.hasOwnProperty(header)) {\n                    headers[header] = token.authHeaders[header];\n                }\n            }\n        }\n        headers['X-Goog-Api-Client'] = X_GOOG_API_CLIENT_VALUE;\n        // This header is used to improve routing and project isolation by the\n        // backend.\n        headers['google-cloud-resource-prefix'] =\n            \"projects/\" + this.databaseId.projectId + \"/\" +\n                (\"databases/\" + this.databaseId.database);\n    };\n    WebChannelConnection.prototype.invokeRPC = function (rpcName, request, token) {\n        var _this = this;\n        var url = this.makeUrl(rpcName);\n        return new Promise(function (resolve, reject) {\n            // tslint:disable-next-line:no-any XhrIoPool doesn't have TS typings.\n            _this.pool.getObject(function (xhr) {\n                xhr.listenOnce(__WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"EventType\"].COMPLETE, function () {\n                    try {\n                        switch (xhr.getLastErrorCode()) {\n                            case __WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"ErrorCode\"].NO_ERROR:\n                                var json = xhr.getResponseJson();\n                                __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'XHR received:', JSON.stringify(json));\n                                resolve(json);\n                                break;\n                            case __WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"ErrorCode\"].TIMEOUT:\n                                __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'RPC \"' + rpcName + '\" timed out');\n                                reject(new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].DEADLINE_EXCEEDED, 'Request time out'));\n                                break;\n                            case __WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"ErrorCode\"].HTTP_ERROR:\n                                var status_1 = xhr.getStatus();\n                                __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'RPC \"' + rpcName + '\" failed with status:', status_1, 'response text:', xhr.getResponseText());\n                                if (status_1 > 0) {\n                                    reject(new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](Object(__WEBPACK_IMPORTED_MODULE_2__remote_rpc_error__[\"b\" /* mapCodeFromHttpStatus */])(status_1), 'Server responded with status ' + xhr.getStatusText()));\n                                }\n                                else {\n                                    // If we received an HTTP_ERROR but there's no status code,\n                                    // it's most probably a connection issue\n                                    __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'RPC \"' + rpcName + '\" failed');\n                                    reject(new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].UNAVAILABLE, 'Connection failed.'));\n                                }\n                                break;\n                            default:\n                                Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('RPC \"' +\n                                    rpcName +\n                                    '\" failed with unanticipated ' +\n                                    'webchannel error ' +\n                                    xhr.getLastErrorCode() +\n                                    ': ' +\n                                    xhr.getLastError() +\n                                    ', giving up.');\n                        }\n                    }\n                    finally {\n                        __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'RPC \"' + rpcName + '\" completed.');\n                        _this.pool.releaseObject(xhr);\n                    }\n                });\n                var requestString = JSON.stringify(request);\n                __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'XHR sending: ', url + ' ' + requestString);\n                // Content-Type: text/plain will avoid preflight requests which might\n                // mess with CORS and redirects by proxies. If we add custom headers\n                // we will need to change this code to potentially use the\n                // $httpOverwrite parameter supported by ESF to avoid\n                // triggering preflight requests.\n                var headers = { 'Content-Type': 'text/plain' };\n                _this.modifyHeadersForRequest(headers, token);\n                xhr.send(url, 'POST', requestString, headers, XHR_TIMEOUT_SECS);\n            });\n        });\n    };\n    WebChannelConnection.prototype.invokeStreamingRPC = function (rpcName, request, token) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.invokeRPC(rpcName, request, token);\n    };\n    WebChannelConnection.prototype.openStream = function (rpcName, token) {\n        var urlParts = [\n            this.baseUrl,\n            '/',\n            RPC_STREAM_SERVICE,\n            '/',\n            rpcName,\n            '/channel'\n        ];\n        var webchannelTransport = Object(__WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"createWebChannelTransport\"])();\n        var request = {\n            // Background channel test avoids the initial two test calls and decreases\n            // initial cold start time.\n            // TODO(dimond): wenboz@ mentioned this might affect use with proxies and\n            // we should monitor closely for any reports.\n            backgroundChannelTest: true,\n            // Required for backend stickiness, routing behavior is based on this\n            // parameter.\n            httpSessionIdParam: 'gsessionid',\n            initMessageHeaders: {},\n            // Send our custom headers as a '$httpHeaders=' url param to avoid CORS\n            // preflight round-trip. This is formally defined here:\n            // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L40\n            httpHeadersOverwriteParam: '$httpHeaders',\n            sendRawJson: true,\n            supportsCrossDomainXhr: true\n        };\n        this.modifyHeadersForRequest(request.initMessageHeaders, token);\n        var url = urlParts.join('');\n        __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'Creating WebChannel: ' + url + ' ' + request);\n        // tslint:disable-next-line:no-any Because listen isn't defined on it.\n        var channel = webchannelTransport.createWebChannel(url, request);\n        // WebChannel supports sending the first message with the handshake - saving\n        // a network round trip. However, it will have to call send in the same\n        // JS event loop as open. In order to enforce this, we delay actually\n        // opening the WebChannel until send is called. Whether we have called\n        // open is tracked with this variable.\n        var opened = false;\n        // A flag to determine whether the stream was closed (by us or through an\n        // error/close event) to avoid delivering multiple close events or sending\n        // on a closed stream\n        var closed = false;\n        var streamBridge = new __WEBPACK_IMPORTED_MODULE_3__remote_stream_bridge__[\"a\" /* StreamBridge */]({\n            sendFn: function (msg) {\n                if (!closed) {\n                    if (!opened) {\n                        __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'Opening WebChannel transport.');\n                        channel.open();\n                        opened = true;\n                    }\n                    __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'WebChannel sending:', msg);\n                    channel.send(msg);\n                }\n                else {\n                    __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'Not sending because WebChannel is closed:', msg);\n                }\n            },\n            closeFn: function () { return channel.close(); }\n        });\n        // Closure events are guarded and exceptions are swallowed, so catch any\n        // exception and rethrow using a setTimeout so they become visible again.\n        // Note that eventually this function could go away if we are confident\n        // enough the code is exception free.\n        var unguardedEventListen = function (type, fn) {\n            // TODO(dimond): closure typing seems broken because WebChannel does\n            // not implement goog.events.Listenable\n            channel.listen(type, function (param) {\n                try {\n                    fn(param);\n                }\n                catch (e) {\n                    setTimeout(function () {\n                        throw e;\n                    }, 0);\n                }\n            });\n        };\n        unguardedEventListen(__WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"WebChannel\"].EventType.OPEN, function () {\n            if (!closed) {\n                __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'WebChannel transport opened.');\n            }\n        });\n        unguardedEventListen(__WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"WebChannel\"].EventType.CLOSE, function () {\n            if (!closed) {\n                closed = true;\n                __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'WebChannel transport closed');\n                streamBridge.callOnClose();\n            }\n        });\n        unguardedEventListen(__WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"WebChannel\"].EventType.ERROR, function (err) {\n            if (!closed) {\n                closed = true;\n                __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'WebChannel transport errored:', err);\n                streamBridge.callOnClose(new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].UNAVAILABLE, 'The operation could not be completed'));\n            }\n        });\n        unguardedEventListen(__WEBPACK_IMPORTED_MODULE_0__firebase_webchannel_wrapper__[\"WebChannel\"].EventType.MESSAGE, function (msg) {\n            if (!closed) {\n                var msgData = msg.data[0];\n                Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(!!msgData, 'Got a webchannel message without data.');\n                // TODO(b/35143891): There is a bug in One Platform that caused errors\n                // (and only errors) to be wrapped in an extra array. To be forward\n                // compatible with the bug we need to check either condition. The latter\n                // can be removed once the fix has been rolled out.\n                var error = \n                // tslint:disable-next-line:no-any msgData.error is not typed.\n                msgData.error || (msgData[0] && msgData[0].error);\n                if (error) {\n                    __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'WebChannel received error:', error);\n                    // error.status will be a string like 'OK' or 'NOT_FOUND'.\n                    var status_2 = error.status;\n                    var code = Object(__WEBPACK_IMPORTED_MODULE_2__remote_rpc_error__[\"d\" /* mapCodeFromRpcStatus */])(status_2);\n                    var message = error.message;\n                    if (code === undefined) {\n                        code = __WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].INTERNAL;\n                        message =\n                            'Unknown error status: ' +\n                                status_2 +\n                                ' with message ' +\n                                error.message;\n                    }\n                    // Mark closed so no further events are propagated\n                    closed = true;\n                    streamBridge.callOnClose(new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](code, message));\n                    channel.close();\n                }\n                else {\n                    __WEBPACK_IMPORTED_MODULE_6__util_log__[\"b\" /* debug */](LOG_TAG, 'WebChannel received:', msgData);\n                    streamBridge.callOnMessage(msgData);\n                }\n            }\n        });\n        setTimeout(function () {\n            // Technically we could/should wait for the WebChannel opened event,\n            // but because we want to send the first message with the WebChannel\n            // handshake we pretend the channel opened here (asynchronously), and\n            // then delay the actual open until the first message is sent.\n            streamBridge.callOnOpen();\n        }, 0);\n        return streamBridge;\n    };\n    // visible for testing\n    WebChannelConnection.prototype.makeUrl = function (rpcName) {\n        var urlRpcName = RPC_NAME_REST_MAPPING[rpcName];\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(urlRpcName !== undefined, 'Unknown REST mapping for: ' + rpcName);\n        var url = [this.baseUrl, '/', RPC_URL_VERSION];\n        url.push('/projects/');\n        url.push(this.databaseId.projectId);\n        url.push('/databases/');\n        url.push(this.databaseId.database);\n        url.push('/documents');\n        url.push(':');\n        url.push(urlRpcName);\n        return url.join('');\n    };\n    return WebChannelConnection;\n}());\n\n\n//# sourceMappingURL=webchannel_connection.js.map\n\n\n/***/ }),\n/* 279 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {(function() {var g,goog=goog||{},k=this;function l(a){return\"string\"==typeof a}function aa(){}\nfunction ba(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function n(a){return\"array\"==ba(a)}function ca(a){var b=ba(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function da(a){return\"function\"==ba(a)}function p(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}var q=\"closure_uid_\"+(1E9*Math.random()>>>0),ea=0;function fa(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction ha(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function r(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?r=fa:r=ha;return r.apply(null,arguments)}\nfunction ia(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}}var t=Date.now||function(){return+new Date};function u(a,b){function c(){}c.prototype=b.prototype;a.H=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Cb=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};function ja(a){if(Error.captureStackTrace)Error.captureStackTrace(this,ja);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}u(ja,Error);ja.prototype.name=\"CustomError\";function ka(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")}var la=String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};function ma(a,b){return a<b?-1:a>b?1:0};function na(a,b){b.unshift(a);ja.call(this,ka.apply(null,b));b.shift()}u(na,ja);na.prototype.name=\"AssertionError\";function oa(a,b){throw new na(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));};function w(){0!=qa&&(ra[this[q]||(this[q]=++ea)]=this);this.i=this.i;this.w=this.w}var qa=0,ra={};w.prototype.i=!1;w.prototype.Z=function(){if(!this.i&&(this.i=!0,this.A(),0!=qa)){var a=this[q]||(this[q]=++ea);delete ra[a]}};w.prototype.A=function(){if(this.w)for(;this.w.length;)this.w.shift()()};var sa=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(l(a))return l(b)&&1==b.length?a.indexOf(b,0):-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},ta=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=l(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};\nfunction ua(a){a:{var b=va;for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:l(a)?a.charAt(b):a[b]}function wa(a){if(!n(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0}function xa(a){return Array.prototype.concat.apply([],arguments)}function ya(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};var x;a:{var za=k.navigator;if(za){var Aa=za.userAgent;if(Aa){x=Aa;break a}}x=\"\"}function y(a){return-1!=x.indexOf(a)};function Ba(a,b,c){for(var d in a)b.call(c,a[d],d,a)}function Ca(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b}function Da(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b}function Ea(a){var b={},c;for(c in a)b[c]=a[c];return b}var Fa=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\nfunction Ga(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<Fa.length;f++)c=Fa[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function Ha(a){Ha[\" \"](a);return a}Ha[\" \"]=aa;function Ia(a,b){var c=Ja;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var Ka=y(\"Opera\"),z=y(\"Trident\")||y(\"MSIE\"),La=y(\"Edge\"),Ma=y(\"Gecko\")&&!(-1!=x.toLowerCase().indexOf(\"webkit\")&&!y(\"Edge\"))&&!(y(\"Trident\")||y(\"MSIE\"))&&!y(\"Edge\"),Na=-1!=x.toLowerCase().indexOf(\"webkit\")&&!y(\"Edge\");function Oa(){var a=k.document;return a?a.documentMode:void 0}var Pa;\na:{var Qa=\"\",Ra=function(){var a=x;if(Ma)return/rv:([^\\);]+)(\\)|;)/.exec(a);if(La)return/Edge\\/([\\d\\.]+)/.exec(a);if(z)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(Na)return/WebKit\\/(\\S+)/.exec(a);if(Ka)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();Ra&&(Qa=Ra?Ra[1]:\"\");if(z){var Sa=Oa();if(null!=Sa&&Sa>parseFloat(Qa)){Pa=String(Sa);break a}}Pa=Qa}var Ja={};\nfunction Ta(a){return Ia(a,function(){for(var b=0,c=la(String(Pa)).split(\".\"),d=la(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var h=c[f]||\"\",m=d[f]||\"\";do{h=/(\\d*)(\\D*)(.*)/.exec(h)||[\"\",\"\",\"\",\"\"];m=/(\\d*)(\\D*)(.*)/.exec(m)||[\"\",\"\",\"\",\"\"];if(0==h[0].length&&0==m[0].length)break;b=ma(0==h[1].length?0:parseInt(h[1],10),0==m[1].length?0:parseInt(m[1],10))||ma(0==h[2].length,0==m[2].length)||ma(h[2],m[2]);h=h[3];m=m[3]}while(0==b)}return 0<=b})}var Ua;var Va=k.document;\nUa=Va&&z?Oa()||(\"CSS1Compat\"==Va.compatMode?parseInt(Pa,10):5):void 0;var Wa=Object.freeze||function(a){return a};var Xa=!z||9<=Number(Ua),Ya=z&&!Ta(\"9\"),Za=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});k.addEventListener(\"test\",aa,b);k.removeEventListener(\"test\",aa,b);return a}();function A(a,b){this.type=a;this.a=this.target=b;this.Pa=!0}A.prototype.b=function(){this.Pa=!1};function $a(a,b){A.call(this,a?a.type:\"\");this.relatedTarget=this.a=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType=\"\";this.c=null;if(a){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.a=b;if(b=a.relatedTarget){if(Ma){a:{try{Ha(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==c?b=\na.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=\na.metaKey;this.pointerId=a.pointerId||0;this.pointerType=l(a.pointerType)?a.pointerType:ab[a.pointerType]||\"\";this.c=a;a.defaultPrevented&&this.b()}}u($a,A);var ab=Wa({2:\"touch\",3:\"pen\",4:\"mouse\"});$a.prototype.b=function(){$a.H.b.call(this);var a=this.c;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Ya)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};var bb=\"closure_listenable_\"+(1E6*Math.random()|0);function cb(a){return!(!a||!a[bb])}var db=0;function eb(a,b,c,d,e){this.listener=a;this.a=null;this.src=b;this.type=c;this.capture=!!d;this.ga=e;this.key=++db;this.Y=this.ca=!1}function fb(a){a.Y=!0;a.listener=null;a.a=null;a.src=null;a.ga=null};function gb(a){this.src=a;this.a={};this.b=0}gb.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var h=hb(a,b,d,e);-1<h?(b=a[h],c||(b.ca=!1)):(b=new eb(b,this.src,f,!!d,e),b.ca=c,a.push(b));return b};function ib(a,b){var c=b.type;if(c in a.a){var d=a.a[c],e=sa(d,b),f;(f=0<=e)&&Array.prototype.splice.call(d,e,1);f&&(fb(b),0==a.a[c].length&&(delete a.a[c],a.b--))}}function jb(a,b,c,d,e){a=a.a[b.toString()];b=-1;a&&(b=hb(a,c,d,e));return-1<b?a[b]:null}\nfunction hb(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.Y&&f.listener==b&&f.capture==!!c&&f.ga==d)return e}return-1};var kb=\"closure_lm_\"+(1E6*Math.random()|0),lb={},mb=0;function nb(a,b,c,d,e){if(d&&d.once)return ob(a,b,c,d,e);if(n(b)){for(var f=0;f<b.length;f++)nb(a,b[f],c,d,e);return null}c=pb(c);return cb(a)?a.aa(b,c,p(d)?!!d.capture:!!d,e):qb(a,b,c,!1,d,e)}\nfunction qb(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var h=p(e)?!!e.capture:!!e,m=rb(a);m||(a[kb]=m=new gb(a));c=m.add(b,c,d,h,f);if(c.a)return c;d=sb();c.a=d;d.src=a;d.listener=c;if(a.addEventListener)Za||(e=h),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(tb(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");mb++;return c}\nfunction sb(){var a=ub,b=Xa?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function ob(a,b,c,d,e){if(n(b)){for(var f=0;f<b.length;f++)ob(a,b[f],c,d,e);return null}c=pb(c);return cb(a)?a.Ha(b,c,p(d)?!!d.capture:!!d,e):qb(a,b,c,!0,d,e)}function vb(a,b,c,d,e){if(n(b))for(var f=0;f<b.length;f++)vb(a,b[f],c,d,e);else d=p(d)?!!d.capture:!!d,c=pb(c),cb(a)?a.va(b,c,d,e):a&&(a=rb(a))&&(b=jb(a,b,c,d,e))&&wb(b)}\nfunction wb(a){if(\"number\"!=typeof a&&a&&!a.Y){var b=a.src;if(cb(b))ib(b.c,a);else{var c=a.type,d=a.a;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(tb(c),d):b.addListener&&b.removeListener&&b.removeListener(d);mb--;(c=rb(b))?(ib(c,a),0==c.b&&(c.src=null,b[kb]=null)):fb(a)}}}function tb(a){return a in lb?lb[a]:lb[a]=\"on\"+a}\nfunction xb(a,b,c,d){var e=!0;if(a=rb(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.Y&&(f=yb(f,d),e=e&&!1!==f)}return e}function yb(a,b){var c=a.listener,d=a.ga||a.src;a.ca&&wb(a);return c.call(d,b)}\nfunction ub(a,b){if(a.Y)return!0;if(!Xa){if(!b)a:{b=[\"window\",\"event\"];for(var c=k,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new $a(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(h){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.a;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;0<=e;e--){b.a=d[e];var f=xb(d[e],a,!0,b);c=c&&f}for(e=0;e<d.length;e++)b.a=d[e],f=xb(d[e],a,!1,b),c=c&&f}return c}return yb(a,\nnew $a(b,this))}function rb(a){a=a[kb];return a instanceof gb?a:null}var zb=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function pb(a){if(da(a))return a;a[zb]||(a[zb]=function(b){return a.handleEvent(b)});return a[zb]};function B(){w.call(this);this.c=new gb(this);this.P=this;this.K=null}u(B,w);B.prototype[bb]=!0;g=B.prototype;g.addEventListener=function(a,b,c,d){nb(this,a,b,c,d)};g.removeEventListener=function(a,b,c,d){vb(this,a,b,c,d)};\ng.dispatchEvent=function(a){var b,c=this.K;if(c)for(b=[];c;c=c.K)b.push(c);c=this.P;var d=a.type||a;if(l(a))a=new A(a,c);else if(a instanceof A)a.target=a.target||c;else{var e=a;a=new A(d,c);Ga(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var h=a.a=b[f];e=Ab(h,d,!0,a)&&e}h=a.a=c;e=Ab(h,d,!0,a)&&e;e=Ab(h,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)h=a.a=b[f],e=Ab(h,d,!1,a)&&e;return e};\ng.A=function(){B.H.A.call(this);if(this.c){var a=this.c,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,fb(d[e]);delete a.a[c];a.b--}}this.K=null};g.aa=function(a,b,c,d){return this.c.add(String(a),b,!1,c,d)};g.Ha=function(a,b,c,d){return this.c.add(String(a),b,!0,c,d)};g.va=function(a,b,c,d){var e=this.c;a=String(a).toString();if(a in e.a){var f=e.a[a];b=hb(f,b,c,d);-1<b&&(fb(f[b]),Array.prototype.splice.call(f,b,1),0==f.length&&(delete e.a[a],e.b--))}};\nfunction Ab(a,b,c,d){b=a.c.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var h=b[f];if(h&&!h.Y&&h.capture==c){var m=h.listener,v=h.ga||h.src;h.ca&&ib(a.c,h);e=!1!==m.call(v,d)&&e}}return e&&0!=d.Pa};function Bb(a){return/^\\s*$/.test(a)?!1:/^[\\],:{}\\s\\u2028\\u2029]*$/.test(a.replace(/\\\\[\"\\\\\\/bfnrtu]/g,\"@\").replace(/(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g,\"]\").replace(/(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g,\"\"))}function Cb(a){a=String(a);if(Bb(a))try{return eval(\"(\"+a+\")\")}catch(b){}throw Error(\"Invalid JSON string: \"+a);}function Db(a){var b=[];Eb(new Fb,a,b);return b.join(\"\")}function Fb(){}\nfunction Eb(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(n(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),Eb(a,d[f],c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");e=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],\"function\"!=typeof f&&(c.push(e),Gb(d,c),c.push(\":\"),Eb(a,f,c),e=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":Gb(b,c);break;case \"number\":c.push(isFinite(b)&&\n!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}}var Hb={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},Ib=/\\uffff/.test(\"\\uffff\")?/[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Gb(a,b){b.push('\"',a.replace(Ib,function(a){var b=Hb[a];b||(b=\"\\\\u\"+(a.charCodeAt(0)|65536).toString(16).substr(1),Hb[a]=b);return b}),'\"')};function Jb(a,b){this.c=a;this.f=b;this.b=0;this.a=null}Jb.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function Kb(){this.b=this.a=null}var Nb=new Jb(function(){return new Lb},function(a){a.reset()});Kb.prototype.add=function(a,b){var c=Nb.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function Ob(){var a=Pb,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function Lb(){this.next=this.b=this.a=null}Lb.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};Lb.prototype.reset=function(){this.next=this.b=this.a=null};function Qb(a){k.setTimeout(function(){throw a;},0)}var Rb;\nfunction Sb(){var a=k.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!y(\"Presto\")&&(a=function(){var a=document.createElement(\"IFRAME\");a.style.display=\"none\";a.src=\"\";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write(\"\");a.close();var c=\"callImmediate\"+Math.random(),d=\"file:\"==b.location.protocol?\"*\":b.location.protocol+\"//\"+b.location.host;a=r(function(a){if((\"*\"==d||a.origin==d)&&a.data==\nc)this.port1.onmessage()},this);b.addEventListener(\"message\",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if(\"undefined\"!==typeof a&&!y(\"Trident\")&&!y(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var a=c.za;c.za=null;a()}};return function(a){d.next={za:a};d=d.next;b.port2.postMessage(0)}}return\"undefined\"!==typeof document&&\"onreadystatechange\"in document.createElement(\"SCRIPT\")?function(a){var b=document.createElement(\"SCRIPT\");\nb.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};var Tb;function Ub(){if(-1!=String(k.Promise).indexOf(\"[native code]\")){var a=k.Promise.resolve(void 0);Tb=function(){a.then(Vb)}}else Tb=function(){var a=Vb;!da(k.setImmediate)||k.Window&&k.Window.prototype&&!y(\"Edge\")&&k.Window.prototype.setImmediate==k.setImmediate?(Rb||(Rb=Sb()),Rb(a)):k.setImmediate(a)}}var Wb=!1,Pb=new Kb;function Vb(){for(var a;a=Ob();){try{a.a.call(a.b)}catch(c){Qb(c)}var b=Nb;b.f(a);100>b.b&&(b.b++,a.next=b.a,b.a=a)}Wb=!1};function Xb(a,b){B.call(this);this.b=a||1;this.a=b||k;this.f=r(this.kb,this);this.g=t()}u(Xb,B);g=Xb.prototype;g.$=!1;g.L=null;g.kb=function(){if(this.$){var a=t()-this.g;0<a&&a<.8*this.b?this.L=this.a.setTimeout(this.f,this.b-a):(this.L&&(this.a.clearTimeout(this.L),this.L=null),this.dispatchEvent(\"tick\"),this.$&&(this.L=this.a.setTimeout(this.f,this.b),this.g=t()))}};g.start=function(){this.$=!0;this.L||(this.L=this.a.setTimeout(this.f,this.b),this.g=t())};\nfunction Yb(a){a.$=!1;a.L&&(a.a.clearTimeout(a.L),a.L=null)}g.A=function(){Xb.H.A.call(this);Yb(this);delete this.a};function Zb(a,b,c){if(da(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)};function $b(a,b,c){w.call(this);this.f=null!=c?r(a,c):a;this.c=b;this.b=r(this.eb,this);this.a=[]}u($b,w);g=$b.prototype;g.ha=!1;g.X=null;g.Xa=function(a){this.a=arguments;this.X?this.ha=!0:ac(this)};g.A=function(){$b.H.A.call(this);this.X&&(k.clearTimeout(this.X),this.X=null,this.ha=!1,this.a=[])};g.eb=function(){this.X=null;this.ha&&(this.ha=!1,ac(this))};function ac(a){a.X=Zb(a.b,a.c);a.f.apply(null,a.a)};function C(a){w.call(this);this.b=a;this.a={}}u(C,w);var bc=[];C.prototype.aa=function(a,b,c,d){n(b)||(b&&(bc[0]=b.toString()),b=bc);for(var e=0;e<b.length;e++){var f=nb(a,b[e],c||this.handleEvent,d||!1,this.b||this);if(!f)break;this.a[f.key]=f}return this};\nC.prototype.va=function(a,b,c,d,e){if(n(b))for(var f=0;f<b.length;f++)this.va(a,b[f],c,d,e);else c=c||this.handleEvent,d=p(d)?!!d.capture:!!d,e=e||this.b||this,c=pb(c),d=!!d,b=cb(a)?jb(a.c,String(b),c,d,e):a?(a=rb(a))?jb(a,b,c,d,e):null:null,b&&(wb(b),delete this.a[b.key])};function cc(a){Ba(a.a,function(a,c){this.a.hasOwnProperty(c)&&wb(a)},a);a.a={}}C.prototype.A=function(){C.H.A.call(this);cc(this)};C.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\");};function dc(a,b,c){this.reset(a,b,c,void 0,void 0)}dc.prototype.a=null;var ec=0;dc.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||ec++;d||t();delete this.a};function fc(a){this.f=a;this.b=this.c=this.a=null}function D(a,b){this.name=a;this.value=b}D.prototype.toString=function(){return this.name};var gc=new D(\"SEVERE\",1E3),hc=new D(\"WARNING\",900),ic=new D(\"INFO\",800),jc=new D(\"CONFIG\",700),kc=new D(\"FINE\",500);function lc(a){if(a.c)return a.c;if(a.a)return lc(a.a);oa(\"Root logger has no level set.\");return null}fc.prototype.log=function(a,b,c){if(a.value>=lc(this).value)for(da(b)&&(b=b()),a=new dc(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};\nvar mc={},nc=null;function oc(a){nc||(nc=new fc(\"\"),mc[\"\"]=nc,nc.c=jc);var b;if(!(b=mc[a])){b=new fc(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=oc(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;mc[a]=b}return b};function E(a,b){a&&a.log(hc,b,void 0)}function pc(a,b){a&&a.log(ic,b,void 0)}function F(a,b){a&&a.log(kc,b,void 0)};function qc(){this.a=oc(\"goog.labs.net.webChannel.WebChannelDebug\");this.b=!0}qc.prototype.Ea=function(){this.b=!1};function rc(a,b,c,d,e,f){H(a,function(){if(a.b)if(f){var h=\"\";for(var m=f.split(\"&\"),v=0;v<m.length;v++){var G=m[v].split(\"=\");if(1<G.length){var Z=G[0];G=G[1];var Mb=Z.split(\"_\");h=2<=Mb.length&&\"type\"==Mb[1]?h+(Z+\"=\"+G+\"&\"):h+(Z+\"=redacted&\")}}}else h=null;else h=f;return\"XMLHTTP REQ (\"+d+\") [attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+h})}\nfunction sc(a,b,c,d,e,f,h){H(a,function(){return\"XMLHTTP RESP (\"+d+\") [ attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+f+\" \"+h})}function tc(a,b,c,d){H(a,function(){return\"XMLHTTP TEXT (\"+b+\"): \"+uc(a,c)+(d?\" \"+d:\"\")})}function vc(a,b){H(a,function(){return\"TIMEOUT: \"+b})}function I(a,b){F(a.a,b)}function wc(a,b,c){(a=a.a)&&a.log(gc,c||\"Exception\",b)}function H(a,b){pc(a.a,b)}function xc(a,b){(a=a.a)&&a.log(gc,b,void 0)}\nfunction uc(a,b){if(!a.b)return b;if(!b)return null;try{var c=JSON.parse(b);if(c)for(var d=0;d<c.length;d++)if(n(c[d])){var e=c[d];if(!(2>e.length)){var f=e[1];if(n(f)&&!(1>f.length)){var h=f[0];if(\"noop\"!=h&&\"stop\"!=h&&\"close\"!=h)for(var m=1;m<f.length;m++)f[m]=\"\"}}}return Db(c)}catch(v){return I(a,\"Exception parsing expected JS array - probably was not JS\"),b}};var yc=new B;function zc(a){A.call(this,\"serverreachability\",a)}u(zc,A);function Ac(a){yc.dispatchEvent(new zc(yc,a))}function Bc(a){A.call(this,\"statevent\",a)}u(Bc,A);function J(a){yc.dispatchEvent(new Bc(yc,a))}function Cc(a){A.call(this,\"timingevent\",a)}u(Cc,A);function Dc(a,b,c){yc.dispatchEvent(new Cc(yc,a,b,c))}function Ec(a,b){if(!da(a))throw Error(\"Fn must not be null and must be a function\");return k.setTimeout(function(){a()},b)};var Fc={NO_ERROR:0,lb:1,sb:2,rb:3,ob:4,qb:5,tb:6,Ra:7,TIMEOUT:8,wb:9};var Gc={nb:\"complete\",Ab:\"success\",Sa:\"error\",Ra:\"abort\",yb:\"ready\",zb:\"readystatechange\",TIMEOUT:\"timeout\",ub:\"incrementaldata\",xb:\"progress\",pb:\"downloadprogress\",Bb:\"uploadprogress\"};function Hc(){}Hc.prototype.a=null;function Ic(a){var b;(b=a.a)||(b={},Jc(a)&&(b[0]=!0,b[1]=!0),b=a.a=b);return b};var Kc;function Lc(){}u(Lc,Hc);function Mc(a){return(a=Jc(a))?new ActiveXObject(a):new XMLHttpRequest}function Jc(a){if(!a.b&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.b=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.b}Kc=new Lc;function K(a,b,c,d){this.i=a;this.b=b;this.f=c;this.T=d||1;this.N=new C(this);this.S=Nc;a=this.I=new Xb;a.b=Oc;a.L&&a.$?(Yb(a),a.start()):a.L&&Yb(a);this.j=null;this.c=!1;this.m=this.g=this.h=this.K=this.D=this.U=this.w=null;this.u=[];this.a=null;this.F=0;this.l=this.o=null;this.C=-1;this.B=!1;this.P=0;this.J=null;this.M=!1}var Nc=45E3,Oc=250;\nfunction Pc(a,b){switch(a){case 0:return\"Non-200 return code (\"+b+\")\";case 1:return\"XMLHTTP failure (no data)\";case 2:return\"HttpConnection timeout\";default:return\"Unknown error\"}}var Qc={},Rc={};g=K.prototype;g.setTimeout=function(a){this.S=a};function Sc(a,b,c){a.K=1;a.h=Tc(L(b));a.m=c;a.M=!0;Uc(a,null)}function Vc(a,b,c,d){a.K=1;a.h=Tc(L(b));a.m=null;a.M=c;Uc(a,d)}\nfunction Uc(a,b){a.D=t();Wc(a);a.g=L(a.h);Xc(a.g,\"t\",a.T);a.F=0;a.a=a.i.da(a.i.ia()?b:null);0<a.P&&(a.J=new $b(r(a.Qa,a,a.a),a.P));a.N.aa(a.a,\"readystatechange\",a.hb);b=a.j?Ea(a.j):{};a.m?(a.o||(a.o=\"POST\"),b[\"Content-Type\"]=\"application/x-www-form-urlencoded\",a.a.fa(a.g,a.o,a.m,b)):(a.o=\"GET\",a.a.fa(a.g,a.o,null,b));Ac(1);rc(a.b,a.o,a.g,a.f,a.T,a.m)}g.hb=function(a){a=a.target;var b=this.J;b&&3==M(a)?(I(this.b,\"Throttling readystatechange.\"),b.Xa()):this.Qa(a)};\ng.Qa=function(a){try{a==this.a?Yc(this):E(this.b.a,\"Called back with an unexpected xmlhttp\")}catch(c){if(I(this.b,\"Failed call to OnXmlHttpReadyStateChanged_\"),this.a&&this.a.V()){var b=this;wc(this.b,c,function(){return\"ResponseText: \"+b.a.V()})}else wc(this.b,c,\"No response text\")}finally{}};\nfunction Yc(a){var b=M(a.a),c=a.a.Fa(),d=a.a.W();if(!(3>b||3==b&&!Ka&&!a.a.V())){a.B||4!=b||7==c||(8==c||0>=d?Ac(3):Ac(2));Zc(a);var e=a.a.W();a.C=e;(c=a.a.V())||I(a.b,function(){return\"No response text for uri \"+a.g+\" status \"+e});a.c=200==e;sc(a.b,a.o,a.g,a.f,a.T,b,e);a.c?(a.M?($c(a,b,c),Ka&&a.c&&3==b&&ad(a)):(tc(a.b,a.f,c,null),bd(a,c)),4==b&&cd(a),a.c&&!a.B&&(4==b?a.i.ua(a):(a.c=!1,Wc(a)))):(400==e&&0<c.indexOf(\"Unknown SID\")?(a.l=3,J(12),E(a.b.a,\"XMLHTTP Unknown SID (\"+a.f+\")\")):(a.l=0,J(13),\nE(a.b.a,\"XMLHTTP Bad status \"+e+\" (\"+a.f+\")\")),cd(a),dd(a))}}function $c(a,b,c){for(var d=!0;!a.B&&a.F<c.length;){var e=ed(a,c);if(e==Rc){4==b&&(a.l=4,J(14),d=!1);tc(a.b,a.f,null,\"[Incomplete Response]\");break}else if(e==Qc){a.l=4;J(15);tc(a.b,a.f,c,\"[Invalid Chunk]\");d=!1;break}else tc(a.b,a.f,e,null),bd(a,e)}4==b&&0==c.length&&(a.l=1,J(16),d=!1);a.c=a.c&&d;d||(tc(a.b,a.f,c,\"[Invalid Chunked Response]\"),cd(a),dd(a))}\ng.gb=function(){var a=M(this.a),b=this.a.V();this.F<b.length&&(Zc(this),$c(this,a,b),this.c&&4!=a&&Wc(this))};function ad(a){a.N.aa(a.I,\"tick\",a.gb);a.I.start()}function ed(a,b){var c=a.F,d=b.indexOf(\"\\n\",c);if(-1==d)return Rc;c=Number(b.substring(c,d));if(isNaN(c))return Qc;d+=1;if(d+c>b.length)return Rc;b=b.substr(d,c);a.F=d+c;return b}g.cancel=function(){this.B=!0;cd(this)};function Wc(a){a.U=t()+a.S;fd(a,a.S)}\nfunction fd(a,b){if(null!=a.w)throw Error(\"WatchDog timer not null\");a.w=Ec(r(a.fb,a),b)}function Zc(a){a.w&&(k.clearTimeout(a.w),a.w=null)}g.fb=function(){this.w=null;var a=t();0<=a-this.U?(this.c&&xc(this.b,\"Received watchdog timeout even though request loaded successfully\"),vc(this.b,this.g),2!=this.K&&(Ac(3),J(17)),cd(this),this.l=2,dd(this)):(E(this.b.a,\"WatchDog timer called too early\"),fd(this,this.U-a))};function dd(a){a.i.Ja()||a.B||a.i.ua(a)}\nfunction cd(a){Zc(a);var b=a.J;b&&\"function\"==typeof b.Z&&b.Z();a.J=null;Yb(a.I);cc(a.N);a.a&&(b=a.a,a.a=null,b.abort(),b.Z())}function bd(a,b){try{a.i.Ma(a,b),Ac(4)}catch(c){wc(a.b,c,\"Error in httprequest callback\")}};function gd(a){if(a.v&&\"function\"==typeof a.v)return a.v();if(l(a))return a.split(\"\");if(ca(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}return Ca(a)}\nfunction hd(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ca(a)||l(a))ta(a,b,void 0);else{if(a.O&&\"function\"==typeof a.O)var c=a.O();else if(a.v&&\"function\"==typeof a.v)c=void 0;else if(ca(a)||l(a)){c=[];for(var d=a.length,e=0;e<d;e++)c.push(e)}else c=Da(a);d=gd(a);e=d.length;for(var f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)}};function N(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a){a instanceof N?(c=a.O(),d=a.v()):(c=Da(a),d=Ca(a));for(var e=0;e<c.length;e++)this.set(c[e],d[e])}}g=N.prototype;g.s=function(){return this.c};g.v=function(){id(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};g.O=function(){id(this);return this.a.concat()};\nfunction jd(a){a.b={};a.a.length=0;a.c=0}function kd(a,b){return O(a.b,b)?(delete a.b[b],a.c--,a.a.length>2*a.c&&id(a),!0):!1}function id(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];O(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],O(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}g.get=function(a,b){return O(this.b,a)?this.b[a]:b};g.set=function(a,b){O(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};\ng.forEach=function(a,b){for(var c=this.O(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function O(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var ld=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function md(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function P(a,b){this.b=this.j=this.f=\"\";this.i=null;this.g=this.a=\"\";this.h=!1;var c;a instanceof P?(this.h=void 0!==b?b:a.h,nd(this,a.f),this.j=a.j,od(this,a.b),pd(this,a.i),this.a=a.a,qd(this,rd(a.c)),this.g=a.g):a&&(c=String(a).match(ld))?(this.h=!!b,nd(this,c[1]||\"\",!0),this.j=sd(c[2]||\"\"),od(this,c[3]||\"\",!0),pd(this,c[4]),this.a=sd(c[5]||\"\",!0),qd(this,c[6]||\"\",!0),this.g=sd(c[7]||\"\")):(this.h=!!b,this.c=new td(null,this.h))}\nP.prototype.toString=function(){var a=[],b=this.f;b&&a.push(ud(b,vd,!0),\":\");var c=this.b;if(c||\"file\"==b)a.push(\"//\"),(b=this.j)&&a.push(ud(b,vd,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.i,null!=c&&a.push(\":\",String(c));if(c=this.a)this.b&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(ud(c,\"/\"==c.charAt(0)?wd:xd,!0));(c=this.c.toString())&&a.push(\"?\",c);(c=this.g)&&a.push(\"#\",ud(c,yd));return a.join(\"\")};\nP.prototype.resolve=function(a){var b=L(this),c=!!a.f;c?nd(b,a.f):c=!!a.j;c?b.j=a.j:c=!!a.b;c?od(b,a.b):c=null!=a.i;var d=a.a;if(c)pd(b,a.i);else if(c=!!a.a){if(\"/\"!=d.charAt(0))if(this.b&&!this.a)d=\"/\"+d;else{var e=b.a.lastIndexOf(\"/\");-1!=e&&(d=b.a.substr(0,e+1)+d)}e=d;if(\"..\"==e||\".\"==e)d=\"\";else if(-1!=e.indexOf(\"./\")||-1!=e.indexOf(\"/.\")){d=0==e.lastIndexOf(\"/\",0);e=e.split(\"/\");for(var f=[],h=0;h<e.length;){var m=e[h++];\".\"==m?d&&h==e.length&&f.push(\"\"):\"..\"==m?((1<f.length||1==f.length&&\"\"!=\nf[0])&&f.pop(),d&&h==e.length&&f.push(\"\")):(f.push(m),d=!0)}d=f.join(\"/\")}else d=e}c?b.a=d:c=\"\"!==a.c.toString();c?qd(b,rd(a.c)):c=!!a.g;c&&(b.g=a.g);return b};function L(a){return new P(a)}function nd(a,b,c){a.f=c?sd(b,!0):b;a.f&&(a.f=a.f.replace(/:$/,\"\"))}function od(a,b,c){a.b=c?sd(b,!0):b}function pd(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.i=b}else a.i=null}function qd(a,b,c){b instanceof td?(a.c=b,zd(a.c,a.h)):(c||(b=ud(b,Ad)),a.c=new td(b,a.h))}\nfunction Q(a,b,c){a.c.set(b,c)}function Xc(a,b,c){n(c)||(c=[String(c)]);Bd(a.c,b,c)}function Tc(a){Q(a,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^t()).toString(36));return a}function Cd(a){return a instanceof P?L(a):new P(a,void 0)}function Dd(a,b,c,d){var e=new P(null,void 0);a&&nd(e,a);b&&od(e,b);c&&pd(e,c);d&&(e.a=d);return e}function sd(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}\nfunction ud(a,b,c){return l(a)?(a=encodeURI(a).replace(b,Ed),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function Ed(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var vd=/[#\\/\\?@]/g,xd=/[#\\?:]/g,wd=/[#\\?]/g,Ad=/[#\\?@]/g,yd=/#/g;function td(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}function R(a){a.a||(a.a=new N,a.b=0,a.c&&md(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}g=td.prototype;g.s=function(){R(this);return this.b};\ng.add=function(a,b){R(this);this.c=null;a=Fd(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};function Gd(a,b){R(a);b=Fd(a,b);O(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,kd(a.a,b))}function Hd(a,b){R(a);b=Fd(a,b);return O(a.a.b,b)}g.forEach=function(a,b){R(this);this.a.forEach(function(c,d){ta(c,function(c){a.call(b,c,d,this)},this)},this)};\ng.O=function(){R(this);for(var a=this.a.v(),b=this.a.O(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};g.v=function(a){R(this);var b=[];if(l(a))Hd(this,a)&&(b=xa(b,this.a.get(Fd(this,a))));else{a=this.a.v();for(var c=0;c<a.length;c++)b=xa(b,a[c])}return b};g.set=function(a,b){R(this);this.c=null;a=Fd(this,a);Hd(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};g.get=function(a,b){a=a?this.v(a):[];return 0<a.length?String(a[0]):b};\nfunction Bd(a,b,c){Gd(a,b);0<c.length&&(a.c=null,a.a.set(Fd(a,b),ya(c)),a.b+=c.length)}g.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var a=[],b=this.a.O(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.v(d);for(var f=0;f<d.length;f++){var h=e;\"\"!==d[f]&&(h+=\"=\"+encodeURIComponent(String(d[f])));a.push(h)}}return this.c=a.join(\"&\")};function rd(a){var b=new td;b.c=a.c;a.a&&(b.a=new N(a.a),b.b=a.b);return b}\nfunction Fd(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function zd(a,b){b&&!a.f&&(R(a),a.c=null,a.a.forEach(function(a,b){var c=b.toLowerCase();b!=c&&(Gd(this,b),Bd(this,c,a))},a));a.f=b};function Id(){this.a=t()}var Jd=null;Id.prototype.set=function(a){this.a=a};Id.prototype.reset=function(){this.set(t())};Id.prototype.get=function(){return this.a};function Kd(){Jd||(Jd=new Id)}function Ld(){Jd||(Jd=new Id)}u(Ld,Kd);function Md(){}var Nd={OPEN:\"a\",mb:\"b\",Sa:\"c\",vb:\"d\"};function Od(){A.call(this,\"d\")}u(Od,A);function Pd(){A.call(this,\"c\")}u(Pd,A);function Qd(a,b){this.a=a;this.b=b;this.c=this.i=null;this.h=!1;this.l=null;this.f=-1;this.m=this.g=null}g=Qd.prototype;g.R=null;\nfunction Rd(a){I(a.b,\"TestConnection: starting stage 2\");var b=a.a.I.a;if(null!=b)I(a.b,function(){return true?\"Buffered\":\"Unbuffered\"}),J(4),b?(J(10),Sd(a.a,a,!1)):(J(11),Sd(a.a,a,!0));else{a.c=new K(a,a.b,void 0,void 0);a.c.j=a.i;var c=Td(a.a,a.g,a.l);J(4);Xc(c,\"TYPE\",\"xmlhttp\");var d=a.a.j,e=a.a.K;d&&e&&Q(c,d,e);Vc(a.c,c,!1,a.g)}}g.da=function(a){return this.a.da(a)};g.abort=function(){this.c&&(this.c.cancel(),this.c=null);this.f=-1};\ng.Ja=function(){return!1};\ng.Ma=function(a,b){this.f=a.C;if(0==this.R){I(this.b,\"TestConnection: Got data for stage 1\");if(!this.a.D&&(a=a.a)){var c=a.a?a.a.getResponseHeader(\"X-Client-Wire-Protocol\"):null;this.m=c?c:null;this.a.j&&((a=a.a?a.a.getResponseHeader(\"X-HTTP-Session-Id\"):null)?this.a.K=a:E(this.b.a,\"Missing X_HTTP_SESSION_ID in the handshake response\"))}if(b){try{var d=this.a.ma.a.parse(b)}catch(e){wc(this.b,e);Ud(this.a,this);return}this.g=d[0]}else I(this.b,\"TestConnection: Null responseText\"),Ud(this.a,this)}else if(1==\nthis.R)if(this.h)J(6);else if(\"11111\"==b){if(J(5),this.h=!0,!z||10<=Number(Ua))this.f=200,this.c.cancel(),I(this.b,\"Test connection succeeded; using streaming connection\"),J(11),Sd(this.a,this,!0)}else J(7),this.h=!1};\ng.ua=function(){this.f=this.c.C;this.c.c?0==this.R?(this.R=1,I(this.b,\"TestConnection: request complete for initial check\"),Rd(this)):1==this.R&&(I(this.b,\"TestConnection: request complete for stage 2\"),this.h?(I(this.b,\"Test connection succeeded; using streaming connection\"),J(11),Sd(this.a,this,!0)):(I(this.b,\"Test connection failed; not using streaming\"),J(10),Sd(this.a,this,!1))):(I(this.b,\"TestConnection: request failed, in state \"+this.R),0==this.R?J(8):1==this.R&&J(9),Ud(this.a,this))};\ng.ia=function(){return this.a.ia()};g.ra=function(){return this.a.ra()};function Vd(){this.a=this.b=null};function S(){this.a=new N}function Wd(a){var b=typeof a;return\"object\"==b&&a||\"function\"==b?\"o\"+(a[q]||(a[q]=++ea)):b.charAt(0)+a}S.prototype.s=function(){return this.a.s()};S.prototype.add=function(a){this.a.set(Wd(a),a)};S.prototype.contains=function(a){a=Wd(a);return O(this.a.b,a)};S.prototype.v=function(){return this.a.v()};function Xd(a,b){this.a=a;this.b=b};function Yd(a){this.g=a||Zd;this.f=k.pa&&k.pa.Ka&&k.pa.Ka()&&k.pa.Ka().Db?this.g:1;this.a=null;1<this.f&&(this.a=new S);this.b=null;this.c=[]}var Zd=10;function $d(a,b){a.a||-1==b.indexOf(\"spdy\")&&-1==b.indexOf(\"quic\")&&-1==b.indexOf(\"h2\")||(a.f=a.g,a.a=new S,a.b&&(ae(a,a.b),a.b=null))}function be(a){return a.b?!0:a.a?a.a.s()>=a.f:!1}function ce(a,b){return a.b?a.b==b:a.a?a.a.contains(b):!1}function ae(a,b){a.a?a.a.add(b):a.b=b}\nfunction de(a,b){a.b&&a.b==b?a.b=null:a.a&&a.a.contains(b)&&kd(a.a.a,Wd(b))}Yd.prototype.cancel=function(){this.c=ee(this);this.b?(this.b.cancel(),this.b=null):this.a&&0!=this.a.a.c&&(ta(this.a.v(),function(a){a.cancel()}),jd(this.a.a))};function ee(a){if(null!=a.b)return a.c.concat(a.b.u);if(null!=a.a&&0!=a.a.a.c){var b=a.c;ta(a.a.v(),function(a){b=b.concat(a.u)});return b}return ya(a.c)}function fe(a,b){a.c=a.c.concat(b)};function ge(){}ge.prototype.stringify=function(a){return k.JSON.stringify(a,void 0)};ge.prototype.parse=function(a){return k.JSON.parse(a,void 0)};function he(){this.a=new ge}function ie(a,b,c){var d=c||\"\";try{hd(a,function(a,c){var e=a;p(a)&&(e=Db(a));b.push(d+c+\"=\"+encodeURIComponent(e))})}catch(e){throw b.push(d+\"type=\"+encodeURIComponent(\"_badmap\")),e;}};function je(a,b){var c=new qc;I(c,\"TestLoadImage: loading \"+a);var d=new Image;d.onload=ia(ke,c,d,\"TestLoadImage: loaded\",!0,b);d.onerror=ia(ke,c,d,\"TestLoadImage: error\",!1,b);d.onabort=ia(ke,c,d,\"TestLoadImage: abort\",!1,b);d.ontimeout=ia(ke,c,d,\"TestLoadImage: timeout\",!1,b);k.setTimeout(function(){if(d.ontimeout)d.ontimeout()},1E4);d.src=a}function ke(a,b,c,d,e){try{I(a,c),b.onload=null,b.onerror=null,b.onabort=null,b.ontimeout=null,e(d)}catch(f){wc(a,f)}};function T(a){B.call(this);this.headers=new N;this.F=a||null;this.f=!1;this.D=this.a=null;this.M=this.u=\"\";this.j=0;this.g=\"\";this.h=this.J=this.o=this.I=!1;this.l=0;this.B=null;this.N=le;this.C=this.m=!1}u(T,B);var le=\"\";T.prototype.b=oc(\"goog.net.XhrIo\");var me=/^https?$/i,ne=[\"POST\",\"PUT\"];g=T.prototype;\ng.fa=function(a,b,c,d){if(this.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.u+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.u=a;this.g=\"\";this.j=0;this.M=b;this.I=!1;this.f=!0;this.a=this.F?Mc(this.F):Mc(Kc);this.D=this.F?Ic(this.F):Ic(Kc);this.a.onreadystatechange=r(this.La,this);try{F(this.b,U(this,\"Opening Xhr\")),this.J=!0,this.a.open(b,String(a),!0),this.J=!1}catch(f){F(this.b,U(this,\"Error opening Xhr: \"+f.message));oe(this,f);return}a=c||\"\";var e=new N(this.headers);\nd&&hd(d,function(a,b){e.set(b,a)});d=ua(e.O());c=k.FormData&&a instanceof k.FormData;!(0<=sa(ne,b))||d||c||e.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");e.forEach(function(a,b){this.a.setRequestHeader(b,a)},this);this.N&&(this.a.responseType=this.N);\"withCredentials\"in this.a&&this.a.withCredentials!==this.m&&(this.a.withCredentials=this.m);try{pe(this),0<this.l&&(this.C=qe(this.a),F(this.b,U(this,\"Will abort after \"+this.l+\"ms if incomplete, xhr2 \"+this.C)),this.C?(this.a.timeout=\nthis.l,this.a.ontimeout=r(this.Ia,this)):this.B=Zb(this.Ia,this.l,this)),F(this.b,U(this,\"Sending request\")),this.o=!0,this.a.send(a),this.o=!1}catch(f){F(this.b,U(this,\"Send error: \"+f.message)),oe(this,f)}};function qe(a){return z&&Ta(9)&&\"number\"==typeof a.timeout&&void 0!==a.ontimeout}function va(a){return\"content-type\"==a.toLowerCase()}\ng.Ia=function(){\"undefined\"!=typeof goog&&this.a&&(this.g=\"Timed out after \"+this.l+\"ms, aborting\",this.j=8,F(this.b,U(this,this.g)),this.dispatchEvent(\"timeout\"),this.abort(8))};function oe(a,b){a.f=!1;a.a&&(a.h=!0,a.a.abort(),a.h=!1);a.g=b;a.j=5;re(a);se(a)}function re(a){a.I||(a.I=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))}\ng.abort=function(a){this.a&&this.f&&(F(this.b,U(this,\"Aborting\")),this.f=!1,this.h=!0,this.a.abort(),this.h=!1,this.j=a||7,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),se(this))};g.A=function(){this.a&&(this.f&&(this.f=!1,this.h=!0,this.a.abort(),this.h=!1),se(this,!0));T.H.A.call(this)};g.La=function(){this.i||(this.J||this.o||this.h?te(this):this.cb())};g.cb=function(){te(this)};\nfunction te(a){if(a.f&&\"undefined\"!=typeof goog)if(a.D[1]&&4==M(a)&&2==a.W())F(a.b,U(a,\"Local request error detected and ignored\"));else if(a.o&&4==M(a))Zb(a.La,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==M(a)){F(a.b,U(a,\"Request complete\"));a.f=!1;try{var b=a.W();a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.u).match(ld)[1]||null;if(!f&&k.self&&k.self.location){var h=k.self.location.protocol;\nf=h.substr(0,h.length-1)}e=!me.test(f?f.toLowerCase():\"\")}d=e}d?(a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\")):(a.j=6,a.g=a.Ga()+\" [\"+a.W()+\"]\",re(a))}finally{se(a)}}}function se(a,b){if(a.a){pe(a);var c=a.a,d=a.D[0]?aa:null;a.a=null;a.D=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(gc,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}}function pe(a){a.a&&a.C&&(a.a.ontimeout=null);a.B&&(k.clearTimeout(a.B),a.B=null)}\nfunction M(a){return a.a?a.a.readyState:0}g.W=function(){try{return 2<M(this)?this.a.status:-1}catch(a){return-1}};g.Ga=function(){try{return 2<M(this)?this.a.statusText:\"\"}catch(a){return F(this.b,\"Can not get status: \"+a.message),\"\"}};g.V=function(){try{return this.a?this.a.responseText:\"\"}catch(a){return F(this.b,\"Can not get responseText: \"+a.message),\"\"}};\ng.Ya=function(a){if(this.a){var b=this.a.responseText;a&&0==b.indexOf(a)&&(b=b.substring(a.length));a:{a=b;if(k.JSON)try{var c=k.JSON.parse(a);break a}catch(d){}c=Cb(a)}return c}};g.Fa=function(){return this.j};g.ab=function(){return l(this.g)?this.g:String(this.g)};function U(a,b){return b+\" [\"+a.M+\" \"+a.u+\" \"+a.W()+\"]\"};function ue(a){var b=\"\";Ba(a,function(a,d){b+=d;b+=\":\";b+=a;b+=\"\\r\\n\"});return b}function ve(a,b,c){a:{for(d in c){var d=!1;break a}d=!0}if(d)return a;c=ue(c);if(l(a)){b=encodeURIComponent(String(b));c=null!=c?\"=\"+encodeURIComponent(String(c)):\"\";if(b+=c){c=a.indexOf(\"#\");0>c&&(c=a.length);d=a.indexOf(\"?\");if(0>d||d>c){d=c;var e=\"\"}else e=a.substring(d+1,c);a=[a.substr(0,d),e,a.substr(c)];c=a[1];a[1]=b?c?c+\"&\"+b:b:c;a=a[0]+(a[1]?\"?\"+a[1]:\"\")+a[2]}return a}Q(a,b,c);return a};function we(a){this.ya=0;this.g=[];this.a=new qc;this.I=new Vd;this.ja=this.wa=this.F=this.ka=this.b=this.K=this.j=this.U=this.h=this.M=this.i=null;this.Ua=this.P=0;this.la=this.B=this.o=this.m=this.l=this.f=null;this.u=this.xa=this.N=-1;this.T=this.w=this.C=0;this.S=a&&a.supportsCrossDomainXhr||!1;this.J=\"\";this.c=new Yd(a&&a.concurrentRequestLimit);this.ma=new he;this.D=a&&void 0!==a.backgroundChannelTest?a.backgroundChannelTest:!0;this.Ta=a&&a.fastHandshake||!1;a&&a.Ea&&this.a.Ea()}g=we.prototype;\ng.oa=8;g.G=1;function xe(a){I(a.a,\"disconnect()\");ye(a);if(3==a.G){var b=a.P++,c=L(a.F);Q(c,\"SID\",a.J);Q(c,\"RID\",b);Q(c,\"TYPE\",\"terminate\");ze(a,c);b=new K(a,a.a,b,void 0);b.K=2;b.h=Tc(L(c));c=!1;k.navigator&&k.navigator.sendBeacon&&(c=k.navigator.sendBeacon(b.h.toString(),\"\"));!c&&k.Image&&((new Image).src=b.h,c=!0);c||(b.a=b.i.da(null),b.a.fa(b.h));b.D=t();Wc(b)}Ae(a)}\nfunction ye(a){a.B&&(a.B.abort(),a.B=null);a.b&&(a.b.cancel(),a.b=null);a.m&&(k.clearTimeout(a.m),a.m=null);Be(a);a.c.cancel();a.l&&(k.clearTimeout(a.l),a.l=null)}function Ce(a,b){1E3==a.g.length&&xc(a.a,function(){return\"Already have 1000 queued maps upon queueing \"+Db(b)});a.g.push(new Xd(a.Ua++,b));3==a.G&&De(a)}g.Ja=function(){return 0==this.G};function De(a){be(a.c)||a.l||(a.l=Ec(r(a.Oa,a),0),a.C=0)}\nfunction Ee(a,b){var c=a.c;if((c.b?1:c.a?c.a.s():0)>=a.c.f-(a.l?1:0))return xc(a.a,\"Unexpected retry request is scheduled.\"),!1;if(a.l)return I(a.a,\"Use the retry request that is already scheduled.\"),a.g=b.u.concat(a.g),!0;if(1==a.G||2==a.G||2<=a.C)return!1;I(a.a,\"Going to retry POST\");a.l=Ec(r(a.Oa,a,b),Fe(a,a.C));a.C++;return!0}\ng.Oa=function(a){this.l=null;I(this.a,\"startForwardChannel_\");if(1==this.G)if(a)xc(this.a,\"Not supposed to retry the open\");else{I(this.a,\"open_()\");this.P=Math.floor(1E5*Math.random());a=this.P++;var b=new K(this,this.a,a,void 0),c=this.i;this.M&&(c?(c=Ea(c),Ga(c,this.M)):c=this.M);null===this.h&&(b.j=c);var d=Ge(this,b),e=L(this.F);Q(e,\"RID\",a);Q(e,\"CVER\",21);this.D&&this.j&&Q(e,\"X-HTTP-Session-Id\",this.j);ze(this,e);this.h&&c&&ve(e,this.h,c);ae(this.c,b);this.Ta?(Q(e,\"$req\",d),Sc(b,e,null)):Sc(b,\ne,d);this.G=2}else 3==this.G&&(a?He(this,a):0==this.g.length?I(this.a,\"startForwardChannel_ returned: nothing to send\"):be(this.c)?xc(this.a,\"startForwardChannel_ returned: connection already in progress\"):(He(this),I(this.a,\"startForwardChannel_ finished, sent request\")))};\nfunction He(a,b){var c;b?c=b.f:c=a.P++;var d=L(a.F);Q(d,\"SID\",a.J);Q(d,\"RID\",c);Q(d,\"AID\",a.N);ze(a,d);a.h&&a.i&&ve(d,a.h,a.i);c=new K(a,a.a,c,a.C+1);null===a.h&&(c.j=a.i);b&&(a.g=b.u.concat(a.g));b=Ge(a,c);c.setTimeout(1E4+Math.round(1E4*Math.random()));ae(a.c,c);Sc(c,d,b)}function ze(a,b){a.f&&hd({},function(a,d){Q(b,d,a)})}\nfunction Ge(a,b){var c=Math.min(a.g.length,1E3),d=a.f?r(a.f.Va,a.f,a):null;a:for(var e=a.g,f=-1;;){var h=[\"count=\"+c];-1==f?0<c?(f=e[0].a,h.push(\"ofs=\"+f)):f=0:h.push(\"ofs=\"+f);for(var m=!0,v=0;v<c;v++){var G=e[v].a,Z=e[v].b;G-=f;if(0>G)f=Math.max(0,e[v].a-100),m=!1;else try{ie(Z,h,\"req\"+G+\"_\")}catch(Mb){d&&d(Z)}}if(m){d=h.join(\"&\");break a}}a=a.g.splice(0,c);b.u=a;return d}function Ie(a){if(!a.b&&!a.m){a.T=1;var b=a.Na;Tb||Ub();Wb||(Tb(),Wb=!0);Pb.add(b,a);a.w=0}}\nfunction Je(a){if(a.b||a.m)return xc(a.a,\"Request already in progress\"),!1;if(3<=a.w)return!1;I(a.a,\"Going to retry GET\");a.T++;a.m=Ec(r(a.Na,a),Fe(a,a.w));a.w++;return!0}\ng.Na=function(){this.m=null;I(this.a,\"Creating new HttpRequest\");this.b=new K(this,this.a,\"rpc\",this.T);null===this.h&&(this.b.j=this.i);this.b.P=0;var a=L(this.wa);Q(a,\"RID\",\"rpc\");Q(a,\"SID\",this.J);Q(a,\"CI\",this.la?\"0\":\"1\");Q(a,\"AID\",this.N);ze(this,a);Q(a,\"TYPE\",\"xmlhttp\");this.h&&this.i&&ve(a,this.h,this.i);Vc(this.b,a,!0,this.ja);I(this.a,\"New Request created\")};\nfunction Sd(a,b,c){I(a.a,\"Test Connection Finished\");var d=b.m;d&&$d(a.c,d);a.la=c;a.u=b.f;I(a.a,\"connectChannel_()\");a.F=Ke(a,a.ka);De(a)}function Ud(a,b){I(a.a,\"Test Connection Failed\");a.u=b.f;V(a,2)}\ng.Ma=function(a,b){if(0!=this.G&&(this.b==a||ce(this.c,a)))if(this.u=a.C,ce(this.c,a)&&3==this.G){try{var c=this.ma.a.parse(b)}catch(f){c=null}if(n(c)&&3==c.length)if(b=c,0==b[0])a:if(I(this.a,\"Server claims our backchannel is missing.\"),this.m)I(this.a,\"But we are currently starting the request.\");else{if(this.b)if(this.b.D+3E3<a.D)Be(this),this.b.cancel(),this.b=null;else break a;else E(this.a.a,\"We do not have a BackChannel established\");Je(this);J(18)}else this.xa=b[1],a=this.xa-this.N,0<a&&(b=\nb[2],I(this.a,b+\" bytes (in \"+a+\" arrays) are outstanding on the BackChannel\"),37500>b&&this.la&&0==this.w&&!this.o&&(this.o=Ec(r(this.bb,this),6E3)));else I(this.a,\"Bad POST response data returned\"),V(this,11)}else if(this.b==a&&Be(this),!/^[\\s\\xa0]*$/.test(b))for(b=c=this.ma.a.parse(b),c=0;c<b.length;c++){var d=b[c];this.N=d[0];d=d[1];if(2==this.G)if(\"c\"==d[0]){this.J=d[1];this.ja=d[2];var e=d[3];null!=e&&(this.oa=e,H(this.a,\"VER=\"+this.oa));d=d[4];null!=d&&(this.ya=d,H(this.a,\"SVER=\"+this.ya));\nthis.D&&(d=a.a)&&((e=d.a?d.a.getResponseHeader(\"X-Client-Wire-Protocol\"):null)&&$d(this.c,e),this.j&&((d=d.a?d.a.getResponseHeader(\"X-HTTP-Session-Id\"):null)?(this.K=d,Q(this.F,this.j,d)):E(this.a.a,\"Missing X_HTTP_SESSION_ID in the handshake response\")));this.G=3;this.f&&this.f.Da();this.wa=Td(this,this.ja,this.ka);Ie(this)}else\"stop\"!=d[0]&&\"close\"!=d[0]||V(this,7);else 3==this.G&&(\"stop\"==d[0]||\"close\"==d[0]?\"stop\"==d[0]?V(this,7):xe(this):\"noop\"!=d[0]&&this.f&&this.f.Ca(d),this.w=0)}};\ng.bb=function(){null!=this.o&&(this.o=null,this.b.cancel(),this.b=null,Je(this),J(19))};function Be(a){null!=a.o&&(k.clearTimeout(a.o),a.o=null)}\ng.ua=function(a){I(this.a,\"Request complete\");var b=null;if(this.b==a){Be(this);this.b=null;var c=2}else if(ce(this.c,a))b=a.u,de(this.c,a),c=1;else return;this.u=a.C;if(0!=this.G)if(a.c)1==c?(Dc(a.m?a.m.length:0,t()-a.D,this.C),De(this)):Ie(this);else{var d=a.l;if(3==d||0==d&&0<this.u)I(this.a,\"Not retrying due to error type\");else{var e=this;I(this.a,function(){return\"Maybe retrying, last error: \"+Pc(d,e.u)});if(1==c&&Ee(this,a)||2==c&&Je(this))return;I(this.a,\"Exceeded max number of retries\")}b&&\n0<b.length&&fe(this.c,b);I(this.a,\"Error: HTTP request failed\");switch(d){case 1:V(this,5);break;case 4:V(this,10);break;case 3:V(this,6);break;default:V(this,2)}}};function Fe(a,b){var c=5E3+Math.floor(1E4*Math.random());a.ra()||(I(a.a,\"Inactive channel\"),c*=2);return c*b}\nfunction V(a,b){H(a.a,\"Error code \"+b);if(2==b){var c=null;a.f&&(c=null);var d=r(a.jb,a);c||(c=new P(\"//www.google.com/images/cleardot.gif\"),k.location&&\"http\"==k.location.protocol||nd(c,\"https\"),Tc(c));je(c.toString(),d)}else J(2);I(a.a,\"HttpChannel: error - \"+b);a.G=0;a.f&&a.f.Ba(b);Ae(a);ye(a)}g.jb=function(a){a?(H(this.a,\"Successfully pinged google.com\"),J(2)):(H(this.a,\"Failed to ping google.com\"),J(1))};\nfunction Ae(a){a.G=0;a.u=-1;if(a.f){var b=ee(a.c);if(0!=b.length||0!=a.g.length)I(a.a,function(){return\"Number of undelivered maps, pending: \"+b.length+\", outgoing: \"+a.g.length}),a.c.c.length=0,ya(a.g),a.g.length=0;a.f.Aa()}}function Ke(a,b){b=Le(a,null,b);I(a.a,\"GetForwardChannelUri: \"+b);return b}function Td(a,b,c){b=Le(a,a.ia()?b:null,c);I(a.a,\"GetBackChannelUri: \"+b);return b}\nfunction Le(a,b,c){var d=Cd(c);if(\"\"!=d.b)b&&od(d,b+\".\"+d.b),pd(d,d.i);else{var e=k.location,f;b?f=b+\".\"+e.hostname:f=e.hostname;d=Dd(e.protocol,f,e.port,c)}a.U&&Ba(a.U,function(a,b){Q(d,b,a)});b=a.j;c=a.K;b&&c&&Q(d,b,c);Q(d,\"VER\",a.oa);ze(a,d);return d}g.da=function(a){if(a&&!this.S)throw Error(\"Can't create secondary domain capable XhrIo object.\");a=new T;a.m=this.S;return a};g.ra=function(){return!!this.f&&!0};g.ia=function(){return this.S};new Ld;function Me(){}g=Me.prototype;g.Da=function(){};\ng.Ca=function(){};g.Ba=function(){};g.Aa=function(){};g.Va=function(){};function Ne(a){for(var b=arguments[0],c=1;c<arguments.length;c++){var d=arguments[c];if(0==d.lastIndexOf(\"/\",0))b=d;else{var e;(e=\"\"==b)||(e=b.length-1,e=0<=e&&b.indexOf(\"/\",e)==e);e?b+=d:b+=\"/\"+d}}return b};function Oe(){if(z&&!(10<=Number(Ua)))throw Error(\"Environmental error: no available transport.\");}Oe.prototype.a=function(a,b){return new W(a,b)};\nfunction W(a,b){B.call(this);this.a=new we(b);this.b=a;this.m=b&&b.testUrl?b.testUrl:Ne(this.b,\"test\");this.f=oc(\"goog.labs.net.webChannel.WebChannelBaseTransport\");this.g=b&&b.messageUrlParams||null;a=b&&b.messageHeaders||null;b&&b.clientProtocolHeaderRequired&&(a?a[\"X-Client-Protocol\"]=\"webchannel\":a={\"X-Client-Protocol\":\"webchannel\"});this.a.i=a;a=b&&b.initMessageHeaders||null;b&&b.messageContentType&&(a?a[\"X-WebChannel-Content-Type\"]=b.messageContentType:a={\"X-WebChannel-Content-Type\":b.messageContentType});\nthis.a.M=a;(a=b&&b.httpHeadersOverwriteParam)&&!/^[\\s\\xa0]*$/.test(a)&&(this.a.h=a);this.l=b&&b.supportsCrossDomainXhr||!1;this.j=b&&b.sendRawJson||!1;(b=b&&b.httpSessionIdParam)&&!/^[\\s\\xa0]*$/.test(b)&&(this.a.j=b,a=this.g,null!==a&&b in a&&(a=this.g,b in a&&delete a[b],E(this.f,\"Ignore httpSessionIdParam also specified with messageUrlParams: \"+b)));this.h=new Pe(this)}u(W,B);g=W.prototype;g.addEventListener=function(a,b,c,d){W.H.addEventListener.call(this,a,b,c,d)};\ng.removeEventListener=function(a,b,c,d){W.H.removeEventListener.call(this,a,b,c,d)};\ng.Za=function(){this.a.f=this.h;this.l&&(this.a.S=!0);var a=this.a,b=this.m,c=this.b,d=this.g||void 0;I(a.a,\"connect()\");J(0);a.ka=c;a.U=d||{};a.D&&(I(a.a,\"connect() bypassed channel-test.\"),a.I.b=[],a.I.a=!1);I(a.a,\"connectTest_()\");a.B=new Qd(a,a.a);null===a.h&&(a.B.i=a.i);c=b;a.h&&a.i&&(c=ve(b,a.h,a.i));a=a.B;a.l=c;b=Ke(a.a,a.l);J(3);c=a.a.I.b;null!=c?(a.g=c[0],a.R=1,Rd(a)):(Xc(b,\"MODE\",\"init\"),!a.a.D&&a.a.j&&Xc(b,\"X-HTTP-Session-Id\",a.a.j),a.c=new K(a,a.b,void 0,void 0),a.c.j=a.i,Vc(a.c,b,!1,\nnull),a.R=0)};g.close=function(){xe(this.a)};g.$a=function(a){if(l(a)){var b={};b.__data__=a;Ce(this.a,b)}else this.j?(b={},b.__data__=Db(a),Ce(this.a,b)):Ce(this.a,a)};g.A=function(){this.a.f=null;delete this.h;xe(this.a);delete this.a;W.H.A.call(this)};function Qe(a){Od.call(this);var b=a.__sm__;if(b){a:{for(var c in b){a=c;break a}a=void 0}(this.c=a)?(a=this.c,this.data=null!==b&&a in b?b[a]:void 0):this.data=b}else this.data=a}u(Qe,Od);function Re(){Pd.call(this);this.status=1}u(Re,Pd);\nfunction Pe(a){this.a=a}u(Pe,Me);Pe.prototype.Da=function(){pc(this.a.f,\"WebChannel opened on \"+this.a.b);this.a.dispatchEvent(\"a\")};Pe.prototype.Ca=function(a){this.a.dispatchEvent(new Qe(a))};Pe.prototype.Ba=function(a){pc(this.a.f,\"WebChannel aborted on \"+this.a.b+\" due to channel error: \"+a);this.a.dispatchEvent(new Re(a))};Pe.prototype.Aa=function(){pc(this.a.f,\"WebChannel closed on \"+this.a.b);this.a.dispatchEvent(\"b\")};var Se=ia(function(a,b){function c(){}c.prototype=a.prototype;var d=new c;a.apply(d,Array.prototype.slice.call(arguments,1));return d},Oe);function Te(){this.b=[];this.a=[]}function Ue(a){0==a.b.length&&(a.b=a.a,a.b.reverse(),a.a=[]);return a.b.pop()}Te.prototype.s=function(){return this.b.length+this.a.length};Te.prototype.contains=function(a){return 0<=sa(this.b,a)||0<=sa(this.a,a)};Te.prototype.v=function(){for(var a=[],b=this.b.length-1;0<=b;--b)a.push(this.b[b]);var c=this.a.length;for(b=0;b<c;++b)a.push(this.a[b]);return a};function Ve(a,b){w.call(this);this.h=a||0;this.c=b||10;if(this.h>this.c)throw Error(We);this.a=new Te;this.b=new S;this.g=null;this.ba()}u(Ve,w);var We=\"[goog.structs.Pool] Min can not be greater than max\";g=Ve.prototype;g.ea=function(){var a=t();if(!(null!=this.g&&0>a-this.g)){for(var b;0<this.a.s()&&(b=Ue(this.a),!this.ta(b));)this.ba();!b&&this.s()<this.c&&(b=this.qa());b&&(this.g=a,this.b.add(b));return b}};g.ib=function(a){return kd(this.b.a,Wd(a))?(this.na(a),!0):!1};\ng.na=function(a){kd(this.b.a,Wd(a));this.ta(a)&&this.s()<this.c?this.a.a.push(a):Xe(a)};g.ba=function(){for(var a=this.a;this.s()<this.h;){var b=this.qa();a.a.push(b)}for(;this.s()>this.c&&0<this.a.s();)Xe(Ue(a))};g.qa=function(){return{}};function Xe(a){if(\"function\"==typeof a.Z)a.Z();else for(var b in a)a[b]=null}g.ta=function(a){return\"function\"==typeof a.Wa?a.Wa():!0};g.contains=function(a){return this.a.contains(a)||this.b.contains(a)};g.s=function(){return this.a.s()+this.b.s()};\ng.A=function(){Ve.H.A.call(this);if(0<this.b.s())throw Error(\"[goog.structs.Pool] Objects not released\");delete this.b;for(var a=this.a;0!=a.b.length||0!=a.a.length;)Xe(Ue(a));delete this.a};function Ye(a,b){this.a=a;this.b=b};function Ze(a){this.a=[];if(a)a:{if(a instanceof Ze){var b=a.O();a=a.v();if(0>=this.s()){for(var c=this.a,d=0;d<b.length;d++)c.push(new Ye(b[d],a[d]));break a}}else b=Da(a),a=Ca(a);for(d=0;d<b.length;d++)$e(this,b[d],a[d])}}function $e(a,b,c){var d=a.a;d.push(new Ye(b,c));b=d.length-1;a=a.a;for(c=a[b];0<b;)if(d=b-1>>1,a[d].a>c.a)a[b]=a[d],b=d;else break;a[b]=c}Ze.prototype.v=function(){for(var a=this.a,b=[],c=a.length,d=0;d<c;d++)b.push(a[d].b);return b};\nZe.prototype.O=function(){for(var a=this.a,b=[],c=a.length,d=0;d<c;d++)b.push(a[d].a);return b};Ze.prototype.s=function(){return this.a.length};function af(){Ze.call(this)}u(af,Ze);function X(a,b){this.f=new af;Ve.call(this,a,b)}u(X,Ve);g=X.prototype;g.ea=function(a,b){if(!a)return X.H.ea.call(this);$e(this.f,void 0!==b?b:100,a);this.sa()};g.sa=function(){for(var a=this.f;0<a.s();){var b=this.ea();if(b){var c=a,d=c.a,e=d.length;var f=d[0];if(0>=e)f=void 0;else{if(1==e)wa(d);else{d[0]=d.pop();d=0;c=c.a;e=c.length;for(var h=c[d];d<e>>1;){var m=2*d+1,v=2*d+2;m=v<e&&c[v].a<c[m].a?v:m;if(c[m].a>h.a)break;c[d]=c[m];d=m}c[d]=h}f=f.b}f.apply(this,[b])}else break}};\ng.na=function(a){X.H.na.call(this,a);this.sa()};g.ba=function(){X.H.ba.call(this);this.sa()};g.A=function(){X.H.A.call(this);k.clearTimeout(void 0);wa(this.f.a);this.f=null};function Y(a,b,c,d){this.l=a;this.j=!!d;X.call(this,b,c)}u(Y,X);Y.prototype.qa=function(){var a=new T,b=this.l;b&&b.forEach(function(b,d){a.headers.set(d,b)});this.j&&(a.m=!0);return a};Y.prototype.ta=function(a){return!a.i&&!a.a};Oe.prototype.createWebChannel=Oe.prototype.a;W.prototype.send=W.prototype.$a;W.prototype.open=W.prototype.Za;W.prototype.close=W.prototype.close;Fc.NO_ERROR=0;Fc.TIMEOUT=8;Fc.HTTP_ERROR=6;Gc.COMPLETE=\"complete\";Md.EventType=Nd;Nd.OPEN=\"a\";Nd.CLOSE=\"b\";Nd.ERROR=\"c\";Nd.MESSAGE=\"d\";B.prototype.listen=B.prototype.aa;Y.prototype.getObject=Y.prototype.ea;Y.prototype.releaseObject=Y.prototype.ib;T.prototype.listenOnce=T.prototype.Ha;T.prototype.getLastError=T.prototype.ab;T.prototype.getLastErrorCode=T.prototype.Fa;\nT.prototype.getStatus=T.prototype.W;T.prototype.getStatusText=T.prototype.Ga;T.prototype.getResponseJson=T.prototype.Ya;T.prototype.getResponseText=T.prototype.V;T.prototype.getResponseText=T.prototype.V;T.prototype.send=T.prototype.fa;module.exports={createWebChannelTransport:Se,ErrorCode:Fc,EventType:Gc,WebChannel:Md,XhrIoPool:Y};}).call(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {})\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n/***/ }),\n/* 280 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return StreamBridge; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nvar StreamBridge = /** @class */ (function () {\n    function StreamBridge(args) {\n        this.sendFn = args.sendFn;\n        this.closeFn = args.closeFn;\n    }\n    StreamBridge.prototype.onOpen = function (callback) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.wrappedOnOpen, 'Called onOpen on stream twice!');\n        this.wrappedOnOpen = callback;\n    };\n    StreamBridge.prototype.onClose = function (callback) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.wrappedOnClose, 'Called onClose on stream twice!');\n        this.wrappedOnClose = callback;\n    };\n    StreamBridge.prototype.onMessage = function (callback) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.wrappedOnMessage, 'Called onMessage on stream twice!');\n        this.wrappedOnMessage = callback;\n    };\n    StreamBridge.prototype.close = function () {\n        this.closeFn();\n    };\n    StreamBridge.prototype.send = function (msg) {\n        this.sendFn(msg);\n    };\n    StreamBridge.prototype.callOnOpen = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.wrappedOnOpen !== undefined, 'Cannot call onOpen because no callback was set');\n        this.wrappedOnOpen();\n    };\n    StreamBridge.prototype.callOnClose = function (err) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.wrappedOnClose !== undefined, 'Cannot call onClose because no callback was set');\n        this.wrappedOnClose(err);\n    };\n    StreamBridge.prototype.callOnMessage = function (msg) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.wrappedOnMessage !== undefined, 'Cannot call onMessage because no callback was set');\n        this.wrappedOnMessage(msg);\n    };\n    return StreamBridge;\n}());\n\n\n//# sourceMappingURL=stream_bridge.js.map\n\n\n/***/ }),\n/* 281 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = configureForFirebase;\n/* unused harmony export configureForStandalone */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__api_blob__ = __webpack_require__(181);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api_database__ = __webpack_require__(282);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__api_field_path__ = __webpack_require__(186);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__api_field_value__ = __webpack_require__(211);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__api_geo_point__ = __webpack_require__(183);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_obj__ = __webpack_require__(127);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\nvar firestoreNamespace = {\n    Firestore: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"e\" /* PublicFirestore */],\n    GeoPoint: __WEBPACK_IMPORTED_MODULE_4__api_geo_point__[\"a\" /* GeoPoint */],\n    Blob: __WEBPACK_IMPORTED_MODULE_0__api_blob__[\"b\" /* PublicBlob */],\n    Transaction: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"i\" /* PublicTransaction */],\n    WriteBatch: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"j\" /* PublicWriteBatch */],\n    DocumentReference: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"c\" /* PublicDocumentReference */],\n    DocumentSnapshot: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"d\" /* PublicDocumentSnapshot */],\n    Query: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"f\" /* PublicQuery */],\n    QueryDocumentSnapshot: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"g\" /* PublicQueryDocumentSnapshot */],\n    QuerySnapshot: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"h\" /* PublicQuerySnapshot */],\n    CollectionReference: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"b\" /* PublicCollectionReference */],\n    FieldPath: __WEBPACK_IMPORTED_MODULE_2__api_field_path__[\"a\" /* FieldPath */],\n    FieldValue: __WEBPACK_IMPORTED_MODULE_3__api_field_value__[\"c\" /* PublicFieldValue */],\n    setLogLevel: __WEBPACK_IMPORTED_MODULE_1__api_database__[\"a\" /* Firestore */].setLogLevel\n};\n/**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n */\nfunction configureForFirebase(firebase) {\n    firebase.INTERNAL.registerService('firestore', function (app) { return new __WEBPACK_IMPORTED_MODULE_1__api_database__[\"a\" /* Firestore */](app); }, Object(__WEBPACK_IMPORTED_MODULE_5__util_obj__[\"f\" /* shallowCopy */])(firestoreNamespace));\n}\n/**\n * Exports the Firestore namespace into the provided `exportObject` object under\n * the key 'firestore'. This is used for wrapped binary that exposes Firestore\n * as a goog module.\n */\nfunction configureForStandalone(exportObject) {\n    var copiedNamespace = Object(__WEBPACK_IMPORTED_MODULE_5__util_obj__[\"f\" /* shallowCopy */])(firestoreNamespace);\n    // Unlike the use with Firebase, the standalone allows the use of the\n    // constructor, so export it's internal class\n    copiedNamespace['Firestore'] = __WEBPACK_IMPORTED_MODULE_1__api_database__[\"a\" /* Firestore */];\n    exportObject['firestore'] = copiedNamespace;\n}\n\n//# sourceMappingURL=config.js.map\n\n\n/***/ }),\n/* 282 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Firestore; });\n/* unused harmony export Transaction */\n/* unused harmony export WriteBatch */\n/* unused harmony export DocumentReference */\n/* unused harmony export DocumentSnapshot */\n/* unused harmony export QueryDocumentSnapshot */\n/* unused harmony export Query */\n/* unused harmony export QuerySnapshot */\n/* unused harmony export CollectionReference */\n/* unused harmony export changesFromSnapshot */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return PublicFirestore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return PublicTransaction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return PublicWriteBatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return PublicDocumentReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return PublicDocumentSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return PublicQueryDocumentSnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return PublicQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return PublicQuerySnapshot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PublicCollectionReference; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__field_path__ = __webpack_require__(186);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_database_info__ = __webpack_require__(206);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_firestore_client__ = __webpack_require__(283);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_query__ = __webpack_require__(184);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__ = __webpack_require__(165);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__model_field_value__ = __webpack_require__(136);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__model_mutation__ = __webpack_require__(163);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__model_path__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__platform_platform__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__util_api__ = __webpack_require__(182);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__util_async_observer__ = __webpack_require__(306);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__util_async_queue__ = __webpack_require__(307);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__util_input_validation__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__util_obj__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__credentials__ = __webpack_require__(308);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__observer__ = __webpack_require__(310);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__user_data_converter__ = __webpack_require__(311);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n// tslint:disable:strip-private-property-underscore\nvar DEFAULT_HOST = 'firestore.googleapis.com';\nvar DEFAULT_SSL = true;\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied firestore.Settings object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nvar FirestoreSettings = /** @class */ (function () {\n    function FirestoreSettings(settings) {\n        if (settings.host === undefined) {\n            if (settings.ssl !== undefined) {\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n            }\n            this.host = DEFAULT_HOST;\n            this.ssl = DEFAULT_SSL;\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"k\" /* validateNamedType */])('settings', 'string', 'host', settings.host);\n            this.host = settings.host;\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"j\" /* validateNamedOptionalType */])('settings', 'boolean', 'ssl', settings.ssl);\n            this.ssl = __WEBPACK_IMPORTED_MODULE_19__util_obj__[\"b\" /* defaulted */](settings.ssl, DEFAULT_SSL);\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"l\" /* validateOptionNames */])('settings', settings, ['host', 'ssl', 'credentials']);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"j\" /* validateNamedOptionalType */])('settings', 'object', 'credentials', settings.credentials);\n        this.credentials = settings.credentials;\n    }\n    FirestoreSettings.prototype.isEqual = function (other) {\n        return (this.host === other.host &&\n            this.ssl === other.ssl &&\n            this.credentials === other.credentials);\n    };\n    return FirestoreSettings;\n}());\nvar FirestoreConfig = /** @class */ (function () {\n    function FirestoreConfig() {\n    }\n    return FirestoreConfig;\n}());\n/**\n * The root reference to the database.\n */\nvar Firestore = /** @class */ (function () {\n    function Firestore(databaseIdOrApp) {\n        var _this = this;\n        this._queue = new __WEBPACK_IMPORTED_MODULE_14__util_async_queue__[\"a\" /* AsyncQueue */]();\n        this.INTERNAL = {\n            delete: function () {\n                if (_this._firestoreClient) {\n                    return _this._firestoreClient.shutdown();\n                }\n                else {\n                    return Promise.resolve();\n                }\n            },\n            // Exposed via INTERNAL for use in tests.\n            drainAsyncQueue: function (executeDelayedTasks) {\n                return _this._queue.drain(executeDelayedTasks);\n            }\n        };\n        var config = new FirestoreConfig();\n        if (typeof databaseIdOrApp.options === 'object') {\n            // This is very likely a Firebase app object\n            // TODO(b/34177605): Can we somehow use instanceof?\n            var app = databaseIdOrApp;\n            config.firebaseApp = app;\n            config.databaseId = Firestore.databaseIdFromApp(app);\n            config.persistenceKey = config.firebaseApp.name;\n            config.credentials = new __WEBPACK_IMPORTED_MODULE_20__credentials__[\"b\" /* FirebaseCredentialsProvider */](app);\n        }\n        else {\n            var external_1 = databaseIdOrApp;\n            if (!external_1.projectId) {\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Must provide projectId');\n            }\n            config.databaseId = new __WEBPACK_IMPORTED_MODULE_1__core_database_info__[\"a\" /* DatabaseId */](external_1.projectId, external_1.database);\n            // Use a default persistenceKey that lines up with FirebaseApp.\n            config.persistenceKey = '[DEFAULT]';\n            config.credentials = new __WEBPACK_IMPORTED_MODULE_20__credentials__[\"a\" /* EmptyCredentialsProvider */]();\n        }\n        config.settings = new FirestoreSettings({});\n        this._config = config;\n        this._databaseId = config.databaseId;\n    }\n    Firestore.prototype.settings = function (settingsLiteral) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Firestore.settings', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('Firestore.settings', 'object', 1, settingsLiteral);\n        if (__WEBPACK_IMPORTED_MODULE_19__util_obj__[\"a\" /* contains */](settingsLiteral, 'persistence')) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, '\"persistence\" is now specified with a separate call to ' +\n                'firestore.enablePersistence().');\n        }\n        var newSettings = new FirestoreSettings(settingsLiteral);\n        if (this._firestoreClient && !this._config.settings.isEqual(newSettings)) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].FAILED_PRECONDITION, 'Firestore has already been started and its settings can no longer ' +\n                'be changed. You can only call settings() before calling any other ' +\n                'methods on a Firestore object.');\n        }\n        this._config.settings = newSettings;\n        if (newSettings.credentials !== undefined) {\n            this._config.credentials = Object(__WEBPACK_IMPORTED_MODULE_20__credentials__[\"c\" /* makeCredentialsProvider */])(newSettings.credentials);\n        }\n    };\n    Firestore.prototype.enableNetwork = function () {\n        this.ensureClientConfigured();\n        return this._firestoreClient.enableNetwork();\n    };\n    Firestore.prototype.disableNetwork = function () {\n        this.ensureClientConfigured();\n        return this._firestoreClient.disableNetwork();\n    };\n    Firestore.prototype.enablePersistence = function () {\n        if (this._firestoreClient) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].FAILED_PRECONDITION, 'Firestore has already been started and persistence can no longer ' +\n                'be enabled. You can only call enablePersistence() before calling ' +\n                'any other methods on a Firestore object.');\n        }\n        return this.configureClient(/* persistence= */ true);\n    };\n    Firestore.prototype.ensureClientConfigured = function () {\n        if (!this._firestoreClient) {\n            this.configureClient(/* persistence= */ false);\n        }\n        return this._firestoreClient;\n    };\n    Firestore.prototype.configureClient = function (persistence) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!!this._config.settings.host, 'FirestoreSettings.host cannot be falsey');\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!this._firestoreClient, 'configureClient() called multiple times');\n        var databaseInfo = new __WEBPACK_IMPORTED_MODULE_1__core_database_info__[\"b\" /* DatabaseInfo */](this._config.databaseId, this._config.persistenceKey, this._config.settings.host, this._config.settings.ssl);\n        var preConverter = function (value) {\n            if (value instanceof DocumentReference) {\n                var thisDb = _this._config.databaseId;\n                var otherDb = value.firestore._config.databaseId;\n                if (!otherDb.isEqual(thisDb)) {\n                    throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Document reference is for database ' +\n                        (otherDb.projectId + \"/\" + otherDb.database + \" but should be \") +\n                        (\"for database \" + thisDb.projectId + \"/\" + thisDb.database));\n                }\n                return new __WEBPACK_IMPORTED_MODULE_22__user_data_converter__[\"a\" /* DocumentKeyReference */](_this._config.databaseId, value._key);\n            }\n            else {\n                return value;\n            }\n        };\n        this._dataConverter = new __WEBPACK_IMPORTED_MODULE_22__user_data_converter__[\"b\" /* UserDataConverter */](preConverter);\n        this._firestoreClient = new __WEBPACK_IMPORTED_MODULE_2__core_firestore_client__[\"a\" /* FirestoreClient */](__WEBPACK_IMPORTED_MODULE_10__platform_platform__[\"a\" /* PlatformSupport */].getPlatform(), databaseInfo, this._config.credentials, this._queue);\n        return this._firestoreClient.start(persistence);\n    };\n    Firestore.databaseIdFromApp = function (app) {\n        var options = app.options;\n        if (!__WEBPACK_IMPORTED_MODULE_19__util_obj__[\"a\" /* contains */](options, 'projectId')) {\n            // TODO(b/62673263): We can safely remove the special handling of\n            // 'firestoreId' once alpha testers have upgraded.\n            if (__WEBPACK_IMPORTED_MODULE_19__util_obj__[\"a\" /* contains */](options, 'firestoreId')) {\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, '\"firestoreId\" is now specified as \"projectId\" in ' +\n                    'firebase.initializeApp.');\n            }\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n        }\n        if (__WEBPACK_IMPORTED_MODULE_19__util_obj__[\"a\" /* contains */](options, 'firestoreOptions')) {\n            // TODO(b/62673263): We can safely remove the special handling of\n            // 'firestoreOptions' once alpha testers have upgraded.\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, '\"firestoreOptions\" values are now specified with ' +\n                'Firestore.settings()');\n        }\n        var projectId = options['projectId'];\n        if (!projectId || typeof projectId !== 'string') {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'projectId must be a string in FirebaseApp.options');\n        }\n        return new __WEBPACK_IMPORTED_MODULE_1__core_database_info__[\"a\" /* DatabaseId */](projectId);\n    };\n    Object.defineProperty(Firestore.prototype, \"app\", {\n        get: function () {\n            if (!this._config.firebaseApp) {\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\n                    'not available');\n            }\n            return this._config.firebaseApp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Firestore.prototype.collection = function (pathString) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Firestore.collection', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('Firestore.collection', 'string', 1, pathString);\n        if (!pathString) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Must provide a non-empty collection path to collection()');\n        }\n        this.ensureClientConfigured();\n        return new CollectionReference(__WEBPACK_IMPORTED_MODULE_9__model_path__[\"b\" /* ResourcePath */].fromString(pathString), this);\n    };\n    Firestore.prototype.doc = function (pathString) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Firestore.doc', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('Firestore.doc', 'string', 1, pathString);\n        if (!pathString) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Must provide a non-empty document path to doc()');\n        }\n        this.ensureClientConfigured();\n        return DocumentReference.forPath(__WEBPACK_IMPORTED_MODULE_9__model_path__[\"b\" /* ResourcePath */].fromString(pathString), this);\n    };\n    Firestore.prototype.runTransaction = function (updateFunction) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Firestore.runTransaction', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('Firestore.runTransaction', 'function', 1, updateFunction);\n        return this.ensureClientConfigured().transaction(function (transaction) {\n            return updateFunction(new Transaction(_this, transaction));\n        });\n    };\n    Firestore.prototype.batch = function () {\n        this.ensureClientConfigured();\n        return new WriteBatch(this);\n    };\n    Object.defineProperty(Firestore, \"logLevel\", {\n        get: function () {\n            switch (__WEBPACK_IMPORTED_MODULE_17__util_log__[\"d\" /* getLogLevel */]()) {\n                case __WEBPACK_IMPORTED_MODULE_17__util_log__[\"a\" /* LogLevel */].DEBUG:\n                    return 'debug';\n                case __WEBPACK_IMPORTED_MODULE_17__util_log__[\"a\" /* LogLevel */].ERROR:\n                    return 'error';\n                case __WEBPACK_IMPORTED_MODULE_17__util_log__[\"a\" /* LogLevel */].SILENT:\n                    return 'silent';\n                default:\n                    return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown log level: ' + __WEBPACK_IMPORTED_MODULE_17__util_log__[\"d\" /* getLogLevel */]());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Firestore.setLogLevel = function (level) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Firestore.setLogLevel', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('Firestore.setLogLevel', 'string', 1, level);\n        switch (level) {\n            case 'debug':\n                __WEBPACK_IMPORTED_MODULE_17__util_log__[\"e\" /* setLogLevel */](__WEBPACK_IMPORTED_MODULE_17__util_log__[\"a\" /* LogLevel */].DEBUG);\n                break;\n            case 'error':\n                __WEBPACK_IMPORTED_MODULE_17__util_log__[\"e\" /* setLogLevel */](__WEBPACK_IMPORTED_MODULE_17__util_log__[\"a\" /* LogLevel */].ERROR);\n                break;\n            case 'silent':\n                __WEBPACK_IMPORTED_MODULE_17__util_log__[\"e\" /* setLogLevel */](__WEBPACK_IMPORTED_MODULE_17__util_log__[\"a\" /* LogLevel */].SILENT);\n                break;\n            default:\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Invalid log level: ' + level);\n        }\n    };\n    return Firestore;\n}());\n\n/**\n * A reference to a transaction.\n */\nvar Transaction = /** @class */ (function () {\n    function Transaction(_firestore, _transaction) {\n        this._firestore = _firestore;\n        this._transaction = _transaction;\n    }\n    Transaction.prototype.get = function (documentRef) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Transaction.get', arguments, 1);\n        var ref = validateReference('Transaction.get', documentRef, this._firestore);\n        return this._transaction\n            .lookup([ref._key])\n            .then(function (docs) {\n            if (!docs || docs.length !== 1) {\n                return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Mismatch in docs returned from document lookup.');\n            }\n            var doc = docs[0];\n            if (doc instanceof __WEBPACK_IMPORTED_MODULE_5__model_document__[\"b\" /* NoDocument */]) {\n                return new DocumentSnapshot(_this._firestore, ref._key, null, false);\n            }\n            return new DocumentSnapshot(_this._firestore, ref._key, doc, false);\n        });\n    };\n    Transaction.prototype.set = function (documentRef, value, options) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('Transaction.set', arguments, 2, 3);\n        var ref = validateReference('Transaction.set', documentRef, this._firestore);\n        options = validateSetOptions('Transaction.set', options);\n        var parsed = options.merge\n            ? this._firestore._dataConverter.parseMergeData('Transaction.set', value)\n            : this._firestore._dataConverter.parseSetData('Transaction.set', value);\n        this._transaction.set(ref._key, parsed);\n        return this;\n    };\n    Transaction.prototype.update = function (documentRef, fieldOrUpdateData, value) {\n        var moreFieldsAndValues = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            moreFieldsAndValues[_i - 3] = arguments[_i];\n        }\n        var ref;\n        var parsed;\n        if (typeof fieldOrUpdateData === 'string' ||\n            fieldOrUpdateData instanceof __WEBPACK_IMPORTED_MODULE_0__field_path__[\"a\" /* FieldPath */]) {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"d\" /* validateAtLeastNumberOfArgs */])('Transaction.update', arguments, 3);\n            ref = validateReference('Transaction.update', documentRef, this._firestore);\n            parsed = this._firestore._dataConverter.parseUpdateVarargs('Transaction.update', fieldOrUpdateData, value, moreFieldsAndValues);\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Transaction.update', arguments, 2);\n            ref = validateReference('Transaction.update', documentRef, this._firestore);\n            parsed = this._firestore._dataConverter.parseUpdateData('Transaction.update', fieldOrUpdateData);\n        }\n        this._transaction.update(ref._key, parsed);\n        return this;\n    };\n    Transaction.prototype.delete = function (documentRef) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Transaction.delete', arguments, 1);\n        var ref = validateReference('Transaction.delete', documentRef, this._firestore);\n        this._transaction.delete(ref._key);\n        return this;\n    };\n    return Transaction;\n}());\n\nvar WriteBatch = /** @class */ (function () {\n    function WriteBatch(_firestore) {\n        this._firestore = _firestore;\n        this._mutations = [];\n        this._committed = false;\n    }\n    WriteBatch.prototype.set = function (documentRef, value, options) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('WriteBatch.set', arguments, 2, 3);\n        this.verifyNotCommitted();\n        var ref = validateReference('WriteBatch.set', documentRef, this._firestore);\n        options = validateSetOptions('WriteBatch.set', options);\n        var parsed = options.merge\n            ? this._firestore._dataConverter.parseMergeData('WriteBatch.set', value)\n            : this._firestore._dataConverter.parseSetData('WriteBatch.set', value);\n        this._mutations = this._mutations.concat(parsed.toMutations(ref._key, __WEBPACK_IMPORTED_MODULE_8__model_mutation__[\"f\" /* Precondition */].NONE));\n        return this;\n    };\n    WriteBatch.prototype.update = function (documentRef, fieldOrUpdateData, value) {\n        var moreFieldsAndValues = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            moreFieldsAndValues[_i - 3] = arguments[_i];\n        }\n        this.verifyNotCommitted();\n        var ref;\n        var parsed;\n        if (typeof fieldOrUpdateData === 'string' ||\n            fieldOrUpdateData instanceof __WEBPACK_IMPORTED_MODULE_0__field_path__[\"a\" /* FieldPath */]) {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"d\" /* validateAtLeastNumberOfArgs */])('WriteBatch.update', arguments, 3);\n            ref = validateReference('WriteBatch.update', documentRef, this._firestore);\n            parsed = this._firestore._dataConverter.parseUpdateVarargs('WriteBatch.update', fieldOrUpdateData, value, moreFieldsAndValues);\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('WriteBatch.update', arguments, 2);\n            ref = validateReference('WriteBatch.update', documentRef, this._firestore);\n            parsed = this._firestore._dataConverter.parseUpdateData('WriteBatch.update', fieldOrUpdateData);\n        }\n        this._mutations = this._mutations.concat(parsed.toMutations(ref._key, __WEBPACK_IMPORTED_MODULE_8__model_mutation__[\"f\" /* Precondition */].exists(true)));\n        return this;\n    };\n    WriteBatch.prototype.delete = function (documentRef) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('WriteBatch.delete', arguments, 1);\n        this.verifyNotCommitted();\n        var ref = validateReference('WriteBatch.delete', documentRef, this._firestore);\n        this._mutations = this._mutations.concat(new __WEBPACK_IMPORTED_MODULE_8__model_mutation__[\"a\" /* DeleteMutation */](ref._key, __WEBPACK_IMPORTED_MODULE_8__model_mutation__[\"f\" /* Precondition */].NONE));\n        return this;\n    };\n    WriteBatch.prototype.commit = function () {\n        this.verifyNotCommitted();\n        this._committed = true;\n        if (this._mutations.length > 0) {\n            return this._firestore.ensureClientConfigured().write(this._mutations);\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    WriteBatch.prototype.verifyNotCommitted = function () {\n        if (this._committed) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].FAILED_PRECONDITION, 'A write batch can no longer be used after commit() ' +\n                'has been called.');\n        }\n    };\n    return WriteBatch;\n}());\n\n/**\n * A reference to a particular document in a collection in the database.\n */\nvar DocumentReference = /** @class */ (function () {\n    function DocumentReference(_key, firestore) {\n        this._key = _key;\n        this.firestore = firestore;\n        this._firestoreClient = this.firestore.ensureClientConfigured();\n    }\n    DocumentReference.forPath = function (path, firestore) {\n        if (path.length % 2 !== 0) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Invalid document reference. Document ' +\n                'references must have an even number of segments, but ' +\n                (path.canonicalString() + \" has \" + path.length));\n        }\n        return new DocumentReference(new __WEBPACK_IMPORTED_MODULE_6__model_document_key__[\"a\" /* DocumentKey */](path), firestore);\n    };\n    Object.defineProperty(DocumentReference.prototype, \"id\", {\n        get: function () {\n            return this._key.path.lastSegment();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentReference.prototype, \"parent\", {\n        get: function () {\n            return new CollectionReference(this._key.path.popLast(), this.firestore);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentReference.prototype, \"path\", {\n        get: function () {\n            return this._key.path.canonicalString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DocumentReference.prototype.collection = function (pathString) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('DocumentReference.collection', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('DocumentReference.collection', 'string', 1, pathString);\n        if (!pathString) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Must provide a non-empty collection name to collection()');\n        }\n        var path = __WEBPACK_IMPORTED_MODULE_9__model_path__[\"b\" /* ResourcePath */].fromString(pathString);\n        return new CollectionReference(this._key.path.child(path), this.firestore);\n    };\n    DocumentReference.prototype.isEqual = function (other) {\n        if (!(other instanceof DocumentReference)) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"a\" /* invalidClassError */])('isEqual', 'DocumentReference', 1, other);\n        }\n        return this.firestore === other.firestore && this._key.isEqual(other._key);\n    };\n    DocumentReference.prototype.set = function (value, options) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('DocumentReference.set', arguments, 1, 2);\n        options = validateSetOptions('DocumentReference.set', options);\n        var parsed = options.merge\n            ? this.firestore._dataConverter.parseMergeData('DocumentReference.set', value)\n            : this.firestore._dataConverter.parseSetData('DocumentReference.set', value);\n        return this._firestoreClient.write(parsed.toMutations(this._key, __WEBPACK_IMPORTED_MODULE_8__model_mutation__[\"f\" /* Precondition */].NONE));\n    };\n    DocumentReference.prototype.update = function (fieldOrUpdateData, value) {\n        var moreFieldsAndValues = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            moreFieldsAndValues[_i - 2] = arguments[_i];\n        }\n        var parsed;\n        if (typeof fieldOrUpdateData === 'string' ||\n            fieldOrUpdateData instanceof __WEBPACK_IMPORTED_MODULE_0__field_path__[\"a\" /* FieldPath */]) {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"d\" /* validateAtLeastNumberOfArgs */])('DocumentReference.update', arguments, 2);\n            parsed = this.firestore._dataConverter.parseUpdateVarargs('DocumentReference.update', fieldOrUpdateData, value, moreFieldsAndValues);\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('DocumentReference.update', arguments, 1);\n            parsed = this.firestore._dataConverter.parseUpdateData('DocumentReference.update', fieldOrUpdateData);\n        }\n        return this._firestoreClient.write(parsed.toMutations(this._key, __WEBPACK_IMPORTED_MODULE_8__model_mutation__[\"f\" /* Precondition */].exists(true)));\n    };\n    DocumentReference.prototype.delete = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('DocumentReference.delete', arguments, 0);\n        return this._firestoreClient.write([\n            new __WEBPACK_IMPORTED_MODULE_8__model_mutation__[\"a\" /* DeleteMutation */](this._key, __WEBPACK_IMPORTED_MODULE_8__model_mutation__[\"f\" /* Precondition */].NONE)\n        ]);\n    };\n    DocumentReference.prototype.onSnapshot = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('DocumentReference.onSnapshot', arguments, 1, 4);\n        var options = {\n            includeMetadataChanges: false\n        };\n        var observer;\n        var currArg = 0;\n        if (typeof args[currArg] === 'object' &&\n            !Object(__WEBPACK_IMPORTED_MODULE_21__observer__[\"a\" /* isPartialObserver */])(args[currArg])) {\n            options = args[currArg];\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"l\" /* validateOptionNames */])('DocumentReference.onSnapshot', options, [\n                'includeMetadataChanges'\n            ]);\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"j\" /* validateNamedOptionalType */])('DocumentReference.onSnapshot', 'boolean', 'includeMetadataChanges', options.includeMetadataChanges);\n            currArg++;\n        }\n        var internalOptions = {\n            includeDocumentMetadataChanges: options.includeMetadataChanges,\n            includeQueryMetadataChanges: options.includeMetadataChanges\n        };\n        if (Object(__WEBPACK_IMPORTED_MODULE_21__observer__[\"a\" /* isPartialObserver */])(args[currArg])) {\n            observer = args[currArg];\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('DocumentReference.onSnapshot', 'function', currArg, args[currArg]);\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"m\" /* validateOptionalArgType */])('DocumentReference.onSnapshot', 'function', currArg + 1, args[currArg + 1]);\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"m\" /* validateOptionalArgType */])('DocumentReference.onSnapshot', 'function', currArg + 2, args[currArg + 2]);\n            observer = {\n                next: args[currArg],\n                error: args[currArg + 1],\n                complete: args[currArg + 2]\n            };\n        }\n        return this.onSnapshotInternal(internalOptions, observer);\n    };\n    DocumentReference.prototype.onSnapshotInternal = function (options, observer) {\n        var _this = this;\n        var errHandler = function (err) {\n            console.error('Uncaught Error in onSnapshot:', err);\n        };\n        if (observer.error) {\n            errHandler = observer.error.bind(observer);\n        }\n        var asyncObserver = new __WEBPACK_IMPORTED_MODULE_13__util_async_observer__[\"a\" /* AsyncObserver */]({\n            next: function (snapshot) {\n                if (observer.next) {\n                    Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(snapshot.docs.size <= 1, 'Too many documents returned on a document query');\n                    var doc = snapshot.docs.get(_this._key);\n                    observer.next(new DocumentSnapshot(_this.firestore, _this._key, doc, snapshot.fromCache));\n                }\n            },\n            error: errHandler\n        });\n        var internalListener = this._firestoreClient.listen(__WEBPACK_IMPORTED_MODULE_3__core_query__[\"f\" /* Query */].atPath(this._key.path), asyncObserver, options);\n        return function () {\n            asyncObserver.mute();\n            _this._firestoreClient.unlisten(internalListener);\n        };\n    };\n    DocumentReference.prototype.get = function () {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('DocumentReference.get', arguments, 0);\n        return new Promise(function (resolve, reject) {\n            var unlisten = _this.onSnapshotInternal({\n                includeQueryMetadataChanges: true,\n                includeDocumentMetadataChanges: true,\n                waitForSyncWhenOnline: true\n            }, {\n                next: function (snap) {\n                    // Remove query first before passing event to user to avoid\n                    // user actions affecting the now stale query.\n                    unlisten();\n                    if (!snap.exists && snap.metadata.fromCache) {\n                        // TODO(dimond): If we're online and the document doesn't\n                        // exist then we resolve with a doc.exists set to false. If\n                        // we're offline however, we reject the Promise in this\n                        // case. Two options: 1) Cache the negative response from\n                        // the server so we can deliver that even when you're\n                        // offline 2) Actually reject the Promise in the online case\n                        // if the document doesn't exist.\n                        reject(new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].ABORTED, 'Failed to get document because the client is ' + 'offline.'));\n                    }\n                    else {\n                        resolve(snap);\n                    }\n                },\n                error: reject\n            });\n        });\n    };\n    return DocumentReference;\n}());\n\nvar SnapshotMetadata = /** @class */ (function () {\n    function SnapshotMetadata(hasPendingWrites, fromCache) {\n        this.hasPendingWrites = hasPendingWrites;\n        this.fromCache = fromCache;\n    }\n    SnapshotMetadata.prototype.isEqual = function (other) {\n        return (this.hasPendingWrites === other.hasPendingWrites &&\n            this.fromCache === other.fromCache);\n    };\n    return SnapshotMetadata;\n}());\nvar DocumentSnapshot = /** @class */ (function () {\n    function DocumentSnapshot(_firestore, _key, _document, _fromCache) {\n        this._firestore = _firestore;\n        this._key = _key;\n        this._document = _document;\n        this._fromCache = _fromCache;\n    }\n    DocumentSnapshot.prototype.data = function (options) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('DocumentSnapshot.data', arguments, 0, 1);\n        options = validateSnapshotOptions('DocumentSnapshot.data', options);\n        return !this._document\n            ? undefined\n            : this.convertObject(this._document.data, __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"e\" /* FieldValueOptions */].fromSnapshotOptions(options));\n    };\n    DocumentSnapshot.prototype.get = function (fieldPath, options) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('DocumentSnapshot.get', arguments, 1, 2);\n        options = validateSnapshotOptions('DocumentSnapshot.get', options);\n        if (this._document) {\n            var value = this._document.data.field(Object(__WEBPACK_IMPORTED_MODULE_22__user_data_converter__[\"c\" /* fieldPathFromArgument */])('DocumentSnapshot.get', fieldPath));\n            if (value !== undefined) {\n                return this.convertValue(value, __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"e\" /* FieldValueOptions */].fromSnapshotOptions(options));\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DocumentSnapshot.prototype, \"id\", {\n        get: function () {\n            return this._key.path.lastSegment();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentSnapshot.prototype, \"ref\", {\n        get: function () {\n            return new DocumentReference(this._key, this._firestore);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentSnapshot.prototype, \"exists\", {\n        get: function () {\n            return this._document !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentSnapshot.prototype, \"metadata\", {\n        get: function () {\n            return new SnapshotMetadata(this._document !== null && this._document.hasLocalMutations, this._fromCache);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DocumentSnapshot.prototype.isEqual = function (other) {\n        if (!(other instanceof DocumentSnapshot)) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"a\" /* invalidClassError */])('isEqual', 'DocumentSnapshot', 1, other);\n        }\n        return (this._firestore === other._firestore &&\n            this._fromCache === other._fromCache &&\n            this._key.isEqual(other._key) &&\n            (this._document === null\n                ? other._document === null\n                : this._document.isEqual(other._document)));\n    };\n    DocumentSnapshot.prototype.convertObject = function (data, options) {\n        var _this = this;\n        var result = {};\n        data.forEach(function (key, value) {\n            result[key] = _this.convertValue(value, options);\n        });\n        return result;\n    };\n    DocumentSnapshot.prototype.convertValue = function (value, options) {\n        if (value instanceof __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"i\" /* ObjectValue */]) {\n            return this.convertObject(value, options);\n        }\n        else if (value instanceof __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"a\" /* ArrayValue */]) {\n            return this.convertArray(value, options);\n        }\n        else if (value instanceof __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"j\" /* RefValue */]) {\n            var key = value.value(options);\n            var database = this._firestore.ensureClientConfigured().databaseId();\n            if (!value.databaseId.isEqual(database)) {\n                // TODO(b/64130202): Somehow support foreign references.\n                __WEBPACK_IMPORTED_MODULE_17__util_log__[\"c\" /* error */](\"Document \" + this._key.path + \" contains a document \" +\n                    \"reference within a different database (\" +\n                    (value.databaseId.projectId + \"/\" + value.databaseId.database + \") which is not \") +\n                    \"supported. It will be treated as a reference in the current \" +\n                    (\"database (\" + database.projectId + \"/\" + database.database + \") \") +\n                    \"instead.\");\n            }\n            return new DocumentReference(key, this._firestore);\n        }\n        else {\n            return value.value(options);\n        }\n    };\n    DocumentSnapshot.prototype.convertArray = function (data, options) {\n        var _this = this;\n        return data.internalValue.map(function (value) {\n            return _this.convertValue(value, options);\n        });\n    };\n    return DocumentSnapshot;\n}());\n\nvar QueryDocumentSnapshot = /** @class */ (function (_super) {\n    __extends(QueryDocumentSnapshot, _super);\n    function QueryDocumentSnapshot(firestore, key, document, fromCache) {\n        return _super.call(this, firestore, key, document, fromCache) || this;\n    }\n    QueryDocumentSnapshot.prototype.data = function (options) {\n        var data = _super.prototype.data.call(this, options);\n        Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(typeof data === 'object', 'Document in a QueryDocumentSnapshot should exist');\n        return data;\n    };\n    return QueryDocumentSnapshot;\n}(DocumentSnapshot));\n\nvar Query = /** @class */ (function () {\n    function Query(_query, firestore) {\n        this._query = _query;\n        this.firestore = firestore;\n    }\n    Query.prototype.where = function (field, opStr, value) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Query.where', arguments, 3);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('Query.where', 'string', 2, opStr);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"f\" /* validateDefined */])('Query.where', 3, value);\n        var fieldValue;\n        var fieldPath = Object(__WEBPACK_IMPORTED_MODULE_22__user_data_converter__[\"c\" /* fieldPathFromArgument */])('Query.where', field);\n        if (fieldPath.isKeyField()) {\n            if (typeof value === 'string') {\n                if (value.indexOf('/') !== -1) {\n                    // TODO(dimond): Allow slashes once ancestor queries are supported\n                    throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Function Query.where() requires its third parameter to be a ' +\n                        'valid document ID if the first parameter is ' +\n                        'FieldPath.documentId(), but it contains a slash.');\n                }\n                if (value === '') {\n                    throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Function Query.where() requires its third parameter to be a ' +\n                        'valid document ID if the first parameter is ' +\n                        'FieldPath.documentId(), but it was an empty string.');\n                }\n                var path = this._query.path.child(new __WEBPACK_IMPORTED_MODULE_9__model_path__[\"b\" /* ResourcePath */]([value]));\n                Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(path.length % 2 === 0, 'Path should be a document key');\n                fieldValue = new __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"j\" /* RefValue */](this.firestore._databaseId, new __WEBPACK_IMPORTED_MODULE_6__model_document_key__[\"a\" /* DocumentKey */](path));\n            }\n            else if (value instanceof DocumentReference) {\n                var ref = value;\n                fieldValue = new __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"j\" /* RefValue */](this.firestore._databaseId, ref._key);\n            }\n            else {\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function Query.where() requires its third parameter to be a \" +\n                    \"string or a DocumentReference if the first parameter is \" +\n                    \"FieldPath.documentId(), but it was: \" +\n                    (Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"n\" /* valueDescription */])(value) + \".\"));\n            }\n        }\n        else {\n            fieldValue = this.firestore._dataConverter.parseQueryValue('Query.where', value);\n        }\n        var filter = Object(__WEBPACK_IMPORTED_MODULE_3__core_query__[\"i\" /* fieldFilter */])(fieldPath, __WEBPACK_IMPORTED_MODULE_3__core_query__[\"h\" /* RelationOp */].fromString(opStr), fieldValue);\n        this.validateNewFilter(filter);\n        return new Query(this._query.addFilter(filter), this.firestore);\n    };\n    Query.prototype.orderBy = function (field, directionStr) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('Query.orderBy', arguments, 1, 2);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"m\" /* validateOptionalArgType */])('Query.orderBy', 'string', 2, directionStr);\n        var direction;\n        if (directionStr === undefined || directionStr === 'asc') {\n            direction = __WEBPACK_IMPORTED_MODULE_3__core_query__[\"b\" /* Direction */].ASCENDING;\n        }\n        else if (directionStr === 'desc') {\n            direction = __WEBPACK_IMPORTED_MODULE_3__core_query__[\"b\" /* Direction */].DESCENDING;\n        }\n        else {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function Query.orderBy() has unknown direction '\" + directionStr + \"', \" +\n                \"expected 'asc' or 'desc'.\");\n        }\n        if (this._query.startAt !== null) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Invalid query. You must not call Query.startAt() or ' +\n                'Query.startAfter() before calling Query.orderBy().');\n        }\n        if (this._query.endAt !== null) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Invalid query. You must not call Query.endAt() or ' +\n                'Query.endBefore() before calling Query.orderBy().');\n        }\n        var fieldPath = Object(__WEBPACK_IMPORTED_MODULE_22__user_data_converter__[\"c\" /* fieldPathFromArgument */])('Query.orderBy', field);\n        var orderBy = new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"e\" /* OrderBy */](fieldPath, direction);\n        this.validateNewOrderBy(orderBy);\n        return new Query(this._query.addOrderBy(orderBy), this.firestore);\n    };\n    Query.prototype.limit = function (n) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Query.limit', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('Query.limit', 'number', 1, n);\n        if (n <= 0) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid Query. Query limit (\" + n + \") is invalid. Limit must be \" +\n                'positive.');\n        }\n        return new Query(this._query.withLimit(n), this.firestore);\n    };\n    Query.prototype.startAt = function (docOrField) {\n        var fields = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            fields[_i - 1] = arguments[_i];\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"d\" /* validateAtLeastNumberOfArgs */])('Query.startAt', arguments, 1);\n        var bound = this.boundFromDocOrFields('Query.startAt', docOrField, fields, \n        /*before=*/ true);\n        return new Query(this._query.withStartAt(bound), this.firestore);\n    };\n    Query.prototype.startAfter = function (docOrField) {\n        var fields = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            fields[_i - 1] = arguments[_i];\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"d\" /* validateAtLeastNumberOfArgs */])('Query.startAfter', arguments, 1);\n        var bound = this.boundFromDocOrFields('Query.startAfter', docOrField, fields, \n        /*before=*/ false);\n        return new Query(this._query.withStartAt(bound), this.firestore);\n    };\n    Query.prototype.endBefore = function (docOrField) {\n        var fields = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            fields[_i - 1] = arguments[_i];\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"d\" /* validateAtLeastNumberOfArgs */])('Query.endBefore', arguments, 1);\n        var bound = this.boundFromDocOrFields('Query.endBefore', docOrField, fields, \n        /*before=*/ true);\n        return new Query(this._query.withEndAt(bound), this.firestore);\n    };\n    Query.prototype.endAt = function (docOrField) {\n        var fields = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            fields[_i - 1] = arguments[_i];\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"d\" /* validateAtLeastNumberOfArgs */])('Query.endAt', arguments, 1);\n        var bound = this.boundFromDocOrFields('Query.endAt', docOrField, fields, \n        /*before=*/ false);\n        return new Query(this._query.withEndAt(bound), this.firestore);\n    };\n    Query.prototype.isEqual = function (other) {\n        if (!(other instanceof Query)) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"a\" /* invalidClassError */])('isEqual', 'Query', 1, other);\n        }\n        return (this.firestore === other.firestore && this._query.isEqual(other._query));\n    };\n    /** Helper function to create a bound from a document or fields */\n    Query.prototype.boundFromDocOrFields = function (methodName, docOrField, fields, before) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"f\" /* validateDefined */])(methodName, 1, docOrField);\n        if (docOrField instanceof DocumentSnapshot) {\n            if (fields.length > 0) {\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Too many arguments provided to \" + methodName + \"().\");\n            }\n            var snap = docOrField;\n            if (!snap.exists) {\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].NOT_FOUND, \"Can't use a DocumentSnapshot that doesn't exist for \" +\n                    (methodName + \"().\"));\n            }\n            return this.boundFromDocument(methodName, snap._document, before);\n        }\n        else {\n            var allFields = [docOrField].concat(fields);\n            return this.boundFromFields(methodName, allFields, before);\n        }\n    };\n    /**\n     * Create a Bound from a query and a document.\n     *\n     * Note that the Bound will always include the key of the document\n     * and so only the provided document will compare equal to the returned\n     * position.\n     *\n     * Will throw if the document does not contain all fields of the order by\n     * of the query.\n     */\n    Query.prototype.boundFromDocument = function (methodName, doc, before) {\n        var components = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n        for (var _i = 0, _a = this._query.orderBy; _i < _a.length; _i++) {\n            var orderBy = _a[_i];\n            if (orderBy.field.isKeyField()) {\n                components.push(new __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"j\" /* RefValue */](this.firestore._databaseId, doc.key));\n            }\n            else {\n                var value = doc.field(orderBy.field);\n                if (value !== undefined) {\n                    components.push(value);\n                }\n                else {\n                    var field = orderBy.field.canonicalString();\n                    throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid query. You are trying to start or end a query using a \" +\n                        (\"document for which the field '\" + field + \"' (used as the \") +\n                        \"orderBy) does not exist.\");\n                }\n            }\n        }\n        return new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"a\" /* Bound */](components, before);\n    };\n    /**\n     * Converts a list of field values to a Bound for the given query.\n     */\n    Query.prototype.boundFromFields = function (methodName, values, before) {\n        // Use explicit order by's because it has to match the query the user made\n        var orderBy = this._query.explicitOrderBy;\n        if (values.length > orderBy.length) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Too many arguments provided to \" + methodName + \"(). \" +\n                \"The number of arguments must be less than or equal to the \" +\n                \"number of Query.orderBy() clauses\");\n        }\n        var components = [];\n        for (var i = 0; i < values.length; i++) {\n            var rawValue = values[i];\n            var orderByComponent = orderBy[i];\n            if (orderByComponent.field.isKeyField()) {\n                if (typeof rawValue !== 'string') {\n                    throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid query. Expected a string for document ID in \" +\n                        (methodName + \"(), but got a \" + typeof rawValue));\n                }\n                if (rawValue.indexOf('/') !== -1) {\n                    throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid query. Document ID '\" + rawValue + \"' contains a slash in \" +\n                        (methodName + \"()\"));\n                }\n                var key = new __WEBPACK_IMPORTED_MODULE_6__model_document_key__[\"a\" /* DocumentKey */](this._query.path.child(rawValue));\n                components.push(new __WEBPACK_IMPORTED_MODULE_7__model_field_value__[\"j\" /* RefValue */](this.firestore._databaseId, key));\n            }\n            else {\n                var wrapped = this.firestore._dataConverter.parseQueryValue(methodName, rawValue);\n                components.push(wrapped);\n            }\n        }\n        return new __WEBPACK_IMPORTED_MODULE_3__core_query__[\"a\" /* Bound */](components, before);\n    };\n    Query.prototype.onSnapshot = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('Query.onSnapshot', arguments, 1, 4);\n        var options = {};\n        var observer;\n        var currArg = 0;\n        if (typeof args[currArg] === 'object' &&\n            !Object(__WEBPACK_IMPORTED_MODULE_21__observer__[\"a\" /* isPartialObserver */])(args[currArg])) {\n            options = args[currArg];\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"l\" /* validateOptionNames */])('Query.onSnapshot', options, [\n                'includeQueryMetadataChanges',\n                'includeDocumentMetadataChanges'\n            ]);\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"j\" /* validateNamedOptionalType */])('Query.onSnapshot', 'boolean', 'includeDocumentMetadataChanges', options.includeDocumentMetadataChanges);\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"j\" /* validateNamedOptionalType */])('Query.onSnapshot', 'boolean', 'includeQueryMetadataChanges', options.includeQueryMetadataChanges);\n            currArg++;\n        }\n        if (Object(__WEBPACK_IMPORTED_MODULE_21__observer__[\"a\" /* isPartialObserver */])(args[currArg])) {\n            observer = args[currArg];\n        }\n        else {\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('Query.onSnapshot', 'function', currArg, args[currArg]);\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"m\" /* validateOptionalArgType */])('Query.onSnapshot', 'function', currArg + 1, args[currArg + 1]);\n            Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"m\" /* validateOptionalArgType */])('Query.onSnapshot', 'function', currArg + 2, args[currArg + 2]);\n            observer = {\n                next: args[currArg],\n                error: args[currArg + 1],\n                complete: args[currArg + 2]\n            };\n        }\n        return this.onSnapshotInternal(options, observer);\n    };\n    Query.prototype.onSnapshotInternal = function (options, observer) {\n        var _this = this;\n        var errHandler = function (err) {\n            console.error('Uncaught Error in onSnapshot:', err);\n        };\n        if (observer.error) {\n            errHandler = observer.error.bind(observer);\n        }\n        var asyncObserver = new __WEBPACK_IMPORTED_MODULE_13__util_async_observer__[\"a\" /* AsyncObserver */]({\n            next: function (result) {\n                if (observer.next) {\n                    observer.next(new QuerySnapshot(_this.firestore, _this._query, result));\n                }\n            },\n            error: errHandler\n        });\n        var firestoreClient = this.firestore.ensureClientConfigured();\n        var internalListener = firestoreClient.listen(this._query, asyncObserver, options);\n        return function () {\n            asyncObserver.mute();\n            firestoreClient.unlisten(internalListener);\n        };\n    };\n    Query.prototype.get = function () {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('Query.get', arguments, 0);\n        return new Promise(function (resolve, reject) {\n            var unlisten = _this.onSnapshotInternal({\n                includeDocumentMetadataChanges: false,\n                includeQueryMetadataChanges: true,\n                waitForSyncWhenOnline: true\n            }, {\n                next: function (result) {\n                    // Remove query first before passing event to user to avoid\n                    // user actions affecting the now stale query.\n                    unlisten();\n                    resolve(result);\n                },\n                error: reject\n            });\n        });\n    };\n    Query.prototype.validateNewFilter = function (filter) {\n        if (filter instanceof __WEBPACK_IMPORTED_MODULE_3__core_query__[\"g\" /* RelationFilter */] && filter.isInequality()) {\n            var existingField = this._query.getInequalityFilterField();\n            if (existingField !== null && !existingField.isEqual(filter.field)) {\n                throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Invalid query. All where filters with an inequality' +\n                    ' (<, <=, >, or >=) must be on the same field. But you have' +\n                    (\" inequality filters on '\" + existingField.toString() + \"'\") +\n                    (\" and '\" + filter.field.toString() + \"'\"));\n            }\n            var firstOrderByField = this._query.getFirstOrderByField();\n            if (firstOrderByField !== null) {\n                this.validateOrderByAndInequalityMatch(filter.field, firstOrderByField);\n            }\n        }\n    };\n    Query.prototype.validateNewOrderBy = function (orderBy) {\n        if (this._query.getFirstOrderByField() === null) {\n            // This is the first order by. It must match any inequality.\n            var inequalityField = this._query.getInequalityFilterField();\n            if (inequalityField !== null) {\n                this.validateOrderByAndInequalityMatch(inequalityField, orderBy.field);\n            }\n        }\n    };\n    Query.prototype.validateOrderByAndInequalityMatch = function (inequality, orderBy) {\n        if (!orderBy.isEqual(inequality)) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Invalid query. You have a where filter with an inequality \" +\n                (\"(<, <=, >, or >=) on field '\" + inequality.toString() + \"' \") +\n                (\"and so you must also use '\" + inequality.toString() + \"' \") +\n                \"as your first Query.orderBy(), but your first Query.orderBy() \" +\n                (\"is on field '\" + orderBy.toString() + \"' instead.\"));\n        }\n    };\n    return Query;\n}());\n\nvar QuerySnapshot = /** @class */ (function () {\n    function QuerySnapshot(_firestore, _originalQuery, _snapshot) {\n        this._firestore = _firestore;\n        this._originalQuery = _originalQuery;\n        this._snapshot = _snapshot;\n        this._cachedChanges = null;\n        this.metadata = new SnapshotMetadata(_snapshot.hasPendingWrites, _snapshot.fromCache);\n    }\n    Object.defineProperty(QuerySnapshot.prototype, \"docs\", {\n        get: function () {\n            var result = [];\n            this.forEach(function (doc) { return result.push(doc); });\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuerySnapshot.prototype, \"empty\", {\n        get: function () {\n            return this._snapshot.docs.isEmpty();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuerySnapshot.prototype, \"size\", {\n        get: function () {\n            return this._snapshot.docs.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuerySnapshot.prototype.forEach = function (callback, thisArg) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('QuerySnapshot.forEach', arguments, 1, 2);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('QuerySnapshot.forEach', 'function', 1, callback);\n        this._snapshot.docs.forEach(function (doc) {\n            callback.call(thisArg, _this.convertToDocumentImpl(doc));\n        });\n    };\n    Object.defineProperty(QuerySnapshot.prototype, \"query\", {\n        get: function () {\n            return new Query(this._originalQuery, this._firestore);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuerySnapshot.prototype, \"docChanges\", {\n        get: function () {\n            if (!this._cachedChanges) {\n                this._cachedChanges = changesFromSnapshot(this._firestore, this._snapshot);\n            }\n            return this._cachedChanges;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Check the equality. The call can be very expensive. */\n    QuerySnapshot.prototype.isEqual = function (other) {\n        if (!(other instanceof QuerySnapshot)) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"a\" /* invalidClassError */])('isEqual', 'QuerySnapshot', 1, other);\n        }\n        return (this._firestore === other._firestore &&\n            this._originalQuery.isEqual(other._originalQuery) &&\n            this._snapshot.isEqual(other._snapshot));\n    };\n    QuerySnapshot.prototype.convertToDocumentImpl = function (doc) {\n        return new QueryDocumentSnapshot(this._firestore, doc.key, doc, this.metadata.fromCache);\n    };\n    return QuerySnapshot;\n}());\n\nvar CollectionReference = /** @class */ (function (_super) {\n    __extends(CollectionReference, _super);\n    function CollectionReference(path, firestore) {\n        var _this = _super.call(this, __WEBPACK_IMPORTED_MODULE_3__core_query__[\"f\" /* Query */].atPath(path), firestore) || this;\n        if (path.length % 2 !== 1) {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Invalid collection reference. Collection ' +\n                'references must have an odd number of segments, but ' +\n                (path.canonicalString() + \" has \" + path.length));\n        }\n        return _this;\n    }\n    Object.defineProperty(CollectionReference.prototype, \"id\", {\n        get: function () {\n            return this._query.path.lastSegment();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CollectionReference.prototype, \"parent\", {\n        get: function () {\n            var parentPath = this._query.path.popLast();\n            if (parentPath.isEmpty()) {\n                return null;\n            }\n            else {\n                return new DocumentReference(new __WEBPACK_IMPORTED_MODULE_6__model_document_key__[\"a\" /* DocumentKey */](parentPath), this.firestore);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CollectionReference.prototype, \"path\", {\n        get: function () {\n            return this._query.path.canonicalString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CollectionReference.prototype.doc = function (pathString) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"e\" /* validateBetweenNumberOfArgs */])('CollectionReference.doc', arguments, 0, 1);\n        // We allow omission of 'pathString' but explicitly prohibit passing in both\n        // 'undefined' and 'null'.\n        if (arguments.length === 0) {\n            pathString = __WEBPACK_IMPORTED_MODULE_18__util_misc__[\"a\" /* AutoId */].newId();\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('CollectionReference.doc', 'string', 1, pathString);\n        if (pathString === '') {\n            throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Document path must be a non-empty string');\n        }\n        var path = __WEBPACK_IMPORTED_MODULE_9__model_path__[\"b\" /* ResourcePath */].fromString(pathString);\n        return DocumentReference.forPath(this._query.path.child(path), this.firestore);\n    };\n    CollectionReference.prototype.add = function (value) {\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"g\" /* validateExactNumberOfArgs */])('CollectionReference.add', arguments, 1);\n        Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"c\" /* validateArgType */])('CollectionReference.add', 'object', 1, value);\n        var docRef = this.doc();\n        return docRef.set(value).then(function () { return docRef; });\n    };\n    return CollectionReference;\n}(Query));\n\nfunction validateSetOptions(methodName, options) {\n    if (options === undefined) {\n        return {\n            merge: false\n        };\n    }\n    Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"l\" /* validateOptionNames */])(methodName, options, ['merge']);\n    Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"j\" /* validateNamedOptionalType */])(methodName, 'boolean', 'merge', options.merge);\n    return options;\n}\nfunction validateSnapshotOptions(methodName, options) {\n    if (options === undefined) {\n        return {};\n    }\n    Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"l\" /* validateOptionNames */])(methodName, options, ['serverTimestamps']);\n    Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"i\" /* validateNamedOptionalPropertyEquals */])(methodName, 'options', 'serverTimestamps', options.serverTimestamps, ['estimate', 'previous', 'none']);\n    return options;\n}\nfunction validateReference(methodName, documentRef, firestore) {\n    if (!(documentRef instanceof DocumentReference)) {\n        throw Object(__WEBPACK_IMPORTED_MODULE_16__util_input_validation__[\"a\" /* invalidClassError */])(methodName, 'DocumentReference', 1, documentRef);\n    }\n    else if (documentRef.firestore !== firestore) {\n        throw new __WEBPACK_IMPORTED_MODULE_15__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_15__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'Provided document reference is from a different Firestore instance.');\n    }\n    else {\n        return documentRef;\n    }\n}\n/**\n * Calculates the array of firestore.DocumentChange's for a given ViewSnapshot.\n *\n * Exported for testing.\n */\nfunction changesFromSnapshot(firestore, snapshot) {\n    if (snapshot.oldDocs.isEmpty()) {\n        // Special case the first snapshot because index calculation is easy and\n        // fast\n        var lastDoc_1;\n        var index_1 = 0;\n        return snapshot.docChanges.map(function (change) {\n            var doc = new QueryDocumentSnapshot(firestore, change.doc.key, change.doc, snapshot.fromCache);\n            Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(change.type === __WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__[\"a\" /* ChangeType */].Added, 'Invalid event type for first snapshot');\n            Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(!lastDoc_1 || snapshot.query.docComparator(lastDoc_1, change.doc) < 0, 'Got added events in wrong order');\n            lastDoc_1 = change.doc;\n            return {\n                type: 'added',\n                doc: doc,\n                oldIndex: -1,\n                newIndex: index_1++\n            };\n        });\n    }\n    else {\n        // A DocumentSet that is updated incrementally as changes are applied to use\n        // to lookup the index of a document.\n        var indexTracker_1 = snapshot.oldDocs;\n        return snapshot.docChanges.map(function (change) {\n            var doc = new QueryDocumentSnapshot(firestore, change.doc.key, change.doc, snapshot.fromCache);\n            var oldIndex = -1;\n            var newIndex = -1;\n            if (change.type !== __WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__[\"a\" /* ChangeType */].Added) {\n                oldIndex = indexTracker_1.indexOf(change.doc.key);\n                Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"a\" /* assert */])(oldIndex >= 0, 'Index for document not found');\n                indexTracker_1 = indexTracker_1.delete(change.doc.key);\n            }\n            if (change.type !== __WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__[\"a\" /* ChangeType */].Removed) {\n                indexTracker_1 = indexTracker_1.add(change.doc);\n                newIndex = indexTracker_1.indexOf(change.doc.key);\n            }\n            return { type: resultChangeType(change.type), doc: doc, oldIndex: oldIndex, newIndex: newIndex };\n        });\n    }\n}\nfunction resultChangeType(type) {\n    switch (type) {\n        case __WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__[\"a\" /* ChangeType */].Added:\n            return 'added';\n        case __WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__[\"a\" /* ChangeType */].Modified:\n        case __WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__[\"a\" /* ChangeType */].Metadata:\n            return 'modified';\n        case __WEBPACK_IMPORTED_MODULE_4__core_view_snapshot__[\"a\" /* ChangeType */].Removed:\n            return 'removed';\n        default:\n            return Object(__WEBPACK_IMPORTED_MODULE_12__util_assert__[\"b\" /* fail */])('Unknown change type: ' + type);\n    }\n}\n// Export the classes with a private constructor (it will fail if invoked\n// at runtime). Note that this still allows instanceof checks.\n// We're treating the variables as class names, so disable checking for lower\n// case variable names.\n// tslint:disable:variable-name\nvar PublicFirestore = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(Firestore, 'Use firebase.firestore() instead.');\nvar PublicTransaction = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(Transaction, 'Use firebase.firestore().runTransaction() instead.');\nvar PublicWriteBatch = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(WriteBatch, 'Use firebase.firestore().batch() instead.');\nvar PublicDocumentReference = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(DocumentReference, 'Use firebase.firestore().doc() instead.');\nvar PublicDocumentSnapshot = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(DocumentSnapshot);\nvar PublicQueryDocumentSnapshot = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(QueryDocumentSnapshot);\nvar PublicQuery = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(Query);\nvar PublicQuerySnapshot = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(QuerySnapshot);\nvar PublicCollectionReference = Object(__WEBPACK_IMPORTED_MODULE_11__util_api__[\"a\" /* makeConstructorPrivate */])(CollectionReference, 'Use firebase.firestore().collection() instead.');\n// tslint:enable:variable-name\n\n//# sourceMappingURL=database.js.map\n\n\n/***/ }),\n/* 283 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FirestoreClient; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__event_manager__ = __webpack_require__(284);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sync_engine__ = __webpack_require__(285);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__local_eager_garbage_collector__ = __webpack_require__(209);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__local_indexeddb_persistence__ = __webpack_require__(288);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__local_local_store__ = __webpack_require__(293);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__local_memory_persistence__ = __webpack_require__(296);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__local_no_op_garbage_collector__ = __webpack_require__(300);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__remote_datastore__ = __webpack_require__(301);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__remote_remote_store__ = __webpack_require__(304);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__remote_serializer__ = __webpack_require__(205);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__util_promise__ = __webpack_require__(190);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LOG_TAG = 'FirestoreClient';\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the\n * pieces of the client SDK architecture. It is responsible for creating the\n * async queue that is shared by all of the other components in the system.\n */\nvar FirestoreClient = /** @class */ (function () {\n    function FirestoreClient(platform, databaseInfo, credentials, \n        /**\n         * Asynchronous queue responsible for all of our internal processing. When\n         * we get incoming work from the user (via public API) or the network\n         * (incoming GRPC messages), we should always schedule onto this queue.\n         * This ensures all of our work is properly serialized (e.g. we don't\n         * start processing a new operation while the previous one is waiting for\n         * an async I/O to complete).\n         */\n        asyncQueue) {\n        this.platform = platform;\n        this.databaseInfo = databaseInfo;\n        this.credentials = credentials;\n        this.asyncQueue = asyncQueue;\n    }\n    /**\n     * Starts up the FirestoreClient, returning only whether or not enabling\n     * persistence succeeded.\n     *\n     * The intent here is to \"do the right thing\" as far as users are concerned.\n     * Namely, in cases where offline persistence is requested and possible,\n     * enable it, but otherwise fall back to persistence disabled. For the most\n     * part we expect this to succeed one way or the other so we don't expect our\n     * users to actually wait on the firestore.enablePersistence Promise since\n     * they generally won't care.\n     *\n     * Of course some users actually do care about whether or not persistence\n     * was successfully enabled, so the Promise returned from this method\n     * indicates this outcome.\n     *\n     * This presents a problem though: even before enablePersistence resolves or\n     * rejects, users may have made calls to e.g. firestore.collection() which\n     * means that the FirestoreClient in there will be available and will be\n     * enqueuing actions on the async queue.\n     *\n     * Meanwhile any failure of an operation on the async queue causes it to\n     * panic and reject any further work, on the premise that unhandled errors\n     * are fatal.\n     *\n     * Consequently the fallback is handled internally here in start, and if the\n     * fallback succeeds we signal success to the async queue even though the\n     * start() itself signals failure.\n     *\n     * @param usePersistence Whether or not to attempt to enable persistence.\n     * @returns A deferred result indicating the user-visible result of enabling\n     *     offline persistence. This method will reject this if IndexedDB fails to\n     *     start for any reason. If usePersistence is false this is\n     *     unconditionally resolved.\n     */\n    FirestoreClient.prototype.start = function (usePersistence) {\n        var _this = this;\n        // We defer our initialization until we get the current user from\n        // setUserChangeListener(). We block the async queue until we got the\n        // initial user and the initialization is completed. This will prevent\n        // any scheduled work from happening before initialization is completed.\n        //\n        // If initializationDone resolved then the FirestoreClient is in a usable\n        // state.\n        var initializationDone = new __WEBPACK_IMPORTED_MODULE_12__util_promise__[\"a\" /* Deferred */]();\n        // If usePersistence is true, certain classes of errors while starting are\n        // recoverable but only by falling back to persistence disabled.\n        //\n        // If there's an error in the first case but not in recovery we cannot\n        // reject the promise blocking the async queue because this will cause the\n        // async queue to panic.\n        var persistenceResult = new __WEBPACK_IMPORTED_MODULE_12__util_promise__[\"a\" /* Deferred */]();\n        var initialized = false;\n        this.credentials.setUserChangeListener(function (user) {\n            if (!initialized) {\n                initialized = true;\n                _this.initializePersistence(usePersistence, persistenceResult)\n                    .then(function () { return _this.initializeRest(user); })\n                    .then(initializationDone.resolve, initializationDone.reject);\n            }\n            else {\n                _this.asyncQueue.schedule(function () {\n                    return _this.handleUserChange(user);\n                });\n            }\n        });\n        // Block the async queue until initialization is done\n        this.asyncQueue.schedule(function () {\n            return initializationDone.promise;\n        });\n        // Return only the result of enabling persistence. Note that this does not\n        // need to await the completion of initializationDone because the result of\n        // this method should not reflect any other kind of failure to start.\n        return persistenceResult.promise;\n    };\n    /** Enables the network connection and requeues all pending operations. */\n    FirestoreClient.prototype.enableNetwork = function () {\n        var _this = this;\n        return this.asyncQueue.schedule(function () {\n            return _this.remoteStore.enableNetwork();\n        });\n    };\n    /**\n     * Initializes persistent storage, attempting to use IndexedDB if\n     * usePersistence is true or memory-only if false.\n     *\n     * If IndexedDB fails because it's already open in another tab or because the\n     * platform can't possibly support our implementation then this method rejects\n     * the persistenceResult and falls back on memory-only persistence.\n     *\n     * @param usePersistence indicates whether or not to use offline persistence\n     * @param persistenceResult A deferred result indicating the user-visible\n     *     result of enabling offline persistence. This method will reject this if\n     *     IndexedDB fails to start for any reason. If usePersistence is false\n     *     this is unconditionally resolved.\n     * @returns a Promise indicating whether or not initialization should\n     *     continue, i.e. that one of the persistence implementations actually\n     *     succeeded.\n     */\n    FirestoreClient.prototype.initializePersistence = function (usePersistence, persistenceResult) {\n        var _this = this;\n        if (usePersistence) {\n            return this.startIndexedDbPersistence()\n                .then(persistenceResult.resolve)\n                .catch(function (error) {\n                // Regardless of whether or not the retry succeeds, from an user\n                // perspective, offline persistence has failed.\n                persistenceResult.reject(error);\n                // An unknown failure on the first stage shuts everything down.\n                if (!_this.canFallback(error)) {\n                    return Promise.reject(error);\n                }\n                console.warn('Error enabling offline storage. Falling back to' +\n                    ' storage disabled: ' +\n                    error);\n                return _this.startMemoryPersistence();\n            });\n        }\n        else {\n            // When usePersistence == false, enabling offline persistence is defined\n            // to unconditionally succeed. This allows start() to have the same\n            // signature for both cases, despite the fact that the returned promise\n            // is only used in the enablePersistence call.\n            persistenceResult.resolve();\n            return this.startMemoryPersistence();\n        }\n    };\n    FirestoreClient.prototype.canFallback = function (error) {\n        return (error.code === __WEBPACK_IMPORTED_MODULE_10__util_error__[\"a\" /* Code */].FAILED_PRECONDITION ||\n            error.code === __WEBPACK_IMPORTED_MODULE_10__util_error__[\"a\" /* Code */].UNIMPLEMENTED);\n    };\n    /**\n     * Starts IndexedDB-based persistence.\n     *\n     * @returns A promise indicating success or failure.\n     */\n    FirestoreClient.prototype.startIndexedDbPersistence = function () {\n        // TODO(http://b/33384523): For now we just disable garbage collection\n        // when persistence is enabled.\n        this.garbageCollector = new __WEBPACK_IMPORTED_MODULE_6__local_no_op_garbage_collector__[\"a\" /* NoOpGarbageCollector */]();\n        var storagePrefix = __WEBPACK_IMPORTED_MODULE_3__local_indexeddb_persistence__[\"a\" /* IndexedDbPersistence */].buildStoragePrefix(this.databaseInfo);\n        // Opt to use proto3 JSON in case the platform doesn't support Uint8Array.\n        var serializer = new __WEBPACK_IMPORTED_MODULE_9__remote_serializer__[\"a\" /* JsonProtoSerializer */](this.databaseInfo.databaseId, {\n            useProto3Json: true\n        });\n        this.persistence = new __WEBPACK_IMPORTED_MODULE_3__local_indexeddb_persistence__[\"a\" /* IndexedDbPersistence */](storagePrefix, serializer);\n        return this.persistence.start();\n    };\n    /**\n     * Starts Memory-backed persistence. In practice this cannot fail.\n     *\n     * @returns A promise that will successfully resolve.\n     */\n    FirestoreClient.prototype.startMemoryPersistence = function () {\n        this.garbageCollector = new __WEBPACK_IMPORTED_MODULE_2__local_eager_garbage_collector__[\"a\" /* EagerGarbageCollector */]();\n        this.persistence = new __WEBPACK_IMPORTED_MODULE_5__local_memory_persistence__[\"a\" /* MemoryPersistence */]();\n        return this.persistence.start();\n    };\n    /**\n     * Initializes the rest of the FirestoreClient, assuming the initial user\n     * has been obtained from the credential provider and some persistence\n     * implementation is available in this.persistence.\n     */\n    FirestoreClient.prototype.initializeRest = function (user) {\n        var _this = this;\n        return this.platform\n            .loadConnection(this.databaseInfo)\n            .then(function (connection) {\n            _this.localStore = new __WEBPACK_IMPORTED_MODULE_4__local_local_store__[\"a\" /* LocalStore */](_this.persistence, user, _this.garbageCollector);\n            var serializer = _this.platform.newSerializer(_this.databaseInfo.databaseId);\n            var datastore = new __WEBPACK_IMPORTED_MODULE_7__remote_datastore__[\"a\" /* Datastore */](_this.databaseInfo, _this.asyncQueue, connection, _this.credentials, serializer);\n            var onlineStateChangedHandler = function (onlineState) {\n                _this.syncEngine.applyOnlineStateChange(onlineState);\n                _this.eventMgr.applyOnlineStateChange(onlineState);\n            };\n            _this.remoteStore = new __WEBPACK_IMPORTED_MODULE_8__remote_remote_store__[\"a\" /* RemoteStore */](_this.localStore, datastore, onlineStateChangedHandler);\n            _this.syncEngine = new __WEBPACK_IMPORTED_MODULE_1__sync_engine__[\"a\" /* SyncEngine */](_this.localStore, _this.remoteStore, user);\n            // Setup wiring between sync engine and remote store\n            _this.remoteStore.syncEngine = _this.syncEngine;\n            _this.eventMgr = new __WEBPACK_IMPORTED_MODULE_0__event_manager__[\"a\" /* EventManager */](_this.syncEngine);\n            // NOTE: RemoteStore depends on LocalStore (for persisting stream\n            // tokens, refilling mutation queue, etc.) so must be started after\n            // LocalStore.\n            return _this.localStore.start();\n        })\n            .then(function () {\n            return _this.remoteStore.start();\n        });\n    };\n    FirestoreClient.prototype.handleUserChange = function (user) {\n        this.asyncQueue.verifyOperationInProgress();\n        Object(__WEBPACK_IMPORTED_MODULE_11__util_log__[\"b\" /* debug */])(LOG_TAG, 'User Changed: ' + user.uid);\n        return this.syncEngine.handleUserChange(user);\n    };\n    /** Disables the network connection. Pending operations will not complete. */\n    FirestoreClient.prototype.disableNetwork = function () {\n        var _this = this;\n        return this.asyncQueue.schedule(function () {\n            return _this.remoteStore.disableNetwork();\n        });\n    };\n    FirestoreClient.prototype.shutdown = function () {\n        var _this = this;\n        return this.asyncQueue\n            .schedule(function () {\n            _this.credentials.removeUserChangeListener();\n            return _this.remoteStore.shutdown();\n        })\n            .then(function () {\n            // PORTING NOTE: LocalStore does not need an explicit shutdown on web.\n            return _this.persistence.shutdown();\n        });\n    };\n    FirestoreClient.prototype.listen = function (query, observer, options) {\n        var _this = this;\n        var listener = new __WEBPACK_IMPORTED_MODULE_0__event_manager__[\"b\" /* QueryListener */](query, observer, options);\n        this.asyncQueue.schedule(function () {\n            return _this.eventMgr.listen(listener);\n        });\n        return listener;\n    };\n    FirestoreClient.prototype.unlisten = function (listener) {\n        var _this = this;\n        this.asyncQueue.schedule(function () {\n            return _this.eventMgr.unlisten(listener);\n        });\n    };\n    FirestoreClient.prototype.write = function (mutations) {\n        var _this = this;\n        var deferred = new __WEBPACK_IMPORTED_MODULE_12__util_promise__[\"a\" /* Deferred */]();\n        this.asyncQueue.schedule(function () { return _this.syncEngine.write(mutations, deferred); });\n        return deferred.promise;\n    };\n    FirestoreClient.prototype.databaseId = function () {\n        return this.databaseInfo.databaseId;\n    };\n    FirestoreClient.prototype.transaction = function (updateFunction) {\n        var _this = this;\n        // We have to wait for the async queue to be sure syncEngine is initialized.\n        return this.asyncQueue\n            .schedule(function () {\n            return Promise.resolve();\n        })\n            .then(function () {\n            return _this.syncEngine.runTransaction(updateFunction);\n        });\n    };\n    return FirestoreClient;\n}());\n\n\n//# sourceMappingURL=firestore_client.js.map\n\n\n/***/ }),\n/* 284 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return EventManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return QueryListener; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__types__ = __webpack_require__(187);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__view_snapshot__ = __webpack_require__(165);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_document_set__ = __webpack_require__(208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_obj_map__ = __webpack_require__(188);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */\nvar QueryListenersInfo = /** @class */ (function () {\n    function QueryListenersInfo() {\n        this.listeners = [];\n    }\n    return QueryListenersInfo;\n}());\n/**\n * EventManager is responsible for mapping queries to query event emitters.\n * It handles \"fan-out\". -- Identical queries will re-use the same watch on the\n * backend.\n */\nvar EventManager = /** @class */ (function () {\n    function EventManager(syncEngine) {\n        this.syncEngine = syncEngine;\n        this.queries = new __WEBPACK_IMPORTED_MODULE_4__util_obj_map__[\"a\" /* ObjectMap */](function (q) {\n            return q.canonicalId();\n        });\n        this.onlineState = __WEBPACK_IMPORTED_MODULE_0__types__[\"a\" /* OnlineState */].Unknown;\n        this.syncEngine.subscribe(this.onChange.bind(this), this.onError.bind(this));\n    }\n    EventManager.prototype.listen = function (listener) {\n        var query = listener.query;\n        var firstListen = false;\n        var queryInfo = this.queries.get(query);\n        if (!queryInfo) {\n            firstListen = true;\n            queryInfo = new QueryListenersInfo();\n            this.queries.set(query, queryInfo);\n        }\n        queryInfo.listeners.push(listener);\n        listener.applyOnlineStateChange(this.onlineState);\n        if (queryInfo.viewSnap)\n            listener.onViewSnapshot(queryInfo.viewSnap);\n        if (firstListen) {\n            return this.syncEngine.listen(query).then(function (targetId) {\n                queryInfo.targetId = targetId;\n                return targetId;\n            });\n        }\n        else {\n            return Promise.resolve(queryInfo.targetId);\n        }\n    };\n    EventManager.prototype.unlisten = function (listener) {\n        var query = listener.query;\n        var lastListen = false;\n        var queryInfo = this.queries.get(query);\n        if (queryInfo) {\n            var i = queryInfo.listeners.indexOf(listener);\n            if (i >= 0) {\n                queryInfo.listeners.splice(i, 1);\n                lastListen = queryInfo.listeners.length === 0;\n            }\n        }\n        if (lastListen) {\n            this.queries.delete(query);\n            return this.syncEngine.unlisten(query);\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    EventManager.prototype.onChange = function (viewSnaps) {\n        for (var _i = 0, viewSnaps_1 = viewSnaps; _i < viewSnaps_1.length; _i++) {\n            var viewSnap = viewSnaps_1[_i];\n            var query = viewSnap.query;\n            var queryInfo = this.queries.get(query);\n            if (queryInfo) {\n                for (var _a = 0, _b = queryInfo.listeners; _a < _b.length; _a++) {\n                    var listener = _b[_a];\n                    listener.onViewSnapshot(viewSnap);\n                }\n                queryInfo.viewSnap = viewSnap;\n            }\n        }\n    };\n    EventManager.prototype.onError = function (query, error) {\n        var queryInfo = this.queries.get(query);\n        if (queryInfo) {\n            for (var _i = 0, _a = queryInfo.listeners; _i < _a.length; _i++) {\n                var listener = _a[_i];\n                listener.onError(error);\n            }\n        }\n        // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n        // after an error.\n        this.queries.delete(query);\n    };\n    EventManager.prototype.applyOnlineStateChange = function (onlineState) {\n        this.onlineState = onlineState;\n        this.queries.forEach(function (_, queryInfo) {\n            for (var _i = 0, _a = queryInfo.listeners; _i < _a.length; _i++) {\n                var listener = _a[_i];\n                listener.applyOnlineStateChange(onlineState);\n            }\n        });\n    };\n    return EventManager;\n}());\n\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */\nvar QueryListener = /** @class */ (function () {\n    function QueryListener(query, queryObserver, options) {\n        this.query = query;\n        this.queryObserver = queryObserver;\n        /**\n         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n         * observer. This flag is set to true once we've actually raised an event.\n         */\n        this.raisedInitialEvent = false;\n        this.onlineState = __WEBPACK_IMPORTED_MODULE_0__types__[\"a\" /* OnlineState */].Unknown;\n        this.options = options || {};\n    }\n    QueryListener.prototype.onViewSnapshot = function (snap) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(snap.docChanges.length > 0 || snap.syncStateChanged, 'We got a new snapshot with no changes?');\n        if (!this.options.includeDocumentMetadataChanges) {\n            // Remove the metadata only changes.\n            var docChanges = [];\n            for (var _i = 0, _a = snap.docChanges; _i < _a.length; _i++) {\n                var docChange = _a[_i];\n                if (docChange.type !== __WEBPACK_IMPORTED_MODULE_1__view_snapshot__[\"a\" /* ChangeType */].Metadata) {\n                    docChanges.push(docChange);\n                }\n            }\n            snap = new __WEBPACK_IMPORTED_MODULE_1__view_snapshot__[\"d\" /* ViewSnapshot */](snap.query, snap.docs, snap.oldDocs, docChanges, snap.fromCache, snap.hasPendingWrites, snap.syncStateChanged);\n        }\n        if (!this.raisedInitialEvent) {\n            if (this.shouldRaiseInitialEvent(snap, this.onlineState)) {\n                this.raiseInitialEvent(snap);\n            }\n        }\n        else if (this.shouldRaiseEvent(snap)) {\n            this.queryObserver.next(snap);\n        }\n        this.snap = snap;\n    };\n    QueryListener.prototype.onError = function (error) {\n        this.queryObserver.error(error);\n    };\n    QueryListener.prototype.applyOnlineStateChange = function (onlineState) {\n        this.onlineState = onlineState;\n        if (this.snap &&\n            !this.raisedInitialEvent &&\n            this.shouldRaiseInitialEvent(this.snap, onlineState)) {\n            this.raiseInitialEvent(this.snap);\n        }\n    };\n    QueryListener.prototype.shouldRaiseInitialEvent = function (snap, onlineState) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(!this.raisedInitialEvent, 'Determining whether to raise first event but already had first event');\n        // Always raise the first event when we're synced\n        if (!snap.fromCache) {\n            return true;\n        }\n        // NOTE: We consider OnlineState.Unknown as online (it should become Failed\n        // or Online if we wait long enough).\n        var maybeOnline = onlineState !== __WEBPACK_IMPORTED_MODULE_0__types__[\"a\" /* OnlineState */].Failed;\n        // Don't raise the event if we're online, aren't synced yet (checked\n        // above) and are waiting for a sync.\n        if (this.options.waitForSyncWhenOnline && maybeOnline) {\n            Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(snap.fromCache, 'Waiting for sync, but snapshot is not from cache');\n            return false;\n        }\n        // Raise data from cache if we have any documents or we are offline\n        return !snap.docs.isEmpty() || onlineState === __WEBPACK_IMPORTED_MODULE_0__types__[\"a\" /* OnlineState */].Failed;\n    };\n    QueryListener.prototype.shouldRaiseEvent = function (snap) {\n        // We don't need to handle includeDocumentMetadataChanges here because\n        // the Metadata only changes have already been stripped out if needed.\n        // At this point the only changes we will see are the ones we should\n        // propagate.\n        if (snap.docChanges.length > 0) {\n            return true;\n        }\n        var hasPendingWritesChanged = this.snap && this.snap.hasPendingWrites !== snap.hasPendingWrites;\n        if (snap.syncStateChanged || hasPendingWritesChanged) {\n            return this.options.includeQueryMetadataChanges === true;\n        }\n        // Generally we should have hit one of the cases above, but it's possible\n        // to get here if there were only metadata docChanges and they got\n        // stripped out.\n        return false;\n    };\n    QueryListener.prototype.raiseInitialEvent = function (snap) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(!this.raisedInitialEvent, 'Trying to raise initial events for second time');\n        snap = new __WEBPACK_IMPORTED_MODULE_1__view_snapshot__[\"d\" /* ViewSnapshot */](snap.query, snap.docs, __WEBPACK_IMPORTED_MODULE_2__model_document_set__[\"a\" /* DocumentSet */].emptySet(snap.docs), QueryListener.getInitialViewChanges(snap), snap.fromCache, snap.hasPendingWrites, true);\n        this.raisedInitialEvent = true;\n        this.queryObserver.next(snap);\n    };\n    /** Returns changes as if all documents in the snap were added. */\n    QueryListener.getInitialViewChanges = function (snap) {\n        var result = [];\n        snap.docs.forEach(function (doc) {\n            result.push({ type: __WEBPACK_IMPORTED_MODULE_1__view_snapshot__[\"a\" /* ChangeType */].Added, doc: doc });\n        });\n        return result;\n    };\n    return QueryListener;\n}());\n\n\n//# sourceMappingURL=event_manager.js.map\n\n\n/***/ }),\n/* 285 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SyncEngine; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__local_eager_garbage_collector__ = __webpack_require__(209);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__local_local_view_changes__ = __webpack_require__(286);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__local_query_data__ = __webpack_require__(142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__local_reference_set__ = __webpack_require__(166);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__remote_remote_event__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__util_obj__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__util_obj_map__ = __webpack_require__(188);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__util_sorted_map__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__util_types__ = __webpack_require__(141);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__query__ = __webpack_require__(184);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__target_id_generator__ = __webpack_require__(210);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__view__ = __webpack_require__(287);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LOG_TAG = 'SyncEngine';\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\nvar QueryView = /** @class */ (function () {\n    function QueryView(\n        /**\n         * The query itself.\n         */\n        query, \n        /**\n         * The target number created by the client that is used in the watch\n         * stream to identify this query.\n         */\n        targetId, \n        /**\n         * An identifier from the datastore backend that indicates the last state\n         * of the results that was received. This can be used to indicate where\n         * to continue receiving new doc changes for the query.\n         */\n        resumeToken, \n        /**\n         * The view is responsible for computing the final merged truth of what\n         * docs are in the query. It gets notified of local and remote changes,\n         * and applies the query filters and limits to determine the most correct\n         * possible results.\n         */\n        view) {\n        this.query = query;\n        this.targetId = targetId;\n        this.resumeToken = resumeToken;\n        this.view = view;\n    }\n    return QueryView;\n}());\n/**\n * SyncEngine is the central controller in the client SDK architecture. It is\n * the glue code between the EventManager, LocalStore, and RemoteStore. Some of\n * SyncEngine's responsibilities include:\n * 1. Coordinating client requests and remote events between the EventManager\n *    and the local and remote data stores.\n * 2. Managing a View object for each query, providing the unified view between\n *    the local and remote data stores.\n * 3. Notifying the RemoteStore when the LocalStore has new mutations in its\n *    queue that need sending to the backend.\n *\n * The SyncEngine’s methods should only ever be called by methods running in the\n * global async queue.\n */\nvar SyncEngine = /** @class */ (function () {\n    function SyncEngine(localStore, remoteStore, currentUser) {\n        this.localStore = localStore;\n        this.remoteStore = remoteStore;\n        this.currentUser = currentUser;\n        this.viewHandler = null;\n        this.errorHandler = null;\n        this.queryViewsByQuery = new __WEBPACK_IMPORTED_MODULE_11__util_obj_map__[\"a\" /* ObjectMap */](function (q) {\n            return q.canonicalId();\n        });\n        this.queryViewsByTarget = {};\n        this.limboTargetsByKey = new __WEBPACK_IMPORTED_MODULE_12__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_5__model_document_key__[\"a\" /* DocumentKey */].comparator);\n        this.limboKeysByTarget = {};\n        this.limboDocumentRefs = new __WEBPACK_IMPORTED_MODULE_3__local_reference_set__[\"b\" /* ReferenceSet */]();\n        this.limboCollector = new __WEBPACK_IMPORTED_MODULE_0__local_eager_garbage_collector__[\"a\" /* EagerGarbageCollector */]();\n        /** Stores user completion handlers, indexed by User and BatchId. */\n        this.mutationUserCallbacks = {};\n        this.targetIdGenerator = __WEBPACK_IMPORTED_MODULE_16__target_id_generator__[\"a\" /* TargetIdGenerator */].forSyncEngine();\n    }\n    /** Subscribes view and error handler. Can be called only once. */\n    SyncEngine.prototype.subscribe = function (viewHandler, errorHandler) {\n        Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(viewHandler !== null && errorHandler !== null, 'View and error handlers cannot be null');\n        Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(this.viewHandler === null && this.errorHandler === null, 'SyncEngine already has a subscriber.');\n        this.viewHandler = viewHandler;\n        this.errorHandler = errorHandler;\n        this.limboCollector.addGarbageSource(this.limboDocumentRefs);\n    };\n    /**\n     * Initiates the new listen, resolves promise when listen enqueued to the\n     * server. All the subsequent view snapshots or errors are sent to the\n     * subscribed handlers. Returns the targetId of the query.\n     */\n    SyncEngine.prototype.listen = function (query) {\n        var _this = this;\n        this.assertSubscribed('listen()');\n        Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(!this.queryViewsByQuery.has(query), 'We already listen to the query: ' + query);\n        return this.localStore.allocateQuery(query).then(function (queryData) {\n            return _this.localStore\n                .executeQuery(query)\n                .then(function (docs) {\n                return _this.localStore\n                    .remoteDocumentKeys(queryData.targetId)\n                    .then(function (remoteKeys) {\n                    var view = new __WEBPACK_IMPORTED_MODULE_17__view__[\"c\" /* View */](query, remoteKeys);\n                    var viewDocChanges = view.computeDocChanges(docs);\n                    var viewChange = view.applyChanges(viewDocChanges);\n                    Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(viewChange.limboChanges.length === 0, 'View returned limbo docs before target ack from the server.');\n                    Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(!!viewChange.snapshot, 'applyChanges for new view should always return a snapshot');\n                    var data = new QueryView(query, queryData.targetId, queryData.resumeToken, view);\n                    _this.queryViewsByQuery.set(query, data);\n                    _this.queryViewsByTarget[queryData.targetId] = data;\n                    _this.viewHandler([viewChange.snapshot]);\n                    _this.remoteStore.listen(queryData);\n                });\n            })\n                .then(function () {\n                return queryData.targetId;\n            });\n        });\n    };\n    /** Stops listening to the query. */\n    SyncEngine.prototype.unlisten = function (query) {\n        var _this = this;\n        this.assertSubscribed('unlisten()');\n        var queryView = this.queryViewsByQuery.get(query);\n        Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(!!queryView, 'Trying to unlisten on query not found:' + query);\n        return this.localStore.releaseQuery(query).then(function () {\n            _this.remoteStore.unlisten(queryView.targetId);\n            return _this.removeAndCleanupQuery(queryView).then(function () {\n                return _this.localStore.collectGarbage();\n            });\n        });\n    };\n    /**\n     * Initiates the write of local mutation batch which involves adding the\n     * writes to the mutation queue, notifying the remote store about new\n     * mutations and raising events for any changes this write caused.\n     *\n     * The promise returned by this call is resolved when the above steps\n     * have completed, *not* when the write was acked by the backend. The\n     * userCallback is resolved once the write was acked/rejected by the\n     * backend (or failed locally for any other reason).\n     */\n    SyncEngine.prototype.write = function (batch, userCallback) {\n        var _this = this;\n        this.assertSubscribed('write()');\n        return this.localStore\n            .localWrite(batch)\n            .then(function (result) {\n            _this.addMutationCallback(result.batchId, userCallback);\n            return _this.emitNewSnapsAndNotifyLocalStore(result.changes);\n        })\n            .then(function () {\n            return _this.remoteStore.fillWritePipeline();\n        });\n    };\n    // TODO(klimt): Wrap the given error in a standard Firestore error object.\n    SyncEngine.prototype.wrapUpdateFunctionError = function (error) {\n        return error;\n    };\n    /**\n     * Takes an updateFunction in which a set of reads and writes can be performed\n     * atomically. In the updateFunction, the client can read and write values\n     * using the supplied transaction object. After the updateFunction, all\n     * changes will be committed. If some other client has changed any of the data\n     * referenced, then the updateFunction will be called again. If the\n     * updateFunction still fails after the given number of retries, then the\n     * transaction will be rejection.\n     *\n     * The transaction object passed to the updateFunction contains methods for\n     * accessing documents and collections. Unlike other datastore access, data\n     * accessed with the transaction will not reflect local changes that have not\n     * been committed. For this reason, it is required that all reads are\n     * performed before any writes. Transactions must be performed while online.\n     *\n     * The promise returned is resolved when the transaction is fully committed.\n     */\n    SyncEngine.prototype.runTransaction = function (updateFunction, retries) {\n        var _this = this;\n        if (retries === void 0) { retries = 5; }\n        Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(retries >= 0, 'Got negative number of retries for transaction.');\n        var transaction = this.remoteStore.createTransaction();\n        var wrappedUpdateFunction = function () {\n            try {\n                var userPromise = updateFunction(transaction);\n                if (Object(__WEBPACK_IMPORTED_MODULE_13__util_types__[\"a\" /* isNullOrUndefined */])(userPromise) ||\n                    !userPromise.catch ||\n                    !userPromise.then) {\n                    return Promise.reject(Error('Transaction callback must return a Promise'));\n                }\n                return userPromise.catch(function (e) {\n                    return Promise.reject(_this.wrapUpdateFunctionError(e));\n                });\n            }\n            catch (e) {\n                return Promise.reject(_this.wrapUpdateFunctionError(e));\n            }\n        };\n        return wrappedUpdateFunction().then(function (result) {\n            return transaction\n                .commit()\n                .then(function () {\n                return result;\n            })\n                .catch(function (error) {\n                if (retries === 0) {\n                    return Promise.reject(error);\n                }\n                // TODO(klimt): Put in a retry delay?\n                return _this.runTransaction(updateFunction, retries - 1);\n            });\n        });\n    };\n    SyncEngine.prototype.applyRemoteEvent = function (remoteEvent) {\n        var _this = this;\n        this.assertSubscribed('applyRemoteEvent()');\n        // Make sure limbo documents are deleted if there were no results\n        __WEBPACK_IMPORTED_MODULE_10__util_obj__[\"d\" /* forEachNumber */](remoteEvent.targetChanges, function (targetId, targetChange) {\n            var limboKey = _this.limboKeysByTarget[targetId];\n            if (limboKey &&\n                targetChange.currentStatusUpdate ===\n                    __WEBPACK_IMPORTED_MODULE_6__remote_remote_event__[\"a\" /* CurrentStatusUpdate */].MarkCurrent &&\n                !remoteEvent.documentUpdates.get(limboKey)) {\n                // When listening to a query the server responds with a snapshot\n                // containing documents matching the query and a current marker\n                // telling us we're now in sync. It's possible for these to arrive\n                // as separate remote events or as a single remote event.\n                // For a document query, there will be no documents sent in the\n                // response if the document doesn't exist.\n                //\n                // If the snapshot arrives separately from the current marker,\n                // we handle it normally and updateTrackedLimbos will resolve the\n                // limbo status of the document, removing it from limboDocumentRefs.\n                // This works because clients only initiate limbo resolution when\n                // a target is current and because all current targets are\n                // always at a consistent snapshot.\n                //\n                // However, if the document doesn't exist and the current marker\n                // arrives, the document is not present in the snapshot and our\n                // normal view handling would consider the document to remain in\n                // limbo indefinitely because there are no updates to the document.\n                // To avoid this, we specially handle this just this case here:\n                // synthesizing a delete.\n                //\n                // TODO(dimond): Ideally we would have an explicit lookup query\n                // instead resulting in an explicit delete message and we could\n                // remove this special logic.\n                remoteEvent.addDocumentUpdate(new __WEBPACK_IMPORTED_MODULE_4__model_document__[\"b\" /* NoDocument */](limboKey, remoteEvent.snapshotVersion));\n            }\n        });\n        return this.localStore.applyRemoteEvent(remoteEvent).then(function (changes) {\n            return _this.emitNewSnapsAndNotifyLocalStore(changes, remoteEvent);\n        });\n    };\n    /**\n     * Applies an OnlineState change to the sync engine and notifies any views of\n     * the change.\n     */\n    SyncEngine.prototype.applyOnlineStateChange = function (onlineState) {\n        var newViewSnapshots = [];\n        this.queryViewsByQuery.forEach(function (query, queryView) {\n            var viewChange = queryView.view.applyOnlineStateChange(onlineState);\n            Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(viewChange.limboChanges.length === 0, 'OnlineState should not affect limbo documents.');\n            if (viewChange.snapshot) {\n                newViewSnapshots.push(viewChange.snapshot);\n            }\n        });\n        this.viewHandler(newViewSnapshots);\n    };\n    SyncEngine.prototype.rejectListen = function (targetId, err) {\n        var _this = this;\n        this.assertSubscribed('rejectListens()');\n        var limboKey = this.limboKeysByTarget[targetId];\n        if (limboKey) {\n            // Since this query failed, we won't want to manually unlisten to it.\n            // So go ahead and remove it from bookkeeping.\n            this.limboTargetsByKey = this.limboTargetsByKey.remove(limboKey);\n            delete this.limboKeysByTarget[targetId];\n            // TODO(klimt): We really only should do the following on permission\n            // denied errors, but we don't have the cause code here.\n            // It's a limbo doc. Create a synthetic event saying it was deleted.\n            // This is kind of a hack. Ideally, we would have a method in the local\n            // store to purge a document. However, it would be tricky to keep all of\n            // the local store's invariants with another method.\n            var docMap = new __WEBPACK_IMPORTED_MODULE_12__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_5__model_document_key__[\"a\" /* DocumentKey */].comparator);\n            docMap = docMap.insert(limboKey, new __WEBPACK_IMPORTED_MODULE_4__model_document__[\"b\" /* NoDocument */](limboKey, __WEBPACK_IMPORTED_MODULE_15__snapshot_version__[\"a\" /* SnapshotVersion */].forDeletedDoc()));\n            var event_1 = new __WEBPACK_IMPORTED_MODULE_6__remote_remote_event__[\"b\" /* RemoteEvent */](__WEBPACK_IMPORTED_MODULE_15__snapshot_version__[\"a\" /* SnapshotVersion */].MIN, {}, docMap);\n            return this.applyRemoteEvent(event_1);\n        }\n        else {\n            var queryView_1 = this.queryViewsByTarget[targetId];\n            Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(!!queryView_1, 'Unknown targetId: ' + targetId);\n            return this.localStore.releaseQuery(queryView_1.query).then(function () {\n                return _this.removeAndCleanupQuery(queryView_1).then(function () {\n                    _this.errorHandler(queryView_1.query, err);\n                });\n            });\n        }\n    };\n    SyncEngine.prototype.applySuccessfulWrite = function (mutationBatchResult) {\n        var _this = this;\n        this.assertSubscribed('applySuccessfulWrite()');\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught\n        // up), so we raise user callbacks first so that they consistently happen\n        // before listen events.\n        this.processUserCallback(mutationBatchResult.batch.batchId, \n        /*error=*/ null);\n        return this.localStore\n            .acknowledgeBatch(mutationBatchResult)\n            .then(function (changes) {\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\n        });\n    };\n    SyncEngine.prototype.rejectFailedWrite = function (batchId, error) {\n        var _this = this;\n        this.assertSubscribed('rejectFailedWrite()');\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught up),\n        // so we raise user callbacks first so that they consistently happen before\n        // listen events.\n        this.processUserCallback(batchId, error);\n        return this.localStore.rejectBatch(batchId).then(function (changes) {\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\n        });\n    };\n    SyncEngine.prototype.addMutationCallback = function (batchId, callback) {\n        var newCallbacks = this.mutationUserCallbacks[this.currentUser.toKey()];\n        if (!newCallbacks) {\n            newCallbacks = new __WEBPACK_IMPORTED_MODULE_12__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_9__util_misc__[\"f\" /* primitiveComparator */]);\n        }\n        newCallbacks = newCallbacks.insert(batchId, callback);\n        this.mutationUserCallbacks[this.currentUser.toKey()] = newCallbacks;\n    };\n    /**\n     * Resolves or rejects the user callback for the given batch and then discards\n     * it.\n     */\n    SyncEngine.prototype.processUserCallback = function (batchId, error) {\n        var newCallbacks = this.mutationUserCallbacks[this.currentUser.toKey()];\n        // NOTE: Mutations restored from persistence won't have callbacks, so it's\n        // okay for there to be no callback for this ID.\n        if (newCallbacks) {\n            var callback = newCallbacks.get(batchId);\n            if (callback) {\n                Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(batchId === newCallbacks.minKey(), 'Mutation callbacks processed out-of-order?');\n                if (error) {\n                    callback.reject(error);\n                }\n                else {\n                    callback.resolve();\n                }\n                newCallbacks = newCallbacks.remove(batchId);\n            }\n            this.mutationUserCallbacks[this.currentUser.toKey()] = newCallbacks;\n        }\n    };\n    SyncEngine.prototype.removeAndCleanupQuery = function (queryView) {\n        this.queryViewsByQuery.delete(queryView.query);\n        delete this.queryViewsByTarget[queryView.targetId];\n        this.limboDocumentRefs.removeReferencesForId(queryView.targetId);\n        return this.gcLimboDocuments();\n    };\n    SyncEngine.prototype.updateTrackedLimbos = function (targetId, limboChanges) {\n        for (var _i = 0, limboChanges_1 = limboChanges; _i < limboChanges_1.length; _i++) {\n            var limboChange = limboChanges_1[_i];\n            if (limboChange instanceof __WEBPACK_IMPORTED_MODULE_17__view__[\"a\" /* AddedLimboDocument */]) {\n                this.limboDocumentRefs.addReference(limboChange.key, targetId);\n                this.trackLimboChange(limboChange);\n            }\n            else if (limboChange instanceof __WEBPACK_IMPORTED_MODULE_17__view__[\"b\" /* RemovedLimboDocument */]) {\n                __WEBPACK_IMPORTED_MODULE_8__util_log__[\"b\" /* debug */](LOG_TAG, 'Document no longer in limbo: ' + limboChange.key);\n                this.limboDocumentRefs.removeReference(limboChange.key, targetId);\n            }\n            else {\n                Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"b\" /* fail */])('Unknown limbo change: ' + JSON.stringify(limboChange));\n            }\n        }\n        return this.gcLimboDocuments();\n    };\n    SyncEngine.prototype.trackLimboChange = function (limboChange) {\n        var key = limboChange.key;\n        if (!this.limboTargetsByKey.get(key)) {\n            __WEBPACK_IMPORTED_MODULE_8__util_log__[\"b\" /* debug */](LOG_TAG, 'New document in limbo: ' + key);\n            var limboTargetId = this.targetIdGenerator.next();\n            var query = __WEBPACK_IMPORTED_MODULE_14__query__[\"f\" /* Query */].atPath(key.path);\n            this.limboKeysByTarget[limboTargetId] = key;\n            this.remoteStore.listen(new __WEBPACK_IMPORTED_MODULE_2__local_query_data__[\"a\" /* QueryData */](query, limboTargetId, __WEBPACK_IMPORTED_MODULE_2__local_query_data__[\"b\" /* QueryPurpose */].Listen));\n            this.limboTargetsByKey = this.limboTargetsByKey.insert(key, limboTargetId);\n        }\n    };\n    SyncEngine.prototype.gcLimboDocuments = function () {\n        var _this = this;\n        // HACK: We can use a null transaction here, because we know that the\n        // reference set is entirely within memory and doesn't need a store engine.\n        return this.limboCollector\n            .collectGarbage(null)\n            .next(function (keys) {\n            keys.forEach(function (key) {\n                var limboTargetId = _this.limboTargetsByKey.get(key);\n                if (limboTargetId === null) {\n                    // This target already got removed, because the query failed.\n                    return;\n                }\n                _this.remoteStore.unlisten(limboTargetId);\n                _this.limboTargetsByKey = _this.limboTargetsByKey.remove(key);\n                delete _this.limboKeysByTarget[limboTargetId];\n            });\n        })\n            .toPromise();\n    };\n    // Visible for testing\n    SyncEngine.prototype.currentLimboDocs = function () {\n        return this.limboTargetsByKey;\n    };\n    SyncEngine.prototype.emitNewSnapsAndNotifyLocalStore = function (changes, remoteEvent) {\n        var _this = this;\n        var newSnaps = [];\n        var docChangesInAllViews = [];\n        var queriesProcessed = [];\n        this.queryViewsByQuery.forEach(function (_, queryView) {\n            queriesProcessed.push(Promise.resolve()\n                .then(function () {\n                var viewDocChanges = queryView.view.computeDocChanges(changes);\n                if (!viewDocChanges.needsRefill) {\n                    return viewDocChanges;\n                }\n                // The query has a limit and some docs were removed, so we need\n                // to re-run the query against the local store to make sure we\n                // didn't lose any good docs that had been past the limit.\n                return _this.localStore.executeQuery(queryView.query).then(function (docs) {\n                    return queryView.view.computeDocChanges(docs, viewDocChanges);\n                });\n            })\n                .then(function (viewDocChanges) {\n                var targetChange = remoteEvent && remoteEvent.targetChanges[queryView.targetId];\n                var viewChange = queryView.view.applyChanges(viewDocChanges, targetChange);\n                return _this.updateTrackedLimbos(queryView.targetId, viewChange.limboChanges).then(function () {\n                    if (viewChange.snapshot) {\n                        newSnaps.push(viewChange.snapshot);\n                        var docChanges = __WEBPACK_IMPORTED_MODULE_1__local_local_view_changes__[\"a\" /* LocalViewChanges */].fromSnapshot(viewChange.snapshot);\n                        docChangesInAllViews.push(docChanges);\n                    }\n                });\n            }));\n        });\n        return Promise.all(queriesProcessed)\n            .then(function () {\n            _this.viewHandler(newSnaps);\n            return _this.localStore.notifyLocalViewChanges(docChangesInAllViews);\n        })\n            .then(function () {\n            return _this.localStore.collectGarbage();\n        });\n    };\n    SyncEngine.prototype.assertSubscribed = function (fnName) {\n        Object(__WEBPACK_IMPORTED_MODULE_7__util_assert__[\"a\" /* assert */])(this.viewHandler !== null && this.errorHandler !== null, 'Trying to call ' + fnName + ' before calling subscribe().');\n    };\n    SyncEngine.prototype.handleUserChange = function (user) {\n        var _this = this;\n        this.currentUser = user;\n        return this.localStore\n            .handleUserChange(user)\n            .then(function (changes) {\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\n        })\n            .then(function () {\n            return _this.remoteStore.handleUserChange(user);\n        });\n    };\n    return SyncEngine;\n}());\n\n\n//# sourceMappingURL=sync_engine.js.map\n\n\n/***/ }),\n/* 286 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LocalViewChanges; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_view_snapshot__ = __webpack_require__(165);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_collections__ = __webpack_require__(119);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nvar LocalViewChanges = /** @class */ (function () {\n    function LocalViewChanges(query, addedKeys, removedKeys) {\n        this.query = query;\n        this.addedKeys = addedKeys;\n        this.removedKeys = removedKeys;\n    }\n    LocalViewChanges.fromSnapshot = function (viewSnapshot) {\n        var addedKeys = Object(__WEBPACK_IMPORTED_MODULE_1__model_collections__[\"a\" /* documentKeySet */])();\n        var removedKeys = Object(__WEBPACK_IMPORTED_MODULE_1__model_collections__[\"a\" /* documentKeySet */])();\n        for (var _i = 0, _a = viewSnapshot.docChanges; _i < _a.length; _i++) {\n            var docChange = _a[_i];\n            switch (docChange.type) {\n                case __WEBPACK_IMPORTED_MODULE_0__core_view_snapshot__[\"a\" /* ChangeType */].Added:\n                    addedKeys = addedKeys.add(docChange.doc.key);\n                    break;\n                case __WEBPACK_IMPORTED_MODULE_0__core_view_snapshot__[\"a\" /* ChangeType */].Removed:\n                    removedKeys = removedKeys.add(docChange.doc.key);\n                    break;\n                default:\n            }\n        }\n        return new LocalViewChanges(viewSnapshot.query, addedKeys, removedKeys);\n    };\n    return LocalViewChanges;\n}());\n\n\n//# sourceMappingURL=local_view_changes.js.map\n\n\n/***/ }),\n/* 287 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AddedLimboDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return RemovedLimboDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return View; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_document_set__ = __webpack_require__(208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__remote_remote_event__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__types__ = __webpack_require__(187);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__view_snapshot__ = __webpack_require__(165);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\nvar AddedLimboDocument = /** @class */ (function () {\n    function AddedLimboDocument(key) {\n        this.key = key;\n    }\n    return AddedLimboDocument;\n}());\n\nvar RemovedLimboDocument = /** @class */ (function () {\n    function RemovedLimboDocument(key) {\n        this.key = key;\n    }\n    return RemovedLimboDocument;\n}());\n\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */\nvar View = /** @class */ (function () {\n    function View(query, \n        /** Documents included in the remote target */\n        syncedDocuments) {\n        this.query = query;\n        this.syncedDocuments = syncedDocuments;\n        this.syncState = null;\n        /**\n         * A flag whether the view is current with the backend. A view is considered\n         * current after it has seen the current flag from the backend and did not\n         * lose consistency within the watch stream (e.g. because of an existence\n         * filter mismatch).\n         */\n        this.current = false;\n        /** Documents in the view but not in the remote target */\n        this.limboDocuments = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"a\" /* documentKeySet */])();\n        /** Document Keys that have local changes */\n        this.mutatedKeys = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"a\" /* documentKeySet */])();\n        this.documentSet = new __WEBPACK_IMPORTED_MODULE_2__model_document_set__[\"a\" /* DocumentSet */](query.docComparator.bind(query));\n    }\n    /**\n     * Iterates over a set of doc changes, applies the query limit, and computes\n     * what the new results should be, what the changes were, and whether we may\n     * need to go back to the local cache for more results. Does not make any\n     * changes to the view.\n     * @param docChanges The doc changes to apply to this view.\n     * @param previousChanges If this is being called with a refill, then start\n     *        with this set of docs and changes instead of the current view.\n     * @return a new set of docs, changes, and refill flag.\n     */\n    View.prototype.computeDocChanges = function (docChanges, previousChanges) {\n        var _this = this;\n        var changeSet = previousChanges\n            ? previousChanges.changeSet\n            : new __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"b\" /* DocumentChangeSet */]();\n        var oldDocumentSet = previousChanges\n            ? previousChanges.documentSet\n            : this.documentSet;\n        var newMutatedKeys = previousChanges\n            ? previousChanges.mutatedKeys\n            : this.mutatedKeys;\n        var newDocumentSet = oldDocumentSet;\n        var needsRefill = false;\n        // Track the last doc in a (full) limit. This is necessary, because some\n        // update (a delete, or an update moving a doc past the old limit) might\n        // mean there is some other document in the local cache that either should\n        // come (1) between the old last limit doc and the new last document, in the\n        // case of updates, or (2) after the new last document, in the case of\n        // deletes. So we keep this doc at the old limit to compare the updates to.\n        //\n        // Note that this should never get used in a refill (when previousChanges is\n        // set), because there will only be adds -- no deletes or updates.\n        var lastDocInLimit = this.query.hasLimit() && oldDocumentSet.size === this.query.limit\n            ? oldDocumentSet.last()\n            : null;\n        docChanges.inorderTraversal(function (key, newMaybeDoc) {\n            var oldDoc = oldDocumentSet.get(key);\n            var newDoc = newMaybeDoc instanceof __WEBPACK_IMPORTED_MODULE_1__model_document__[\"a\" /* Document */] ? newMaybeDoc : null;\n            if (newDoc) {\n                Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(key.isEqual(newDoc.key), 'Mismatching keys found in document changes: ' +\n                    key +\n                    ' != ' +\n                    newDoc.key);\n                newDoc = _this.query.matches(newDoc) ? newDoc : null;\n            }\n            if (newDoc) {\n                newDocumentSet = newDocumentSet.add(newDoc);\n                if (newDoc.hasLocalMutations) {\n                    newMutatedKeys = newMutatedKeys.add(key);\n                }\n                else {\n                    newMutatedKeys = newMutatedKeys.delete(key);\n                }\n            }\n            else {\n                newDocumentSet = newDocumentSet.delete(key);\n                newMutatedKeys = newMutatedKeys.delete(key);\n            }\n            // Calculate change\n            if (oldDoc && newDoc) {\n                var docsEqual = oldDoc.data.isEqual(newDoc.data);\n                if (!docsEqual ||\n                    oldDoc.hasLocalMutations !== newDoc.hasLocalMutations) {\n                    // only report a change if document actually changed\n                    if (docsEqual) {\n                        changeSet.track({ type: __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Metadata, doc: newDoc });\n                    }\n                    else {\n                        changeSet.track({ type: __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Modified, doc: newDoc });\n                    }\n                    if (lastDocInLimit &&\n                        _this.query.docComparator(newDoc, lastDocInLimit) > 0) {\n                        // This doc moved from inside the limit to after the limit.\n                        // That means there may be some doc in the local cache that's\n                        // actually less than this one.\n                        needsRefill = true;\n                    }\n                }\n            }\n            else if (!oldDoc && newDoc) {\n                changeSet.track({ type: __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Added, doc: newDoc });\n            }\n            else if (oldDoc && !newDoc) {\n                changeSet.track({ type: __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Removed, doc: oldDoc });\n                if (lastDocInLimit) {\n                    // A doc was removed from a full limit query. We'll need to\n                    // requery from the local cache to see if we know about some other\n                    // doc that should be in the results.\n                    needsRefill = true;\n                }\n            }\n        });\n        if (this.query.hasLimit()) {\n            // TODO(klimt): Make DocumentSet size be constant time.\n            while (newDocumentSet.size > this.query.limit) {\n                var oldDoc = newDocumentSet.last();\n                newDocumentSet = newDocumentSet.delete(oldDoc.key);\n                changeSet.track({ type: __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Removed, doc: oldDoc });\n            }\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(!needsRefill || !previousChanges, 'View was refilled using docs that themselves needed refilling.');\n        return {\n            documentSet: newDocumentSet,\n            changeSet: changeSet,\n            needsRefill: needsRefill,\n            mutatedKeys: newMutatedKeys\n        };\n    };\n    /**\n     * Updates the view with the given ViewDocumentChanges and updates limbo docs\n     * and sync state from the given (optional) target change.\n     * @param docChanges The set of changes to make to the view's docs.\n     * @param targetChange A target change to apply for computing limbo docs and\n     *        sync state.\n     * @return A new ViewChange with the given docs, changes, and sync state.\n     */\n    View.prototype.applyChanges = function (docChanges, targetChange) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(!docChanges.needsRefill, 'Cannot apply changes that need a refill');\n        var oldDocs = this.documentSet;\n        this.documentSet = docChanges.documentSet;\n        this.mutatedKeys = docChanges.mutatedKeys;\n        // Sort changes based on type and query comparator\n        var changes = docChanges.changeSet.getChanges();\n        changes.sort(function (c1, c2) {\n            return (compareChangeType(c1.type, c2.type) ||\n                _this.query.docComparator(c1.doc, c2.doc));\n        });\n        var limboChanges = this.applyTargetChange(targetChange);\n        var synced = this.limboDocuments.size === 0 && this.current;\n        var newSyncState = synced ? __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"c\" /* SyncState */].Synced : __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"c\" /* SyncState */].Local;\n        var syncStateChanged = newSyncState !== this.syncState;\n        this.syncState = newSyncState;\n        if (changes.length === 0 && !syncStateChanged) {\n            // no changes\n            return { limboChanges: limboChanges };\n        }\n        else {\n            var snap = new __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"d\" /* ViewSnapshot */](this.query, docChanges.documentSet, oldDocs, changes, newSyncState === __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"c\" /* SyncState */].Local, !docChanges.mutatedKeys.isEmpty(), syncStateChanged);\n            return {\n                snapshot: snap,\n                limboChanges: limboChanges\n            };\n        }\n    };\n    /**\n     * Applies an OnlineState change to the view, potentially generating a\n     * ViewChange if the view's syncState changes as a result.\n     */\n    View.prototype.applyOnlineStateChange = function (onlineState) {\n        if (this.current && onlineState === __WEBPACK_IMPORTED_MODULE_5__types__[\"a\" /* OnlineState */].Failed) {\n            // If we're offline, set `current` to false and then call applyChanges()\n            // to refresh our syncState and generate a ViewChange as appropriate. We\n            // are guaranteed to get a new TargetChange that sets `current` back to\n            // true once the client is back online.\n            this.current = false;\n            return this.applyChanges({\n                documentSet: this.documentSet,\n                changeSet: new __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"b\" /* DocumentChangeSet */](),\n                mutatedKeys: this.mutatedKeys,\n                needsRefill: false\n            });\n        }\n        else {\n            // No effect, just return a no-op ViewChange.\n            return { limboChanges: [] };\n        }\n    };\n    /**\n     * Returns whether the doc for the given key should be in limbo.\n     */\n    View.prototype.shouldBeInLimbo = function (key) {\n        // If the remote end says it's part of this query, it's not in limbo.\n        if (this.syncedDocuments.has(key)) {\n            return false;\n        }\n        // The local store doesn't think it's a result, so it shouldn't be in limbo.\n        if (!this.documentSet.has(key)) {\n            return false;\n        }\n        // If there are local changes to the doc, they might explain why the server\n        // doesn't know that it's part of the query. So don't put it in limbo.\n        // TODO(klimt): Ideally, we would only consider changes that might actually\n        // affect this specific query.\n        if (this.documentSet.get(key).hasLocalMutations) {\n            return false;\n        }\n        // Everything else is in limbo.\n        return true;\n    };\n    /**\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\n     * Returns the list of changes to which docs are in limbo.\n     */\n    View.prototype.applyTargetChange = function (targetChange) {\n        var _this = this;\n        if (targetChange) {\n            var targetMapping = targetChange.mapping;\n            if (targetMapping instanceof __WEBPACK_IMPORTED_MODULE_3__remote_remote_event__[\"c\" /* ResetMapping */]) {\n                this.syncedDocuments = targetMapping.documents;\n            }\n            else if (targetMapping instanceof __WEBPACK_IMPORTED_MODULE_3__remote_remote_event__[\"d\" /* UpdateMapping */]) {\n                this.syncedDocuments = targetMapping.applyToKeySet(this.syncedDocuments);\n            }\n            switch (targetChange.currentStatusUpdate) {\n                case __WEBPACK_IMPORTED_MODULE_3__remote_remote_event__[\"a\" /* CurrentStatusUpdate */].MarkCurrent:\n                    this.current = true;\n                    break;\n                case __WEBPACK_IMPORTED_MODULE_3__remote_remote_event__[\"a\" /* CurrentStatusUpdate */].MarkNotCurrent:\n                    this.current = false;\n                    break;\n                case __WEBPACK_IMPORTED_MODULE_3__remote_remote_event__[\"a\" /* CurrentStatusUpdate */].None:\n                    break;\n                default:\n                    Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('Unknown current status update: ' + targetChange.currentStatusUpdate);\n            }\n        }\n        // Recompute the set of limbo docs.\n        // TODO(klimt): Do this incrementally so that it's not quadratic when\n        // updating many documents.\n        var oldLimboDocuments = this.limboDocuments;\n        this.limboDocuments = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"a\" /* documentKeySet */])();\n        if (this.current) {\n            this.documentSet.forEach(function (doc) {\n                if (_this.shouldBeInLimbo(doc.key)) {\n                    _this.limboDocuments = _this.limboDocuments.add(doc.key);\n                }\n            });\n        }\n        // Diff the new limbo docs with the old limbo docs.\n        var changes = [];\n        oldLimboDocuments.forEach(function (key) {\n            if (!_this.limboDocuments.has(key)) {\n                changes.push(new RemovedLimboDocument(key));\n            }\n        });\n        this.limboDocuments.forEach(function (key) {\n            if (!oldLimboDocuments.has(key)) {\n                changes.push(new AddedLimboDocument(key));\n            }\n        });\n        return changes;\n    };\n    return View;\n}());\n\nfunction compareChangeType(c1, c2) {\n    var order = function (change) {\n        switch (change) {\n            case __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Added:\n                return 1;\n            case __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Modified:\n                return 2;\n            case __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Metadata:\n                // A metadata change is converted to a modified change at the public\n                // api layer.  Since we sort by document key and then change type,\n                // metadata and modified changes must be sorted equivalently.\n                return 2;\n            case __WEBPACK_IMPORTED_MODULE_6__view_snapshot__[\"a\" /* ChangeType */].Removed:\n                return 0;\n            default:\n                return Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('Unknown ChangeType: ' + change);\n        }\n    };\n    return order(c1) - order(c2);\n}\n\n//# sourceMappingURL=view.js.map\n\n\n/***/ }),\n/* 288 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return IndexedDbPersistence; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__indexeddb_mutation_queue__ = __webpack_require__(289);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__indexeddb_query_cache__ = __webpack_require__(290);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__indexeddb_remote_document_cache__ = __webpack_require__(291);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__local_serializer__ = __webpack_require__(292);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__persistence_promise__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__simple_db__ = __webpack_require__(167);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\nvar LOG_TAG = 'IndexedDbPersistence';\n/** If the owner lease is older than 5 seconds, try to take ownership. */\nvar OWNER_LEASE_MAX_AGE_MS = 5000;\n/** Refresh the owner lease every 4 seconds while owner. */\nvar OWNER_LEASE_REFRESH_INTERVAL_MS = 4000;\n/** LocalStorage location to indicate a zombied ownerId (see class comment). */\nvar ZOMBIE_OWNER_LOCALSTORAGE_SUFFIX = 'zombiedOwnerId';\n/** Error when the owner lease cannot be acquired or is lost. */\nvar EXISTING_OWNER_ERROR_MSG = 'There is another tab open with offline' +\n    ' persistence enabled. Only one such tab is allowed at a time. The' +\n    ' other tab must be closed or persistence must be disabled.';\nvar UNSUPPORTED_PLATFORM_ERROR_MSG = 'This platform is either missing' +\n    ' IndexedDB or is known to have an incomplete implementation. Offline' +\n    ' persistence has been disabled.';\n/**\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\n * across sessions.\n *\n * Currently the Firestore SDK only supports a single consumer of the database,\n * but browsers obviously support multiple tabs. IndexedDbPersistence ensures a\n * single consumer of the database via an \"owner lease\" stored in the database.\n *\n * On startup, IndexedDbPersistence assigns itself a random \"ownerId\" and writes\n * it to a special \"owner\" object in the database (if no entry exists already or\n * the current entry is expired). This owner lease is then verified inside every\n * transaction to ensure the lease has not been lost.\n *\n * If a tab opts not to acquire the owner lease (because there's an existing\n * non-expired owner) or loses the owner lease, IndexedDbPersistence enters a\n * failed state and all subsequent operations will automatically fail.\n *\n * The current owner regularly refreshes the owner lease with new timestamps to\n * prevent newly-opened tabs from taking over ownership.\n *\n * Additionally there is an optimization so that when a tab is closed, the owner\n * lease is released immediately (this is especially important to make sure that\n * a refreshed tab is able to immediately re-acquire the owner lease).\n * Unfortunately, IndexedDB cannot be reliably used in window.unload since it is\n * an asynchronous API. So in addition to attempting to give up the lease,\n * the owner writes its ownerId to a \"zombiedOwnerId\" entry in LocalStorage\n * which acts as an indicator that another tab should go ahead and take the\n * owner lease immediately regardless of the current lease timestamp.\n */\nvar IndexedDbPersistence = /** @class */ (function () {\n    function IndexedDbPersistence(prefix, serializer) {\n        this.ownerId = this.generateOwnerId();\n        this.dbName = prefix + IndexedDbPersistence.MAIN_DATABASE;\n        this.serializer = new __WEBPACK_IMPORTED_MODULE_8__local_serializer__[\"a\" /* LocalSerializer */](serializer);\n        this.localStoragePrefix = prefix;\n    }\n    IndexedDbPersistence.prototype.start = function () {\n        var _this = this;\n        if (!IndexedDbPersistence.isAvailable()) {\n            this.persistenceError = new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNIMPLEMENTED, UNSUPPORTED_PLATFORM_ERROR_MSG);\n            return Promise.reject(this.persistenceError);\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.started, 'IndexedDbPersistence double-started!');\n        this.started = true;\n        return __WEBPACK_IMPORTED_MODULE_10__simple_db__[\"a\" /* SimpleDb */].openOrCreate(this.dbName, __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"l\" /* SCHEMA_VERSION */], __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"m\" /* createOrUpgradeDb */])\n            .then(function (db) {\n            _this.simpleDb = db;\n        })\n            .then(function () { return _this.tryAcquireOwnerLease(); })\n            .then(function () {\n            _this.scheduleOwnerLeaseRefreshes();\n            _this.attachWindowUnloadHook();\n        });\n    };\n    IndexedDbPersistence.prototype.shutdown = function () {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.started, 'IndexedDbPersistence shutdown without start!');\n        this.started = false;\n        this.detachWindowUnloadHook();\n        this.stopOwnerLeaseRefreshes();\n        return this.releaseOwnerLease().then(function () {\n            _this.simpleDb.close();\n        });\n    };\n    IndexedDbPersistence.prototype.getMutationQueue = function (user) {\n        return __WEBPACK_IMPORTED_MODULE_4__indexeddb_mutation_queue__[\"a\" /* IndexedDbMutationQueue */].forUser(user, this.serializer);\n    };\n    IndexedDbPersistence.prototype.getQueryCache = function () {\n        return new __WEBPACK_IMPORTED_MODULE_5__indexeddb_query_cache__[\"a\" /* IndexedDbQueryCache */](this.serializer);\n    };\n    IndexedDbPersistence.prototype.getRemoteDocumentCache = function () {\n        return new __WEBPACK_IMPORTED_MODULE_6__indexeddb_remote_document_cache__[\"a\" /* IndexedDbRemoteDocumentCache */](this.serializer);\n    };\n    IndexedDbPersistence.prototype.runTransaction = function (action, operation) {\n        var _this = this;\n        if (this.persistenceError) {\n            return Promise.reject(this.persistenceError);\n        }\n        __WEBPACK_IMPORTED_MODULE_2__util_log__[\"b\" /* debug */](LOG_TAG, 'Starting transaction:', action);\n        // Do all transactions as readwrite against all object stores, since we\n        // are the only reader/writer.\n        return this.simpleDb.runTransaction('readwrite', __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"a\" /* ALL_STORES */], function (txn) {\n            // Verify that we still have the owner lease as part of every transaction.\n            return _this.ensureOwnerLease(txn).next(function () { return operation(txn); });\n        });\n    };\n    IndexedDbPersistence.isAvailable = function () {\n        return __WEBPACK_IMPORTED_MODULE_10__simple_db__[\"a\" /* SimpleDb */].isAvailable();\n    };\n    /**\n     * Generates a string used as a prefix when storing data in IndexedDB and\n     * LocalStorage.\n     */\n    IndexedDbPersistence.buildStoragePrefix = function (databaseInfo) {\n        // Use two different prefix formats:\n        //\n        //   * firestore / persistenceKey / projectID . databaseID / ...\n        //   * firestore / persistenceKey / projectID / ...\n        //\n        // projectIDs are DNS-compatible names and cannot contain dots\n        // so there's no danger of collisions.\n        var database = databaseInfo.databaseId.projectId;\n        if (!databaseInfo.databaseId.isDefaultDatabase) {\n            database += '.' + databaseInfo.databaseId.database;\n        }\n        return 'firestore/' + databaseInfo.persistenceKey + '/' + database + '/';\n    };\n    /**\n     * Acquires the owner lease if there's no valid owner. Else returns a rejected\n     * promise.\n     */\n    IndexedDbPersistence.prototype.tryAcquireOwnerLease = function () {\n        var _this = this;\n        // NOTE: Don't use this.runTransaction, since it requires us to already\n        // have the lease.\n        return this.simpleDb.runTransaction('readwrite', [__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"f\" /* DbOwner */].store], function (txn) {\n            var store = txn.store(__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"f\" /* DbOwner */].store);\n            return store.get('owner').next(function (dbOwner) {\n                if (!_this.validOwner(dbOwner)) {\n                    var newDbOwner = new __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"f\" /* DbOwner */](_this.ownerId, Date.now());\n                    __WEBPACK_IMPORTED_MODULE_2__util_log__[\"b\" /* debug */](LOG_TAG, 'No valid owner. Acquiring owner lease. Current owner:', dbOwner, 'New owner:', newDbOwner);\n                    return store.put('owner', newDbOwner);\n                }\n                else {\n                    __WEBPACK_IMPORTED_MODULE_2__util_log__[\"b\" /* debug */](LOG_TAG, 'Valid owner already. Failing. Current owner:', dbOwner);\n                    _this.persistenceError = new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].FAILED_PRECONDITION, EXISTING_OWNER_ERROR_MSG);\n                    return __WEBPACK_IMPORTED_MODULE_9__persistence_promise__[\"a\" /* PersistencePromise */].reject(_this.persistenceError);\n                }\n            });\n        });\n    };\n    /** Checks the owner lease and deletes it if we are the current owner. */\n    IndexedDbPersistence.prototype.releaseOwnerLease = function () {\n        var _this = this;\n        // NOTE: Don't use this.runTransaction, since it requires us to already\n        // have the lease.\n        return this.simpleDb.runTransaction('readwrite', [__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"f\" /* DbOwner */].store], function (txn) {\n            var store = txn.store(__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"f\" /* DbOwner */].store);\n            return store.get('owner').next(function (dbOwner) {\n                if (dbOwner !== null && dbOwner.ownerId === _this.ownerId) {\n                    __WEBPACK_IMPORTED_MODULE_2__util_log__[\"b\" /* debug */](LOG_TAG, 'Releasing owner lease.');\n                    return store.delete('owner');\n                }\n                else {\n                    return __WEBPACK_IMPORTED_MODULE_9__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n                }\n            });\n        });\n    };\n    /**\n     * Checks the owner lease and returns a rejected promise if we are not the\n     * current owner. This should be included in every transaction to guard\n     * against losing the owner lease.\n     */\n    IndexedDbPersistence.prototype.ensureOwnerLease = function (txn) {\n        var _this = this;\n        var store = txn.store(__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"f\" /* DbOwner */].store);\n        return store.get('owner').next(function (dbOwner) {\n            if (dbOwner === null || dbOwner.ownerId !== _this.ownerId) {\n                _this.persistenceError = new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].FAILED_PRECONDITION, EXISTING_OWNER_ERROR_MSG);\n                return __WEBPACK_IMPORTED_MODULE_9__persistence_promise__[\"a\" /* PersistencePromise */].reject(_this.persistenceError);\n            }\n            else {\n                return __WEBPACK_IMPORTED_MODULE_9__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n            }\n        });\n    };\n    /**\n     * Returns true if the provided owner exists, has a recent timestamp, and\n     * isn't zombied.\n     *\n     * NOTE: To determine if the owner is zombied, this method reads from\n     * LocalStorage which could be mildly expensive.\n     */\n    IndexedDbPersistence.prototype.validOwner = function (dbOwner) {\n        var now = Date.now();\n        var minAcceptable = now - OWNER_LEASE_MAX_AGE_MS;\n        var maxAcceptable = now;\n        if (dbOwner === null) {\n            return false; // no owner.\n        }\n        else if (dbOwner.leaseTimestampMs < minAcceptable) {\n            return false; // owner lease has expired.\n        }\n        else if (dbOwner.leaseTimestampMs > maxAcceptable) {\n            __WEBPACK_IMPORTED_MODULE_2__util_log__[\"c\" /* error */]('Persistence owner-lease is in the future. Discarding.', dbOwner);\n            return false;\n        }\n        else if (dbOwner.ownerId === this.getZombiedOwnerId()) {\n            return false; // owner's tab closed.\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Schedules a recurring timer to update the owner lease timestamp to prevent\n     * other tabs from taking the lease.\n     */\n    IndexedDbPersistence.prototype.scheduleOwnerLeaseRefreshes = function () {\n        var _this = this;\n        // NOTE: This doesn't need to be scheduled on the async queue and doing so\n        // would increase the chances of us not refreshing on time if the queue is\n        // backed up for some reason.\n        this.ownerLeaseRefreshHandle = setInterval(function () {\n            var txResult = _this.runTransaction('Refresh owner timestamp', function (txn) {\n                // NOTE: We don't need to validate the current owner contents, since\n                // runTransaction does that automatically.\n                var store = txn.store(__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"f\" /* DbOwner */].store);\n                return store.put('owner', new __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"f\" /* DbOwner */](_this.ownerId, Date.now()));\n            });\n            txResult.catch(function (reason) {\n                // Probably means we lost the lease. Report the error and stop trying to\n                // refresh the lease.\n                __WEBPACK_IMPORTED_MODULE_2__util_log__[\"c\" /* error */](reason);\n                _this.stopOwnerLeaseRefreshes();\n            });\n        }, OWNER_LEASE_REFRESH_INTERVAL_MS);\n    };\n    IndexedDbPersistence.prototype.stopOwnerLeaseRefreshes = function () {\n        if (this.ownerLeaseRefreshHandle) {\n            clearInterval(this.ownerLeaseRefreshHandle);\n            this.ownerLeaseRefreshHandle = null;\n        }\n    };\n    /**\n     * Attaches a window.unload handler that will synchronously write our\n     * ownerId to a \"zombie owner id\" location in localstorage. This can be used\n     * by tabs trying to acquire the lease to determine that the lease should be\n     * acquired immediately even if the timestamp is recent. This is particularly\n     * important for the refresh case (so the tab correctly re-acquires the owner\n     * lease). LocalStorage is used for this rather than IndexedDb because it is\n     * a synchronous API and so can be used reliably from an unload handler.\n     */\n    IndexedDbPersistence.prototype.attachWindowUnloadHook = function () {\n        var _this = this;\n        this.windowUnloadHandler = function () {\n            // Record that we're zombied.\n            _this.setZombiedOwnerId(_this.ownerId);\n            // Attempt graceful shutdown (including releasing our owner lease), but\n            // there's no guarantee it will complete.\n            _this.shutdown();\n        };\n        window.addEventListener('unload', this.windowUnloadHandler);\n    };\n    IndexedDbPersistence.prototype.detachWindowUnloadHook = function () {\n        if (this.windowUnloadHandler) {\n            window.removeEventListener('unload', this.windowUnloadHandler);\n            this.windowUnloadHandler = null;\n        }\n    };\n    /**\n     * Returns any recorded \"zombied owner\" (i.e. a previous owner that became\n     * zombied due to their tab closing) from LocalStorage, or null if no such\n     * record exists.\n     */\n    IndexedDbPersistence.prototype.getZombiedOwnerId = function () {\n        try {\n            var zombiedOwnerId = window.localStorage.getItem(this.zombiedOwnerLocalStorageKey());\n            __WEBPACK_IMPORTED_MODULE_2__util_log__[\"b\" /* debug */](LOG_TAG, 'Zombied ownerID from LocalStorage:', zombiedOwnerId);\n            return zombiedOwnerId;\n        }\n        catch (e) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            __WEBPACK_IMPORTED_MODULE_2__util_log__[\"c\" /* error */]('Failed to get zombie owner id.', e);\n            return null;\n        }\n    };\n    /**\n     * Records a zombied owner (an owner that had its tab closed) in LocalStorage\n     * or, if passed null, deletes any recorded zombied owner.\n     */\n    IndexedDbPersistence.prototype.setZombiedOwnerId = function (zombieOwnerId) {\n        try {\n            if (zombieOwnerId === null) {\n                window.localStorage.removeItem(this.zombiedOwnerLocalStorageKey());\n            }\n            else {\n                window.localStorage.setItem(this.zombiedOwnerLocalStorageKey(), zombieOwnerId);\n            }\n        }\n        catch (e) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            __WEBPACK_IMPORTED_MODULE_2__util_log__[\"c\" /* error */]('Failed to set zombie owner id.', e);\n        }\n    };\n    IndexedDbPersistence.prototype.zombiedOwnerLocalStorageKey = function () {\n        return this.localStoragePrefix + ZOMBIE_OWNER_LOCALSTORAGE_SUFFIX;\n    };\n    IndexedDbPersistence.prototype.generateOwnerId = function () {\n        // For convenience, just use an AutoId.\n        return __WEBPACK_IMPORTED_MODULE_3__util_misc__[\"a\" /* AutoId */].newId();\n    };\n    /**\n     * The name of the main (and currently only) IndexedDB database. this name is\n     * appended to the prefix provided to the IndexedDbPersistence constructor.\n     */\n    IndexedDbPersistence.MAIN_DATABASE = 'main';\n    return IndexedDbPersistence;\n}());\n\n\n//# sourceMappingURL=indexeddb_persistence.js.map\n\n\n/***/ }),\n/* 289 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return IndexedDbMutationQueue; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_mutation_batch__ = __webpack_require__(144);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_sorted_set__ = __webpack_require__(164);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__encoded_resource_path__ = __webpack_require__(189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__persistence_promise__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__simple_db__ = __webpack_require__(167);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n/** A mutation queue for a specific user, backed by IndexedDB. */\nvar IndexedDbMutationQueue = /** @class */ (function () {\n    function IndexedDbMutationQueue(\n        /**\n         * The normalized userId (e.g. null UID => \"\" userId) used to store /\n         * retrieve mutations.\n         */\n        userId, serializer) {\n        this.userId = userId;\n        this.serializer = serializer;\n        this.garbageCollector = null;\n    }\n    /**\n     * Creates a new mutation queue for the given user.\n     * @param user The user for which to create a mutation queue.\n     * @param serializer The serializer to use when persisting to IndexedDb.\n     */\n    IndexedDbMutationQueue.forUser = function (user, serializer) {\n        // TODO(mcg): Figure out what constraints there are on userIDs\n        // In particular, are there any reserved characters? are empty ids allowed?\n        // For the moment store these together in the same mutations table assuming\n        // that empty userIDs aren't allowed.\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(user.uid !== '', 'UserID must not be an empty string.');\n        var userId = user.isUnauthenticated() ? '' : user.uid;\n        return new IndexedDbMutationQueue(userId, serializer);\n    };\n    IndexedDbMutationQueue.prototype.start = function (transaction) {\n        var _this = this;\n        return IndexedDbMutationQueue.loadNextBatchIdFromDb(transaction)\n            .next(function (nextBatchId) {\n            _this.nextBatchId = nextBatchId;\n            return mutationQueuesStore(transaction).get(_this.userId);\n        })\n            .next(function (metadata) {\n            if (!metadata) {\n                metadata = new __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"d\" /* DbMutationQueue */](_this.userId, __WEBPACK_IMPORTED_MODULE_0__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */], \n                /*lastStreamToken=*/ '');\n            }\n            _this.metadata = metadata;\n            // On restart, nextBatchId may end up lower than\n            // lastAcknowledgedBatchId since it's computed from the queue\n            // contents, and there may be no mutations in the queue. In this\n            // case, we need to reset lastAcknowledgedBatchId (which is safe\n            // since the queue must be empty).\n            if (_this.metadata.lastAcknowledgedBatchId >= _this.nextBatchId) {\n                return _this.checkEmpty(transaction).next(function (empty) {\n                    Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(empty, 'Reset nextBatchID is only possible when the queue is empty');\n                    _this.metadata.lastAcknowledgedBatchId = __WEBPACK_IMPORTED_MODULE_0__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */];\n                    return mutationQueuesStore(transaction).put(_this.metadata);\n                });\n            }\n            else {\n                return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n            }\n        });\n    };\n    /**\n     * Returns one larger than the largest batch ID that has been stored. If there\n     * are no mutations returns 0. Note that batch IDs are global.\n     */\n    IndexedDbMutationQueue.loadNextBatchIdFromDb = function (txn) {\n        var maxBatchId = __WEBPACK_IMPORTED_MODULE_0__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */];\n        return mutationsStore(txn)\n            .iterate({ reverse: true }, function (key, batch, control) {\n            var userId = key[0], batchId = key[1];\n            if (batchId > maxBatchId) {\n                maxBatchId = batch.batchId;\n            }\n            if (userId === '') {\n                // We can't compute a predecessor for the empty string, since it\n                // is lexographically first. That also means that no other\n                // userIds can come before this one, so we can just exit early.\n                control.done();\n            }\n            else {\n                var nextUser = Object(__WEBPACK_IMPORTED_MODULE_2__util_misc__[\"d\" /* immediatePredecessor */])(userId);\n                control.skip([nextUser]);\n            }\n        })\n            .next(function () { return maxBatchId + 1; });\n    };\n    IndexedDbMutationQueue.prototype.checkEmpty = function (transaction) {\n        var empty = true;\n        var range = IDBKeyRange.bound(this.keyForBatchId(Number.NEGATIVE_INFINITY), this.keyForBatchId(Number.POSITIVE_INFINITY));\n        return mutationsStore(transaction)\n            .iterate({ range: range }, function (key, value, control) {\n            empty = false;\n            control.done();\n        })\n            .next(function () { return empty; });\n    };\n    IndexedDbMutationQueue.prototype.getNextBatchId = function (transaction) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.nextBatchId);\n    };\n    IndexedDbMutationQueue.prototype.getHighestAcknowledgedBatchId = function (transaction) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.metadata.lastAcknowledgedBatchId);\n    };\n    IndexedDbMutationQueue.prototype.acknowledgeBatch = function (transaction, batch, streamToken) {\n        var batchId = batch.batchId;\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(batchId > this.metadata.lastAcknowledgedBatchId, 'Mutation batchIDs must be acknowledged in order');\n        this.metadata.lastAcknowledgedBatchId = batchId;\n        this.metadata.lastStreamToken = validateStreamToken(streamToken);\n        return mutationQueuesStore(transaction).put(this.metadata);\n    };\n    IndexedDbMutationQueue.prototype.getLastStreamToken = function (transaction) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.metadata.lastStreamToken);\n    };\n    IndexedDbMutationQueue.prototype.setLastStreamToken = function (transaction, streamToken) {\n        this.metadata.lastStreamToken = validateStreamToken(streamToken);\n        return mutationQueuesStore(transaction).put(this.metadata);\n    };\n    IndexedDbMutationQueue.prototype.addMutationBatch = function (transaction, localWriteTime, mutations) {\n        var _this = this;\n        var batchId = this.nextBatchId;\n        this.nextBatchId++;\n        var batch = new __WEBPACK_IMPORTED_MODULE_0__model_mutation_batch__[\"b\" /* MutationBatch */](batchId, localWriteTime, mutations);\n        var dbBatch = this.serializer.toDbMutationBatch(this.userId, batch);\n        return mutationsStore(transaction)\n            .put(dbBatch)\n            .next(function () {\n            var promises = [];\n            for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n                var mutation = mutations_1[_i];\n                var encodedPath = __WEBPACK_IMPORTED_MODULE_4__encoded_resource_path__[\"b\" /* encode */](mutation.key.path);\n                var indexKey = __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"b\" /* DbDocumentMutation */].key(_this.userId, mutation.key.path, batchId);\n                documentMutationsStore(transaction).put(indexKey, __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"b\" /* DbDocumentMutation */].PLACEHOLDER);\n            }\n            return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises);\n        })\n            .next(function () {\n            return batch;\n        });\n    };\n    IndexedDbMutationQueue.prototype.lookupMutationBatch = function (transaction, batchId) {\n        var _this = this;\n        return mutationsStore(transaction)\n            .get(this.keyForBatchId(batchId))\n            .next(function (dbBatch) {\n            return dbBatch ? _this.serializer.fromDbMutationBatch(dbBatch) : null;\n        });\n    };\n    IndexedDbMutationQueue.prototype.getNextMutationBatchAfterBatchId = function (transaction, batchId) {\n        var _this = this;\n        var range = IDBKeyRange.lowerBound(this.keyForBatchId(batchId + 1));\n        var foundBatch = null;\n        return mutationsStore(transaction)\n            .iterate({ range: range }, function (key, dbBatch, control) {\n            if (dbBatch.userId === _this.userId) {\n                Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(dbBatch.batchId > batchId, 'Should have found mutation after ' + batchId);\n                foundBatch = _this.serializer.fromDbMutationBatch(dbBatch);\n            }\n            control.done();\n        })\n            .next(function () { return foundBatch; });\n    };\n    IndexedDbMutationQueue.prototype.getAllMutationBatches = function (transaction) {\n        var _this = this;\n        var range = IDBKeyRange.bound(this.keyForBatchId(__WEBPACK_IMPORTED_MODULE_0__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */]), this.keyForBatchId(Number.POSITIVE_INFINITY));\n        return mutationsStore(transaction)\n            .loadAll(range)\n            .next(function (dbBatches) {\n            return dbBatches.map(function (dbBatch) { return _this.serializer.fromDbMutationBatch(dbBatch); });\n        });\n    };\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesThroughBatchId = function (transaction, batchId) {\n        var _this = this;\n        var range = IDBKeyRange.bound(this.keyForBatchId(__WEBPACK_IMPORTED_MODULE_0__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */]), this.keyForBatchId(batchId));\n        return mutationsStore(transaction)\n            .loadAll(range)\n            .next(function (dbBatches) {\n            return dbBatches.map(function (dbBatch) { return _this.serializer.fromDbMutationBatch(dbBatch); });\n        });\n    };\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey = function (transaction, documentKey) {\n        var _this = this;\n        // Scan the document-mutation index starting with a prefix starting with\n        // the given documentKey.\n        var indexPrefix = __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"b\" /* DbDocumentMutation */].prefixForPath(this.userId, documentKey.path);\n        var indexStart = IDBKeyRange.lowerBound(indexPrefix);\n        var results = [];\n        return documentMutationsStore(transaction)\n            .iterate({ range: indexStart }, function (indexKey, _, control) {\n            var userID = indexKey[0], encodedPath = indexKey[1], batchID = indexKey[2];\n            // Only consider rows matching exactly the specific key of\n            // interest. Note that because we order by path first, and we\n            // order terminators before path separators, we'll encounter all\n            // the index rows for documentKey contiguously. In particular, all\n            // the rows for documentKey will occur before any rows for\n            // documents nested in a subcollection beneath documentKey so we\n            // can stop as soon as we hit any such row.\n            var path = __WEBPACK_IMPORTED_MODULE_4__encoded_resource_path__[\"a\" /* decode */](encodedPath);\n            if (userID !== _this.userId || !documentKey.path.isEqual(path)) {\n                control.done();\n                return;\n            }\n            var mutationKey = _this.keyForBatchId(batchID);\n            // Look up the mutation batch in the store.\n            // PORTING NOTE: because iteration is callback driven in the web,\n            // we just look up the key instead of keeping an open iterator\n            // like iOS.\n            return mutationsStore(transaction)\n                .get(mutationKey)\n                .next(function (dbBatch) {\n                if (dbBatch === null) {\n                    Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('Dangling document-mutation reference found: ' +\n                        indexKey +\n                        ' which points to ' +\n                        mutationKey);\n                }\n                results.push(_this.serializer.fromDbMutationBatch(dbBatch));\n            });\n        })\n            .next(function () { return results; });\n    };\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingQuery = function (transaction, query) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(!query.isDocumentQuery(), \"Document queries shouldn't go down this path\");\n        var queryPath = query.path;\n        var immediateChildrenLength = queryPath.length + 1;\n        // TODO(mcg): Actually implement a single-collection query\n        //\n        // This is actually executing an ancestor query, traversing the whole\n        // subtree below the collection which can be horrifically inefficient for\n        // some structures. The right way to solve this is to implement the full\n        // value index, but that's not in the cards in the near future so this is\n        // the best we can do for the moment.\n        //\n        // Since we don't yet index the actual properties in the mutations, our\n        // current approach is to just return all mutation batches that affect\n        // documents in the collection being queried.\n        var indexPrefix = __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"b\" /* DbDocumentMutation */].prefixForPath(this.userId, queryPath);\n        var encodedQueryPath = indexPrefix[1];\n        var indexStart = IDBKeyRange.lowerBound(indexPrefix);\n        // Collect up unique batchIDs encountered during a scan of the index. Use a\n        // SortedSet to accumulate batch IDs so they can be traversed in order in a\n        // scan of the main table.\n        var uniqueBatchIDs = new __WEBPACK_IMPORTED_MODULE_3__util_sorted_set__[\"a\" /* SortedSet */](__WEBPACK_IMPORTED_MODULE_2__util_misc__[\"f\" /* primitiveComparator */]);\n        return documentMutationsStore(transaction)\n            .iterate({ range: indexStart }, function (indexKey, _, control) {\n            var userID = indexKey[0], encodedPath = indexKey[1], batchID = indexKey[2];\n            var path = __WEBPACK_IMPORTED_MODULE_4__encoded_resource_path__[\"a\" /* decode */](encodedPath);\n            if (userID !== _this.userId || !queryPath.isPrefixOf(path)) {\n                control.done();\n                return;\n            }\n            // Rows with document keys more than one segment longer than the\n            // query path can't be matches. For example, a query on 'rooms'\n            // can't match the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            if (path.length !== immediateChildrenLength) {\n                return;\n            }\n            uniqueBatchIDs = uniqueBatchIDs.add(batchID);\n        })\n            .next(function () {\n            var results = [];\n            var promises = [];\n            // TODO(rockwood): Implement this using iterate.\n            uniqueBatchIDs.forEach(function (batchID) {\n                var mutationKey = _this.keyForBatchId(batchID);\n                promises.push(mutationsStore(transaction)\n                    .get(mutationKey)\n                    .next(function (mutation) {\n                    if (mutation === null) {\n                        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('Dangling document-mutation reference found, ' +\n                            'which points to ' +\n                            mutationKey);\n                    }\n                    results.push(_this.serializer.fromDbMutationBatch(mutation));\n                }));\n            });\n            return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises).next(function () { return results; });\n        });\n    };\n    IndexedDbMutationQueue.prototype.removeMutationBatches = function (transaction, batches) {\n        var txn = mutationsStore(transaction);\n        var indexTxn = documentMutationsStore(transaction);\n        var promises = [];\n        var _loop_1 = function (batch) {\n            var range = IDBKeyRange.only(this_1.keyForBatchId(batch.batchId));\n            var numDeleted = 0;\n            var removePromise = txn.iterate({ range: range }, function (key, value, control) {\n                numDeleted++;\n                return control.delete();\n            });\n            promises.push(removePromise.next(function () {\n                Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(numDeleted === 1, 'Dangling document-mutation reference found: Missing batch ' +\n                    batch.batchId);\n            }));\n            for (var _i = 0, _a = batch.mutations; _i < _a.length; _i++) {\n                var mutation = _a[_i];\n                var indexKey = __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"b\" /* DbDocumentMutation */].key(this_1.userId, mutation.key.path, batch.batchId);\n                promises.push(indexTxn.delete(indexKey));\n                if (this_1.garbageCollector !== null) {\n                    this_1.garbageCollector.addPotentialGarbageKey(mutation.key);\n                }\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\n            var batch = batches_1[_i];\n            _loop_1(batch);\n        }\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises);\n    };\n    IndexedDbMutationQueue.prototype.performConsistencyCheck = function (txn) {\n        var _this = this;\n        return this.checkEmpty(txn).next(function (empty) {\n            if (!empty) {\n                return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n            }\n            // Verify that there are no entries in the documentMutations index if\n            // the queue is empty.\n            var startRange = IDBKeyRange.lowerBound(__WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"b\" /* DbDocumentMutation */].prefixForUser(_this.userId));\n            var danglingMutationReferences = [];\n            return documentMutationsStore(txn)\n                .iterate({ range: startRange }, function (key, _, control) {\n                var userID = key[0];\n                if (userID !== _this.userId) {\n                    control.done();\n                    return;\n                }\n                else {\n                    var path = __WEBPACK_IMPORTED_MODULE_4__encoded_resource_path__[\"a\" /* decode */](key[1]);\n                    danglingMutationReferences.push(path);\n                }\n            })\n                .next(function () {\n                Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(danglingMutationReferences.length === 0, 'Document leak -- detected dangling mutation references when queue is empty. Dangling keys: ' +\n                    danglingMutationReferences.map(function (p) { return p.canonicalString(); }));\n            });\n        });\n    };\n    IndexedDbMutationQueue.prototype.setGarbageCollector = function (gc) {\n        this.garbageCollector = gc;\n    };\n    IndexedDbMutationQueue.prototype.containsKey = function (txn, key) {\n        var _this = this;\n        var indexKey = __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"b\" /* DbDocumentMutation */].prefixForPath(this.userId, key.path);\n        var encodedPath = indexKey[1];\n        var startRange = IDBKeyRange.lowerBound(indexKey);\n        var containsKey = false;\n        return documentMutationsStore(txn)\n            .iterate({ range: startRange, keysOnly: true }, function (key, _, control) {\n            var userID = key[0], keyPath = key[1], batchID = key[2];\n            if (userID === _this.userId && keyPath === encodedPath) {\n                containsKey = true;\n            }\n            control.done();\n        })\n            .next(function () { return containsKey; });\n    };\n    /**\n     * Creates a [userId, batchId] key for use with the DbMutationQueue object\n     * store.\n     */\n    IndexedDbMutationQueue.prototype.keyForBatchId = function (batchId) {\n        return [this.userId, batchId];\n    };\n    return IndexedDbMutationQueue;\n}());\n\nfunction validateStreamToken(token) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(typeof token === 'string', 'Persisting non-string stream token not supported.');\n    return token;\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutations object store.\n */\nfunction mutationsStore(txn) {\n    return getStore(txn, __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"c\" /* DbMutationBatch */].store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */\nfunction documentMutationsStore(txn) {\n    return getStore(txn, __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"b\" /* DbDocumentMutation */].store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */\nfunction mutationQueuesStore(txn) {\n    return getStore(txn, __WEBPACK_IMPORTED_MODULE_5__indexeddb_schema__[\"d\" /* DbMutationQueue */].store);\n}\n/**\n * Helper to get a typed SimpleDbStore from a transaction.\n */\nfunction getStore(txn, store) {\n    if (txn instanceof __WEBPACK_IMPORTED_MODULE_7__simple_db__[\"b\" /* SimpleDbTransaction */]) {\n        return txn.store(store);\n    }\n    else {\n        return Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('Invalid transaction object provided!');\n    }\n}\n\n//# sourceMappingURL=indexeddb_mutation_queue.js.map\n\n\n/***/ }),\n/* 290 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return IndexedDbQueryCache; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_timestamp__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__encoded_resource_path__ = __webpack_require__(189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__persistence_promise__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__simple_db__ = __webpack_require__(167);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\nvar IndexedDbQueryCache = /** @class */ (function () {\n    function IndexedDbQueryCache(serializer) {\n        this.serializer = serializer;\n        /**\n         * The last received snapshot version. We store this seperately from the\n         * metadata to avoid the extra conversion to/from DbTimestamp.\n         */\n        this.lastRemoteSnapshotVersion = __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN;\n        /**\n         * A cached copy of the metadata for the query cache.\n         */\n        this.metadata = new __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"j\" /* DbTargetGlobal */](\n        /*highestTargetId=*/ 0, \n        /*lastListenSequenceNumber=*/ 0, __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN.toTimestamp());\n        /** The garbage collector to notify about potential garbage keys. */\n        this.garbageCollector = null;\n    }\n    IndexedDbQueryCache.prototype.start = function (transaction) {\n        var _this = this;\n        return globalTargetStore(transaction)\n            .get(__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"j\" /* DbTargetGlobal */].key)\n            .next(function (metadata) {\n            if (metadata !== null) {\n                _this.metadata = metadata;\n                var lastSavedVersion = metadata.lastRemoteSnapshotVersion;\n                _this.lastRemoteSnapshotVersion = __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].fromTimestamp(new __WEBPACK_IMPORTED_MODULE_1__core_timestamp__[\"a\" /* Timestamp */](lastSavedVersion.seconds, lastSavedVersion.nanos));\n            }\n            return __WEBPACK_IMPORTED_MODULE_8__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n        });\n    };\n    IndexedDbQueryCache.prototype.getHighestTargetId = function () {\n        return this.metadata.highestTargetId;\n    };\n    IndexedDbQueryCache.prototype.getLastRemoteSnapshotVersion = function () {\n        return this.lastRemoteSnapshotVersion;\n    };\n    IndexedDbQueryCache.prototype.setLastRemoteSnapshotVersion = function (transaction, snapshotVersion) {\n        this.lastRemoteSnapshotVersion = snapshotVersion;\n        this.metadata.lastRemoteSnapshotVersion = snapshotVersion.toTimestamp();\n        return globalTargetStore(transaction).put(__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"j\" /* DbTargetGlobal */].key, this.metadata);\n    };\n    IndexedDbQueryCache.prototype.addQueryData = function (transaction, queryData) {\n        var _this = this;\n        var targetId = queryData.targetId;\n        var addedQueryPromise = targetsStore(transaction).put(this.serializer.toDbTarget(queryData));\n        if (targetId > this.metadata.highestTargetId) {\n            this.metadata.highestTargetId = targetId;\n            return addedQueryPromise.next(function () {\n                return globalTargetStore(transaction).put(__WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"j\" /* DbTargetGlobal */].key, _this.metadata);\n            });\n        }\n        else {\n            return addedQueryPromise;\n        }\n    };\n    IndexedDbQueryCache.prototype.removeQueryData = function (transaction, queryData) {\n        return this.removeMatchingKeysForTargetId(transaction, queryData.targetId).next(function () {\n            targetsStore(transaction).delete(queryData.targetId);\n        });\n    };\n    IndexedDbQueryCache.prototype.getQueryData = function (transaction, query) {\n        var _this = this;\n        // Iterating by the canonicalId may yield more than one result because\n        // canonicalId values are not required to be unique per target. This query\n        // depends on the queryTargets index to be efficent.\n        var canonicalId = query.canonicalId();\n        var range = IDBKeyRange.bound([canonicalId, Number.NEGATIVE_INFINITY], [canonicalId, Number.POSITIVE_INFINITY]);\n        var result = null;\n        return targetsStore(transaction)\n            .iterate({ range: range, index: __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"h\" /* DbTarget */].queryTargetsIndexName }, function (key, value, control) {\n            var found = _this.serializer.fromDbTarget(value);\n            // After finding a potential match, check that the query is\n            // actually equal to the requested query.\n            if (query.isEqual(found.query)) {\n                result = found;\n                control.done();\n            }\n        })\n            .next(function () { return result; });\n    };\n    IndexedDbQueryCache.prototype.addMatchingKeys = function (txn, keys, targetId) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // Indexeddb.\n        var promises = [];\n        var store = documentTargetStore(txn);\n        keys.forEach(function (key) {\n            var path = __WEBPACK_IMPORTED_MODULE_6__encoded_resource_path__[\"b\" /* encode */](key.path);\n            promises.push(store.put(new __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"i\" /* DbTargetDocument */](targetId, path)));\n        });\n        return __WEBPACK_IMPORTED_MODULE_8__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises);\n    };\n    IndexedDbQueryCache.prototype.removeMatchingKeys = function (txn, keys, targetId) {\n        var _this = this;\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        var promises = [];\n        var store = documentTargetStore(txn);\n        keys.forEach(function (key) {\n            var path = __WEBPACK_IMPORTED_MODULE_6__encoded_resource_path__[\"b\" /* encode */](key.path);\n            promises.push(store.delete([targetId, path]));\n            if (_this.garbageCollector !== null) {\n                _this.garbageCollector.addPotentialGarbageKey(key);\n            }\n        });\n        return __WEBPACK_IMPORTED_MODULE_8__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises);\n    };\n    IndexedDbQueryCache.prototype.removeMatchingKeysForTargetId = function (txn, targetId) {\n        var store = documentTargetStore(txn);\n        var range = IDBKeyRange.bound([targetId], [targetId + 1], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        return this.notifyGCForRemovedKeys(txn, range).next(function () {\n            return store.delete(range);\n        });\n    };\n    IndexedDbQueryCache.prototype.notifyGCForRemovedKeys = function (txn, range) {\n        var _this = this;\n        var store = documentTargetStore(txn);\n        if (this.garbageCollector !== null && this.garbageCollector.isEager) {\n            // In order to generate garbage events properly, we need to read these\n            // keys before deleting.\n            return store.iterate({ range: range, keysOnly: true }, function (key, _, control) {\n                var path = __WEBPACK_IMPORTED_MODULE_6__encoded_resource_path__[\"a\" /* decode */](key[1]);\n                var docKey = new __WEBPACK_IMPORTED_MODULE_3__model_document_key__[\"a\" /* DocumentKey */](path);\n                // Paranoid assertion in case the the collector is set to null\n                // during the iteration.\n                Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(_this.garbageCollector !== null, 'GarbageCollector for query cache set to null during key removal.');\n                _this.garbageCollector.addPotentialGarbageKey(docKey);\n            });\n        }\n        else {\n            return __WEBPACK_IMPORTED_MODULE_8__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n        }\n    };\n    IndexedDbQueryCache.prototype.getMatchingKeysForTargetId = function (txn, targetId) {\n        var promises = [];\n        var range = IDBKeyRange.bound([targetId], [targetId + 1], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        var store = documentTargetStore(txn);\n        var result = Object(__WEBPACK_IMPORTED_MODULE_2__model_collections__[\"a\" /* documentKeySet */])();\n        return store\n            .iterate({ range: range, keysOnly: true }, function (key, _, control) {\n            var path = __WEBPACK_IMPORTED_MODULE_6__encoded_resource_path__[\"a\" /* decode */](key[1]);\n            var docKey = new __WEBPACK_IMPORTED_MODULE_3__model_document_key__[\"a\" /* DocumentKey */](path);\n            result = result.add(docKey);\n        })\n            .next(function () { return result; });\n    };\n    IndexedDbQueryCache.prototype.setGarbageCollector = function (gc) {\n        this.garbageCollector = gc;\n    };\n    IndexedDbQueryCache.prototype.containsKey = function (txn, key) {\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(txn !== null, 'Persistence Transaction cannot be null for query cache containsKey');\n        var path = __WEBPACK_IMPORTED_MODULE_6__encoded_resource_path__[\"b\" /* encode */](key.path);\n        var range = IDBKeyRange.bound([path], [Object(__WEBPACK_IMPORTED_MODULE_5__util_misc__[\"e\" /* immediateSuccessor */])(path)], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        var count = 0;\n        return documentTargetStore(txn)\n            .iterate({\n            index: __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"i\" /* DbTargetDocument */].documentTargetsIndex,\n            keysOnly: true,\n            range: range\n        }, function (key, _, control) {\n            count++;\n            control.done();\n        })\n            .next(function () { return count > 0; });\n    };\n    return IndexedDbQueryCache;\n}());\n\n/**\n * Helper to get a typed SimpleDbStore for the queries object store.\n */\nfunction targetsStore(txn) {\n    return getStore(txn, __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"h\" /* DbTarget */].store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the target globals object store.\n */\nfunction globalTargetStore(txn) {\n    return getStore(txn, __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"j\" /* DbTargetGlobal */].store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the document target object store.\n */\nfunction documentTargetStore(txn) {\n    return getStore(txn, __WEBPACK_IMPORTED_MODULE_7__indexeddb_schema__[\"i\" /* DbTargetDocument */].store);\n}\n/**\n * Helper to get a typed SimpleDbStore from a transaction.\n */\nfunction getStore(txn, store) {\n    if (txn instanceof __WEBPACK_IMPORTED_MODULE_9__simple_db__[\"b\" /* SimpleDbTransaction */]) {\n        return txn.store(store);\n    }\n    else {\n        return Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('Invalid transaction object provided!');\n    }\n}\n\n//# sourceMappingURL=indexeddb_query_cache.js.map\n\n\n/***/ }),\n/* 291 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return IndexedDbRemoteDocumentCache; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__indexeddb_schema__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__simple_db__ = __webpack_require__(167);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nvar IndexedDbRemoteDocumentCache = /** @class */ (function () {\n    function IndexedDbRemoteDocumentCache(serializer) {\n        this.serializer = serializer;\n    }\n    IndexedDbRemoteDocumentCache.prototype.addEntry = function (transaction, maybeDocument) {\n        return remoteDocumentsStore(transaction).put(dbKey(maybeDocument.key), this.serializer.toDbRemoteDocument(maybeDocument));\n    };\n    IndexedDbRemoteDocumentCache.prototype.removeEntry = function (transaction, documentKey) {\n        return remoteDocumentsStore(transaction).delete(dbKey(documentKey));\n    };\n    IndexedDbRemoteDocumentCache.prototype.getEntry = function (transaction, documentKey) {\n        var _this = this;\n        return remoteDocumentsStore(transaction)\n            .get(dbKey(documentKey))\n            .next(function (dbRemoteDoc) {\n            return dbRemoteDoc\n                ? _this.serializer.fromDbRemoteDocument(dbRemoteDoc)\n                : null;\n        });\n    };\n    IndexedDbRemoteDocumentCache.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n        var _this = this;\n        var results = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"b\" /* documentMap */])();\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n        var startKey = query.path.toArray();\n        var range = IDBKeyRange.lowerBound(startKey);\n        return remoteDocumentsStore(transaction)\n            .iterate({ range: range }, function (key, dbRemoteDoc, control) {\n            var maybeDoc = _this.serializer.fromDbRemoteDocument(dbRemoteDoc);\n            if (!query.path.isPrefixOf(maybeDoc.key.path)) {\n                control.done();\n            }\n            else if (maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_1__model_document__[\"a\" /* Document */] && query.matches(maybeDoc)) {\n                results = results.insert(maybeDoc.key, maybeDoc);\n            }\n        })\n            .next(function () { return results; });\n    };\n    return IndexedDbRemoteDocumentCache;\n}());\n\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */\nfunction remoteDocumentsStore(txn) {\n    if (txn instanceof __WEBPACK_IMPORTED_MODULE_4__simple_db__[\"b\" /* SimpleDbTransaction */]) {\n        return txn.store(__WEBPACK_IMPORTED_MODULE_3__indexeddb_schema__[\"g\" /* DbRemoteDocument */].store);\n    }\n    else {\n        return Object(__WEBPACK_IMPORTED_MODULE_2__util_assert__[\"b\" /* fail */])('Invalid transaction object provided!');\n    }\n}\nfunction dbKey(docKey) {\n    return docKey.path.toArray();\n}\n\n//# sourceMappingURL=indexeddb_remote_document_cache.js.map\n\n\n/***/ }),\n/* 292 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LocalSerializer; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_timestamp__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_mutation_batch__ = __webpack_require__(144);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__query_data__ = __webpack_require__(142);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n/** Serializer for values stored in the LocalStore. */\nvar LocalSerializer = /** @class */ (function () {\n    function LocalSerializer(remoteSerializer) {\n        this.remoteSerializer = remoteSerializer;\n    }\n    /** Decodes a remote document from storage locally to a Document. */\n    LocalSerializer.prototype.fromDbRemoteDocument = function (remoteDoc) {\n        if (remoteDoc.document) {\n            return this.remoteSerializer.fromDocument(remoteDoc.document);\n        }\n        else if (remoteDoc.noDocument) {\n            var key = __WEBPACK_IMPORTED_MODULE_3__model_document_key__[\"a\" /* DocumentKey */].fromSegments(remoteDoc.noDocument.path);\n            var readTime = remoteDoc.noDocument.readTime;\n            var timestamp = new __WEBPACK_IMPORTED_MODULE_1__core_timestamp__[\"a\" /* Timestamp */](readTime.seconds, readTime.nanos);\n            return new __WEBPACK_IMPORTED_MODULE_2__model_document__[\"b\" /* NoDocument */](key, __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].fromTimestamp(timestamp));\n        }\n        else {\n            return Object(__WEBPACK_IMPORTED_MODULE_5__util_assert__[\"b\" /* fail */])('Unexpected DbRemoteDocument');\n        }\n    };\n    /** Encodes a document for storage locally. */\n    LocalSerializer.prototype.toDbRemoteDocument = function (maybeDoc) {\n        if (maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_2__model_document__[\"a\" /* Document */]) {\n            var doc = this.remoteSerializer.toDocument(maybeDoc);\n            return new __WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__[\"g\" /* DbRemoteDocument */](null, doc);\n        }\n        else {\n            var path = maybeDoc.key.path.toArray();\n            var timestamp = maybeDoc.version.toTimestamp();\n            var readTime = new __WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__[\"k\" /* DbTimestamp */](timestamp.seconds, timestamp.nanos);\n            return new __WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__[\"g\" /* DbRemoteDocument */](new __WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__[\"e\" /* DbNoDocument */](path, readTime), null);\n        }\n    };\n    /** Encodes a batch of mutations into a DbMutationBatch for local storage. */\n    LocalSerializer.prototype.toDbMutationBatch = function (userId, batch) {\n        var _this = this;\n        var serializedMutations = batch.mutations.map(function (m) {\n            return _this.remoteSerializer.toMutation(m);\n        });\n        return new __WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__[\"c\" /* DbMutationBatch */](userId, batch.batchId, batch.localWriteTime.toEpochMilliseconds(), serializedMutations);\n    };\n    /** Decodes a DbMutationBatch into a MutationBatch */\n    LocalSerializer.prototype.fromDbMutationBatch = function (dbBatch) {\n        var _this = this;\n        var mutations = dbBatch.mutations.map(function (m) {\n            return _this.remoteSerializer.fromMutation(m);\n        });\n        var timestamp = __WEBPACK_IMPORTED_MODULE_1__core_timestamp__[\"a\" /* Timestamp */].fromEpochMilliseconds(dbBatch.localWriteTimeMs);\n        return new __WEBPACK_IMPORTED_MODULE_4__model_mutation_batch__[\"b\" /* MutationBatch */](dbBatch.batchId, timestamp, mutations);\n    };\n    /** Decodes a DbTarget into QueryData */\n    LocalSerializer.prototype.fromDbTarget = function (dbTarget) {\n        var readTime = new __WEBPACK_IMPORTED_MODULE_1__core_timestamp__[\"a\" /* Timestamp */](dbTarget.readTime.seconds, dbTarget.readTime.nanos);\n        var version = __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].fromTimestamp(readTime);\n        var query;\n        if (isDocumentQuery(dbTarget.query)) {\n            query = this.remoteSerializer.fromDocumentsTarget(dbTarget.query);\n        }\n        else {\n            query = this.remoteSerializer.fromQueryTarget(dbTarget.query);\n        }\n        return new __WEBPACK_IMPORTED_MODULE_7__query_data__[\"a\" /* QueryData */](query, dbTarget.targetId, __WEBPACK_IMPORTED_MODULE_7__query_data__[\"b\" /* QueryPurpose */].Listen, version, dbTarget.resumeToken);\n    };\n    /** Encodes QueryData into a DbTarget for storage locally. */\n    LocalSerializer.prototype.toDbTarget = function (queryData) {\n        Object(__WEBPACK_IMPORTED_MODULE_5__util_assert__[\"a\" /* assert */])(__WEBPACK_IMPORTED_MODULE_7__query_data__[\"b\" /* QueryPurpose */].Listen === queryData.purpose, 'Only queries with purpose ' +\n            __WEBPACK_IMPORTED_MODULE_7__query_data__[\"b\" /* QueryPurpose */].Listen +\n            ' may be stored, got ' +\n            queryData.purpose);\n        var timestamp = queryData.snapshotVersion.toTimestamp();\n        var dbTimestamp = new __WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__[\"k\" /* DbTimestamp */](timestamp.seconds, timestamp.nanos);\n        var queryProto;\n        if (queryData.query.isDocumentQuery()) {\n            queryProto = this.remoteSerializer.toDocumentsTarget(queryData.query);\n        }\n        else {\n            queryProto = this.remoteSerializer.toQueryTarget(queryData.query);\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_5__util_assert__[\"a\" /* assert */])(typeof queryData.resumeToken === 'string', 'Persisting non-string resume token not supported.');\n        var resumeToken = queryData.resumeToken;\n        // lastListenSequenceNumber is always 0 until we do real GC.\n        return new __WEBPACK_IMPORTED_MODULE_6__indexeddb_schema__[\"h\" /* DbTarget */](queryData.targetId, queryData.query.canonicalId(), dbTimestamp, resumeToken, 0, queryProto);\n    };\n    return LocalSerializer;\n}());\n\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\nfunction isDocumentQuery(dbQuery) {\n    return dbQuery.documents !== undefined;\n}\n\n//# sourceMappingURL=local_serializer.js.map\n\n\n/***/ }),\n/* 293 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LocalStore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_target_id_generator__ = __webpack_require__(210);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_timestamp__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_mutation_batch__ = __webpack_require__(144);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__remote_remote_event__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_obj__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__local_documents_view__ = __webpack_require__(294);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__persistence_promise__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__query_data__ = __webpack_require__(142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__reference_set__ = __webpack_require__(166);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__remote_document_change_buffer__ = __webpack_require__(295);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LOG_TAG = 'LocalStore';\n/**\n * Local storage in the Firestore client. Coordinates persistence components\n * like the mutation queue and remote document cache to present a\n * latency-compensated view of stored data.\n *\n * The LocalStore is responsible for accepting mutations from the Sync Engine.\n * Writes from the client are put into a queue as provisional Mutations until\n * they are processed by the RemoteStore and confirmed as having been written\n * to the server.\n *\n * The local store provides the local version of documents that have been\n * modified locally. It maintains the constraint:\n *\n *   LocalDocument = RemoteDocument + Active(LocalMutations)\n *\n * (Active mutations are those that are enqueued and have not been previously\n * acknowledged or rejected).\n *\n * The RemoteDocument (\"ground truth\") state is provided via the\n * applyChangeBatch method. It will be some version of a server-provided\n * document OR will be a server-provided document PLUS acknowledged mutations:\n *\n *   RemoteDocument' = RemoteDocument + Acknowledged(LocalMutations)\n *\n * Note that this \"dirty\" version of a RemoteDocument will not be identical to a\n * server base version, since it has LocalMutations added to it pending getting\n * an authoritative copy from the server.\n *\n * Since LocalMutations can be rejected by the server, we have to be able to\n * revert a LocalMutation that has already been applied to the LocalDocument\n * (typically done by replaying all remaining LocalMutations to the\n * RemoteDocument to re-apply).\n *\n * The LocalStore is responsible for the garbage collection of the documents it\n * contains. For now, it every doc referenced by a view, the mutation queue, or\n * the RemoteStore.\n *\n * It also maintains the persistence of mapping queries to resume tokens and\n * target ids. It needs to know this data about queries to properly know what\n * docs it would be allowed to garbage collect.\n *\n * The LocalStore must be able to efficiently execute queries against its local\n * cache of the documents, to provide the initial set of results before any\n * remote changes have been received.\n *\n * Note: In TypeScript, most methods return Promises since the implementation\n * may rely on fetching data from IndexedDB which is async.\n * These Promises will only be rejected on an I/O error or other internal\n * (unexpected) failure (e.g. failed assert) and always represent an\n * unrecoverable error (should be caught / reported by the async_queue).\n */\nvar LocalStore = /** @class */ (function () {\n    function LocalStore(\n        /** Manages our in-memory or durable persistence. */\n        persistence, initialUser, \n        /**\n         * The garbage collector collects documents that should no longer be\n         * cached (e.g. if they are no longer retained by the above reference sets\n         * and the garbage collector is performing eager collection).\n         */\n        garbageCollector) {\n        this.persistence = persistence;\n        this.garbageCollector = garbageCollector;\n        /**\n         * The set of document references maintained by any local views.\n         */\n        this.localViewReferences = new __WEBPACK_IMPORTED_MODULE_12__reference_set__[\"b\" /* ReferenceSet */]();\n        /** Maps a targetID to data about its query. */\n        this.targetIds = {};\n        /** Used to generate targetIDs for queries tracked locally. */\n        this.targetIdGenerator = __WEBPACK_IMPORTED_MODULE_1__core_target_id_generator__[\"a\" /* TargetIdGenerator */].forLocalStore();\n        /**\n         * A heldBatchResult is a mutation batch result (from a write acknowledgement)\n         * that arrived before the watch stream got notified of a snapshot that\n         * includes the write. So we \"hold\" it until the watch stream catches up. It\n         * ensures that the local write remains visible (latency compensation) and\n         * doesn't temporarily appear reverted because the watch stream is slower than\n         * the write stream and so wasn't reflecting it.\n         *\n         * NOTE: Eventually we want to move this functionality into the remote store.\n         */\n        this.heldBatchResults = [];\n        this.mutationQueue = persistence.getMutationQueue(initialUser);\n        this.remoteDocuments = persistence.getRemoteDocumentCache();\n        this.queryCache = persistence.getQueryCache();\n        this.localDocuments = new __WEBPACK_IMPORTED_MODULE_9__local_documents_view__[\"a\" /* LocalDocumentsView */](this.remoteDocuments, this.mutationQueue);\n        this.garbageCollector.addGarbageSource(this.localViewReferences);\n        this.garbageCollector.addGarbageSource(this.queryCache);\n        this.garbageCollector.addGarbageSource(this.mutationQueue);\n    }\n    /** Performs any initial startup actions required by the local store. */\n    LocalStore.prototype.start = function () {\n        var _this = this;\n        return this.persistence.runTransaction('Start LocalStore', function (txn) {\n            return _this.startMutationQueue(txn).next(function () { return _this.startQueryCache(txn); });\n        });\n    };\n    /**\n     * Tells the LocalStore that the currently authenticated user has changed.\n     *\n     * In response the local store switches the mutation queue to the new user and\n     * returns any resulting document changes.\n     */\n    LocalStore.prototype.handleUserChange = function (user) {\n        var _this = this;\n        return this.persistence.runTransaction('Handle user change', function (txn) {\n            // Swap out the mutation queue, grabbing the pending mutation batches\n            // before and after.\n            var oldBatches;\n            return _this.mutationQueue\n                .getAllMutationBatches(txn)\n                .next(function (promisedOldBatches) {\n                oldBatches = promisedOldBatches;\n                _this.garbageCollector.removeGarbageSource(_this.mutationQueue);\n                _this.mutationQueue = _this.persistence.getMutationQueue(user);\n                _this.garbageCollector.addGarbageSource(_this.mutationQueue);\n                return _this.startMutationQueue(txn);\n            })\n                .next(function () {\n                // Recreate our LocalDocumentsView using the new\n                // MutationQueue.\n                _this.localDocuments = new __WEBPACK_IMPORTED_MODULE_9__local_documents_view__[\"a\" /* LocalDocumentsView */](_this.remoteDocuments, _this.mutationQueue);\n                return _this.mutationQueue.getAllMutationBatches(txn);\n            })\n                .next(function (newBatches) {\n                // Union the old/new changed keys.\n                var changedKeys = Object(__WEBPACK_IMPORTED_MODULE_3__model_collections__[\"a\" /* documentKeySet */])();\n                for (var _i = 0, _a = [oldBatches, newBatches]; _i < _a.length; _i++) {\n                    var batches = _a[_i];\n                    for (var _b = 0, batches_1 = batches; _b < batches_1.length; _b++) {\n                        var batch = batches_1[_b];\n                        for (var _c = 0, _d = batch.mutations; _c < _d.length; _c++) {\n                            var mutation = _d[_c];\n                            changedKeys = changedKeys.add(mutation.key);\n                        }\n                    }\n                }\n                // Return the set of all (potentially) changed documents as the\n                // result of the user change.\n                return _this.localDocuments.getDocuments(txn, changedKeys);\n            });\n        });\n    };\n    LocalStore.prototype.startQueryCache = function (txn) {\n        var _this = this;\n        return this.queryCache.start(txn).next(function () {\n            var targetId = _this.queryCache.getHighestTargetId();\n            _this.targetIdGenerator = __WEBPACK_IMPORTED_MODULE_1__core_target_id_generator__[\"a\" /* TargetIdGenerator */].forLocalStore(targetId);\n        });\n    };\n    LocalStore.prototype.startMutationQueue = function (txn) {\n        var _this = this;\n        return this.mutationQueue\n            .start(txn)\n            .next(function () {\n            // If we have any leftover mutation batch results from a prior run,\n            // just drop them.\n            // TODO(http://b/33446471): We probably need to repopulate\n            // heldBatchResults or similar instead, but that is not\n            // straightforward since we're not persisting the write ack versions.\n            _this.heldBatchResults = [];\n            return _this.mutationQueue.getHighestAcknowledgedBatchId(txn);\n        })\n            .next(function (highestAck) {\n            // TODO(mikelehen): This is the only usage of\n            // getAllMutationBatchesThroughBatchId(). Consider removing it in\n            // favor of a getAcknowledgedBatches() method.\n            if (highestAck !== __WEBPACK_IMPORTED_MODULE_4__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */]) {\n                return _this.mutationQueue.getAllMutationBatchesThroughBatchId(txn, highestAck);\n            }\n            else {\n                return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve([]);\n            }\n        })\n            .next(function (ackedBatches) {\n            if (ackedBatches.length > 0) {\n                return _this.mutationQueue.removeMutationBatches(txn, ackedBatches);\n            }\n            else {\n                return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n            }\n        });\n    };\n    /* Accept locally generated Mutations and commit them to storage. */\n    LocalStore.prototype.localWrite = function (mutations) {\n        var _this = this;\n        return this.persistence.runTransaction('Locally write mutations', function (txn) {\n            var batch;\n            var localWriteTime = __WEBPACK_IMPORTED_MODULE_2__core_timestamp__[\"a\" /* Timestamp */].now();\n            return _this.mutationQueue\n                .addMutationBatch(txn, localWriteTime, mutations)\n                .next(function (promisedBatch) {\n                batch = promisedBatch;\n                // TODO(koss): This is doing an N^2 update by replaying ALL the\n                // mutations on each document (instead of just the ones added) in\n                // this batch.\n                var keys = batch.keys();\n                return _this.localDocuments.getDocuments(txn, keys);\n            })\n                .next(function (changedDocuments) {\n                return { batchId: batch.batchId, changes: changedDocuments };\n            });\n        });\n    };\n    /**\n     * Acknowledge the given batch.\n     *\n     * On the happy path when a batch is acknowledged, the local store will\n     *\n     *  + remove the batch from the mutation queue;\n     *  + apply the changes to the remote document cache;\n     *  + recalculate the latency compensated view implied by those changes (there\n     *    may be mutations in the queue that affect the documents but haven't been\n     *    acknowledged yet); and\n     *  + give the changed documents back the sync engine\n     *\n     * @returns The resulting (modified) documents.\n     */\n    LocalStore.prototype.acknowledgeBatch = function (batchResult) {\n        var _this = this;\n        return this.persistence.runTransaction('Acknowledge batch', function (txn) {\n            var affected;\n            return _this.mutationQueue\n                .acknowledgeBatch(txn, batchResult.batch, batchResult.streamToken)\n                .next(function () {\n                if (_this.shouldHoldBatchResult(batchResult.commitVersion)) {\n                    _this.heldBatchResults.push(batchResult);\n                    affected = Object(__WEBPACK_IMPORTED_MODULE_3__model_collections__[\"a\" /* documentKeySet */])();\n                    return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n                }\n                else {\n                    var documentBuffer_1 = new __WEBPACK_IMPORTED_MODULE_13__remote_document_change_buffer__[\"a\" /* RemoteDocumentChangeBuffer */](_this.remoteDocuments);\n                    return _this.releaseBatchResults(txn, [batchResult], documentBuffer_1).next(function (promisedAffectedKeys) {\n                        affected = promisedAffectedKeys;\n                        return documentBuffer_1.apply(txn);\n                    });\n                }\n            })\n                .next(function () {\n                return _this.mutationQueue.performConsistencyCheck(txn);\n            })\n                .next(function () {\n                return _this.localDocuments.getDocuments(txn, affected);\n            });\n        });\n    };\n    /**\n     * Remove mutations from the MutationQueue for the specified batch;\n     * LocalDocuments will be recalculated.\n     *\n     * @returns The resulting modified documents.\n     */\n    LocalStore.prototype.rejectBatch = function (batchId) {\n        var _this = this;\n        return this.persistence.runTransaction('Reject batch', function (txn) {\n            var toReject;\n            var affectedKeys;\n            return _this.mutationQueue\n                .lookupMutationBatch(txn, batchId)\n                .next(function (promisedToReject) {\n                Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"a\" /* assert */])(promisedToReject != null, 'Attempt to reject nonexistent batch!');\n                toReject = promisedToReject;\n                return _this.mutationQueue\n                    .getHighestAcknowledgedBatchId(txn)\n                    .next(function (lastAcked) {\n                    Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"a\" /* assert */])(batchId > lastAcked, \"Acknowledged batches can't be rejected.\");\n                    return toReject;\n                });\n            })\n                .next(function () {\n                return _this.removeMutationBatch(txn, toReject);\n            })\n                .next(function (promisedAffectedKeys) {\n                affectedKeys = promisedAffectedKeys;\n                return _this.mutationQueue.performConsistencyCheck(txn);\n            })\n                .next(function () {\n                return _this.localDocuments.getDocuments(txn, affectedKeys);\n            });\n        });\n    };\n    /** Returns the last recorded stream token for the current user. */\n    LocalStore.prototype.getLastStreamToken = function () {\n        var _this = this;\n        return this.persistence.runTransaction('Get last stream token', function (txn) {\n            return _this.mutationQueue.getLastStreamToken(txn);\n        });\n    };\n    /**\n     * Sets the stream token for the current user without acknowledging any\n     * mutation batch. This is usually only useful after a stream handshake or in\n     * response to an error that requires clearing the stream token.\n     */\n    LocalStore.prototype.setLastStreamToken = function (streamToken) {\n        var _this = this;\n        return this.persistence.runTransaction('Set last stream token', function (txn) {\n            return _this.mutationQueue.setLastStreamToken(txn, streamToken);\n        });\n    };\n    /**\n     * Returns the last consistent snapshot processed (used by the RemoteStore to\n     * determine whether to buffer incoming snapshots from the backend).\n     */\n    LocalStore.prototype.getLastRemoteSnapshotVersion = function () {\n        return this.queryCache.getLastRemoteSnapshotVersion();\n    };\n    /**\n     * Update the \"ground-state\" (remote) documents. We assume that the remote\n     * event reflects any write batches that have been acknowledged or rejected\n     * (i.e. we do not re-apply local mutations to updates from this event).\n     *\n     * LocalDocuments are re-calculated if there are remaining mutations in the\n     * queue.\n     */\n    LocalStore.prototype.applyRemoteEvent = function (remoteEvent) {\n        var _this = this;\n        var documentBuffer = new __WEBPACK_IMPORTED_MODULE_13__remote_document_change_buffer__[\"a\" /* RemoteDocumentChangeBuffer */](this.remoteDocuments);\n        return this.persistence.runTransaction('Apply remote event', function (txn) {\n            var promises = [];\n            __WEBPACK_IMPORTED_MODULE_8__util_obj__[\"d\" /* forEachNumber */](remoteEvent.targetChanges, function (targetId, change) {\n                // Do not ref/unref unassigned targetIds - it may lead to leaks.\n                var queryData = _this.targetIds[targetId];\n                if (!queryData)\n                    return;\n                var mapping = change.mapping;\n                if (mapping) {\n                    // First make sure that all references are deleted\n                    if (mapping instanceof __WEBPACK_IMPORTED_MODULE_5__remote_remote_event__[\"c\" /* ResetMapping */]) {\n                        promises.push(_this.queryCache\n                            .removeMatchingKeysForTargetId(txn, targetId)\n                            .next(function () {\n                            return _this.queryCache.addMatchingKeys(txn, mapping.documents, targetId);\n                        }));\n                    }\n                    else if (mapping instanceof __WEBPACK_IMPORTED_MODULE_5__remote_remote_event__[\"d\" /* UpdateMapping */]) {\n                        promises.push(_this.queryCache\n                            .removeMatchingKeys(txn, mapping.removedDocuments, targetId)\n                            .next(function () {\n                            return _this.queryCache.addMatchingKeys(txn, mapping.addedDocuments, targetId);\n                        }));\n                    }\n                    else {\n                        return Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"b\" /* fail */])('Unknown mapping type: ' + JSON.stringify(mapping));\n                    }\n                }\n                // Update the resume token if the change includes one. Don't clear\n                // any preexisting value.\n                var resumeToken = change.resumeToken;\n                if (resumeToken.length > 0) {\n                    queryData = queryData.update({\n                        resumeToken: resumeToken,\n                        snapshotVersion: change.snapshotVersion\n                    });\n                    _this.targetIds[targetId] = queryData;\n                    promises.push(_this.queryCache.addQueryData(txn, queryData));\n                }\n            });\n            var changedDocKeys = Object(__WEBPACK_IMPORTED_MODULE_3__model_collections__[\"a\" /* documentKeySet */])();\n            remoteEvent.documentUpdates.forEach(function (key, doc) {\n                changedDocKeys = changedDocKeys.add(key);\n                promises.push(documentBuffer.getEntry(txn, key).next(function (existingDoc) {\n                    // Make sure we don't apply an old document version to the remote\n                    // cache, though we make an exception for SnapshotVersion.MIN which\n                    // can happen for manufactured events (e.g. in the case of a limbo\n                    // document resolution failing).\n                    if (existingDoc == null ||\n                        doc.version.isEqual(__WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN) ||\n                        doc.version.compareTo(existingDoc.version) >= 0) {\n                        documentBuffer.addEntry(doc);\n                    }\n                    else {\n                        __WEBPACK_IMPORTED_MODULE_7__util_log__[\"b\" /* debug */](LOG_TAG, 'Ignoring outdated watch update for ', key, '. Current version:', existingDoc.version, ' Watch version:', doc.version);\n                    }\n                    // The document might be garbage because it was unreferenced by\n                    // everything. Make sure to mark it as garbage if it is...\n                    _this.garbageCollector.addPotentialGarbageKey(key);\n                }));\n            });\n            // HACK: The only reason we allow a null snapshot version is so that we\n            // can synthesize remote events when we get permission denied errors while\n            // trying to resolve the state of a locally cached document that is in\n            // limbo.\n            var lastRemoteVersion = _this.queryCache.getLastRemoteSnapshotVersion();\n            var remoteVersion = remoteEvent.snapshotVersion;\n            if (!remoteVersion.isEqual(__WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN)) {\n                Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"a\" /* assert */])(remoteVersion.compareTo(lastRemoteVersion) >= 0, 'Watch stream reverted to previous snapshot?? ' +\n                    remoteVersion +\n                    ' < ' +\n                    lastRemoteVersion);\n                promises.push(_this.queryCache.setLastRemoteSnapshotVersion(txn, remoteVersion));\n            }\n            var releasedWriteKeys;\n            return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises)\n                .next(function () { return _this.releaseHeldBatchResults(txn, documentBuffer); })\n                .next(function (promisedReleasedWriteKeys) {\n                releasedWriteKeys = promisedReleasedWriteKeys;\n                return documentBuffer.apply(txn);\n            })\n                .next(function () {\n                return _this.localDocuments.getDocuments(txn, changedDocKeys.unionWith(releasedWriteKeys));\n            });\n        });\n    };\n    /**\n     * Notify local store of the changed views to locally pin documents.\n     */\n    LocalStore.prototype.notifyLocalViewChanges = function (viewChanges) {\n        var _this = this;\n        return this.persistence.runTransaction('Notify local view changes', function (txn) {\n            var promises = [];\n            var _loop_1 = function (view) {\n                promises.push(_this.queryCache\n                    .getQueryData(txn, view.query)\n                    .next(function (queryData) {\n                    Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"a\" /* assert */])(queryData !== null, 'Local view changes contain unallocated query.');\n                    var targetId = queryData.targetId;\n                    _this.localViewReferences.addReferences(view.addedKeys, targetId);\n                    _this.localViewReferences.removeReferences(view.removedKeys, targetId);\n                }));\n            };\n            for (var _i = 0, viewChanges_1 = viewChanges; _i < viewChanges_1.length; _i++) {\n                var view = viewChanges_1[_i];\n                _loop_1(view);\n            }\n            return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises);\n        });\n    };\n    /**\n     * Gets the mutation batch after the passed in batchId in the mutation queue\n     * or null if empty.\n     * @param afterBatchId If provided, the batch to search after.\n     * @returns The next mutation or null if there wasn't one.\n     */\n    LocalStore.prototype.nextMutationBatch = function (afterBatchId) {\n        var _this = this;\n        return this.persistence.runTransaction('Get next mutation batch', function (txn) {\n            if (afterBatchId === undefined) {\n                afterBatchId = __WEBPACK_IMPORTED_MODULE_4__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */];\n            }\n            return _this.mutationQueue.getNextMutationBatchAfterBatchId(txn, afterBatchId);\n        });\n    };\n    /**\n     * Read the current value of a Document with a given key or null if not\n     * found - used for testing.\n     */\n    LocalStore.prototype.readDocument = function (key) {\n        var _this = this;\n        return this.persistence.runTransaction('read document', function (txn) {\n            return _this.localDocuments.getDocument(txn, key);\n        });\n    };\n    /**\n     * Assigns the given query an internal ID so that its results can be pinned so\n     * they don't get GC'd. A query must be allocated in the local store before\n     * the store can be used to manage its view.\n     */\n    LocalStore.prototype.allocateQuery = function (query) {\n        var _this = this;\n        return this.persistence.runTransaction('Allocate query', function (txn) {\n            var queryData;\n            return _this.queryCache\n                .getQueryData(txn, query)\n                .next(function (cached) {\n                if (cached) {\n                    // This query has been listened to previously, so reuse the\n                    // previous targetID.\n                    // TODO(mcg): freshen last accessed date?\n                    queryData = cached;\n                    return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n                }\n                else {\n                    var targetId = _this.targetIdGenerator.next();\n                    queryData = new __WEBPACK_IMPORTED_MODULE_11__query_data__[\"a\" /* QueryData */](query, targetId, __WEBPACK_IMPORTED_MODULE_11__query_data__[\"b\" /* QueryPurpose */].Listen);\n                    return _this.queryCache.addQueryData(txn, queryData);\n                }\n            })\n                .next(function () {\n                Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"a\" /* assert */])(!_this.targetIds[queryData.targetId], 'Tried to allocate an already allocated query: ' + query);\n                _this.targetIds[queryData.targetId] = queryData;\n                return queryData;\n            });\n        });\n    };\n    /** Unpin all the documents associated with the given query. */\n    LocalStore.prototype.releaseQuery = function (query) {\n        var _this = this;\n        return this.persistence.runTransaction('Release query', function (txn) {\n            return _this.queryCache\n                .getQueryData(txn, query)\n                .next(function (queryData) {\n                Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"a\" /* assert */])(queryData != null, 'Tried to release nonexistent query: ' + query);\n                _this.localViewReferences.removeReferencesForId(queryData.targetId);\n                delete _this.targetIds[queryData.targetId];\n                if (_this.garbageCollector.isEager) {\n                    return _this.queryCache.removeQueryData(txn, queryData);\n                }\n                else {\n                    return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n                }\n            })\n                .next(function () {\n                // If this was the last watch target, then we won't get any more\n                // watch snapshots, so we should release any held batch results.\n                if (__WEBPACK_IMPORTED_MODULE_8__util_obj__[\"e\" /* isEmpty */](_this.targetIds)) {\n                    var documentBuffer_2 = new __WEBPACK_IMPORTED_MODULE_13__remote_document_change_buffer__[\"a\" /* RemoteDocumentChangeBuffer */](_this.remoteDocuments);\n                    return _this.releaseHeldBatchResults(txn, documentBuffer_2).next(function () {\n                        documentBuffer_2.apply(txn);\n                    });\n                }\n                else {\n                    return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n                }\n            });\n        });\n    };\n    /**\n     * Runs the specified query against all the documents in the local store and\n     * returns the results.\n     */\n    LocalStore.prototype.executeQuery = function (query) {\n        var _this = this;\n        return this.persistence.runTransaction('Execute query', function (txn) {\n            return _this.localDocuments.getDocumentsMatchingQuery(txn, query);\n        });\n    };\n    /**\n     * Returns the keys of the documents that are associated with the given\n     * target id in the remote table.\n     */\n    LocalStore.prototype.remoteDocumentKeys = function (targetId) {\n        var _this = this;\n        return this.persistence.runTransaction('Remote document keys', function (txn) {\n            return _this.queryCache.getMatchingKeysForTargetId(txn, targetId);\n        });\n    };\n    /**\n     * Collect garbage if necessary.\n     * Should be called periodically by Sync Engine to recover resources. The\n     * implementation must guarantee that GC won't happen in other places than\n     * this method call.\n     */\n    LocalStore.prototype.collectGarbage = function () {\n        var _this = this;\n        // Call collectGarbage regardless of whether isGCEnabled so the referenceSet\n        // doesn't continue to accumulate the garbage keys.\n        return this.persistence.runTransaction('Garbage collection', function (txn) {\n            return _this.garbageCollector.collectGarbage(txn).next(function (garbage) {\n                var promises = [];\n                garbage.forEach(function (key) {\n                    promises.push(_this.remoteDocuments.removeEntry(txn, key));\n                });\n                return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises);\n            });\n        });\n    };\n    LocalStore.prototype.releaseHeldBatchResults = function (txn, documentBuffer) {\n        var toRelease = [];\n        for (var _i = 0, _a = this.heldBatchResults; _i < _a.length; _i++) {\n            var batchResult = _a[_i];\n            if (!this.isRemoteUpToVersion(batchResult.commitVersion)) {\n                break;\n            }\n            toRelease.push(batchResult);\n        }\n        if (toRelease.length === 0) {\n            return __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve(Object(__WEBPACK_IMPORTED_MODULE_3__model_collections__[\"a\" /* documentKeySet */])());\n        }\n        else {\n            this.heldBatchResults.splice(0, toRelease.length);\n            return this.releaseBatchResults(txn, toRelease, documentBuffer);\n        }\n    };\n    LocalStore.prototype.isRemoteUpToVersion = function (version) {\n        // If there are no watch targets, then we won't get remote snapshots, and\n        // we are always \"up-to-date.\"\n        var lastRemoteVersion = this.queryCache.getLastRemoteSnapshotVersion();\n        return (version.compareTo(lastRemoteVersion) <= 0 ||\n            __WEBPACK_IMPORTED_MODULE_8__util_obj__[\"e\" /* isEmpty */](this.targetIds));\n    };\n    LocalStore.prototype.shouldHoldBatchResult = function (version) {\n        // Check if watcher isn't up to date or prior results are already held.\n        return (!this.isRemoteUpToVersion(version) || this.heldBatchResults.length > 0);\n    };\n    LocalStore.prototype.releaseBatchResults = function (txn, batchResults, documentBuffer) {\n        var _this = this;\n        var promiseChain = __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n        var _loop_2 = function (batchResult) {\n            promiseChain = promiseChain.next(function () {\n                return _this.applyWriteToRemoteDocuments(txn, batchResult, documentBuffer);\n            });\n        };\n        for (var _i = 0, batchResults_1 = batchResults; _i < batchResults_1.length; _i++) {\n            var batchResult = batchResults_1[_i];\n            _loop_2(batchResult);\n        }\n        return promiseChain.next(function () {\n            return _this.removeMutationBatches(txn, batchResults.map(function (result) { return result.batch; }));\n        });\n    };\n    LocalStore.prototype.removeMutationBatch = function (txn, batch) {\n        return this.removeMutationBatches(txn, [batch]);\n    };\n    /** Removes all the mutation batches named in the given array. */\n    LocalStore.prototype.removeMutationBatches = function (txn, batches) {\n        var affectedDocs = Object(__WEBPACK_IMPORTED_MODULE_3__model_collections__[\"a\" /* documentKeySet */])();\n        for (var _i = 0, batches_2 = batches; _i < batches_2.length; _i++) {\n            var batch = batches_2[_i];\n            for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n                var mutation = _b[_a];\n                var key = mutation.key;\n                affectedDocs = affectedDocs.add(key);\n            }\n        }\n        return this.mutationQueue\n            .removeMutationBatches(txn, batches)\n            .next(function () { return affectedDocs; });\n    };\n    LocalStore.prototype.applyWriteToRemoteDocuments = function (txn, batchResult, documentBuffer) {\n        var batch = batchResult.batch;\n        var docKeys = batch.keys();\n        var promiseChain = __WEBPACK_IMPORTED_MODULE_10__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n        docKeys.forEach(function (docKey) {\n            promiseChain = promiseChain\n                .next(function () {\n                return documentBuffer.getEntry(txn, docKey);\n            })\n                .next(function (remoteDoc) {\n                var doc = remoteDoc;\n                var ackVersion = batchResult.docVersions.get(docKey);\n                Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"a\" /* assert */])(ackVersion !== null, 'ackVersions should contain every doc in the write.');\n                if (!doc || doc.version.compareTo(ackVersion) < 0) {\n                    doc = batch.applyToRemoteDocument(docKey, doc, batchResult);\n                    if (!doc) {\n                        Object(__WEBPACK_IMPORTED_MODULE_6__util_assert__[\"a\" /* assert */])(!remoteDoc, 'Mutation batch ' +\n                            batch +\n                            ' applied to document ' +\n                            remoteDoc +\n                            ' resulted in null');\n                    }\n                    else {\n                        documentBuffer.addEntry(doc);\n                    }\n                }\n            });\n        });\n        return promiseChain;\n    };\n    return LocalStore;\n}());\n\n\n//# sourceMappingURL=local_store.js.map\n\n\n/***/ }),\n/* 294 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LocalDocumentsView; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__persistence_promise__ = __webpack_require__(124);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */\nvar LocalDocumentsView = /** @class */ (function () {\n    function LocalDocumentsView(remoteDocumentCache, mutationQueue) {\n        this.remoteDocumentCache = remoteDocumentCache;\n        this.mutationQueue = mutationQueue;\n    }\n    /**\n     * Get the local view of the document identified by `key`.\n     *\n     * @return Local view of the document or null if we don't have any cached\n     * state for it.\n     */\n    LocalDocumentsView.prototype.getDocument = function (transaction, key) {\n        var _this = this;\n        return this.remoteDocumentCache\n            .getEntry(transaction, key)\n            .next(function (remoteDoc) {\n            return _this.computeLocalDocument(transaction, key, remoteDoc);\n        });\n    };\n    /**\n     * Gets the local view of the documents identified by `keys`.\n     *\n     * If we don't have cached state for a document in `keys`, a NoDocument will\n     * be stored for that key in the resulting set.\n     */\n    LocalDocumentsView.prototype.getDocuments = function (transaction, keys) {\n        var _this = this;\n        var promises = [];\n        var results = Object(__WEBPACK_IMPORTED_MODULE_1__model_collections__[\"d\" /* maybeDocumentMap */])();\n        keys.forEach(function (key) {\n            promises.push(_this.getDocument(transaction, key).next(function (maybeDoc) {\n                // TODO(http://b/32275378): Don't conflate missing / deleted.\n                if (!maybeDoc) {\n                    maybeDoc = new __WEBPACK_IMPORTED_MODULE_2__model_document__[\"b\" /* NoDocument */](key, __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].forDeletedDoc());\n                }\n                results = results.insert(key, maybeDoc);\n            }));\n        });\n        return __WEBPACK_IMPORTED_MODULE_5__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises).next(function () { return results; });\n    };\n    /** Performs a query against the local view of all documents. */\n    LocalDocumentsView.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n        if (__WEBPACK_IMPORTED_MODULE_3__model_document_key__[\"a\" /* DocumentKey */].isDocumentKey(query.path)) {\n            return this.getDocumentsMatchingDocumentQuery(transaction, query.path);\n        }\n        else {\n            return this.getDocumentsMatchingCollectionQuery(transaction, query);\n        }\n    };\n    LocalDocumentsView.prototype.getDocumentsMatchingDocumentQuery = function (transaction, docPath) {\n        // Just do a simple document lookup.\n        return this.getDocument(transaction, new __WEBPACK_IMPORTED_MODULE_3__model_document_key__[\"a\" /* DocumentKey */](docPath)).next(function (maybeDoc) {\n            var result = Object(__WEBPACK_IMPORTED_MODULE_1__model_collections__[\"b\" /* documentMap */])();\n            if (maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_2__model_document__[\"a\" /* Document */]) {\n                result = result.insert(maybeDoc.key, maybeDoc);\n            }\n            return result;\n        });\n    };\n    LocalDocumentsView.prototype.getDocumentsMatchingCollectionQuery = function (transaction, query) {\n        var _this = this;\n        // Query the remote documents and overlay mutations.\n        // TODO(mikelehen): There may be significant overlap between the mutations\n        // affecting these remote documents and the\n        // getAllMutationBatchesAffectingQuery() mutations. Consider optimizing.\n        var results;\n        return this.remoteDocumentCache\n            .getDocumentsMatchingQuery(transaction, query)\n            .next(function (queryResults) {\n            return _this.computeLocalDocuments(transaction, queryResults);\n        })\n            .next(function (promisedResults) {\n            results = promisedResults;\n            // Now use the mutation queue to discover any other documents that may\n            // match the query after applying mutations.\n            return _this.mutationQueue.getAllMutationBatchesAffectingQuery(transaction, query);\n        })\n            .next(function (matchingMutationBatches) {\n            var matchingKeys = Object(__WEBPACK_IMPORTED_MODULE_1__model_collections__[\"a\" /* documentKeySet */])();\n            for (var _i = 0, matchingMutationBatches_1 = matchingMutationBatches; _i < matchingMutationBatches_1.length; _i++) {\n                var batch = matchingMutationBatches_1[_i];\n                for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n                    var mutation = _b[_a];\n                    // TODO(mikelehen): PERF: Check if this mutation actually\n                    // affects the query to reduce work.\n                    if (!results.get(mutation.key)) {\n                        matchingKeys = matchingKeys.add(mutation.key);\n                    }\n                }\n            }\n            // Now add in the results for the matchingKeys.\n            var promises = [];\n            matchingKeys.forEach(function (key) {\n                promises.push(_this.getDocument(transaction, key).next(function (doc) {\n                    if (doc instanceof __WEBPACK_IMPORTED_MODULE_2__model_document__[\"a\" /* Document */]) {\n                        results = results.insert(doc.key, doc);\n                    }\n                }));\n            });\n            return __WEBPACK_IMPORTED_MODULE_5__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises);\n        })\n            .next(function () {\n            // Finally, filter out any documents that don't actually match\n            // the query.\n            results.forEach(function (key, doc) {\n                if (!query.matches(doc)) {\n                    results = results.remove(key);\n                }\n            });\n            return results;\n        });\n    };\n    /**\n     * Takes a remote document and applies local mutations to generate the local\n     * view of the document.\n     * @param transaction The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey The key of the document (necessary when remoteDocument\n     *     is null).\n     * @param document The base remote document to apply mutations to or null.\n     */\n    LocalDocumentsView.prototype.computeLocalDocument = function (transaction, documentKey, document) {\n        return this.mutationQueue\n            .getAllMutationBatchesAffectingDocumentKey(transaction, documentKey)\n            .next(function (batches) {\n            for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\n                var batch = batches_1[_i];\n                document = batch.applyToLocalView(documentKey, document);\n            }\n            return document;\n        });\n    };\n    /**\n     * Takes a set of remote documents and applies local mutations to generate the\n     * local view of the documents.\n     * @param transaction The transaction in which to perform any persistence\n     *     operations.\n     * @param documents The base remote documents to apply mutations to.\n     * @return The local view of the documents.\n     */\n    LocalDocumentsView.prototype.computeLocalDocuments = function (transaction, documents) {\n        var _this = this;\n        var promises = [];\n        documents.forEach(function (key, doc) {\n            promises.push(_this.computeLocalDocument(transaction, key, doc).next(function (mutatedDoc) {\n                if (mutatedDoc instanceof __WEBPACK_IMPORTED_MODULE_2__model_document__[\"a\" /* Document */]) {\n                    documents = documents.insert(mutatedDoc.key, mutatedDoc);\n                }\n                else if (mutatedDoc instanceof __WEBPACK_IMPORTED_MODULE_2__model_document__[\"b\" /* NoDocument */]) {\n                    documents = documents.remove(mutatedDoc.key);\n                }\n                else {\n                    Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('Unknown MaybeDocument: ' + mutatedDoc);\n                }\n            }));\n        });\n        return __WEBPACK_IMPORTED_MODULE_5__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises).next(function () { return documents; });\n    };\n    return LocalDocumentsView;\n}());\n\n\n//# sourceMappingURL=local_documents_view.js.map\n\n\n/***/ }),\n/* 295 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RemoteDocumentChangeBuffer; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__persistence_promise__ = __webpack_require__(124);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * NOTE: This class was introduced in iOS to work around a limitation in\n * LevelDB. Given IndexedDb has full transaction support with\n * read-your-own-writes capability, this class is not technically needed, but\n * has been preserved as a convenience and to aid portability.\n */\nvar RemoteDocumentChangeBuffer = /** @class */ (function () {\n    function RemoteDocumentChangeBuffer(remoteDocumentCache) {\n        this.remoteDocumentCache = remoteDocumentCache;\n        this.changes = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"d\" /* maybeDocumentMap */])();\n    }\n    /** Buffers a `RemoteDocumentCache.addEntry()` call. */\n    RemoteDocumentChangeBuffer.prototype.addEntry = function (maybeDocument) {\n        var changes = this.assertChanges();\n        this.changes = changes.insert(maybeDocument.key, maybeDocument);\n    };\n    // NOTE: removeEntry() is not presently necessary and so is omitted.\n    /**\n     * Looks up an entry in the cache. The buffered changes will first be checked,\n     * and if no buffered change applies, this will forward to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey The key of the entry to look up.\n     * @return The cached Document or NoDocument entry, or null if we have nothing\n     * cached.\n     */\n    RemoteDocumentChangeBuffer.prototype.getEntry = function (transaction, documentKey) {\n        var changes = this.assertChanges();\n        var bufferedEntry = changes.get(documentKey);\n        if (bufferedEntry) {\n            return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve(bufferedEntry);\n        }\n        else {\n            return this.remoteDocumentCache.getEntry(transaction, documentKey);\n        }\n    };\n    /**\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\n     * the provided transaction.\n     */\n    RemoteDocumentChangeBuffer.prototype.apply = function (transaction) {\n        var _this = this;\n        var changes = this.assertChanges();\n        var promises = [];\n        changes.forEach(function (key, maybeDoc) {\n            promises.push(_this.remoteDocumentCache.addEntry(transaction, maybeDoc));\n        });\n        // We should not be used to buffer any more changes.\n        this.changes = null;\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].waitFor(promises);\n    };\n    /** Helper to assert this.changes is not null and return it. */\n    RemoteDocumentChangeBuffer.prototype.assertChanges = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(this.changes !== null, 'Changes have already been applied.');\n        return this.changes;\n    };\n    return RemoteDocumentChangeBuffer;\n}());\n\n\n//# sourceMappingURL=remote_document_change_buffer.js.map\n\n\n/***/ }),\n/* 296 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MemoryPersistence; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__memory_mutation_queue__ = __webpack_require__(297);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__memory_query_cache__ = __webpack_require__(298);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__memory_remote_document_cache__ = __webpack_require__(299);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nvar LOG_TAG = 'MemoryPersistence';\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\nvar MemoryPersistence = /** @class */ (function () {\n    function MemoryPersistence() {\n        /**\n         * Note that these are retained here to make it easier to write tests\n         * affecting both the in-memory and IndexedDB-backed persistence layers. Tests\n         * can create a new LocalStore wrapping this Persistence instance and this\n         * will make the in-memory persistence layer behave as if it were actually\n         * persisting values.\n         */\n        this.mutationQueues = {};\n        this.remoteDocumentCache = new __WEBPACK_IMPORTED_MODULE_4__memory_remote_document_cache__[\"a\" /* MemoryRemoteDocumentCache */]();\n        this.queryCache = new __WEBPACK_IMPORTED_MODULE_3__memory_query_cache__[\"a\" /* MemoryQueryCache */]();\n        this.started = false;\n    }\n    MemoryPersistence.prototype.start = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.started, 'MemoryPersistence double-started!');\n        this.started = true;\n        // No durable state to read on startup.\n        return Promise.resolve();\n    };\n    MemoryPersistence.prototype.shutdown = function () {\n        // No durable state to ensure is closed on shutdown.\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.started, 'MemoryPersistence shutdown without start!');\n        this.started = false;\n        return Promise.resolve();\n    };\n    MemoryPersistence.prototype.getMutationQueue = function (user) {\n        var queue = this.mutationQueues[user.toKey()];\n        if (!queue) {\n            queue = new __WEBPACK_IMPORTED_MODULE_2__memory_mutation_queue__[\"a\" /* MemoryMutationQueue */]();\n            this.mutationQueues[user.toKey()] = queue;\n        }\n        return queue;\n    };\n    MemoryPersistence.prototype.getQueryCache = function () {\n        return this.queryCache;\n    };\n    MemoryPersistence.prototype.getRemoteDocumentCache = function () {\n        return this.remoteDocumentCache;\n    };\n    MemoryPersistence.prototype.runTransaction = function (action, operation) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_log__[\"b\" /* debug */])(LOG_TAG, 'Starting transaction:', action);\n        return operation(new MemoryPersistenceTransaction()).toPromise();\n    };\n    return MemoryPersistence;\n}());\n\n/** Dummy class since memory persistence doesn't actually use transactions. */\nvar MemoryPersistenceTransaction = /** @class */ (function () {\n    function MemoryPersistenceTransaction() {\n    }\n    return MemoryPersistenceTransaction;\n}());\n\n//# sourceMappingURL=memory_persistence.js.map\n\n\n/***/ }),\n/* 297 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MemoryMutationQueue; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_mutation_batch__ = __webpack_require__(144);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__platform_platform__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_sorted_set__ = __webpack_require__(164);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__persistence_promise__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__reference_set__ = __webpack_require__(166);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\nvar MemoryMutationQueue = /** @class */ (function () {\n    function MemoryMutationQueue() {\n        /**\n         * The set of all mutations that have been sent but not yet been applied to\n         * the backend.\n         */\n        this.mutationQueue = [];\n        /** Next value to use when assigning sequential IDs to each mutation batch. */\n        this.nextBatchId = 1;\n        /** The highest acknowledged mutation in the queue. */\n        this.highestAcknowledgedBatchId = __WEBPACK_IMPORTED_MODULE_1__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */];\n        /** The last received stream token from the server, used to acknowledge which\n         * responses the client has processed. Stream tokens are opaque checkpoint\n         * markers whose only real value is their inclusion in the next request.\n         */\n        this.lastStreamToken = Object(__WEBPACK_IMPORTED_MODULE_2__platform_platform__[\"b\" /* emptyByteString */])();\n        /** The garbage collector to notify about potential garbage keys. */\n        this.garbageCollector = null;\n        /** An ordered mapping between documents and the mutations batch IDs. */\n        this.batchesByDocumentKey = new __WEBPACK_IMPORTED_MODULE_5__util_sorted_set__[\"a\" /* SortedSet */](__WEBPACK_IMPORTED_MODULE_7__reference_set__[\"a\" /* DocReference */].compareByKey);\n    }\n    MemoryMutationQueue.prototype.start = function (transaction) {\n        // NOTE: The queue may be shutdown / started multiple times, since we\n        // maintain the queue for the duration of the app session in case a user\n        // logs out / back in. To behave like the LevelDB-backed MutationQueue (and\n        // accommodate tests that expect as much), we reset nextBatchId and\n        // highestAcknowledgedBatchId if the queue is empty.\n        if (this.mutationQueue.length === 0) {\n            this.nextBatchId = 1;\n            this.highestAcknowledgedBatchId = __WEBPACK_IMPORTED_MODULE_1__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */];\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(this.highestAcknowledgedBatchId < this.nextBatchId, 'highestAcknowledgedBatchId must be less than the nextBatchId');\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryMutationQueue.prototype.checkEmpty = function (transaction) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.mutationQueue.length === 0);\n    };\n    MemoryMutationQueue.prototype.getNextBatchId = function (transaction) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.nextBatchId);\n    };\n    MemoryMutationQueue.prototype.getHighestAcknowledgedBatchId = function (transaction) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.highestAcknowledgedBatchId);\n    };\n    MemoryMutationQueue.prototype.acknowledgeBatch = function (transaction, batch, streamToken) {\n        var batchId = batch.batchId;\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(batchId > this.highestAcknowledgedBatchId, 'Mutation batchIDs must be acknowledged in order');\n        var batchIndex = this.indexOfExistingBatchId(batchId, 'acknowledged');\n        // Verify that the batch in the queue is the one to be acknowledged.\n        var check = this.mutationQueue[batchIndex];\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(batchId === check.batchId, 'Queue ordering failure: expected batch ' +\n            batchId +\n            ', got batch ' +\n            check.batchId);\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(!check.isTombstone(), \"Can't acknowledge a previously removed batch\");\n        this.highestAcknowledgedBatchId = batchId;\n        this.lastStreamToken = streamToken;\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryMutationQueue.prototype.getLastStreamToken = function (transaction) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.lastStreamToken);\n    };\n    MemoryMutationQueue.prototype.setLastStreamToken = function (transaction, streamToken) {\n        this.lastStreamToken = streamToken;\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryMutationQueue.prototype.addMutationBatch = function (transaction, localWriteTime, mutations) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(mutations.length !== 0, 'Mutation batches should not be empty');\n        var batchId = this.nextBatchId;\n        this.nextBatchId++;\n        if (this.mutationQueue.length > 0) {\n            var prior = this.mutationQueue[this.mutationQueue.length - 1];\n            Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(prior.batchId < batchId, 'Mutation batchIDs must be monotonically increasing order');\n        }\n        var batch = new __WEBPACK_IMPORTED_MODULE_1__model_mutation_batch__[\"b\" /* MutationBatch */](batchId, localWriteTime, mutations);\n        this.mutationQueue.push(batch);\n        // Track references by document key.\n        for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n            var mutation = mutations_1[_i];\n            this.batchesByDocumentKey = this.batchesByDocumentKey.add(new __WEBPACK_IMPORTED_MODULE_7__reference_set__[\"a\" /* DocReference */](mutation.key, batchId));\n        }\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(batch);\n    };\n    MemoryMutationQueue.prototype.lookupMutationBatch = function (transaction, batchId) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.findMutationBatch(batchId));\n    };\n    MemoryMutationQueue.prototype.getNextMutationBatchAfterBatchId = function (transaction, batchId) {\n        var size = this.mutationQueue.length;\n        // All batches with batchId <= this.highestAcknowledgedBatchId have been\n        // acknowledged so the first unacknowledged batch after batchID will have a\n        // batchID larger than both of these values.\n        batchId = Math.max(batchId + 1, this.highestAcknowledgedBatchId);\n        // The requested batchId may still be out of range so normalize it to the\n        // start of the queue.\n        var rawIndex = this.indexOfBatchId(batchId);\n        var index = rawIndex < 0 ? 0 : rawIndex;\n        // Finally return the first non-tombstone batch.\n        for (; index < size; index++) {\n            var batch = this.mutationQueue[index];\n            if (!batch.isTombstone()) {\n                return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(batch);\n            }\n        }\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(null);\n    };\n    MemoryMutationQueue.prototype.getAllMutationBatches = function (transaction) {\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.getAllLiveMutationBatchesBeforeIndex(this.mutationQueue.length));\n    };\n    MemoryMutationQueue.prototype.getAllMutationBatchesThroughBatchId = function (transaction, batchId) {\n        var count = this.mutationQueue.length;\n        var endIndex = this.indexOfBatchId(batchId);\n        if (endIndex < 0) {\n            endIndex = 0;\n        }\n        else if (endIndex >= count) {\n            endIndex = count;\n        }\n        else {\n            // The endIndex is in the queue so increment to pull everything in the\n            // queue including it.\n            endIndex++;\n        }\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.getAllLiveMutationBatchesBeforeIndex(endIndex));\n    };\n    MemoryMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey = function (transaction, documentKey) {\n        var _this = this;\n        var start = new __WEBPACK_IMPORTED_MODULE_7__reference_set__[\"a\" /* DocReference */](documentKey, 0);\n        var end = new __WEBPACK_IMPORTED_MODULE_7__reference_set__[\"a\" /* DocReference */](documentKey, Number.POSITIVE_INFINITY);\n        var result = [];\n        this.batchesByDocumentKey.forEachInRange([start, end], function (ref) {\n            Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(documentKey.isEqual(ref.key), \"Should only iterate over a single key's batches\");\n            var batch = _this.findMutationBatch(ref.targetOrBatchId);\n            Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(batch !== null, 'Batches in the index must exist in the main table');\n            result.push(batch);\n        });\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(result);\n    };\n    MemoryMutationQueue.prototype.getAllMutationBatchesAffectingQuery = function (transaction, query) {\n        var _this = this;\n        // Use the query path as a prefix for testing if a document matches the\n        // query.\n        var prefix = query.path;\n        var immediateChildrenPathLength = prefix.length + 1;\n        // Construct a document reference for actually scanning the index. Unlike\n        // the prefix the document key in this reference must have an even number of\n        // segments. The empty segment can be used a suffix of the query path\n        // because it precedes all other segments in an ordered traversal.\n        var startPath = prefix;\n        if (!__WEBPACK_IMPORTED_MODULE_0__model_document_key__[\"a\" /* DocumentKey */].isDocumentKey(startPath)) {\n            startPath = startPath.child('');\n        }\n        var start = new __WEBPACK_IMPORTED_MODULE_7__reference_set__[\"a\" /* DocReference */](new __WEBPACK_IMPORTED_MODULE_0__model_document_key__[\"a\" /* DocumentKey */](startPath), 0);\n        // Find unique batchIDs referenced by all documents potentially matching the\n        // query.\n        var uniqueBatchIDs = new __WEBPACK_IMPORTED_MODULE_5__util_sorted_set__[\"a\" /* SortedSet */](__WEBPACK_IMPORTED_MODULE_4__util_misc__[\"f\" /* primitiveComparator */]);\n        this.batchesByDocumentKey.forEachWhile(function (ref) {\n            var rowKeyPath = ref.key.path;\n            if (!prefix.isPrefixOf(rowKeyPath)) {\n                return false;\n            }\n            else {\n                // Rows with document keys more than one segment longer than the query\n                // path can't be matches. For example, a query on 'rooms' can't match\n                // the document /rooms/abc/messages/xyx.\n                // TODO(mcg): we'll need a different scanner when we implement\n                // ancestor queries.\n                if (rowKeyPath.length === immediateChildrenPathLength) {\n                    uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n                }\n                return true;\n            }\n        }, start);\n        // Construct an array of matching batches, sorted by batchID to ensure that\n        // multiple mutations affecting the same document key are applied in order.\n        var result = [];\n        uniqueBatchIDs.forEach(function (batchId) {\n            var batch = _this.findMutationBatch(batchId);\n            if (batch !== null) {\n                result.push(batch);\n            }\n        });\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(result);\n    };\n    MemoryMutationQueue.prototype.removeMutationBatches = function (transaction, batches) {\n        var batchCount = batches.length;\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(batchCount > 0, 'Should not remove mutations when none exist.');\n        var firstBatchId = batches[0].batchId;\n        var queueCount = this.mutationQueue.length;\n        // Find the position of the first batch for removal. This need not be the\n        // first entry in the queue.\n        var startIndex = this.indexOfExistingBatchId(firstBatchId, 'removed');\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(this.mutationQueue[startIndex].batchId === firstBatchId, 'Removed batches must exist in the queue');\n        // Check that removed batches are contiguous (while excluding tombstones).\n        var batchIndex = 1;\n        var queueIndex = startIndex + 1;\n        while (batchIndex < batchCount && queueIndex < queueCount) {\n            var batch = this.mutationQueue[queueIndex];\n            if (batch.isTombstone()) {\n                queueIndex++;\n                continue;\n            }\n            Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(batch.batchId === batches[batchIndex].batchId, 'Removed batches must be contiguous in the queue');\n            batchIndex++;\n            queueIndex++;\n        }\n        // Only actually remove batches if removing at the front of the queue.\n        // Previously rejected batches may have left tombstones in the queue, so\n        // expand the removal range to include any tombstones.\n        if (startIndex === 0) {\n            for (; queueIndex < queueCount; queueIndex++) {\n                var batch = this.mutationQueue[queueIndex];\n                if (!batch.isTombstone()) {\n                    break;\n                }\n            }\n            var length_1 = queueIndex - startIndex;\n            this.mutationQueue.splice(startIndex, length_1);\n        }\n        else {\n            // Mark the tombstones\n            for (var i = startIndex; i < queueIndex; i++) {\n                this.mutationQueue[i] = this.mutationQueue[i].toTombstone();\n            }\n        }\n        var references = this.batchesByDocumentKey;\n        for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\n            var batch = batches_1[_i];\n            var batchId = batch.batchId;\n            for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n                var mutation = _b[_a];\n                var key = mutation.key;\n                if (this.garbageCollector !== null) {\n                    this.garbageCollector.addPotentialGarbageKey(key);\n                }\n                var ref = new __WEBPACK_IMPORTED_MODULE_7__reference_set__[\"a\" /* DocReference */](key, batchId);\n                references = references.delete(ref);\n            }\n        }\n        this.batchesByDocumentKey = references;\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryMutationQueue.prototype.setGarbageCollector = function (garbageCollector) {\n        this.garbageCollector = garbageCollector;\n    };\n    MemoryMutationQueue.prototype.containsKey = function (txn, key) {\n        var ref = new __WEBPACK_IMPORTED_MODULE_7__reference_set__[\"a\" /* DocReference */](key, 0);\n        var firstRef = this.batchesByDocumentKey.firstAfterOrEqual(ref);\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve(key.isEqual(firstRef && firstRef.key));\n    };\n    MemoryMutationQueue.prototype.performConsistencyCheck = function (txn) {\n        if (this.mutationQueue.length === 0) {\n            Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(this.batchesByDocumentKey.isEmpty(), 'Document leak -- detected dangling mutation references when queue is empty.');\n        }\n        return __WEBPACK_IMPORTED_MODULE_6__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    /**\n     * A private helper that collects all the mutations batches in the queue up to\n     * but not including the given endIndex. All tombstones in the queue are\n     * excluded.\n     */\n    MemoryMutationQueue.prototype.getAllLiveMutationBatchesBeforeIndex = function (endIndex) {\n        var result = [];\n        for (var i = 0; i < endIndex; i++) {\n            var batch = this.mutationQueue[i];\n            if (!batch.isTombstone()) {\n                result.push(batch);\n            }\n        }\n        return result;\n    };\n    /**\n     * Finds the index of the given batchId in the mutation queue and asserts that\n     * the resulting index is within the bounds of the queue.\n     *\n     * @param batchId The batchId to search for\n     * @param action A description of what the caller is doing, phrased in passive\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n     */\n    MemoryMutationQueue.prototype.indexOfExistingBatchId = function (batchId, action) {\n        var index = this.indexOfBatchId(batchId);\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(index >= 0 && index < this.mutationQueue.length, 'Batches must exist to be ' + action);\n        return index;\n    };\n    /**\n     * Finds the index of the given batchId in the mutation queue. This operation\n     * is O(1).\n     *\n     * @return The computed index of the batch with the given batchId, based on\n     * the state of the queue. Note this index can be negative if the requested\n     * batchId has already been remvoed from the queue or past the end of the\n     * queue if the batchId is larger than the last added batch.\n     */\n    MemoryMutationQueue.prototype.indexOfBatchId = function (batchId) {\n        if (this.mutationQueue.length === 0) {\n            // As an index this is past the end of the queue\n            return 0;\n        }\n        // Examine the front of the queue to figure out the difference between the\n        // batchId and indexes in the array. Note that since the queue is ordered\n        // by batchId, if the first batch has a larger batchId then the requested\n        // batchId doesn't exist in the queue.\n        var firstBatchId = this.mutationQueue[0].batchId;\n        return batchId - firstBatchId;\n    };\n    /**\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\n     * other functions that uses this code easier to read and more efficent.\n     */\n    MemoryMutationQueue.prototype.findMutationBatch = function (batchId) {\n        var index = this.indexOfBatchId(batchId);\n        if (index < 0 || index >= this.mutationQueue.length) {\n            return null;\n        }\n        var batch = this.mutationQueue[index];\n        Object(__WEBPACK_IMPORTED_MODULE_3__util_assert__[\"a\" /* assert */])(batch.batchId === batchId, 'If found batch must match');\n        return batch.isTombstone() ? null : batch;\n    };\n    return MemoryMutationQueue;\n}());\n\n\n//# sourceMappingURL=memory_mutation_queue.js.map\n\n\n/***/ }),\n/* 298 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MemoryQueryCache; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_obj_map__ = __webpack_require__(188);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__persistence_promise__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__reference_set__ = __webpack_require__(166);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar MemoryQueryCache = /** @class */ (function () {\n    function MemoryQueryCache() {\n        /**\n         * Maps a query to the data about that query\n         */\n        this.queries = new __WEBPACK_IMPORTED_MODULE_1__util_obj_map__[\"a\" /* ObjectMap */](function (q) { return q.canonicalId(); });\n        /** The last received snapshot version. */\n        this.lastRemoteSnapshotVersion = __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN;\n        /** The highest numbered target ID encountered. */\n        this.highestTargetId = 0;\n        /**\n         * A ordered bidirectional mapping between documents and the remote target\n         * IDs.\n         */\n        this.references = new __WEBPACK_IMPORTED_MODULE_3__reference_set__[\"b\" /* ReferenceSet */]();\n    }\n    MemoryQueryCache.prototype.start = function (transaction) {\n        // Nothing to do.\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryQueryCache.prototype.getLastRemoteSnapshotVersion = function () {\n        return this.lastRemoteSnapshotVersion;\n    };\n    MemoryQueryCache.prototype.getHighestTargetId = function () {\n        return this.highestTargetId;\n    };\n    MemoryQueryCache.prototype.setLastRemoteSnapshotVersion = function (transaction, snapshotVersion) {\n        this.lastRemoteSnapshotVersion = snapshotVersion;\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryQueryCache.prototype.addQueryData = function (transaction, queryData) {\n        this.queries.set(queryData.query, queryData);\n        var targetId = queryData.targetId;\n        if (targetId > this.highestTargetId) {\n            this.highestTargetId = targetId;\n        }\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryQueryCache.prototype.removeQueryData = function (transaction, queryData) {\n        this.queries.delete(queryData.query);\n        this.references.removeReferencesForId(queryData.targetId);\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryQueryCache.prototype.getQueryData = function (transaction, query) {\n        var queryData = this.queries.get(query) || null;\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve(queryData);\n    };\n    MemoryQueryCache.prototype.addMatchingKeys = function (txn, keys, targetId) {\n        this.references.addReferences(keys, targetId);\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryQueryCache.prototype.removeMatchingKeys = function (txn, keys, targetId) {\n        this.references.removeReferences(keys, targetId);\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryQueryCache.prototype.removeMatchingKeysForTargetId = function (txn, targetId) {\n        this.references.removeReferencesForId(targetId);\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryQueryCache.prototype.getMatchingKeysForTargetId = function (txn, targetId) {\n        var matchingKeys = this.references.referencesForId(targetId);\n        return __WEBPACK_IMPORTED_MODULE_2__persistence_promise__[\"a\" /* PersistencePromise */].resolve(matchingKeys);\n    };\n    MemoryQueryCache.prototype.setGarbageCollector = function (gc) {\n        this.references.setGarbageCollector(gc);\n    };\n    MemoryQueryCache.prototype.containsKey = function (txn, key) {\n        return this.references.containsKey(txn, key);\n    };\n    return MemoryQueryCache;\n}());\n\n\n//# sourceMappingURL=memory_query_cache.js.map\n\n\n/***/ }),\n/* 299 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MemoryRemoteDocumentCache; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__persistence_promise__ = __webpack_require__(124);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar MemoryRemoteDocumentCache = /** @class */ (function () {\n    function MemoryRemoteDocumentCache() {\n        this.docs = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"d\" /* maybeDocumentMap */])();\n    }\n    MemoryRemoteDocumentCache.prototype.addEntry = function (transaction, maybeDocument) {\n        this.docs = this.docs.insert(maybeDocument.key, maybeDocument);\n        return __WEBPACK_IMPORTED_MODULE_3__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryRemoteDocumentCache.prototype.removeEntry = function (transaction, documentKey) {\n        this.docs = this.docs.remove(documentKey);\n        return __WEBPACK_IMPORTED_MODULE_3__persistence_promise__[\"a\" /* PersistencePromise */].resolve();\n    };\n    MemoryRemoteDocumentCache.prototype.getEntry = function (transaction, documentKey) {\n        return __WEBPACK_IMPORTED_MODULE_3__persistence_promise__[\"a\" /* PersistencePromise */].resolve(this.docs.get(documentKey));\n    };\n    MemoryRemoteDocumentCache.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n        var results = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"b\" /* documentMap */])();\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n        var prefix = new __WEBPACK_IMPORTED_MODULE_2__model_document_key__[\"a\" /* DocumentKey */](query.path.child(''));\n        var iterator = this.docs.getIteratorFrom(prefix);\n        while (iterator.hasNext()) {\n            var _a = iterator.getNext(), key = _a.key, maybeDoc = _a.value;\n            if (!query.path.isPrefixOf(key.path)) {\n                break;\n            }\n            if (maybeDoc instanceof __WEBPACK_IMPORTED_MODULE_1__model_document__[\"a\" /* Document */] && query.matches(maybeDoc)) {\n                results = results.insert(maybeDoc.key, maybeDoc);\n            }\n        }\n        return __WEBPACK_IMPORTED_MODULE_3__persistence_promise__[\"a\" /* PersistencePromise */].resolve(results);\n    };\n    return MemoryRemoteDocumentCache;\n}());\n\n\n//# sourceMappingURL=memory_remote_document_cache.js.map\n\n\n/***/ }),\n/* 300 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NoOpGarbageCollector; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__persistence_promise__ = __webpack_require__(124);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * A garbage collector implementation that does absolutely nothing. It ignores\n * all addGarbageSource and addPotentialGarbageKey messages and and never\n * produces any garbage.\n */\nvar NoOpGarbageCollector = /** @class */ (function () {\n    function NoOpGarbageCollector() {\n        this.isEager = false;\n    }\n    NoOpGarbageCollector.prototype.addGarbageSource = function (garbageSource) {\n        // Not tracking garbage so don't track sources.\n    };\n    NoOpGarbageCollector.prototype.removeGarbageSource = function (garbageSource) {\n        // Not tracking garbage so don't track sources.\n    };\n    NoOpGarbageCollector.prototype.addPotentialGarbageKey = function (key) {\n        // Not tracking garbage so ignore.\n    };\n    NoOpGarbageCollector.prototype.collectGarbage = function (txn) {\n        return __WEBPACK_IMPORTED_MODULE_1__persistence_promise__[\"a\" /* PersistencePromise */].resolve(Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"a\" /* documentKeySet */])());\n    };\n    return NoOpGarbageCollector;\n}());\n\n\n//# sourceMappingURL=no_op_garbage_collector.js.map\n\n\n/***/ }),\n/* 301 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Datastore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__persistent_stream__ = __webpack_require__(302);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Datastore is a wrapper around the external Google Cloud Datastore grpc API,\n * which provides an interface that is more convenient for the rest of the\n * client SDK architecture to consume.\n */\nvar Datastore = /** @class */ (function () {\n    function Datastore(databaseInfo, queue, connection, credentials, serializer, initialBackoffDelay) {\n        this.databaseInfo = databaseInfo;\n        this.queue = queue;\n        this.connection = connection;\n        this.credentials = credentials;\n        this.serializer = serializer;\n        this.initialBackoffDelay = initialBackoffDelay;\n    }\n    Datastore.prototype.newPersistentWriteStream = function () {\n        return new __WEBPACK_IMPORTED_MODULE_2__persistent_stream__[\"b\" /* PersistentWriteStream */](this.databaseInfo, this.queue, this.connection, this.credentials, this.serializer, this.initialBackoffDelay);\n    };\n    Datastore.prototype.newPersistentWatchStream = function () {\n        return new __WEBPACK_IMPORTED_MODULE_2__persistent_stream__[\"a\" /* PersistentListenStream */](this.databaseInfo, this.queue, this.connection, this.credentials, this.serializer, this.initialBackoffDelay);\n    };\n    Datastore.prototype.commit = function (mutations) {\n        var _this = this;\n        var params = {\n            database: this.serializer.encodedDatabaseId,\n            writes: mutations.map(function (m) { return _this.serializer.toMutation(m); })\n        };\n        return this.invokeRPC('Commit', params).then(function (response) {\n            return _this.serializer.fromWriteResults(response.writeResults);\n        });\n    };\n    Datastore.prototype.lookup = function (keys) {\n        var _this = this;\n        var params = {\n            database: this.serializer.encodedDatabaseId,\n            documents: keys.map(function (k) { return _this.serializer.toName(k); })\n        };\n        return this.invokeStreamingRPC('BatchGetDocuments', params).then(function (response) {\n            var docs = Object(__WEBPACK_IMPORTED_MODULE_0__model_collections__[\"d\" /* maybeDocumentMap */])();\n            response.forEach(function (proto) {\n                var doc = _this.serializer.fromMaybeDocument(proto);\n                docs = docs.insert(doc.key, doc);\n            });\n            var result = [];\n            keys.forEach(function (key) {\n                var doc = docs.get(key);\n                Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(!!doc, 'Missing entity in write response for ' + key);\n                result.push(doc);\n            });\n            return result;\n        });\n    };\n    /** Gets an auth token and invokes the provided RPC. */\n    Datastore.prototype.invokeRPC = function (rpcName, request) {\n        var _this = this;\n        // TODO(mikelehen): Retry (with backoff) on token failures?\n        return this.credentials.getToken(/*forceRefresh=*/ false).then(function (token) {\n            return _this.connection.invokeRPC(rpcName, request, token);\n        });\n    };\n    /** Gets an auth token and invokes the provided RPC with streamed results. */\n    Datastore.prototype.invokeStreamingRPC = function (rpcName, request) {\n        var _this = this;\n        // TODO(mikelehen): Retry (with backoff) on token failures?\n        return this.credentials.getToken(/*forceRefresh=*/ false).then(function (token) {\n            return _this.connection.invokeStreamingRPC(rpcName, request, token);\n        });\n    };\n    return Datastore;\n}());\n\n\n//# sourceMappingURL=datastore.js.map\n\n\n/***/ }),\n/* 302 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export PersistentStream */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PersistentListenStream; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PersistentWriteStream; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__backoff__ = __webpack_require__(303);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_types__ = __webpack_require__(141);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar LOG_TAG = 'PersistentStream';\nvar PersistentStreamState;\n(function (PersistentStreamState) {\n    /**\n     * The streaming RPC is not running and there's no error condition.\n     * Calling `start` will start the stream immediately without backoff.\n     * While in this state isStarted will return false.\n     */\n    PersistentStreamState[PersistentStreamState[\"Initial\"] = 0] = \"Initial\";\n    /**\n     * The stream is starting, and is waiting for an auth token to attach to\n     * the initial request. While in this state, isStarted will return\n     * true but isOpen will return false.\n     */\n    PersistentStreamState[PersistentStreamState[\"Auth\"] = 1] = \"Auth\";\n    /**\n     * The streaming RPC is up and running. Requests and responses can flow\n     * freely. Both isStarted and isOpen will return true.\n     */\n    PersistentStreamState[PersistentStreamState[\"Open\"] = 2] = \"Open\";\n    /**\n     * The stream encountered an error. The next start attempt will back off.\n     * While in this state isStarted() will return false.\n     *\n     */\n    PersistentStreamState[PersistentStreamState[\"Error\"] = 3] = \"Error\";\n    /**\n     * An in-between state after an error where the stream is waiting before\n     * re-starting. After\n     * waiting is complete, the stream will try to open. While in this\n     * state isStarted() will return YES but isOpen will return false.\n     */\n    PersistentStreamState[PersistentStreamState[\"Backoff\"] = 4] = \"Backoff\";\n    /**\n     * The stream has been explicitly stopped; no further events will be emitted.\n     */\n    PersistentStreamState[PersistentStreamState[\"Stopped\"] = 5] = \"Stopped\";\n})(PersistentStreamState || (PersistentStreamState = {}));\n/**\n * Initial backoff time in milliseconds after an error.\n * Set to 1s according to https://cloud.google.com/apis/design/errors.\n */\nvar BACKOFF_INITIAL_DELAY_MS = 1000;\n/** Maximum backoff time in milliseconds */\nvar BACKOFF_MAX_DELAY_MS = 60 * 1000;\nvar BACKOFF_FACTOR = 1.5;\n/** The time a stream stays open after it is marked idle. */\nvar IDLE_TIMEOUT_MS = 60 * 1000;\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be `start`ed before messages can\n * be sent and received. The PersistentStream will call the onOpen function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a `start` fail, PersistentStream will call the registered\n * onClose with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\nvar PersistentStream = /** @class */ (function () {\n    function PersistentStream(queue, connection, credentialsProvider, \n        // Used for faster retries in testing\n        initialBackoffDelay) {\n        this.queue = queue;\n        this.connection = connection;\n        this.credentialsProvider = credentialsProvider;\n        this.idle = false;\n        this.stream = null;\n        this.listener = null;\n        this.backoff = new __WEBPACK_IMPORTED_MODULE_3__backoff__[\"a\" /* ExponentialBackoff */](initialBackoffDelay ? initialBackoffDelay : BACKOFF_INITIAL_DELAY_MS, BACKOFF_FACTOR, BACKOFF_MAX_DELAY_MS);\n        this.state = PersistentStreamState.Initial;\n    }\n    /**\n     * Returns true if `start` has been called and no error has occurred. True\n     * indicates the stream is open or in the process of opening (which\n     * encompasses respecting backoff, getting auth tokens, and starting the\n     * actual RPC). Use `isOpen` to determine if the stream is open and ready for\n     * outbound requests.\n     */\n    PersistentStream.prototype.isStarted = function () {\n        return (this.state === PersistentStreamState.Backoff ||\n            this.state === PersistentStreamState.Auth ||\n            this.state === PersistentStreamState.Open);\n    };\n    /**\n     * Returns true if the underlying RPC is open (the openHandler has been\n     * called) and the stream is ready for outbound requests.\n     */\n    PersistentStream.prototype.isOpen = function () {\n        return this.state === PersistentStreamState.Open;\n    };\n    /**\n     * Starts the RPC. Only allowed if isStarted returns false. The stream is\n     * not immediately ready for use: onOpen will be invoked when the RPC is ready\n     * for outbound requests, at which point isOpen will return true.\n     *\n     *  When start returns, isStarted will return true.\n     */\n    PersistentStream.prototype.start = function (listener) {\n        if (this.state === PersistentStreamState.Error) {\n            this.performBackoff(listener);\n            return;\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.state === PersistentStreamState.Initial, 'Already started');\n        this.listener = listener;\n        this.auth();\n    };\n    /**\n     * Stops the RPC. This call is idempotent and allowed regardless of the\n     * current isStarted state.\n     *\n     * When stop returns, isStarted and isOpen will both return false.\n     */\n    PersistentStream.prototype.stop = function () {\n        if (this.isStarted()) {\n            this.close(PersistentStreamState.Stopped);\n        }\n    };\n    /**\n     * After an error the stream will usually back off on the next attempt to\n     * start it. If the error warrants an immediate restart of the stream, the\n     * sender can use this to indicate that the receiver should not back off.\n     *\n     * Each error will call the onClose function. That function can decide to\n     * inhibit backoff if required.\n     */\n    PersistentStream.prototype.inhibitBackoff = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.isStarted(), 'Can only inhibit backoff in a stopped state');\n        this.state = PersistentStreamState.Initial;\n        this.backoff.reset();\n    };\n    /**\n     * Initializes the idle timer. If no write takes place within one minute, the\n     * WebChannel stream will be closed.\n     */\n    PersistentStream.prototype.markIdle = function () {\n        var _this = this;\n        this.idle = true;\n        this.queue\n            .schedule(function () {\n            return _this.handleIdleCloseTimer();\n        }, IDLE_TIMEOUT_MS)\n            .catch(function (err) {\n            // When the AsyncQueue gets drained during testing, pending Promises\n            // (including these idle checks) will get rejected. We special-case\n            // these cancelled idle checks to make sure that these specific Promise\n            // rejections are not considered unhandled.\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(err.code === __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].CANCELLED, \"Received unexpected error in idle timeout closure. Expected CANCELLED, but was: \" + err);\n        });\n    };\n    /** Sends a message to the underlying stream. */\n    PersistentStream.prototype.sendRequest = function (msg) {\n        this.cancelIdleCheck();\n        this.stream.send(msg);\n    };\n    /** Called by the idle timer when the stream should close due to inactivity. */\n    PersistentStream.prototype.handleIdleCloseTimer = function () {\n        if (this.isOpen() && this.idle) {\n            // When timing out an idle stream there's no reason to force the stream into backoff when\n            // it restarts so set the stream state to Initial instead of Error.\n            return this.close(PersistentStreamState.Initial);\n        }\n        return Promise.resolve();\n    };\n    /** Marks the stream as active again. */\n    PersistentStream.prototype.cancelIdleCheck = function () {\n        this.idle = false;\n    };\n    /**\n     * Closes the stream and cleans up as necessary:\n     *\n     * * closes the underlying GRPC stream;\n     * * calls the onClose handler with the given 'error';\n     * * sets internal stream state to 'finalState';\n     * * adjusts the backoff timer based on the error\n     *\n     * A new stream can be opened by calling `start` unless `finalState` is set to\n     * `PersistentStreamState.Stopped`.\n     *\n     * @param finalState the intended state of the stream after closing.\n     * @param error the error the connection was closed with.\n     */\n    PersistentStream.prototype.close = function (finalState, error) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(finalState === PersistentStreamState.Error || Object(__WEBPACK_IMPORTED_MODULE_4__util_types__[\"a\" /* isNullOrUndefined */])(error), \"Can't provide an error when not in an error state.\");\n        this.cancelIdleCheck();\n        if (finalState !== PersistentStreamState.Error) {\n            // If this is an intentional close ensure we don't delay our next connection attempt.\n            this.backoff.reset();\n        }\n        else if (error && error.code === __WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].RESOURCE_EXHAUSTED) {\n            // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n            __WEBPACK_IMPORTED_MODULE_2__util_log__[\"c\" /* error */](error.toString());\n            __WEBPACK_IMPORTED_MODULE_2__util_log__[\"c\" /* error */]('Using maximum backoff delay to prevent overloading the backend.');\n            this.backoff.resetToMax();\n        }\n        // Clean up the underlying stream because we are no longer interested in events.\n        if (this.stream !== null) {\n            this.tearDown();\n            this.stream.close();\n            this.stream = null;\n        }\n        // This state must be assigned before calling onClose() to allow the callback to\n        // inhibit backoff or otherwise manipulate the state in its non-started state.\n        this.state = finalState;\n        var listener = this.listener;\n        // Clear the listener to avoid bleeding of events from the underlying streams.\n        this.listener = null;\n        // If the caller explicitly requested a stream stop, don't notify them of a closing stream (it\n        // could trigger undesirable recovery logic, etc.).\n        if (finalState !== PersistentStreamState.Stopped) {\n            return listener.onClose(error);\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    /**\n     * Can be overridden to perform additional cleanup before the stream is closed.\n     * Calling super.tearDown() is not required.\n     */\n    PersistentStream.prototype.tearDown = function () { };\n    PersistentStream.prototype.auth = function () {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.state === PersistentStreamState.Initial, 'Must be in initial state to auth');\n        this.state = PersistentStreamState.Auth;\n        this.credentialsProvider.getToken(/*forceRefresh=*/ false).then(function (token) {\n            // Normally we'd have to schedule the callback on the AsyncQueue.\n            // However, the following calls are safe to be called outside the\n            // AsyncQueue since they don't chain asynchronous calls\n            _this.startStream(token);\n        }, function (error) {\n            _this.queue.schedule(function () {\n                if (_this.state !== PersistentStreamState.Stopped) {\n                    // Stream can be stopped while waiting for authorization.\n                    var rpcError = new __WEBPACK_IMPORTED_MODULE_1__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_1__util_error__[\"a\" /* Code */].UNKNOWN, 'Fetching auth token failed: ' + error.message);\n                    return _this.handleStreamClose(rpcError);\n                }\n                else {\n                    return Promise.resolve();\n                }\n            });\n        });\n    };\n    PersistentStream.prototype.startStream = function (token) {\n        var _this = this;\n        if (this.state === PersistentStreamState.Stopped) {\n            // Stream can be stopped while waiting for authorization.\n            return;\n        }\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.state === PersistentStreamState.Auth, 'Trying to start stream in a non-auth state');\n        // Helper function to dispatch to AsyncQueue and make sure that any\n        // close will seem instantaneous and events are prevented from being\n        // raised after the close call\n        var dispatchIfStillActive = function (stream, fn) {\n            _this.queue.schedule(function () {\n                // Only raise events if the stream instance has not changed\n                if (_this.stream === stream) {\n                    return fn();\n                }\n                else {\n                    return Promise.resolve();\n                }\n            });\n        };\n        // Only start stream if listener has not changed\n        if (this.listener !== null) {\n            var currentStream_1 = this.startRpc(token);\n            this.stream = currentStream_1;\n            this.stream.onOpen(function () {\n                dispatchIfStillActive(currentStream_1, function () {\n                    Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(_this.state === PersistentStreamState.Auth, 'Expected stream to be in state auth, but was ' + _this.state);\n                    _this.state = PersistentStreamState.Open;\n                    return _this.listener.onOpen();\n                });\n            });\n            this.stream.onClose(function (error) {\n                dispatchIfStillActive(currentStream_1, function () {\n                    return _this.handleStreamClose(error);\n                });\n            });\n            this.stream.onMessage(function (msg) {\n                dispatchIfStillActive(currentStream_1, function () {\n                    return _this.onMessage(msg);\n                });\n            });\n        }\n    };\n    PersistentStream.prototype.performBackoff = function (listener) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.state === PersistentStreamState.Error, 'Should only perform backoff in an error case');\n        this.state = PersistentStreamState.Backoff;\n        this.backoff.backoffAndWait().then(function () {\n            // Backoff does not run on the AsyncQueue, so we need to reschedule to\n            // make sure the queue blocks\n            _this.queue.schedule(function () {\n                if (_this.state === PersistentStreamState.Stopped) {\n                    // Stream can be stopped while waiting for backoff to complete.\n                    return Promise.resolve();\n                }\n                _this.state = PersistentStreamState.Initial;\n                _this.start(listener);\n                Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(_this.isStarted(), 'PersistentStream should have started');\n                return Promise.resolve();\n            });\n        });\n    };\n    PersistentStream.prototype.handleStreamClose = function (error) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.isStarted(), \"Can't handle server close on non-started stream\");\n        __WEBPACK_IMPORTED_MODULE_2__util_log__[\"b\" /* debug */](LOG_TAG, \"close with error: \" + error);\n        this.stream = null;\n        // In theory the stream could close cleanly, however, in our current model\n        // we never expect this to happen because if we stop a stream ourselves,\n        // this callback will never be called. To prevent cases where we retry\n        // without a backoff accidentally, we set the stream to error in all cases.\n        return this.close(PersistentStreamState.Error, error);\n    };\n    return PersistentStream;\n}());\n\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the openHandler, any number of listen and\n * unlisten calls calls can be sent to control what changes will be sent from\n * the server for ListenResponses.\n */\nvar PersistentListenStream = /** @class */ (function (_super) {\n    __extends(PersistentListenStream, _super);\n    function PersistentListenStream(databaseInfo, queue, connection, credentials, serializer, initialBackoffDelay) {\n        var _this = _super.call(this, queue, connection, credentials, initialBackoffDelay) || this;\n        _this.databaseInfo = databaseInfo;\n        _this.serializer = serializer;\n        return _this;\n    }\n    PersistentListenStream.prototype.startRpc = function (token) {\n        return this.connection.openStream('Listen', token);\n    };\n    PersistentListenStream.prototype.onMessage = function (watchChangeProto) {\n        // A successful response means the stream is healthy\n        this.backoff.reset();\n        var watchChange = this.serializer.fromWatchChange(watchChangeProto);\n        var snapshot = this.serializer.versionFromListenResponse(watchChangeProto);\n        return this.listener.onWatchChange(watchChange, snapshot);\n    };\n    /**\n     * Registers interest in the results of the given query. If the query\n     * includes a resumeToken it will be included in the request. Results that\n     * affect the query will be streamed back as WatchChange messages that\n     * reference the targetId.\n     */\n    PersistentListenStream.prototype.watch = function (queryData) {\n        var request = {};\n        request.database = this.serializer.encodedDatabaseId;\n        request.addTarget = this.serializer.toTarget(queryData);\n        var labels = this.serializer.toListenRequestLabels(queryData);\n        if (labels) {\n            request.labels = labels;\n        }\n        this.sendRequest(request);\n    };\n    /**\n     * Unregisters interest in the results of the query associated with the\n     * given targetId.\n     */\n    PersistentListenStream.prototype.unwatch = function (targetId) {\n        var request = {};\n        request.database = this.serializer.encodedDatabaseId;\n        request.removeTarget = targetId;\n        this.sendRequest(request);\n    };\n    return PersistentListenStream;\n}(PersistentStream));\n\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */\nvar PersistentWriteStream = /** @class */ (function (_super) {\n    __extends(PersistentWriteStream, _super);\n    function PersistentWriteStream(databaseInfo, queue, connection, credentials, serializer, initialBackoffDelay) {\n        var _this = _super.call(this, queue, connection, credentials, initialBackoffDelay) || this;\n        _this.databaseInfo = databaseInfo;\n        _this.serializer = serializer;\n        _this.handshakeComplete_ = false;\n        return _this;\n    }\n    Object.defineProperty(PersistentWriteStream.prototype, \"handshakeComplete\", {\n        /**\n         * Tracks whether or not a handshake has been successfully exchanged and\n         * the stream is ready to accept mutations.\n         */\n        get: function () {\n            return this.handshakeComplete_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Override of PersistentStream.start\n    PersistentWriteStream.prototype.start = function (listener) {\n        this.handshakeComplete_ = false;\n        _super.prototype.start.call(this, listener);\n    };\n    PersistentWriteStream.prototype.tearDown = function () {\n        if (this.handshakeComplete_) {\n            this.writeMutations([]);\n        }\n    };\n    PersistentWriteStream.prototype.startRpc = function (token) {\n        return this.connection.openStream('Write', token);\n    };\n    PersistentWriteStream.prototype.onMessage = function (responseProto) {\n        // Always capture the last stream token.\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!!responseProto.streamToken, 'Got a write response without a stream token');\n        this.lastStreamToken = responseProto.streamToken;\n        if (!this.handshakeComplete_) {\n            // The first response is always the handshake response\n            Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!responseProto.writeResults || responseProto.writeResults.length === 0, 'Got mutation results for handshake');\n            this.handshakeComplete_ = true;\n            return this.listener.onHandshakeComplete();\n        }\n        else {\n            // A successful first write response means the stream is healthy,\n            // Note, that we could consider a successful handshake healthy, however,\n            // the write itself might be causing an error we want to back off from.\n            this.backoff.reset();\n            var results = this.serializer.fromWriteResults(responseProto.writeResults);\n            var commitVersion = this.serializer.fromVersion(responseProto.commitTime);\n            return this.listener.onMutationResult(commitVersion, results);\n        }\n    };\n    /**\n     * Sends an initial streamToken to the server, performing the handshake\n     * required to make the StreamingWrite RPC work. Subsequent\n     * calls should wait until onHandshakeComplete was called.\n     */\n    PersistentWriteStream.prototype.writeHandshake = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.isOpen(), 'Writing handshake requires an opened stream');\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(!this.handshakeComplete_, 'Handshake already completed');\n        // TODO(dimond): Support stream resumption. We intentionally do not set the\n        // stream token on the handshake, ignoring any stream token we might have.\n        var request = {};\n        request.database = this.serializer.encodedDatabaseId;\n        this.sendRequest(request);\n    };\n    /** Sends a group of mutations to the Firestore backend to apply. */\n    PersistentWriteStream.prototype.writeMutations = function (mutations) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.isOpen(), 'Writing mutations requires an opened stream');\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.handshakeComplete_, 'Handshake must be complete before writing mutations');\n        Object(__WEBPACK_IMPORTED_MODULE_0__util_assert__[\"a\" /* assert */])(this.lastStreamToken.length > 0, 'Trying to write mutation without a token');\n        var request = {\n            // Protos are typed with string, but we support UInt8Array on Node\n            // tslint:disable-next-line:no-any\n            streamToken: this.lastStreamToken,\n            writes: mutations.map(function (mutation) { return _this.serializer.toMutation(mutation); })\n        };\n        this.sendRequest(request);\n    };\n    return PersistentWriteStream;\n}(PersistentStream));\n\n\n//# sourceMappingURL=persistent_stream.js.map\n\n\n/***/ }),\n/* 303 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ExponentialBackoff; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_promise__ = __webpack_require__(190);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar LOG_TAG = 'ExponentialBackoff';\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nvar ExponentialBackoff = /** @class */ (function () {\n    function ExponentialBackoff(\n        /**\n         * The initial delay (used as the base delay on the first retry attempt).\n         * Note that jitter will still be applied, so the actual delay could be as\n         * little as 0.5*initialDelayMs.\n         */\n        initialDelayMs, \n        /**\n         * The multiplier to use to determine the extended base delay after each\n         * attempt.\n         */\n        backoffFactor, \n        /**\n         * The maximum base delay after which no further backoff is performed.\n         * Note that jitter will still be applied, so the actual delay could be as\n         * much as 1.5*maxDelayMs.\n         */\n        maxDelayMs) {\n        this.initialDelayMs = initialDelayMs;\n        this.backoffFactor = backoffFactor;\n        this.maxDelayMs = maxDelayMs;\n        this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */\n    ExponentialBackoff.prototype.reset = function () {\n        this.currentBaseMs = 0;\n    };\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n    ExponentialBackoff.prototype.resetToMax = function () {\n        this.currentBaseMs = this.maxDelayMs;\n    };\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts.\n     */\n    ExponentialBackoff.prototype.backoffAndWait = function () {\n        var def = new __WEBPACK_IMPORTED_MODULE_1__util_promise__[\"a\" /* Deferred */]();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        var delayWithJitterMs = this.currentBaseMs + this.jitterDelayMs();\n        if (this.currentBaseMs > 0) {\n            __WEBPACK_IMPORTED_MODULE_0__util_log__[\"b\" /* debug */](LOG_TAG, \"Backing off for \" + delayWithJitterMs + \" ms \" +\n                (\"(base delay: \" + this.currentBaseMs + \" ms)\"));\n        }\n        setTimeout(function () {\n            def.resolve();\n        }, delayWithJitterMs);\n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.currentBaseMs *= this.backoffFactor;\n        if (this.currentBaseMs < this.initialDelayMs) {\n            this.currentBaseMs = this.initialDelayMs;\n        }\n        if (this.currentBaseMs > this.maxDelayMs) {\n            this.currentBaseMs = this.maxDelayMs;\n        }\n        return def.promise;\n    };\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n    ExponentialBackoff.prototype.jitterDelayMs = function () {\n        return (Math.random() - 0.5) * this.currentBaseMs;\n    };\n    return ExponentialBackoff;\n}());\n\n\n//# sourceMappingURL=backoff.js.map\n\n\n/***/ }),\n/* 304 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RemoteStore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_transaction__ = __webpack_require__(305);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_types__ = __webpack_require__(187);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__local_query_data__ = __webpack_require__(142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__model_document_key__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__model_mutation_batch__ = __webpack_require__(144);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__platform_platform__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__util_log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__util_obj__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__remote_event__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__rpc_error__ = __webpack_require__(185);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__watch_change__ = __webpack_require__(207);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LOG_TAG = 'RemoteStore';\n// TODO(b/35853402): Negotiate this with the stream.\nvar MAX_PENDING_WRITES = 10;\n// The RemoteStore notifies an onlineStateHandler with OnlineState.Failed if we\n// fail to connect to the backend. This subsequently triggers get() requests to\n// fail or use cached data, etc. Unfortunately, our connections have\n// historically been subject to various transient failures. So we wait for\n// multiple failures before notifying the onlineStateHandler.\nvar ONLINE_ATTEMPTS_BEFORE_FAILURE = 2;\n/**\n * RemoteStore - An interface to remotely stored data, basically providing a\n * wrapper around the Datastore that is more reliable for the rest of the\n * system.\n *\n * RemoteStore is responsible for maintaining the connection to the server.\n * - maintaining a list of active listens.\n * - reconnecting when the connection is dropped.\n * - resuming all the active listens on reconnect.\n *\n * RemoteStore handles all incoming events from the Datastore.\n * - listening to the watch stream and repackaging the events as RemoteEvents\n * - notifying SyncEngine of any changes to the active listens.\n *\n * RemoteStore takes writes from other components and handles them reliably.\n * - pulling pending mutations from LocalStore and sending them to Datastore.\n * - retrying mutations that failed because of network problems.\n * - acking mutations to the SyncEngine once they are accepted or rejected.\n */\nvar RemoteStore = /** @class */ (function () {\n    function RemoteStore(\n        /**\n         * The local store, used to fill the write pipeline with outbound\n         * mutations and resolve existence filter mismatches.\n         */\n        localStore, \n        /** The client-side proxy for interacting with the backend. */\n        datastore, onlineStateHandler) {\n        this.localStore = localStore;\n        this.datastore = datastore;\n        this.onlineStateHandler = onlineStateHandler;\n        this.pendingWrites = [];\n        this.lastBatchSeen = __WEBPACK_IMPORTED_MODULE_6__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */];\n        /**\n         * A mapping of watched targets that the client cares about tracking and the\n         * user has explicitly called a 'listen' for this target.\n         *\n         * These targets may or may not have been sent to or acknowledged by the\n         * server. On re-establishing the listen stream, these targets should be sent\n         * to the server. The targets removed with unlistens are removed eagerly\n         * without waiting for confirmation from the listen stream.\n         */\n        this.listenTargets = {};\n        /**\n         * A mapping of targetId to pending acks needed.\n         *\n         * If a targetId is present in this map, then we're waiting for watch to\n         * acknowledge a removal or addition of the target. If a target is not in this\n         * mapping, and it's in the listenTargets map, then we consider the target to\n         * be active.\n         *\n         * We increment the count here every time we issue a request over the stream\n         * to watch or unwatch. We then decrement the count every time we get a target\n         * added or target removed message from the server. Once the count is equal to\n         * 0 we know that the client and server are in the same state (once this state\n         * is reached the targetId is removed from the map to free the memory).\n         */\n        this.pendingTargetResponses = {};\n        this.accumulatedWatchChanges = [];\n        this.watchStream = null;\n        this.writeStream = null;\n        /**\n         * The online state of the watch stream. The state is set to healthy if and\n         * only if there are messages received by the backend.\n         */\n        this.watchStreamOnlineState = __WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Unknown;\n        /** A count of consecutive failures to open the stream. */\n        this.watchStreamFailures = 0;\n        /** Whether the client should fire offline warning. */\n        this.shouldWarnOffline = true;\n    }\n    /**\n     * Starts up the remote store, creating streams, restoring state from\n     * LocalStore, etc.\n     */\n    RemoteStore.prototype.start = function () {\n        return this.enableNetwork();\n    };\n    /**\n     * Updates our OnlineState to the new state, updating local state\n     * and notifying the onlineStateHandler as appropriate. Idempotent.\n     */\n    RemoteStore.prototype.updateOnlineState = function (newState) {\n        if (newState !== this.watchStreamOnlineState) {\n            if (newState === __WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Healthy) {\n                // We've connected to watch at least once. Don't warn the developer about\n                // being offline going forward.\n                this.shouldWarnOffline = false;\n            }\n            else if (newState === __WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Unknown) {\n                // The state is set to unknown when a healthy stream is closed (e.g. due to\n                // a token timeout) or when we have no active listens and therefore there's\n                // no need to start the stream. Assuming there is (possibly in the future)\n                // an active listen, then we will eventually move to state Online or Failed,\n                // but we always want to make at least ONLINE_ATTEMPTS_BEFORE_FAILURE\n                // attempts before failing, so we reset the count here.\n                this.watchStreamFailures = 0;\n            }\n            this.watchStreamOnlineState = newState;\n            this.onlineStateHandler(newState);\n        }\n    };\n    /**\n     * Updates our OnlineState as appropriate after the watch stream reports a\n     * failure. The first failure moves us to the 'Unknown' state. We then may\n     * allow multiple failures (based on ONLINE_ATTEMPTS_BEFORE_FAILURE) before we\n     * actually transition to OnlineState.Failed.\n     */\n    RemoteStore.prototype.updateOnlineStateAfterFailure = function () {\n        if (this.watchStreamOnlineState === __WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Healthy) {\n            this.updateOnlineState(__WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Unknown);\n        }\n        else {\n            this.watchStreamFailures++;\n            if (this.watchStreamFailures >= ONLINE_ATTEMPTS_BEFORE_FAILURE) {\n                if (this.shouldWarnOffline) {\n                    __WEBPACK_IMPORTED_MODULE_10__util_log__[\"c\" /* error */]('Could not reach Firestore backend.');\n                    this.shouldWarnOffline = false;\n                }\n                this.updateOnlineState(__WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Failed);\n            }\n        }\n    };\n    RemoteStore.prototype.isNetworkEnabled = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])((this.watchStream == null) === (this.writeStream == null), 'WatchStream and WriteStream should both be null or non-null');\n        return this.watchStream != null;\n    };\n    /** Re-enables the network. Idempotent. */\n    RemoteStore.prototype.enableNetwork = function () {\n        var _this = this;\n        if (this.isNetworkEnabled()) {\n            return Promise.resolve();\n        }\n        // Create new streams (but note they're not started yet).\n        this.watchStream = this.datastore.newPersistentWatchStream();\n        this.writeStream = this.datastore.newPersistentWriteStream();\n        // Load any saved stream token from persistent storage\n        return this.localStore.getLastStreamToken().then(function (token) {\n            _this.writeStream.lastStreamToken = token;\n            if (_this.shouldStartWatchStream()) {\n                _this.startWatchStream();\n            }\n            _this.updateOnlineState(__WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Unknown);\n            return _this.fillWritePipeline(); // This may start the writeStream.\n        });\n    };\n    /**\n     * Temporarily disables the network. The network can be re-enabled using\n     * enableNetwork().\n     */\n    RemoteStore.prototype.disableNetwork = function () {\n        this.disableNetworkInternal();\n        // Set the OnlineState to failed so get()'s return from cache, etc.\n        this.updateOnlineState(__WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Failed);\n        return Promise.resolve();\n    };\n    /**\n     * Disables the network, if it is currently enabled.\n     */\n    RemoteStore.prototype.disableNetworkInternal = function () {\n        if (this.isNetworkEnabled()) {\n            // NOTE: We're guaranteed not to get any further events from these streams (not even a close\n            // event).\n            this.watchStream.stop();\n            this.writeStream.stop();\n            this.cleanUpWatchStreamState();\n            this.cleanUpWriteStreamState();\n            this.writeStream = null;\n            this.watchStream = null;\n        }\n    };\n    RemoteStore.prototype.shutdown = function () {\n        __WEBPACK_IMPORTED_MODULE_10__util_log__[\"b\" /* debug */](LOG_TAG, 'RemoteStore shutting down.');\n        this.disableNetworkInternal();\n        // Set the OnlineState to Unknown (rather than Failed) to avoid potentially\n        // triggering spurious listener events with cached data, etc.\n        this.updateOnlineState(__WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Unknown);\n        return Promise.resolve();\n    };\n    /** Starts new listen for the given query. Uses resume token if provided */\n    RemoteStore.prototype.listen = function (queryData) {\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(!__WEBPACK_IMPORTED_MODULE_11__util_obj__[\"a\" /* contains */](this.listenTargets, queryData.targetId), 'listen called with duplicate targetId!');\n        // Mark this as something the client is currently listening for.\n        this.listenTargets[queryData.targetId] = queryData;\n        if (this.shouldStartWatchStream()) {\n            // The listen will be sent in onWatchStreamOpen\n            this.startWatchStream();\n        }\n        else if (this.isNetworkEnabled() && this.watchStream.isOpen()) {\n            this.sendWatchRequest(queryData);\n        }\n    };\n    /** Removes the listen from server */\n    RemoteStore.prototype.unlisten = function (targetId) {\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(__WEBPACK_IMPORTED_MODULE_11__util_obj__[\"a\" /* contains */](this.listenTargets, targetId), 'unlisten called without assigned target ID!');\n        var queryData = this.listenTargets[targetId];\n        delete this.listenTargets[targetId];\n        if (this.isNetworkEnabled() && this.watchStream.isOpen()) {\n            this.sendUnwatchRequest(targetId);\n            if (__WEBPACK_IMPORTED_MODULE_11__util_obj__[\"e\" /* isEmpty */](this.listenTargets)) {\n                this.watchStream.markIdle();\n            }\n        }\n    };\n    /**\n     * We need to increment the the expected number of pending responses we're due\n     * from watch so we wait for the ack to process any messages from this target.\n     */\n    RemoteStore.prototype.sendWatchRequest = function (queryData) {\n        this.recordPendingTargetRequest(queryData.targetId);\n        this.watchStream.watch(queryData);\n    };\n    /**\n     * We need to increment the expected number of pending responses we're due\n     * from watch so we wait for the removal on the server before we process any\n     * messages from this target.\n     */\n    RemoteStore.prototype.sendUnwatchRequest = function (targetId) {\n        this.recordPendingTargetRequest(targetId);\n        this.watchStream.unwatch(targetId);\n    };\n    /**\n     * Increment the mapping of how many acks are needed from watch before we can\n     * consider the server to be 'in-sync' with the client's active targets.\n     */\n    RemoteStore.prototype.recordPendingTargetRequest = function (targetId) {\n        // For each request we get we need to record we need a response for it.\n        this.pendingTargetResponses[targetId] =\n            (this.pendingTargetResponses[targetId] || 0) + 1;\n    };\n    RemoteStore.prototype.startWatchStream = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(this.shouldStartWatchStream(), 'startWriteStream() called when shouldStartWatchStream() is false.');\n        this.watchStream.start({\n            onOpen: this.onWatchStreamOpen.bind(this),\n            onClose: this.onWatchStreamClose.bind(this),\n            onWatchChange: this.onWatchStreamChange.bind(this)\n        });\n    };\n    /**\n     * Returns whether the watch stream should be started because there are\n     * active targets trying to be listened too\n     */\n    RemoteStore.prototype.shouldStartWatchStream = function () {\n        return (this.isNetworkEnabled() &&\n            !this.watchStream.isStarted() &&\n            !__WEBPACK_IMPORTED_MODULE_11__util_obj__[\"e\" /* isEmpty */](this.listenTargets));\n    };\n    RemoteStore.prototype.cleanUpWatchStreamState = function () {\n        // If the connection is closed then we'll never get a snapshot version for\n        // the accumulated changes and so we'll never be able to complete the batch.\n        // When we start up again the server is going to resend these changes\n        // anyway, so just toss the accumulated state.\n        this.accumulatedWatchChanges = [];\n        this.pendingTargetResponses = {};\n    };\n    RemoteStore.prototype.onWatchStreamOpen = function () {\n        var _this = this;\n        // TODO(b/35852690): close the stream again (with some timeout?) if no watch\n        // targets are active\n        __WEBPACK_IMPORTED_MODULE_11__util_obj__[\"d\" /* forEachNumber */](this.listenTargets, function (targetId, queryData) {\n            _this.sendWatchRequest(queryData);\n        });\n        return Promise.resolve();\n    };\n    RemoteStore.prototype.onWatchStreamClose = function (error) {\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(this.isNetworkEnabled(), 'onWatchStreamClose() should only be called when the network is enabled');\n        this.cleanUpWatchStreamState();\n        // If there was an error, retry the connection.\n        if (this.shouldStartWatchStream()) {\n            this.updateOnlineStateAfterFailure();\n            this.startWatchStream();\n        }\n        else {\n            // No need to restart watch stream because there are no active targets.\n            // The online state is set to unknown because there is no active attempt\n            // at establishing a connection\n            this.updateOnlineState(__WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Unknown);\n        }\n        return Promise.resolve();\n    };\n    RemoteStore.prototype.onWatchStreamChange = function (watchChange, snapshotVersion) {\n        // Mark the connection as healthy because we got a message from the server\n        this.updateOnlineState(__WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Healthy);\n        if (watchChange instanceof __WEBPACK_IMPORTED_MODULE_14__watch_change__[\"d\" /* WatchTargetChange */] &&\n            watchChange.state === __WEBPACK_IMPORTED_MODULE_14__watch_change__[\"e\" /* WatchTargetChangeState */].Removed &&\n            watchChange.cause) {\n            // There was an error on a target, don't wait for a consistent snapshot\n            // to raise events\n            return this.handleTargetError(watchChange);\n        }\n        // Accumulate watch changes but don't process them if there's no\n        // snapshotVersion or it's older than a previous snapshot we've processed\n        // (can happen after we resume a target using a resume token).\n        this.accumulatedWatchChanges.push(watchChange);\n        if (!snapshotVersion.isEqual(__WEBPACK_IMPORTED_MODULE_0__core_snapshot_version__[\"a\" /* SnapshotVersion */].MIN) &&\n            snapshotVersion.compareTo(this.localStore.getLastRemoteSnapshotVersion()) >= 0) {\n            var changes = this.accumulatedWatchChanges;\n            this.accumulatedWatchChanges = [];\n            return this.handleWatchChangeBatch(snapshotVersion, changes);\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    /**\n     * Takes a batch of changes from the Datastore, repackages them as a\n     * RemoteEvent, and passes that on to the listener, which is typically the\n     * SyncEngine.\n     */\n    RemoteStore.prototype.handleWatchChangeBatch = function (snapshotVersion, changes) {\n        var _this = this;\n        var aggregator = new __WEBPACK_IMPORTED_MODULE_14__watch_change__[\"c\" /* WatchChangeAggregator */](snapshotVersion, this.listenTargets, this.pendingTargetResponses);\n        aggregator.addChanges(changes);\n        var remoteEvent = aggregator.createRemoteEvent();\n        // Get the new response counts from the aggregator\n        this.pendingTargetResponses = aggregator.pendingTargetResponses;\n        var promises = [];\n        // Handle existence filters and existence filter mismatches.\n        __WEBPACK_IMPORTED_MODULE_11__util_obj__[\"d\" /* forEachNumber */](aggregator.existenceFilters, function (targetId, filter) {\n            var queryData = _this.listenTargets[targetId];\n            if (!queryData) {\n                // A watched target might have been removed already.\n                return;\n            }\n            var query = queryData.query;\n            if (query.isDocumentQuery()) {\n                if (filter.count === 0) {\n                    // The existence filter told us the document does not exist.\n                    // We need to deduce that this document does not exist and apply\n                    // a deleted document to our updates. Without applying a deleted\n                    // document there might be another query that will raise this\n                    // document as part of a snapshot until it is resolved,\n                    // essentially exposing inconsistency between queries.\n                    var key = new __WEBPACK_IMPORTED_MODULE_5__model_document_key__[\"a\" /* DocumentKey */](query.path);\n                    var deletedDoc = new __WEBPACK_IMPORTED_MODULE_4__model_document__[\"b\" /* NoDocument */](key, snapshotVersion);\n                    remoteEvent.addDocumentUpdate(deletedDoc);\n                }\n                else {\n                    Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(filter.count === 1, 'Single document existence filter with count: ' + filter.count);\n                }\n            }\n            else {\n                // Not a document query.\n                var promise = _this.localStore\n                    .remoteDocumentKeys(targetId)\n                    .then(function (trackedRemote) {\n                    if (remoteEvent.targetChanges[targetId]) {\n                        var mapping = remoteEvent.targetChanges[targetId].mapping;\n                        if (mapping !== null) {\n                            if (mapping instanceof __WEBPACK_IMPORTED_MODULE_12__remote_event__[\"d\" /* UpdateMapping */]) {\n                                trackedRemote = mapping.applyToKeySet(trackedRemote);\n                            }\n                            else {\n                                Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(mapping instanceof __WEBPACK_IMPORTED_MODULE_12__remote_event__[\"c\" /* ResetMapping */], 'Expected either reset or update mapping but got something else: ' +\n                                    mapping);\n                                trackedRemote = mapping.documents;\n                            }\n                        }\n                    }\n                    if (trackedRemote.size !== filter.count) {\n                        // Existence filter mismatch, resetting mapping.\n                        // Make sure the mismatch is exposed in the remote event.\n                        remoteEvent.handleExistenceFilterMismatch(targetId);\n                        // Clear the resume token for the query, since we're in a\n                        // known mismatch state.\n                        var newQueryData = new __WEBPACK_IMPORTED_MODULE_3__local_query_data__[\"a\" /* QueryData */](query, targetId, queryData.purpose);\n                        _this.listenTargets[targetId] = newQueryData;\n                        // Cause a hard reset by unwatching and rewatching\n                        // immediately, but deliberately don't send a resume token\n                        // so that we get a full update.\n                        // Make sure we expect that this acks are going to happen.\n                        _this.sendUnwatchRequest(targetId);\n                        // Mark the query we send as being on behalf of an existence\n                        // filter mismatch, but don't actually retain that in\n                        // listenTargets. This ensures that we flag the first\n                        // re-listen this way without impacting future listens of\n                        // this target (that might happen e.g. on reconnect).\n                        var requestQueryData = new __WEBPACK_IMPORTED_MODULE_3__local_query_data__[\"a\" /* QueryData */](query, targetId, __WEBPACK_IMPORTED_MODULE_3__local_query_data__[\"b\" /* QueryPurpose */].ExistenceFilterMismatch);\n                        _this.sendWatchRequest(requestQueryData);\n                    }\n                });\n                promises.push(promise);\n            }\n        });\n        return Promise.all(promises).then(function () {\n            // Update in-memory resume tokens. LocalStore will update the\n            // persistent view of these when applying the completed RemoteEvent.\n            __WEBPACK_IMPORTED_MODULE_11__util_obj__[\"d\" /* forEachNumber */](remoteEvent.targetChanges, function (targetId, change) {\n                if (change.resumeToken.length > 0) {\n                    var queryData = _this.listenTargets[targetId];\n                    // A watched target might have been removed already.\n                    if (queryData) {\n                        _this.listenTargets[targetId] = queryData.update({\n                            resumeToken: change.resumeToken,\n                            snapshotVersion: change.snapshotVersion\n                        });\n                    }\n                }\n            });\n            // Finally handle remote event\n            return _this.syncEngine.applyRemoteEvent(remoteEvent);\n        });\n    };\n    /** Handles an error on a target */\n    RemoteStore.prototype.handleTargetError = function (watchChange) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(!!watchChange.cause, 'Handling target error without a cause');\n        var error = watchChange.cause;\n        var promiseChain = Promise.resolve();\n        watchChange.targetIds.forEach(function (targetId) {\n            promiseChain = promiseChain.then(function () {\n                if (__WEBPACK_IMPORTED_MODULE_11__util_obj__[\"a\" /* contains */](_this.listenTargets, targetId)) {\n                    delete _this.listenTargets[targetId];\n                    return _this.syncEngine.rejectListen(targetId, error);\n                }\n                else {\n                    // A watched target might have been removed already.\n                    return Promise.resolve();\n                }\n            });\n        });\n        return promiseChain;\n    };\n    RemoteStore.prototype.cleanUpWriteStreamState = function () {\n        this.lastBatchSeen = __WEBPACK_IMPORTED_MODULE_6__model_mutation_batch__[\"a\" /* BATCHID_UNKNOWN */];\n        __WEBPACK_IMPORTED_MODULE_10__util_log__[\"b\" /* debug */](LOG_TAG, 'Stopping write stream with ' +\n            this.pendingWrites.length +\n            ' pending writes');\n        this.pendingWrites = [];\n    };\n    /**\n     * Notifies that there are new mutations to process in the queue. This is\n     * typically called by SyncEngine after it has sent mutations to LocalStore.\n     */\n    RemoteStore.prototype.fillWritePipeline = function () {\n        var _this = this;\n        if (!this.canWriteMutations()) {\n            return Promise.resolve();\n        }\n        else {\n            return this.localStore\n                .nextMutationBatch(this.lastBatchSeen)\n                .then(function (batch) {\n                if (batch === null) {\n                    if (_this.pendingWrites.length === 0) {\n                        _this.writeStream.markIdle();\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    _this.commit(batch);\n                    return _this.fillWritePipeline();\n                }\n            });\n        }\n    };\n    /**\n     * Returns true if the backend can accept additional write requests.\n     *\n     * When sending mutations to the write stream (e.g. in fillWritePipeline),\n     * call this method first to check if more mutations can be sent.\n     *\n     * Currently the only thing that can prevent the backend from accepting\n     * write requests is if there are too many requests already outstanding. As\n     * writes complete the backend will be able to accept more.\n     */\n    RemoteStore.prototype.canWriteMutations = function () {\n        return (this.isNetworkEnabled() && this.pendingWrites.length < MAX_PENDING_WRITES);\n    };\n    // For testing\n    RemoteStore.prototype.outstandingWrites = function () {\n        return this.pendingWrites.length;\n    };\n    /**\n     * Given mutations to commit, actually commits them to the Datastore. Note\n     * that this does *not* return a Promise specifically because the AsyncQueue\n     * should not block operations for this.\n     */\n    RemoteStore.prototype.commit = function (batch) {\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(this.canWriteMutations(), \"commit called when batches can't be written\");\n        this.lastBatchSeen = batch.batchId;\n        this.pendingWrites.push(batch);\n        if (this.shouldStartWriteStream()) {\n            this.startWriteStream();\n        }\n        else if (this.isNetworkEnabled() && this.writeStream.handshakeComplete) {\n            this.writeStream.writeMutations(batch.mutations);\n        }\n    };\n    RemoteStore.prototype.shouldStartWriteStream = function () {\n        return (this.isNetworkEnabled() &&\n            !this.writeStream.isStarted() &&\n            this.pendingWrites.length > 0);\n    };\n    RemoteStore.prototype.startWriteStream = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(this.shouldStartWriteStream(), 'startWriteStream() called when shouldStartWriteStream() is false.');\n        this.writeStream.start({\n            onOpen: this.onWriteStreamOpen.bind(this),\n            onClose: this.onWriteStreamClose.bind(this),\n            onHandshakeComplete: this.onWriteHandshakeComplete.bind(this),\n            onMutationResult: this.onMutationResult.bind(this)\n        });\n    };\n    RemoteStore.prototype.onWriteStreamOpen = function () {\n        this.writeStream.writeHandshake();\n        return Promise.resolve();\n    };\n    RemoteStore.prototype.onWriteHandshakeComplete = function () {\n        var _this = this;\n        // Record the stream token.\n        return this.localStore\n            .setLastStreamToken(this.writeStream.lastStreamToken)\n            .then(function () {\n            // Drain any pending writes.\n            //\n            // Note that at this point pendingWrites contains mutations that\n            // have already been accepted by fillWritePipeline/commitBatch. If\n            // the pipeline is full, canWriteMutations will be false, despite\n            // the fact that we actually need to send mutations over.\n            //\n            // This also means that this method indirectly respects the limits\n            // imposed by canWriteMutations since writes can't be added to the\n            // pendingWrites array when canWriteMutations is false. If the\n            // limits imposed by canWriteMutations actually protect us from\n            // DOSing ourselves then those limits won't be exceeded here and\n            // we'll continue to make progress.\n            for (var _i = 0, _a = _this.pendingWrites; _i < _a.length; _i++) {\n                var batch = _a[_i];\n                _this.writeStream.writeMutations(batch.mutations);\n            }\n        });\n    };\n    RemoteStore.prototype.onMutationResult = function (commitVersion, results) {\n        var _this = this;\n        // This is a response to a write containing mutations and should be\n        // correlated to the first pending write.\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(this.pendingWrites.length > 0, 'Got result for empty pending writes');\n        var batch = this.pendingWrites.shift();\n        var success = __WEBPACK_IMPORTED_MODULE_6__model_mutation_batch__[\"c\" /* MutationBatchResult */].from(batch, commitVersion, results, this.writeStream.lastStreamToken);\n        return this.syncEngine.applySuccessfulWrite(success).then(function () {\n            // It's possible that with the completion of this mutation another\n            // slot has freed up.\n            return _this.fillWritePipeline();\n        });\n    };\n    RemoteStore.prototype.onWriteStreamClose = function (error) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(this.isNetworkEnabled(), 'onWriteStreamClose() should only be called when the network is enabled');\n        // If the write stream closed due to an error, invoke the error callbacks if\n        // there are pending writes.\n        if (error && this.pendingWrites.length > 0) {\n            Object(__WEBPACK_IMPORTED_MODULE_8__util_assert__[\"a\" /* assert */])(!!error, 'We have pending writes, but the write stream closed without an error');\n            // A promise that is resolved after we processed the error\n            var errorHandling = void 0;\n            if (this.writeStream.handshakeComplete) {\n                // This error affects the actual write.\n                errorHandling = this.handleWriteError(error);\n            }\n            else {\n                // If there was an error before the handshake has finished, it's\n                // possible that the server is unable to process the stream token\n                // we're sending. (Perhaps it's too old?)\n                errorHandling = this.handleHandshakeError(error);\n            }\n            return errorHandling.then(function () {\n                // The write stream might have been started by refilling the write\n                // pipeline for failed writes\n                if (_this.shouldStartWriteStream()) {\n                    _this.startWriteStream();\n                }\n            });\n        }\n        else {\n            // No pending writes, nothing to do\n            return Promise.resolve();\n        }\n    };\n    RemoteStore.prototype.handleHandshakeError = function (error) {\n        // Reset the token if it's a permanent error or the error code is\n        // ABORTED, signaling the write stream is no longer valid.\n        if (Object(__WEBPACK_IMPORTED_MODULE_13__rpc_error__[\"a\" /* isPermanentError */])(error.code) || error.code === __WEBPACK_IMPORTED_MODULE_9__util_error__[\"a\" /* Code */].ABORTED) {\n            __WEBPACK_IMPORTED_MODULE_10__util_log__[\"b\" /* debug */](LOG_TAG, 'RemoteStore error before completed handshake; resetting stream token: ', this.writeStream.lastStreamToken);\n            this.writeStream.lastStreamToken = Object(__WEBPACK_IMPORTED_MODULE_7__platform_platform__[\"b\" /* emptyByteString */])();\n            return this.localStore.setLastStreamToken(Object(__WEBPACK_IMPORTED_MODULE_7__platform_platform__[\"b\" /* emptyByteString */])());\n        }\n        else {\n            // Some other error, don't reset stream token. Our stream logic will\n            // just retry with exponential backoff.\n            return Promise.resolve();\n        }\n    };\n    RemoteStore.prototype.handleWriteError = function (error) {\n        var _this = this;\n        if (Object(__WEBPACK_IMPORTED_MODULE_13__rpc_error__[\"a\" /* isPermanentError */])(error.code)) {\n            // This was a permanent error, the request itself was the problem\n            // so it's not going to succeed if we resend it.\n            var batch = this.pendingWrites.shift();\n            // In this case it's also unlikely that the server itself is melting\n            // down -- this was just a bad request so inhibit backoff on the next\n            // restart.\n            this.writeStream.inhibitBackoff();\n            return this.syncEngine\n                .rejectFailedWrite(batch.batchId, error)\n                .then(function () {\n                // It's possible that with the completion of this mutation\n                // another slot has freed up.\n                return _this.fillWritePipeline();\n            });\n        }\n        else {\n            // Transient error, just let the retry logic kick in.\n            return Promise.resolve();\n        }\n    };\n    RemoteStore.prototype.createTransaction = function () {\n        return new __WEBPACK_IMPORTED_MODULE_1__core_transaction__[\"a\" /* Transaction */](this.datastore);\n    };\n    RemoteStore.prototype.handleUserChange = function (user) {\n        __WEBPACK_IMPORTED_MODULE_10__util_log__[\"b\" /* debug */](LOG_TAG, 'RemoteStore changing users: uid=', user.uid);\n        // If the network has been explicitly disabled, make sure we don't\n        // accidentally re-enable it.\n        if (this.isNetworkEnabled()) {\n            // Tear down and re-create our network streams. This will ensure we get a fresh auth token\n            // for the new user and re-fill the write pipeline with new mutations from the LocalStore\n            // (since mutations are per-user).\n            this.disableNetworkInternal();\n            this.updateOnlineState(__WEBPACK_IMPORTED_MODULE_2__core_types__[\"a\" /* OnlineState */].Unknown);\n            return this.enableNetwork();\n        }\n    };\n    return RemoteStore;\n}());\n\n\n//# sourceMappingURL=remote_store.js.map\n\n\n/***/ }),\n/* 305 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Transaction; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__snapshot_version__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_collections__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_document__ = __webpack_require__(125);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_mutation__ = __webpack_require__(163);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_error__ = __webpack_require__(118);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nvar Transaction = /** @class */ (function () {\n    function Transaction(datastore) {\n        this.datastore = datastore;\n        // The version of each document that was read during this transaction.\n        this.readVersions = Object(__WEBPACK_IMPORTED_MODULE_1__model_collections__[\"c\" /* documentVersionMap */])();\n        this.mutations = [];\n        this.committed = false;\n    }\n    Transaction.prototype.recordVersion = function (doc) {\n        var docVersion = doc.version;\n        if (doc instanceof __WEBPACK_IMPORTED_MODULE_2__model_document__[\"b\" /* NoDocument */]) {\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            docVersion = __WEBPACK_IMPORTED_MODULE_0__snapshot_version__[\"a\" /* SnapshotVersion */].forDeletedDoc();\n        }\n        var existingVersion = this.readVersions.get(doc.key);\n        if (existingVersion !== null) {\n            if (!docVersion.isEqual(existingVersion)) {\n                // This transaction will fail no matter what.\n                throw new __WEBPACK_IMPORTED_MODULE_4__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_4__util_error__[\"a\" /* Code */].ABORTED, 'Document version changed between two reads.');\n            }\n        }\n        else {\n            this.readVersions = this.readVersions.insert(doc.key, docVersion);\n        }\n    };\n    Transaction.prototype.lookup = function (keys) {\n        var _this = this;\n        if (this.committed) {\n            return Promise.reject('Transaction has already completed.');\n        }\n        if (this.mutations.length > 0) {\n            return Promise.reject('Transactions lookups are invalid after writes.');\n        }\n        return this.datastore.lookup(keys).then(function (docs) {\n            docs.forEach(function (doc) { return _this.recordVersion(doc); });\n            return docs;\n        });\n    };\n    Transaction.prototype.write = function (mutations) {\n        if (this.committed) {\n            throw new __WEBPACK_IMPORTED_MODULE_4__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_4__util_error__[\"a\" /* Code */].FAILED_PRECONDITION, 'Transaction has already completed.');\n        }\n        this.mutations = this.mutations.concat(mutations);\n    };\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n    Transaction.prototype.precondition = function (key) {\n        var version = this.readVersions.get(key);\n        if (version) {\n            return __WEBPACK_IMPORTED_MODULE_3__model_mutation__[\"f\" /* Precondition */].updateTime(version);\n        }\n        else {\n            return __WEBPACK_IMPORTED_MODULE_3__model_mutation__[\"f\" /* Precondition */].NONE;\n        }\n    };\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n    Transaction.prototype.preconditionForUpdate = function (key) {\n        var version = this.readVersions.get(key);\n        if (version && version.isEqual(__WEBPACK_IMPORTED_MODULE_0__snapshot_version__[\"a\" /* SnapshotVersion */].forDeletedDoc())) {\n            // The document doesn't exist, so fail the transaction.\n            throw new __WEBPACK_IMPORTED_MODULE_4__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_4__util_error__[\"a\" /* Code */].FAILED_PRECONDITION, \"Can't update a document that doesn't exist.\");\n        }\n        else if (version) {\n            // Document exists, base precondition on document update time.\n            return __WEBPACK_IMPORTED_MODULE_3__model_mutation__[\"f\" /* Precondition */].updateTime(version);\n        }\n        else {\n            // Document was not read, so we just use the preconditions for a blind\n            // update.\n            return __WEBPACK_IMPORTED_MODULE_3__model_mutation__[\"f\" /* Precondition */].exists(true);\n        }\n    };\n    Transaction.prototype.set = function (key, data) {\n        this.write(data.toMutations(key, this.precondition(key)));\n    };\n    Transaction.prototype.update = function (key, data) {\n        this.write(data.toMutations(key, this.preconditionForUpdate(key)));\n    };\n    Transaction.prototype.delete = function (key) {\n        this.write([new __WEBPACK_IMPORTED_MODULE_3__model_mutation__[\"a\" /* DeleteMutation */](key, this.precondition(key))]);\n        // Since the delete will be applied before all following writes, we need to\n        // ensure that the precondition for the next write will be exists: false.\n        this.readVersions = this.readVersions.insert(key, __WEBPACK_IMPORTED_MODULE_0__snapshot_version__[\"a\" /* SnapshotVersion */].forDeletedDoc());\n    };\n    Transaction.prototype.commit = function () {\n        var _this = this;\n        var unwritten = this.readVersions;\n        // For each mutation, note that the doc was written.\n        this.mutations.forEach(function (mutation) {\n            unwritten = unwritten.remove(mutation.key);\n        });\n        if (!unwritten.isEmpty()) {\n            return Promise.reject(Error('Every document read in a transaction must also be written.'));\n        }\n        return this.datastore.commit(this.mutations).then(function () {\n            _this.committed = true;\n        });\n    };\n    return Transaction;\n}());\n\n\n//# sourceMappingURL=transaction.js.map\n\n\n/***/ }),\n/* 306 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AsyncObserver; });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\nvar AsyncObserver = /** @class */ (function () {\n    function AsyncObserver(observer) {\n        this.observer = observer;\n        /**\n         * When set to true, will not raise future events. Necessary to deal with\n         * async detachment of listener.\n         */\n        this.muted = false;\n    }\n    AsyncObserver.prototype.next = function (value) {\n        this.scheduleEvent(this.observer.next, value);\n    };\n    AsyncObserver.prototype.error = function (error) {\n        this.scheduleEvent(this.observer.error, error);\n    };\n    AsyncObserver.prototype.mute = function () {\n        this.muted = true;\n    };\n    AsyncObserver.prototype.scheduleEvent = function (eventHandler, event) {\n        var _this = this;\n        if (!this.muted) {\n            setTimeout(function () {\n                if (!_this.muted) {\n                    eventHandler(event);\n                }\n            }, 0);\n        }\n    };\n    return AsyncObserver;\n}());\n\n\n//# sourceMappingURL=async_observer.js.map\n\n\n/***/ }),\n/* 307 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AsyncQueue; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__(121);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__promise__ = __webpack_require__(190);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__error__ = __webpack_require__(118);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar AsyncQueue = /** @class */ (function () {\n    function AsyncQueue() {\n        // The last promise in the queue.\n        this.tail = Promise.resolve();\n        // A list with timeout handles and their respective deferred promises.\n        // Contains an entry for each operation that is queued to run in the future\n        // (i.e. it has a delay that has not yet elapsed). Prior to cleanup, this list\n        // may also contain entries that have already been run (in which case `handle` is\n        // null).\n        this.delayedOperations = [];\n        // The number of operations that are queued to be run in the future (i.e. they\n        // have a delay that has not yet elapsed). Unlike `delayedOperations`, this\n        // is guaranteed to only contain operations that have not yet been run.\n        //\n        // Visible for testing.\n        this.delayedOperationsCount = 0;\n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.operationInProgress = false;\n    }\n    /**\n     * Adds a new operation to the queue. Returns a promise that will be resolved\n     * when the promise returned by the new operation is (with its value).\n     *\n     * Can optionally specify a delay (in milliseconds) to wait before queuing the\n     * operation.\n     */\n    AsyncQueue.prototype.schedule = function (op, delay) {\n        var _this = this;\n        if (this.failure) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"b\" /* fail */])('AsyncQueue is already failed: ' +\n                (this.failure.stack || this.failure.message));\n        }\n        if ((delay || 0) > 0) {\n            this.delayedOperationsCount++;\n            var delayedOp_1 = {\n                handle: null,\n                op: op,\n                deferred: new __WEBPACK_IMPORTED_MODULE_2__promise__[\"a\" /* Deferred */]()\n            };\n            delayedOp_1.handle = setTimeout(function () {\n                _this.scheduleInternal(function () {\n                    return delayedOp_1.op().then(function (result) {\n                        delayedOp_1.deferred.resolve(result);\n                    });\n                });\n                delayedOp_1.handle = null;\n                _this.delayedOperationsCount--;\n                if (_this.delayedOperationsCount === 0) {\n                    _this.delayedOperations = [];\n                }\n            }, delay);\n            this.delayedOperations.push(delayedOp_1);\n            return delayedOp_1.deferred.promise;\n        }\n        else {\n            return this.scheduleInternal(op);\n        }\n    };\n    AsyncQueue.prototype.scheduleInternal = function (op) {\n        var _this = this;\n        this.tail = this.tail.then(function () {\n            _this.operationInProgress = true;\n            return op()\n                .catch(function (error) {\n                _this.failure = error;\n                _this.operationInProgress = false;\n                var message = error.stack || error.message || '';\n                __WEBPACK_IMPORTED_MODULE_1__log__[\"c\" /* error */]('INTERNAL UNHANDLED ERROR: ', message);\n                // Escape the promise chain and throw the error globally so that\n                // e.g. any global crash reporting library detects and reports it.\n                // (but not for simulated errors in our tests since this breaks mocha)\n                if (message.indexOf('Firestore Test Simulated Error') < 0) {\n                    setTimeout(function () {\n                        throw error;\n                    }, 0);\n                }\n                // Re-throw the error so that this.tail becomes a rejected Promise and\n                // all further attempts to chain (via .then) will just short-circuit\n                // and return the rejected Promise.\n                throw error;\n            })\n                .then(function () {\n                _this.operationInProgress = false;\n            });\n        });\n        return this.tail;\n    };\n    /**\n     * Verifies there's an operation currently in-progress on the AsyncQueue.\n     * Unfortunately we can't verify that the running code is in the promise chain\n     * of that operation, so this isn't a foolproof check, but it should be enough\n     * to catch some bugs.\n     */\n    AsyncQueue.prototype.verifyOperationInProgress = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"a\" /* assert */])(this.operationInProgress, 'verifyOpInProgress() called when no op in progress on this queue.');\n    };\n    /**\n     * Waits until all currently scheduled tasks are finished executing. Tasks\n     * scheduled with a delay can be rejected or queued for immediate execution.\n     */\n    AsyncQueue.prototype.drain = function (executeDelayedTasks) {\n        var _this = this;\n        this.delayedOperations.forEach(function (entry) {\n            if (entry.handle) {\n                clearTimeout(entry.handle);\n                if (executeDelayedTasks) {\n                    _this.scheduleInternal(entry.op).then(entry.deferred.resolve, entry.deferred.reject);\n                }\n                else {\n                    entry.deferred.reject(new __WEBPACK_IMPORTED_MODULE_3__error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_3__error__[\"a\" /* Code */].CANCELLED, 'Operation cancelled by shutdown'));\n                }\n            }\n        });\n        this.delayedOperations = [];\n        this.delayedOperationsCount = 0;\n        return this.schedule(function () { return Promise.resolve(); });\n    };\n    return AsyncQueue;\n}());\n\n\n//# sourceMappingURL=async_queue.js.map\n\n\n/***/ }),\n/* 308 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export OAuthToken */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return EmptyCredentialsProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return FirebaseCredentialsProvider; });\n/* unused harmony export FirstPartyToken */\n/* unused harmony export FirstPartyCredentialsProvider */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = makeCredentialsProvider;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__auth_user__ = __webpack_require__(309);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_error__ = __webpack_require__(118);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar OAuthToken = /** @class */ (function () {\n    function OAuthToken(value, user) {\n        this.user = user;\n        this.type = 'OAuth';\n        this.authHeaders = { Authorization: \"Bearer \" + value };\n    }\n    return OAuthToken;\n}());\n\n/** A CredentialsProvider that always yields an empty token. */\nvar EmptyCredentialsProvider = /** @class */ (function () {\n    function EmptyCredentialsProvider() {\n        /**\n         * Stores the User listener registered with setUserChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.userListener = null;\n    }\n    EmptyCredentialsProvider.prototype.getToken = function (forceRefresh) {\n        return Promise.resolve(null);\n    };\n    EmptyCredentialsProvider.prototype.setUserChangeListener = function (listener) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(!this.userListener, 'Can only call setUserChangeListener() once.');\n        this.userListener = listener;\n        // Fire with initial user.\n        listener(__WEBPACK_IMPORTED_MODULE_0__auth_user__[\"a\" /* User */].UNAUTHENTICATED);\n    };\n    EmptyCredentialsProvider.prototype.removeUserChangeListener = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(this.userListener !== null, 'removeUserChangeListener() when no listener registered');\n        this.userListener = null;\n    };\n    return EmptyCredentialsProvider;\n}());\n\nvar FirebaseCredentialsProvider = /** @class */ (function () {\n    function FirebaseCredentialsProvider(app) {\n        var _this = this;\n        this.app = app;\n        /**\n         * The auth token listener registered with FirebaseApp, retained here so we\n         * can unregister it.\n         */\n        this.tokenListener = null;\n        /**\n         * Counter used to detect if the user changed while a getToken request was\n         * outstanding.\n         */\n        this.userCounter = 0;\n        /** The User listener registered with setUserChangeListener(). */\n        this.userListener = null;\n        // We listen for token changes but all we really care about is knowing when\n        // the uid may have changed.\n        this.tokenListener = function () {\n            var newUser = _this.getUser();\n            if (!_this.currentUser || !newUser.isEqual(_this.currentUser)) {\n                _this.currentUser = newUser;\n                _this.userCounter++;\n                if (_this.userListener) {\n                    _this.userListener(_this.currentUser);\n                }\n            }\n        };\n        this.userCounter = 0;\n        // Will fire at least once where we set this.currentUser\n        this.app.INTERNAL.addAuthTokenListener(this.tokenListener);\n    }\n    FirebaseCredentialsProvider.prototype.getToken = function (forceRefresh) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(this.tokenListener != null, 'getToken cannot be called after listener removed.');\n        // Take note of the current value of the userCounter so that this method can\n        // fail (with an ABORTED error) if there is a user change while the request\n        // is outstanding.\n        var initialUserCounter = this.userCounter;\n        return this.app.INTERNAL.getToken(forceRefresh).then(function (tokenData) {\n            // Cancel the request since the user changed while the request was\n            // outstanding so the response is likely for a previous user (which\n            // user, we can't be sure).\n            if (_this.userCounter !== initialUserCounter) {\n                throw new __WEBPACK_IMPORTED_MODULE_2__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_2__util_error__[\"a\" /* Code */].ABORTED, 'getToken aborted due to uid change.');\n            }\n            else {\n                if (tokenData) {\n                    Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(typeof tokenData.accessToken === 'string', 'Invalid tokenData returned from getToken():' + tokenData);\n                    return new OAuthToken(tokenData.accessToken, _this.currentUser);\n                }\n                else {\n                    return null;\n                }\n            }\n        });\n    };\n    FirebaseCredentialsProvider.prototype.setUserChangeListener = function (listener) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(!this.userListener, 'Can only call setUserChangeListener() once.');\n        this.userListener = listener;\n        // Fire the initial event, but only if we received the initial user\n        if (this.currentUser) {\n            listener(this.currentUser);\n        }\n    };\n    FirebaseCredentialsProvider.prototype.removeUserChangeListener = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(this.tokenListener != null, 'removeUserChangeListener() called twice');\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(this.userListener !== null, 'removeUserChangeListener() called when no listener registered');\n        this.app.INTERNAL.removeAuthTokenListener(this.tokenListener);\n        this.tokenListener = null;\n        this.userListener = null;\n    };\n    FirebaseCredentialsProvider.prototype.getUser = function () {\n        // TODO(mikelehen): Remove this check once we're shipping with firebase.js.\n        if (typeof this.app.INTERNAL.getUid !== 'function') {\n            Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"b\" /* fail */])('This version of the Firestore SDK requires at least version' +\n                ' 3.7.0 of firebase.js.');\n        }\n        var currentUid = this.app.INTERNAL.getUid();\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(currentUid === null || typeof currentUid === 'string', 'Received invalid UID: ' + currentUid);\n        return new __WEBPACK_IMPORTED_MODULE_0__auth_user__[\"a\" /* User */](currentUid);\n    };\n    return FirebaseCredentialsProvider;\n}());\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * TODO(b/33147818) this implementation violates the current assumption that\n * tokens are immutable.  We need to either revisit this assumption or come\n * up with some way for FPA to use the listen/unlisten interface.\n */\nvar FirstPartyToken = /** @class */ (function () {\n    function FirstPartyToken(gapi, sessionIndex) {\n        this.gapi = gapi;\n        this.sessionIndex = sessionIndex;\n        this.type = 'FirstParty';\n        this.user = __WEBPACK_IMPORTED_MODULE_0__auth_user__[\"a\" /* User */].FIRST_PARTY;\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(this.gapi &&\n            this.gapi['auth'] &&\n            this.gapi['auth']['getAuthHeaderValueForFirstParty'], 'unexpected gapi interface');\n    }\n    Object.defineProperty(FirstPartyToken.prototype, \"authHeaders\", {\n        get: function () {\n            return {\n                Authorization: this.gapi['auth']['getAuthHeaderValueForFirstParty']([]),\n                'X-Goog-AuthUser': this.sessionIndex\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FirstPartyToken;\n}());\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nvar FirstPartyCredentialsProvider = /** @class */ (function () {\n    function FirstPartyCredentialsProvider(gapi, sessionIndex) {\n        this.gapi = gapi;\n        this.sessionIndex = sessionIndex;\n        Object(__WEBPACK_IMPORTED_MODULE_1__util_assert__[\"a\" /* assert */])(this.gapi &&\n            this.gapi['auth'] &&\n            this.gapi['auth']['getAuthHeaderValueForFirstParty'], 'unexpected gapi interface');\n    }\n    FirstPartyCredentialsProvider.prototype.getToken = function (forceRefresh) {\n        return Promise.resolve(new FirstPartyToken(this.gapi, this.sessionIndex));\n    };\n    // TODO(33108925): can someone switch users w/o a page refresh?\n    // TODO(33110621): need to understand token/session lifecycle\n    FirstPartyCredentialsProvider.prototype.setUserChangeListener = function (listener) {\n        // Fire with initial uid.\n        listener(__WEBPACK_IMPORTED_MODULE_0__auth_user__[\"a\" /* User */].FIRST_PARTY);\n    };\n    FirstPartyCredentialsProvider.prototype.removeUserChangeListener = function () { };\n    return FirstPartyCredentialsProvider;\n}());\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\nfunction makeCredentialsProvider(credentials) {\n    if (!credentials) {\n        return new EmptyCredentialsProvider();\n    }\n    switch (credentials.type) {\n        case 'gapi':\n            return new FirstPartyCredentialsProvider(credentials.client, credentials.sessionIndex || '0');\n        case 'provider':\n            return credentials.client;\n        default:\n            throw new __WEBPACK_IMPORTED_MODULE_2__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_2__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, 'makeCredentialsProvider failed due to invalid credential type');\n    }\n}\n\n//# sourceMappingURL=credentials.js.map\n\n\n/***/ }),\n/* 309 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return User; });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nvar User = /** @class */ (function () {\n    function User(uid) {\n        this.uid = uid;\n    }\n    User.prototype.isUnauthenticated = function () {\n        return this.uid == null;\n    };\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n    User.prototype.toKey = function () {\n        if (this.isUnauthenticated()) {\n            return 'anonymous-user';\n        }\n        else {\n            return 'uid:' + this.uid;\n        }\n    };\n    User.prototype.isEqual = function (otherUser) {\n        return otherUser.uid === this.uid;\n    };\n    /** A user with a null UID. */\n    User.UNAUTHENTICATED = new User(null);\n    // TODO(mikelehen): Look into getting a proper uid-equivalent for\n    // non-FirebaseAuth providers.\n    User.GOOGLE_CREDENTIALS = new User('google-credentials-uid');\n    User.FIRST_PARTY = new User('first-party-uid');\n    return User;\n}());\n\n\n//# sourceMappingURL=user.js.map\n\n\n/***/ }),\n/* 310 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isPartialObserver;\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction isPartialObserver(obj) {\n    return implementsAnyMethods(obj, ['next', 'error', 'complete']);\n}\n/**\n * Returns true if obj is an object and contains at least one of the specified\n * methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    var object = obj;\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in object && typeof object[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\n\n//# sourceMappingURL=observer.js.map\n\n\n/***/ }),\n/* 311 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export ParsedSetData */\n/* unused harmony export ParsedUpdateData */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DocumentKeyReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return UserDataConverter; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = fieldPathFromArgument;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_timestamp__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_field_value__ = __webpack_require__(136);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_mutation__ = __webpack_require__(163);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_path__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_assert__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_error__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_input_validation__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_misc__ = __webpack_require__(122);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_obj__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__util_sorted_map__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__util_types__ = __webpack_require__(141);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__blob__ = __webpack_require__(181);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__field_path__ = __webpack_require__(186);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__field_value__ = __webpack_require__(211);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__geo_point__ = __webpack_require__(183);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar RESERVED_FIELD_REGEX = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\nvar ParsedSetData = /** @class */ (function () {\n    function ParsedSetData(data, fieldMask, fieldTransforms) {\n        this.data = data;\n        this.fieldMask = fieldMask;\n        this.fieldTransforms = fieldTransforms;\n    }\n    ParsedSetData.prototype.toMutations = function (key, precondition) {\n        var mutations = [];\n        if (this.fieldMask !== null) {\n            mutations.push(new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"e\" /* PatchMutation */](key, this.data, this.fieldMask, precondition));\n        }\n        else {\n            mutations.push(new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"h\" /* SetMutation */](key, this.data, precondition));\n        }\n        if (this.fieldTransforms.length > 0) {\n            mutations.push(new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"i\" /* TransformMutation */](key, this.fieldTransforms));\n        }\n        return mutations;\n    };\n    return ParsedSetData;\n}());\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nvar ParsedUpdateData = /** @class */ (function () {\n    function ParsedUpdateData(data, fieldMask, fieldTransforms) {\n        this.data = data;\n        this.fieldMask = fieldMask;\n        this.fieldTransforms = fieldTransforms;\n    }\n    ParsedUpdateData.prototype.toMutations = function (key, precondition) {\n        var mutations = [\n            new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"e\" /* PatchMutation */](key, this.data, this.fieldMask, precondition)\n        ];\n        if (this.fieldTransforms.length > 0) {\n            mutations.push(new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"i\" /* TransformMutation */](key, this.fieldTransforms));\n        }\n        return mutations;\n    };\n    return ParsedUpdateData;\n}());\n\n/*\n * Represents what type of API method provided the data being parsed; useful\n * for determining which error conditions apply during parsing and providing\n * better error messages.\n */\nvar UserDataSource;\n(function (UserDataSource) {\n    UserDataSource[UserDataSource[\"Set\"] = 0] = \"Set\";\n    UserDataSource[UserDataSource[\"Update\"] = 1] = \"Update\";\n    UserDataSource[UserDataSource[\"MergeSet\"] = 2] = \"MergeSet\";\n    UserDataSource[UserDataSource[\"QueryValue\"] = 3] = \"QueryValue\"; // from a where clause or cursor bound\n})(UserDataSource || (UserDataSource = {}));\nfunction isWrite(dataSource) {\n    switch (dataSource) {\n        case UserDataSource.Set: // fall through\n        case UserDataSource.MergeSet: // fall through\n        case UserDataSource.Update:\n            return true;\n        case UserDataSource.QueryValue:\n            return false;\n        default:\n            throw Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])(\"Unexpected case for UserDataSource: \" + dataSource);\n    }\n}\n/** A \"context\" object passed around while parsing user data. */\nvar ParseContext = /** @class */ (function () {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param dataSource Indicates what kind of API method this data came from.\n     * @param methodName The name of the method the user called to create this\n     *     ParseContext.\n     * @param path A path within the object being parsed. This could be an empty\n     *     path (in which case the context represents the root of the data being\n     *     parsed), or a nonempty path (indicating the context represents a nested\n     *     location within the data).\n     * @param arrayElement Whether or not this context corresponds to an element\n     *     of an array.\n     * @param fieldTransforms A mutable list of field transforms encountered while\n     *     parsing the data.\n     * @param fieldMask A mutable list of field paths encountered while parsing\n     *     the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    function ParseContext(dataSource, methodName, path, arrayElement, fieldTransforms, fieldMask) {\n        this.dataSource = dataSource;\n        this.methodName = methodName;\n        this.path = path;\n        this.arrayElement = arrayElement;\n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        if (fieldTransforms === undefined) {\n            this.validatePath();\n        }\n        this.arrayElement = arrayElement !== undefined ? arrayElement : false;\n        this.fieldTransforms = fieldTransforms || [];\n        this.fieldMask = fieldMask || [];\n    }\n    ParseContext.prototype.childContextForField = function (field) {\n        var childPath = this.path == null ? null : this.path.child(field);\n        var context = new ParseContext(this.dataSource, this.methodName, childPath, \n        /*arrayElement=*/ false, this.fieldTransforms, this.fieldMask);\n        context.validatePathSegment(field);\n        return context;\n    };\n    ParseContext.prototype.childContextForFieldPath = function (field) {\n        var childPath = this.path == null ? null : this.path.child(field);\n        var context = new ParseContext(this.dataSource, this.methodName, childPath, \n        /*arrayElement=*/ false, this.fieldTransforms, this.fieldMask);\n        context.validatePath();\n        return context;\n    };\n    ParseContext.prototype.childContextForArray = function (index) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // null.\n        return new ParseContext(this.dataSource, this.methodName, \n        /*path=*/ null, \n        /*arrayElement=*/ true, this.fieldTransforms, this.fieldMask);\n    };\n    ParseContext.prototype.createError = function (reason) {\n        var fieldDescription = this.path === null || this.path.isEmpty()\n            ? ''\n            : \" (found in field \" + this.path.toString() + \")\";\n        return new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + this.methodName + \"() called with invalid data. \" +\n            reason +\n            fieldDescription);\n    };\n    ParseContext.prototype.validatePath = function () {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path === null) {\n            return;\n        }\n        for (var i = 0; i < this.path.length; i++) {\n            this.validatePathSegment(this.path.get(i));\n        }\n    };\n    ParseContext.prototype.validatePathSegment = function (segment) {\n        if (isWrite(this.dataSource) && RESERVED_FIELD_REGEX.test(segment)) {\n            throw this.createError('Document fields cannot begin and end with __');\n        }\n    };\n    ParseContext.prototype.isWrite = function () {\n        return (this.dataSource === UserDataSource.Set ||\n            this.dataSource === UserDataSource.Update);\n    };\n    return ParseContext;\n}());\n/**\n * A placeholder object for DocumentReferences in this file, in order to\n * avoid a circular dependency. See the comments for `DataPreConverter` for\n * the full context.\n */\nvar DocumentKeyReference = /** @class */ (function () {\n    function DocumentKeyReference(databaseId, key) {\n        this.databaseId = databaseId;\n        this.key = key;\n    }\n    return DocumentKeyReference;\n}());\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nvar UserDataConverter = /** @class */ (function () {\n    function UserDataConverter(preConverter) {\n        this.preConverter = preConverter;\n    }\n    /** Parse document data from a non-merge set() call. */\n    UserDataConverter.prototype.parseSetData = function (methodName, input) {\n        var context = new ParseContext(UserDataSource.Set, methodName, __WEBPACK_IMPORTED_MODULE_3__model_path__[\"a\" /* FieldPath */].EMPTY_PATH);\n        validatePlainObject('Data must be an object, but it was:', context, input);\n        var updateData = this.parseData(input, context);\n        return new ParsedSetData(updateData, \n        /* fieldMask= */ null, context.fieldTransforms);\n    };\n    /** Parse document data from a set() call with '{merge:true}'. */\n    UserDataConverter.prototype.parseMergeData = function (methodName, input) {\n        var context = new ParseContext(UserDataSource.MergeSet, methodName, __WEBPACK_IMPORTED_MODULE_3__model_path__[\"a\" /* FieldPath */].EMPTY_PATH);\n        validatePlainObject('Data must be an object, but it was:', context, input);\n        var updateData = this.parseData(input, context);\n        var fieldMask = new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"b\" /* FieldMask */](context.fieldMask);\n        return new ParsedSetData(updateData, fieldMask, context.fieldTransforms);\n    };\n    /** Parse update data from an update() call. */\n    UserDataConverter.prototype.parseUpdateData = function (methodName, input) {\n        var _this = this;\n        var context = new ParseContext(UserDataSource.Update, methodName, __WEBPACK_IMPORTED_MODULE_3__model_path__[\"a\" /* FieldPath */].EMPTY_PATH);\n        validatePlainObject('Data must be an object, but it was:', context, input);\n        var fieldMaskPaths = [];\n        var updateData = __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"i\" /* ObjectValue */].EMPTY;\n        __WEBPACK_IMPORTED_MODULE_8__util_obj__[\"c\" /* forEach */](input, function (key, value) {\n            var path = fieldPathFromDotSeparatedString(methodName, key);\n            var childContext = context.childContextForFieldPath(path);\n            value = _this.runPreConverter(value, childContext);\n            if (value instanceof __WEBPACK_IMPORTED_MODULE_13__field_value__[\"a\" /* DeleteFieldValueImpl */]) {\n                // Add it to the field mask, but don't add anything to updateData.\n                fieldMaskPaths.push(path);\n            }\n            else {\n                var parsedValue = _this.parseData(value, childContext);\n                if (parsedValue != null) {\n                    fieldMaskPaths.push(path);\n                    updateData = updateData.set(path, parsedValue);\n                }\n            }\n        });\n        var mask = new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"b\" /* FieldMask */](fieldMaskPaths);\n        return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n    };\n    /** Parse update data from a list of field/value arguments. */\n    UserDataConverter.prototype.parseUpdateVarargs = function (methodName, field, value, moreFieldsAndValues) {\n        var context = new ParseContext(UserDataSource.Update, methodName, __WEBPACK_IMPORTED_MODULE_3__model_path__[\"a\" /* FieldPath */].EMPTY_PATH);\n        var keys = [fieldPathFromArgument(methodName, field)];\n        var values = [value];\n        if (moreFieldsAndValues.length % 2 !== 0) {\n            throw new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + methodName + \"() needs to be called with an even number \" +\n                'of arguments that alternate between field names and values.');\n        }\n        for (var i = 0; i < moreFieldsAndValues.length; i += 2) {\n            keys.push(fieldPathFromArgument(methodName, moreFieldsAndValues[i]));\n            values.push(moreFieldsAndValues[i + 1]);\n        }\n        var fieldMaskPaths = [];\n        var updateData = __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"i\" /* ObjectValue */].EMPTY;\n        for (var i = 0; i < keys.length; ++i) {\n            var path = keys[i];\n            var childContext = context.childContextForFieldPath(path);\n            var value_1 = this.runPreConverter(values[i], childContext);\n            if (value_1 instanceof __WEBPACK_IMPORTED_MODULE_13__field_value__[\"a\" /* DeleteFieldValueImpl */]) {\n                // Add it to the field mask, but don't add anything to updateData.\n                fieldMaskPaths.push(path);\n            }\n            else {\n                var parsedValue = this.parseData(value_1, childContext);\n                if (parsedValue != null) {\n                    fieldMaskPaths.push(path);\n                    updateData = updateData.set(path, parsedValue);\n                }\n            }\n        }\n        var mask = new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"b\" /* FieldMask */](fieldMaskPaths);\n        return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n    };\n    /**\n     * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n     * bound).\n     */\n    UserDataConverter.prototype.parseQueryValue = function (methodName, input) {\n        var context = new ParseContext(UserDataSource.QueryValue, methodName, __WEBPACK_IMPORTED_MODULE_3__model_path__[\"a\" /* FieldPath */].EMPTY_PATH);\n        var parsed = this.parseData(input, context);\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(parsed != null, 'Parsed data should not be null.');\n        Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(context.fieldTransforms.length === 0, 'Field transforms should have been disallowed.');\n        return parsed;\n    };\n    /** Sends data through this.preConverter, handling any thrown errors. */\n    UserDataConverter.prototype.runPreConverter = function (input, context) {\n        try {\n            return this.preConverter(input);\n        }\n        catch (e) {\n            var message = errorMessage(e);\n            throw context.createError(message);\n        }\n    };\n    /**\n     * Internal helper for parsing user data.\n     *\n     * @param input Data to be parsed.\n     * @param context A context object representing the current path being parsed,\n     * the source of the data being parsed, etc.\n     * @return The parsed value, or null if the value was a FieldValue sentinel\n     * that should not be included in the resulting parsed data.\n     */\n    UserDataConverter.prototype.parseData = function (input, context) {\n        input = this.runPreConverter(input, context);\n        if (input instanceof Array) {\n            // TODO(b/34871131): Include the path containing the array in the error\n            // message.\n            if (context.arrayElement) {\n                throw context.createError('Nested arrays are not supported');\n            }\n            // If context.path is null we are already inside an array and we don't\n            // support field mask paths more granular than the top-level array.\n            if (context.path) {\n                context.fieldMask.push(context.path);\n            }\n            return this.parseArray(input, context);\n        }\n        else if (looksLikeJsonObject(input)) {\n            validatePlainObject('Unsupported field value:', context, input);\n            return this.parseObject(input, context);\n        }\n        else {\n            // If context.path is null, we are inside an array and we should have\n            // already added the root of the array to the field mask.\n            if (context.path) {\n                context.fieldMask.push(context.path);\n            }\n            return this.parseScalarValue(input, context);\n        }\n    };\n    UserDataConverter.prototype.parseArray = function (array, context) {\n        var result = [];\n        var entryIndex = 0;\n        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n            var entry = array_1[_i];\n            var parsedEntry = this.parseData(entry, context.childContextForArray(entryIndex));\n            if (parsedEntry == null) {\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                parsedEntry = __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"h\" /* NullValue */].INSTANCE;\n            }\n            result.push(parsedEntry);\n            entryIndex++;\n        }\n        return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"a\" /* ArrayValue */](result);\n    };\n    UserDataConverter.prototype.parseObject = function (obj, context) {\n        var _this = this;\n        var result = new __WEBPACK_IMPORTED_MODULE_9__util_sorted_map__[\"a\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_7__util_misc__[\"f\" /* primitiveComparator */]);\n        __WEBPACK_IMPORTED_MODULE_8__util_obj__[\"c\" /* forEach */](obj, function (key, val) {\n            var parsedValue = _this.parseData(val, context.childContextForField(key));\n            if (parsedValue != null) {\n                result = result.insert(key, parsedValue);\n            }\n        });\n        return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"i\" /* ObjectValue */](result);\n    };\n    /**\n     * Helper to parse a scalar value (i.e. not an Object or Array)\n     *\n     * @return The parsed value, or null if the value was a FieldValue sentinel\n     * that should not be included in the resulting parsed data.\n     */\n    UserDataConverter.prototype.parseScalarValue = function (value, context) {\n        if (value === null) {\n            return __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"h\" /* NullValue */].INSTANCE;\n        }\n        else if (typeof value === 'number') {\n            if (__WEBPACK_IMPORTED_MODULE_10__util_types__[\"b\" /* isSafeInteger */](value)) {\n                return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"g\" /* IntegerValue */](value);\n            }\n            else {\n                return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"d\" /* DoubleValue */](value);\n            }\n        }\n        else if (typeof value === 'boolean') {\n            return __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"c\" /* BooleanValue */].of(value);\n        }\n        else if (typeof value === 'string') {\n            return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"l\" /* StringValue */](value);\n        }\n        else if (value instanceof Date) {\n            return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"m\" /* TimestampValue */](__WEBPACK_IMPORTED_MODULE_0__core_timestamp__[\"a\" /* Timestamp */].fromDate(value));\n        }\n        else if (value instanceof __WEBPACK_IMPORTED_MODULE_14__geo_point__[\"a\" /* GeoPoint */]) {\n            return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"f\" /* GeoPointValue */](value);\n        }\n        else if (value instanceof __WEBPACK_IMPORTED_MODULE_11__blob__[\"a\" /* Blob */]) {\n            return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"b\" /* BlobValue */](value);\n        }\n        else if (value instanceof DocumentKeyReference) {\n            return new __WEBPACK_IMPORTED_MODULE_1__model_field_value__[\"j\" /* RefValue */](value.databaseId, value.key);\n        }\n        else if (value instanceof __WEBPACK_IMPORTED_MODULE_13__field_value__[\"b\" /* FieldValueImpl */]) {\n            if (value instanceof __WEBPACK_IMPORTED_MODULE_13__field_value__[\"a\" /* DeleteFieldValueImpl */]) {\n                if (context.dataSource === UserDataSource.MergeSet) {\n                    return null;\n                }\n                else if (context.dataSource === UserDataSource.Update) {\n                    Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"a\" /* assert */])(context.path == null || context.path.length > 0, 'FieldValue.delete() at the top level should have already' +\n                        ' been handled.');\n                    throw context.createError('FieldValue.delete() can only appear at the top level ' +\n                        'of your update data');\n                }\n                else {\n                    // We shouldn't encounter delete sentinels for queries or non-merge set() calls.\n                    throw context.createError('FieldValue.delete() can only be used with update() and set() with {merge:true}');\n                }\n            }\n            else if (value instanceof __WEBPACK_IMPORTED_MODULE_13__field_value__[\"d\" /* ServerTimestampFieldValueImpl */]) {\n                if (!isWrite(context.dataSource)) {\n                    throw context.createError('FieldValue.serverTimestamp() can only be used with set()' +\n                        ' and update()');\n                }\n                if (context.path === null) {\n                    throw context.createError('FieldValue.serverTimestamp() is not currently' +\n                        ' supported inside arrays');\n                }\n                context.fieldTransforms.push(new __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"c\" /* FieldTransform */](context.path, __WEBPACK_IMPORTED_MODULE_2__model_mutation__[\"g\" /* ServerTimestampTransform */].instance));\n                // Return null so this value is omitted from the parsed result.\n                return null;\n            }\n            else {\n                return Object(__WEBPACK_IMPORTED_MODULE_4__util_assert__[\"b\" /* fail */])('Unknown FieldValue type: ' + value);\n            }\n        }\n        else {\n            throw context.createError(\"Unsupported field value: \" + Object(__WEBPACK_IMPORTED_MODULE_6__util_input_validation__[\"n\" /* valueDescription */])(value));\n        }\n    };\n    return UserDataConverter;\n}());\n\n/**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */\nfunction looksLikeJsonObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        !(input instanceof Array) &&\n        !(input instanceof Date) &&\n        !(input instanceof __WEBPACK_IMPORTED_MODULE_14__geo_point__[\"a\" /* GeoPoint */]) &&\n        !(input instanceof __WEBPACK_IMPORTED_MODULE_11__blob__[\"a\" /* Blob */]) &&\n        !(input instanceof DocumentKeyReference) &&\n        !(input instanceof __WEBPACK_IMPORTED_MODULE_13__field_value__[\"b\" /* FieldValueImpl */]));\n}\nfunction validatePlainObject(message, context, input) {\n    if (!looksLikeJsonObject(input) || !Object(__WEBPACK_IMPORTED_MODULE_6__util_input_validation__[\"b\" /* isPlainObject */])(input)) {\n        var description = Object(__WEBPACK_IMPORTED_MODULE_6__util_input_validation__[\"n\" /* valueDescription */])(input);\n        if (description === 'an object') {\n            // Massage the error if it was an object.\n            throw context.createError(message + ' a custom object');\n        }\n        else {\n            throw context.createError(message + ' ' + description);\n        }\n    }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nfunction fieldPathFromArgument(methodName, path) {\n    if (path instanceof __WEBPACK_IMPORTED_MODULE_12__field_path__[\"a\" /* FieldPath */]) {\n        return path._internalPath;\n    }\n    else if (typeof path === 'string') {\n        return fieldPathFromDotSeparatedString(methodName, path);\n    }\n    else {\n        var message = 'Field path arguments must be of type string or FieldPath.';\n        throw new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + methodName + \"() called with invalid data. \" + message);\n    }\n}\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName The publicly visible method name\n * @param path The dot-separated string form of a field path which will be split\n * on dots.\n */\nfunction fieldPathFromDotSeparatedString(methodName, path) {\n    try {\n        return Object(__WEBPACK_IMPORTED_MODULE_12__field_path__[\"b\" /* fromDotSeparatedString */])(path)._internalPath;\n    }\n    catch (e) {\n        var message = errorMessage(e);\n        throw new __WEBPACK_IMPORTED_MODULE_5__util_error__[\"b\" /* FirestoreError */](__WEBPACK_IMPORTED_MODULE_5__util_error__[\"a\" /* Code */].INVALID_ARGUMENT, \"Function \" + methodName + \"() called with invalid data. \" + message);\n    }\n}\n/**\n * Extracts the message from a caught exception, which should be an Error object\n * though JS doesn't guarantee that.\n */\nfunction errorMessage(error) {\n    return error instanceof Error ? error.message : error.toString();\n}\n\n//# sourceMappingURL=user_data_converter.js.map\n\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/5.921f0179.chunk.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SDK_VERSION } from '../core/version';\nimport { error } from './log';\n/**\n * Unconditionally fails, throwing an Error with the given message.\n *\n * Returns any so it can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nexport function fail(failure) {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    var message = \"FIRESTORE (\" + SDK_VERSION + \") INTERNAL ASSERTION FAILED: \" + failure;\n    error(message);\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw new Error(message);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n */\nexport function assert(assertion, message) {\n    if (!assertion) {\n        fail(message);\n    }\n}\n\n//# sourceMappingURL=assert.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/assert.js\n// module id = 117\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// TODO(mcg): Change to a string enum once we've upgraded to typescript 2.4.\n//  tslint:disable-next-line:variable-name Intended to look like a TS 2.4 enum\nexport var Code = {\n    // Causes are copied from:\n    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n    /** Not an error; returned on success. */\n    OK: 'ok',\n    /** The operation was cancelled (typically by the caller). */\n    CANCELLED: 'cancelled',\n    /** Unknown error or an error from a different error domain. */\n    UNKNOWN: 'unknown',\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    INVALID_ARGUMENT: 'invalid-argument',\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\n    /** Some requested entity (e.g., file or directory) was not found. */\n    NOT_FOUND: 'not-found',\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    ALREADY_EXISTS: 'already-exists',\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    PERMISSION_DENIED: 'permission-denied',\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    UNAUTHENTICATED: 'unauthenticated',\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operation's execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    FAILED_PRECONDITION: 'failed-precondition',\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    ABORTED: 'aborted',\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    OUT_OF_RANGE: 'out-of-range',\n    /** Operation is not implemented or not supported/enabled in this service. */\n    UNIMPLEMENTED: 'unimplemented',\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    INTERNAL: 'internal',\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    UNAVAILABLE: 'unavailable',\n    /** Unrecoverable data loss or corruption. */\n    DATA_LOSS: 'data-loss'\n};\n/**\n * An error class used for Firestore-generated errors. Ideally we should be\n * using FirebaseError, but integrating with it is overly arduous at the moment,\n * so we define our own compatible error class (with a `name` of 'FirebaseError'\n * and compatible `code` and `message` fields.)\n */\nvar FirestoreError = /** @class */ (function (_super) {\n    __extends(FirestoreError, _super);\n    function FirestoreError(code, message) {\n        var _this = _super.call(this, message) || this;\n        _this.code = code;\n        _this.message = message;\n        _this.name = 'FirebaseError';\n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        _this.toString = function () { return _this.name + \": [code=\" + _this.code + \"]: \" + _this.message; };\n        return _this;\n    }\n    return FirestoreError;\n}(Error));\nexport { FirestoreError };\n\n//# sourceMappingURL=error.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/error.js\n// module id = 118\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\nimport { DocumentKey } from './document_key';\nvar EMPTY_MAYBE_DOCUMENT_MAP = new SortedMap(DocumentKey.comparator);\nexport function maybeDocumentMap() {\n    return EMPTY_MAYBE_DOCUMENT_MAP;\n}\nvar EMPTY_DOCUMENT_MAP = new SortedMap(DocumentKey.comparator);\nexport function documentMap() {\n    return EMPTY_DOCUMENT_MAP;\n}\nvar EMPTY_DOCUMENT_VERSION_MAP = new SortedMap(DocumentKey.comparator);\nexport function documentVersionMap() {\n    return EMPTY_DOCUMENT_VERSION_MAP;\n}\nvar EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\nexport function documentKeySet() {\n    return EMPTY_DOCUMENT_KEY_SET;\n}\n\n//# sourceMappingURL=collections.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/model/collections.js\n// module id = 119\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert';\nimport { ResourcePath } from './path';\nvar DocumentKey = /** @class */ (function () {\n    function DocumentKey(path) {\n        this.path = path;\n        assert(DocumentKey.isDocumentKey(path), 'Invalid DocumentKey with an odd number of segments: ' +\n            path.toArray().join('/'));\n    }\n    DocumentKey.prototype.isEqual = function (other) {\n        return (other !== null && ResourcePath.comparator(this.path, other.path) === 0);\n    };\n    DocumentKey.prototype.toString = function () {\n        return this.path.toString();\n    };\n    DocumentKey.comparator = function (k1, k2) {\n        return ResourcePath.comparator(k1.path, k2.path);\n    };\n    DocumentKey.isDocumentKey = function (path) {\n        return path.length % 2 === 0;\n    };\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param path The segments of the path to the document\n     * @return A new instance of DocumentKey\n     */\n    DocumentKey.fromSegments = function (segments) {\n        return new DocumentKey(new ResourcePath(segments.slice()));\n    };\n    /**\n     * Creates and returns a new document key using '/' to split the string into\n     * segments.\n     *\n     * @param path The slash-separated path string to the document\n     * @return A new instance of DocumentKey\n     */\n    DocumentKey.fromPathString = function (path) {\n        return new DocumentKey(ResourcePath.fromString(path));\n    };\n    DocumentKey.EMPTY = new DocumentKey(new ResourcePath([]));\n    return DocumentKey;\n}());\nexport { DocumentKey };\n\n//# sourceMappingURL=document_key.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/model/document_key.js\n// module id = 120\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* tslint:disable:no-console */\nimport { SDK_VERSION } from '../core/version';\nimport { PlatformSupport } from '../platform/platform';\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 2] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\nvar logLevel = LogLevel.ERROR;\n// Helper methods are needed because variables can't be exported as read/write\nexport function getLogLevel() {\n    return logLevel;\n}\nexport function setLogLevel(newLevel) {\n    logLevel = newLevel;\n}\nexport function debug(tag, msg) {\n    var obj = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        obj[_i - 2] = arguments[_i];\n    }\n    if (logLevel <= LogLevel.DEBUG) {\n        var time = new Date().toISOString();\n        var args = obj.map(argToString);\n        console.log.apply(console, [\"Firestore (\" + SDK_VERSION + \") \" + time + \" [\" + tag + \"]: \" + msg].concat(args));\n    }\n}\nexport function error(msg) {\n    var obj = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        obj[_i - 1] = arguments[_i];\n    }\n    if (logLevel <= LogLevel.ERROR) {\n        var time = new Date().toISOString();\n        var args = obj.map(argToString);\n        console.error.apply(console, [\"Firestore (\" + SDK_VERSION + \") \" + time + \": \" + msg].concat(args));\n    }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction argToString(obj) {\n    if (typeof obj === 'string') {\n        return obj;\n    }\n    else {\n        var platform = PlatformSupport.getPlatform();\n        try {\n            return platform.formatJSON(obj);\n        }\n        catch (e) {\n            // Converting to JSON failed, just log the object directly\n            return obj;\n        }\n    }\n}\n\n//# sourceMappingURL=log.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/log.js\n// module id = 121\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from './assert';\n// tslint:disable-next-line:class-as-namespace\nvar AutoId = /** @class */ (function () {\n    function AutoId() {\n    }\n    AutoId.newId = function () {\n        // Alphanumeric characters\n        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var autoId = '';\n        for (var i = 0; i < 20; i++) {\n            autoId += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        assert(autoId.length === 20, 'Invalid auto ID: ' + autoId);\n        return autoId;\n    };\n    return AutoId;\n}());\nexport { AutoId };\nexport function primitiveComparator(left, right) {\n    if (left < right)\n        return -1;\n    if (left > right)\n        return 1;\n    return 0;\n}\n/** Helper to compare nullable (or undefined-able) objects using isEqual(). */\nexport function equals(left, right) {\n    if (left !== null && left !== undefined) {\n        return !!(right && left.isEqual(right));\n    }\n    else {\n        // HACK: Explicitly cast since TypeScript's type narrowing apparently isn't\n        // smart enough.\n        return left === right;\n    }\n}\n/** Helper to compare arrays using isEqual(). */\nexport function arrayEquals(left, right) {\n    if (left.length !== right.length) {\n        return false;\n    }\n    for (var i = 0; i < left.length; i++) {\n        if (!left[i].isEqual(right[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns the largest lexicographically smaller string of equal or smaller\n * length. Returns an empty string if there is no such predecessor (if the input\n * is empty).\n *\n * Strings returned from this method can be invalid UTF-16 but this is sufficent\n * in use for indexeddb because that depends on lexicographical ordering but\n * shouldn't be used elsewhere.\n */\nexport function immediatePredecessor(s) {\n    // We can decrement the last character in the string and be done\n    // unless that character is 0 (0x0000), in which case we have to erase the\n    // last character.\n    var lastIndex = s.length - 1;\n    if (s.length === 0) {\n        // Special case the empty string.\n        return '';\n    }\n    else if (s.charAt(lastIndex) === '\\0') {\n        return s.substring(0, lastIndex);\n    }\n    else {\n        return (s.substring(0, lastIndex) +\n            String.fromCharCode(s.charCodeAt(lastIndex) - 1));\n    }\n}\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */\nexport function immediateSuccessor(s) {\n    // Return the input string, with an additional NUL byte appended.\n    return s + '\\0';\n}\n\n//# sourceMappingURL=misc.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/misc.js\n// module id = 122\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { fail } from '../util/assert';\n/**\n * PersistencePromise<> is essentially a re-implementation of Promise<> except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise<> implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */\nvar PersistencePromise = /** @class */ (function () {\n    function PersistencePromise(callback) {\n        var _this = this;\n        // NOTE: next/catchCallback will always point to our own wrapper functions,\n        // not the user's raw next() or catch() callbacks.\n        // tslint:disable-next-line:no-any Accept any result type for the next call in the Promise chain.\n        this.nextCallback = null;\n        // tslint:disable-next-line:no-any Accept any result type for the error handler.\n        this.catchCallback = null;\n        // When the operation resolves, we'll set result or error and mark isDone.\n        this.result = undefined;\n        this.error = undefined;\n        this.isDone = false;\n        // Set to true when .then() or .catch() are called and prevents additional\n        // chaining.\n        this.callbackAttached = false;\n        callback(function (value) {\n            _this.isDone = true;\n            _this.result = value;\n            if (_this.nextCallback) {\n                // value should be defined unless T is Void, but we can't express\n                // that in the type system.\n                _this.nextCallback(value);\n            }\n        }, function (error) {\n            _this.isDone = true;\n            _this.error = error;\n            if (_this.catchCallback) {\n                _this.catchCallback(error);\n            }\n        });\n    }\n    PersistencePromise.prototype.catch = function (fn) {\n        return this.next(undefined, fn);\n    };\n    PersistencePromise.prototype.next = function (nextFn, catchFn) {\n        var _this = this;\n        if (this.callbackAttached) {\n            fail('Called next() or catch() twice for PersistencePromise');\n        }\n        this.callbackAttached = true;\n        if (this.isDone) {\n            if (!this.error) {\n                return this.wrapSuccess(nextFn, this.result);\n            }\n            else {\n                return this.wrapFailure(catchFn, this.error);\n            }\n        }\n        else {\n            return new PersistencePromise(function (resolve, reject) {\n                _this.nextCallback = function (value) {\n                    _this.wrapSuccess(nextFn, value).next(resolve, reject);\n                };\n                _this.catchCallback = function (error) {\n                    _this.wrapFailure(catchFn, error).next(resolve, reject);\n                };\n            });\n        }\n    };\n    PersistencePromise.prototype.toPromise = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.next(resolve, reject);\n        });\n    };\n    PersistencePromise.prototype.wrapUserFunction = function (fn) {\n        try {\n            var result = fn();\n            if (result instanceof PersistencePromise) {\n                return result;\n            }\n            else {\n                return PersistencePromise.resolve(result);\n            }\n        }\n        catch (e) {\n            return PersistencePromise.reject(e);\n        }\n    };\n    PersistencePromise.prototype.wrapSuccess = function (nextFn, value) {\n        if (nextFn) {\n            return this.wrapUserFunction(function () { return nextFn(value); });\n        }\n        else {\n            // If there's no nextFn, then R must be the same as T but we\n            // can't express that in the type system.\n            // tslint:disable-next-line:no-any\n            return PersistencePromise.resolve(value);\n        }\n    };\n    PersistencePromise.prototype.wrapFailure = function (catchFn, error) {\n        if (catchFn) {\n            return this.wrapUserFunction(function () { return catchFn(error); });\n        }\n        else {\n            return PersistencePromise.reject(error);\n        }\n    };\n    PersistencePromise.resolve = function (result) {\n        return new PersistencePromise(function (resolve, reject) {\n            resolve(result);\n        });\n    };\n    PersistencePromise.reject = function (error) {\n        return new PersistencePromise(function (resolve, reject) {\n            reject(error);\n        });\n    };\n    PersistencePromise.waitFor = function (\n        // tslint:disable-next-line:no-any Accept all Promise types in waitFor().\n        all) {\n        return all.reduce(function (promise, nextPromise, idx) {\n            return promise.next(function () {\n                return nextPromise;\n            });\n        }, PersistencePromise.resolve());\n    };\n    PersistencePromise.map = function (all) {\n        var results = [];\n        var first = true;\n        // initial is ignored, so we can cheat on the type.\n        // tslint:disable-next-line:no-any\n        var initial = PersistencePromise.resolve(null);\n        return all\n            .reduce(function (promise, nextPromise) {\n            return promise.next(function (result) {\n                if (!first) {\n                    results.push(result);\n                }\n                first = false;\n                return nextPromise;\n            });\n        }, initial)\n            .next(function (result) {\n            results.push(result);\n            return results;\n        });\n    };\n    return PersistencePromise;\n}());\nexport { PersistencePromise };\n\n//# sourceMappingURL=persistence_promise.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/persistence_promise.js\n// module id = 124\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { fail } from '../util/assert';\nimport { DocumentKey } from './document_key';\nvar Document = /** @class */ (function () {\n    function Document(key, version, data, options) {\n        this.key = key;\n        this.version = version;\n        this.data = data;\n        this.hasLocalMutations = options.hasLocalMutations;\n    }\n    Document.prototype.field = function (path) {\n        return this.data.field(path);\n    };\n    Document.prototype.fieldValue = function (path) {\n        var field = this.field(path);\n        return field ? field.value() : undefined;\n    };\n    Document.prototype.value = function () {\n        return this.data.value();\n    };\n    Document.prototype.isEqual = function (other) {\n        return (other instanceof Document &&\n            this.key.isEqual(other.key) &&\n            this.version.isEqual(other.version) &&\n            this.data.isEqual(other.data) &&\n            this.hasLocalMutations === other.hasLocalMutations);\n    };\n    Document.prototype.toString = function () {\n        return (\"Document(\" + this.key + \", \" + this.version + \", \" + this.data.toString() + \", \" +\n            (\"{hasLocalMutations: \" + this.hasLocalMutations + \"})\"));\n    };\n    Document.compareByKey = function (d1, d2) {\n        return DocumentKey.comparator(d1.key, d2.key);\n    };\n    Document.compareByField = function (field, d1, d2) {\n        var v1 = d1.field(field);\n        var v2 = d2.field(field);\n        if (v1 !== undefined && v2 !== undefined) {\n            return v1.compareTo(v2);\n        }\n        else {\n            return fail(\"Trying to compare documents on fields that don't exist\");\n        }\n    };\n    return Document;\n}());\nexport { Document };\n/**\n * A class representing a deleted document.\n * Version is set to 0 if we don't point to any specific time, otherwise it\n * denotes time we know it didn't exist at.\n */\nvar NoDocument = /** @class */ (function () {\n    function NoDocument(key, version) {\n        this.key = key;\n        this.version = version;\n    }\n    NoDocument.prototype.toString = function () {\n        return \"NoDocument(\" + this.key + \", \" + this.version + \")\";\n    };\n    NoDocument.prototype.isEqual = function (other) {\n        return (other &&\n            other.version.isEqual(this.version) &&\n            other.key.isEqual(this.key));\n    };\n    NoDocument.compareByKey = function (d1, d2) {\n        return DocumentKey.comparator(d1.key, d2.key);\n    };\n    return NoDocument;\n}());\nexport { NoDocument };\n\n//# sourceMappingURL=document.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/model/document.js\n// module id = 125\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Timestamp } from './timestamp';\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nvar SnapshotVersion = /** @class */ (function () {\n    function SnapshotVersion(timestamp) {\n        this.timestamp = timestamp;\n    }\n    // TODO(b/34176344): Once we no longer need to use the old alpha protos,\n    // delete this constructor and use a timestamp-backed version everywhere.\n    SnapshotVersion.fromMicroseconds = function (value) {\n        var seconds = Math.floor(value / 1e6);\n        var nanos = (value % 1e6) * 1e3;\n        return new SnapshotVersion(new Timestamp(seconds, nanos));\n    };\n    SnapshotVersion.fromTimestamp = function (value) {\n        return new SnapshotVersion(value);\n    };\n    SnapshotVersion.forDeletedDoc = function () {\n        return SnapshotVersion.MIN;\n    };\n    SnapshotVersion.prototype.compareTo = function (other) {\n        return this.timestamp.compareTo(other.timestamp);\n    };\n    SnapshotVersion.prototype.isEqual = function (other) {\n        return this.timestamp.isEqual(other.timestamp);\n    };\n    /** Returns a number representation of the version for use in spec tests. */\n    SnapshotVersion.prototype.toMicroseconds = function () {\n        // Convert to microseconds.\n        return this.timestamp.seconds * 1e6 + this.timestamp.nanos / 1000;\n    };\n    SnapshotVersion.prototype.toString = function () {\n        return 'SnapshotVersion(' + this.timestamp.toString() + ')';\n    };\n    SnapshotVersion.prototype.toTimestamp = function () {\n        return this.timestamp;\n    };\n    SnapshotVersion.MIN = new SnapshotVersion(new Timestamp(0, 0));\n    return SnapshotVersion;\n}());\nexport { SnapshotVersion };\n\n//# sourceMappingURL=snapshot_version.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/snapshot_version.js\n// module id = 126\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from './assert';\nexport function contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function get(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key) ? obj[key] : null;\n}\nexport function size(obj) {\n    var count = 0;\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            count++;\n        }\n    }\n    return count;\n}\n/** Returns the given value if it's defined or the defaultValue otherwise. */\nexport function defaulted(value, defaultValue) {\n    return value !== undefined ? value : defaultValue;\n}\nexport function forEachNumber(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            var num = Number(key);\n            if (!isNaN(num)) {\n                fn(num, obj[key]);\n            }\n        }\n    }\n}\nexport function forEach(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n}\nexport function lookupOrInsert(obj, key, valFn) {\n    if (!contains(obj, key)) {\n        obj[key] = valFn();\n    }\n    return obj[key];\n}\nexport function isEmpty(obj) {\n    assert(obj != null && typeof obj === 'object', 'isEmpty() expects object parameter.');\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function shallowCopy(obj) {\n    assert(obj && typeof obj === 'object', 'shallowCopy() expects object parameter.');\n    var result = {};\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n//# sourceMappingURL=obj.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/obj.js\n// module id = 127\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { fail } from '../util/assert';\n/**\n * Provides singleton helpers where setup code can inject a platform at runtime.\n * setPlatform needs to be set before Firestore is used and must be set exactly\n * once.\n */\nvar PlatformSupport = /** @class */ (function () {\n    function PlatformSupport() {\n    }\n    PlatformSupport.setPlatform = function (platform) {\n        if (PlatformSupport.platform) {\n            fail('Platform already defined');\n        }\n        PlatformSupport.platform = platform;\n    };\n    PlatformSupport.getPlatform = function () {\n        if (!PlatformSupport.platform) {\n            fail('Platform not set');\n        }\n        return PlatformSupport.platform;\n    };\n    return PlatformSupport;\n}());\nexport { PlatformSupport };\n/**\n * Returns the representation of an empty \"proto\" byte string for the\n * platform.\n */\nexport function emptyByteString() {\n    return PlatformSupport.getPlatform().emptyByteString;\n}\n\n//# sourceMappingURL=platform.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/platform/platform.js\n// module id = 129\n// module chunks = 5","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 130\n// module chunks = 5 6 7","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nexport var DOCUMENT_KEY_NAME = '__name__';\n/**\n * Path represents an ordered sequence of string segments.\n */\nvar Path = /** @class */ (function () {\n    function Path(segments, offset, length) {\n        this.init(segments, offset, length);\n    }\n    /**\n     * An initialization method that can be called from outside the constructor.\n     * We need this so that we can have a non-static construct method that returns\n     * the polymorphic `this` type.\n     */\n    Path.prototype.init = function (segments, offset, length) {\n        if (offset === undefined) {\n            offset = 0;\n        }\n        else if (offset > segments.length) {\n            fail('offset ' + offset + ' out of range ' + segments.length);\n        }\n        if (length === undefined) {\n            length = segments.length - offset;\n        }\n        else if (length > segments.length - offset) {\n            fail('length ' + length + ' out of range ' + (segments.length - offset));\n        }\n        this.segments = segments;\n        this.offset = offset;\n        this.len = length;\n    };\n    /**\n     * Constructs a new instance of Path using the same concrete type as `this`.\n     * We need this instead of using the normal constructor, because polymorphic\n     * `this` doesn't work on static methods.\n     */\n    Path.prototype.construct = function (segments, offset, length) {\n        var path = Object.create(Object.getPrototypeOf(this));\n        path.init(segments, offset, length);\n        return path;\n    };\n    Object.defineProperty(Path.prototype, \"length\", {\n        get: function () {\n            return this.len;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.isEqual = function (other) {\n        return Path.comparator(this, other) === 0;\n    };\n    Path.prototype.child = function (nameOrPath) {\n        var segments = this.segments.slice(this.offset, this.limit());\n        if (nameOrPath instanceof Path) {\n            nameOrPath.forEach(function (segment) {\n                segments.push(segment);\n            });\n        }\n        else if (typeof nameOrPath === 'string') {\n            segments.push(nameOrPath);\n        }\n        else {\n            fail('Unknown parameter type for Path.child(): ' + nameOrPath);\n        }\n        return this.construct(segments);\n    };\n    /** The index of one past the last segment of the path. */\n    Path.prototype.limit = function () {\n        return this.offset + this.length;\n    };\n    Path.prototype.popFirst = function (size) {\n        size = size === undefined ? 1 : size;\n        assert(this.length >= size, \"Can't call popFirst() with less segments\");\n        return this.construct(this.segments, this.offset + size, this.length - size);\n    };\n    Path.prototype.popLast = function () {\n        assert(!this.isEmpty(), \"Can't call popLast() on empty path\");\n        return this.construct(this.segments, this.offset, this.length - 1);\n    };\n    Path.prototype.firstSegment = function () {\n        assert(!this.isEmpty(), \"Can't call firstSegment() on empty path\");\n        return this.segments[this.offset];\n    };\n    Path.prototype.lastSegment = function () {\n        assert(!this.isEmpty(), \"Can't call lastSegment() on empty path\");\n        return this.segments[this.limit() - 1];\n    };\n    Path.prototype.get = function (index) {\n        assert(index < this.length, 'Index out of range');\n        return this.segments[this.offset + index];\n    };\n    Path.prototype.isEmpty = function () {\n        return this.length === 0;\n    };\n    Path.prototype.isPrefixOf = function (other) {\n        if (other.length < this.length) {\n            return false;\n        }\n        for (var i = 0; i < this.length; i++) {\n            if (this.get(i) !== other.get(i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Path.prototype.forEach = function (fn) {\n        for (var i = this.offset, end = this.limit(); i < end; i++) {\n            fn(this.segments[i]);\n        }\n    };\n    Path.prototype.toArray = function () {\n        return this.segments.slice(this.offset, this.limit());\n    };\n    Path.comparator = function (p1, p2) {\n        var len = Math.min(p1.length, p2.length);\n        for (var i = 0; i < len; i++) {\n            var left = p1.get(i);\n            var right = p2.get(i);\n            if (left < right)\n                return -1;\n            if (left > right)\n                return 1;\n        }\n        if (p1.length < p2.length)\n            return -1;\n        if (p1.length > p2.length)\n            return 1;\n        return 0;\n    };\n    return Path;\n}());\nexport { Path };\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n */\nvar ResourcePath = /** @class */ (function (_super) {\n    __extends(ResourcePath, _super);\n    function ResourcePath() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ResourcePath.prototype.canonicalString = function () {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join('/');\n    };\n    ResourcePath.prototype.toString = function () {\n        return this.canonicalString();\n    };\n    /**\n     * Creates a resource path from the given slash-delimited string.\n     */\n    ResourcePath.fromString = function (path) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        if (path.indexOf('//') >= 0) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid path (\" + path + \"). Paths must not contain // in them.\");\n        }\n        // We may still have an empty segment at the beginning or end if they had a\n        // leading or trailing slash (which we allow).\n        var segments = path.split('/').filter(function (segment) { return segment.length > 0; });\n        return new ResourcePath(segments);\n    };\n    ResourcePath.EMPTY_PATH = new ResourcePath([]);\n    return ResourcePath;\n}(Path));\nexport { ResourcePath };\nvar identifierRegExp = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/** A dot-separated path for navigating sub-objects within a document. */\nvar FieldPath = /** @class */ (function (_super) {\n    __extends(FieldPath, _super);\n    function FieldPath() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n    FieldPath.isValidIdentifier = function (segment) {\n        return identifierRegExp.test(segment);\n    };\n    FieldPath.prototype.canonicalString = function () {\n        return this.toArray()\n            .map(function (str) {\n            str = str.replace('\\\\', '\\\\\\\\').replace('`', '\\\\`');\n            if (!FieldPath.isValidIdentifier(str)) {\n                str = '`' + str + '`';\n            }\n            return str;\n        })\n            .join('.');\n    };\n    FieldPath.prototype.toString = function () {\n        return this.canonicalString();\n    };\n    /**\n     * Returns true if this field references the key of a document.\n     */\n    FieldPath.prototype.isKeyField = function () {\n        return this.length === 1 && this.get(0) === DOCUMENT_KEY_NAME;\n    };\n    /**\n     * The field designating the key of a document.\n     */\n    FieldPath.keyField = function () {\n        return new FieldPath([DOCUMENT_KEY_NAME]);\n    };\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n    FieldPath.fromServerFormat = function (path) {\n        var segments = [];\n        var current = '';\n        var i = 0;\n        var addCurrentSegment = function () {\n            if (current.length === 0) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not be empty, begin \" +\n                    \"with '.', end with '.', or contain '..'\");\n            }\n            segments.push(current);\n            current = '';\n        };\n        var inBackticks = false;\n        while (i < path.length) {\n            var c = path[i];\n            if (c === '\\\\') {\n                if (i + 1 === path.length) {\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Path has trailing escape character: ' + path);\n                }\n                var next = path[i + 1];\n                if (!(next === '\\\\' || next === '.' || next === '`')) {\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Path has invalid escape sequence: ' + path);\n                }\n                current += next;\n                i += 2;\n            }\n            else if (c === '`') {\n                inBackticks = !inBackticks;\n                i++;\n            }\n            else if (c === '.' && !inBackticks) {\n                addCurrentSegment();\n                i++;\n            }\n            else {\n                current += c;\n                i++;\n            }\n        }\n        addCurrentSegment();\n        if (inBackticks) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Unterminated ` in path: ' + path);\n        }\n        return new FieldPath(segments);\n    };\n    FieldPath.EMPTY_PATH = new FieldPath([]);\n    return FieldPath;\n}(Path));\nexport { FieldPath };\n\n//# sourceMappingURL=path.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/model/path.js\n// module id = 133\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert, fail } from './assert';\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nvar SortedMap = /** @class */ (function () {\n    function SortedMap(comparator, root) {\n        this.comparator = comparator;\n        this.root = root ? root : LLRBNode.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    SortedMap.prototype.insert = function (key, value) {\n        return new SortedMap(this.comparator, this.root\n            .insert(key, value, this.comparator)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    // Returns a copy of the map, with the specified key removed.\n    SortedMap.prototype.remove = function (key) {\n        return new SortedMap(this.comparator, this.root\n            .remove(key, this.comparator)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    // Returns the value of the node with the given key, or null.\n    SortedMap.prototype.get = function (key) {\n        var node = this.root;\n        while (!node.isEmpty()) {\n            var cmp = this.comparator(key, node.key);\n            if (cmp === 0) {\n                return node.value;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                node = node.right;\n            }\n        }\n        return null;\n    };\n    // Returns the key of the item *before* the specified key, or null if key is\n    // the first item.\n    SortedMap.prototype.getPredecessorKey = function (key) {\n        var node = this.root;\n        var rightParent = null;\n        while (!node.isEmpty()) {\n            var cmp = this.comparator(key, node.key);\n            if (cmp === 0) {\n                if (!node.left.isEmpty()) {\n                    node = node.left;\n                    while (!node.right.isEmpty())\n                        node = node.right;\n                    return node.key;\n                }\n                else if (rightParent) {\n                    return rightParent.key;\n                }\n                else {\n                    return null; // first item.\n                }\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                rightParent = node;\n                node = node.right;\n            }\n        }\n        throw fail('Attempted to find predecessor key for a nonexistent key.' +\n            '  What gives?');\n    };\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    SortedMap.prototype.indexOf = function (key) {\n        // Number of nodes that were pruned when descending right\n        var prunedNodes = 0;\n        var node = this.root;\n        while (!node.isEmpty()) {\n            var cmp = this.comparator(key, node.key);\n            if (cmp === 0) {\n                return prunedNodes + node.left.size;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else {\n                // Count all nodes left of the node plus the node itself\n                prunedNodes += node.left.size + 1;\n                node = node.right;\n            }\n        }\n        // Node not found\n        return -1;\n    };\n    SortedMap.prototype.isEmpty = function () {\n        return this.root.isEmpty();\n    };\n    Object.defineProperty(SortedMap.prototype, \"size\", {\n        // Returns the total number of nodes in the map.\n        get: function () {\n            return this.root.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Returns the minimum key in the map.\n    SortedMap.prototype.minKey = function () {\n        return this.root.minKey();\n    };\n    // Returns the maximum key in the map.\n    SortedMap.prototype.maxKey = function () {\n        return this.root.maxKey();\n    };\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    SortedMap.prototype.inorderTraversal = function (action) {\n        return this.root.inorderTraversal(action);\n    };\n    SortedMap.prototype.forEach = function (fn) {\n        this.inorderTraversal(function (k, v) {\n            fn(k, v);\n            return false;\n        });\n    };\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    SortedMap.prototype.reverseTraversal = function (action) {\n        return this.root.reverseTraversal(action);\n    };\n    // Returns an iterator over the SortedMap.\n    SortedMap.prototype.getIterator = function () {\n        return new SortedMapIterator(this.root, null, this.comparator, false);\n    };\n    SortedMap.prototype.getIteratorFrom = function (key) {\n        return new SortedMapIterator(this.root, key, this.comparator, false);\n    };\n    SortedMap.prototype.getReverseIterator = function () {\n        return new SortedMapIterator(this.root, null, this.comparator, true);\n    };\n    SortedMap.prototype.getReverseIteratorFrom = function (key) {\n        return new SortedMapIterator(this.root, key, this.comparator, true);\n    };\n    return SortedMap;\n}()); // end SortedMap\nexport { SortedMap };\n// An iterator over an LLRBNode.\nvar SortedMapIterator = /** @class */ (function () {\n    function SortedMapIterator(node, startKey, comparator, isReverse) {\n        this.isReverse = isReverse;\n        this.nodeStack = [];\n        var cmp = 1;\n        while (!node.isEmpty()) {\n            cmp = startKey ? comparator(node.key, startKey) : 1;\n            // flip the comparison if we're going in reverse\n            if (isReverse)\n                cmp *= -1;\n            if (cmp < 0) {\n                // This node is less than our start key. ignore it\n                if (this.isReverse) {\n                    node = node.left;\n                }\n                else {\n                    node = node.right;\n                }\n            }\n            else if (cmp === 0) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(node);\n                break;\n            }\n            else {\n                // This node is greater than our start key, add it to the stack and move\n                // to the next one\n                this.nodeStack.push(node);\n                if (this.isReverse) {\n                    node = node.right;\n                }\n                else {\n                    node = node.left;\n                }\n            }\n        }\n    }\n    SortedMapIterator.prototype.getNext = function () {\n        assert(this.nodeStack.length > 0, 'getNext() called on iterator when hasNext() is false.');\n        var node = this.nodeStack.pop();\n        var result = { key: node.key, value: node.value };\n        if (this.isReverse) {\n            node = node.left;\n            while (!node.isEmpty()) {\n                this.nodeStack.push(node);\n                node = node.right;\n            }\n        }\n        else {\n            node = node.right;\n            while (!node.isEmpty()) {\n                this.nodeStack.push(node);\n                node = node.left;\n            }\n        }\n        return result;\n    };\n    SortedMapIterator.prototype.hasNext = function () {\n        return this.nodeStack.length > 0;\n    };\n    SortedMapIterator.prototype.peek = function () {\n        if (this.nodeStack.length === 0)\n            return null;\n        var node = this.nodeStack[this.nodeStack.length - 1];\n        return { key: node.key, value: node.value };\n    };\n    return SortedMapIterator;\n}()); // end SortedMapIterator\nexport { SortedMapIterator };\n// Represents a node in a Left-leaning Red-Black tree.\nvar LLRBNode = /** @class */ (function () {\n    function LLRBNode(key, value, color, left, right) {\n        this.key = key;\n        this.value = value;\n        this.color = color != null ? color : LLRBNode.RED;\n        this.left = left != null ? left : LLRBNode.EMPTY;\n        this.right = right != null ? right : LLRBNode.EMPTY;\n        this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n    };\n    LLRBNode.prototype.isEmpty = function () {\n        return false;\n    };\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    LLRBNode.prototype.inorderTraversal = function (action) {\n        return (this.left.inorderTraversal(action) ||\n            action(this.key, this.value) ||\n            this.right.inorderTraversal(action));\n    };\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    LLRBNode.prototype.reverseTraversal = function (action) {\n        return (this.right.reverseTraversal(action) ||\n            action(this.key, this.value) ||\n            this.left.reverseTraversal(action));\n    };\n    // Returns the minimum node in the tree.\n    LLRBNode.prototype.min = function () {\n        if (this.left.isEmpty()) {\n            return this;\n        }\n        else {\n            return this.left.min();\n        }\n    };\n    // Returns the maximum key in the tree.\n    LLRBNode.prototype.minKey = function () {\n        return this.min().key;\n    };\n    // Returns the maximum key in the tree.\n    LLRBNode.prototype.maxKey = function () {\n        if (this.right.isEmpty()) {\n            return this.key;\n        }\n        else {\n            return this.right.maxKey();\n        }\n    };\n    // Returns new tree, with the key/value added.\n    LLRBNode.prototype.insert = function (key, value, comparator) {\n        var n = this;\n        var cmp = comparator(key, n.key);\n        if (cmp < 0) {\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n        }\n        else if (cmp === 0) {\n            n = n.copy(null, value, null, null, null);\n        }\n        else {\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n        }\n        return n.fixUp();\n    };\n    LLRBNode.prototype.removeMin = function () {\n        if (this.left.isEmpty()) {\n            return LLRBNode.EMPTY;\n        }\n        var n = this;\n        if (!n.left.isRed() && !n.left.left.isRed())\n            n = n.moveRedLeft();\n        n = n.copy(null, null, null, n.left.removeMin(), null);\n        return n.fixUp();\n    };\n    // Returns new tree, with the specified item removed.\n    LLRBNode.prototype.remove = function (key, comparator) {\n        var smallest;\n        var n = this;\n        if (comparator(key, n.key) < 0) {\n            if (!n.left.isEmpty() && !n.left.isRed() && !n.left.left.isRed()) {\n                n = n.moveRedLeft();\n            }\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n        }\n        else {\n            if (n.left.isRed())\n                n = n.rotateRight();\n            if (!n.right.isEmpty() && !n.right.isRed() && !n.right.left.isRed()) {\n                n = n.moveRedRight();\n            }\n            if (comparator(key, n.key) === 0) {\n                if (n.right.isEmpty()) {\n                    return LLRBNode.EMPTY;\n                }\n                else {\n                    smallest = n.right.min();\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin());\n                }\n            }\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n        }\n        return n.fixUp();\n    };\n    LLRBNode.prototype.isRed = function () {\n        return this.color;\n    };\n    // Returns new tree after performing any needed rotations.\n    LLRBNode.prototype.fixUp = function () {\n        var n = this;\n        if (n.right.isRed() && !n.left.isRed())\n            n = n.rotateLeft();\n        if (n.left.isRed() && n.left.left.isRed())\n            n = n.rotateRight();\n        if (n.left.isRed() && n.right.isRed())\n            n = n.colorFlip();\n        return n;\n    };\n    LLRBNode.prototype.moveRedLeft = function () {\n        var n = this.colorFlip();\n        if (n.right.left.isRed()) {\n            n = n.copy(null, null, null, null, n.right.rotateRight());\n            n = n.rotateLeft();\n            n = n.colorFlip();\n        }\n        return n;\n    };\n    LLRBNode.prototype.moveRedRight = function () {\n        var n = this.colorFlip();\n        if (n.left.left.isRed()) {\n            n = n.rotateRight();\n            n = n.colorFlip();\n        }\n        return n;\n    };\n    LLRBNode.prototype.rotateLeft = function () {\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, nl, null);\n    };\n    LLRBNode.prototype.rotateRight = function () {\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, nr);\n    };\n    LLRBNode.prototype.colorFlip = function () {\n        var left = this.left.copy(null, null, !this.left.color, null, null);\n        var right = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, left, right);\n    };\n    // For testing.\n    LLRBNode.prototype.checkMaxDepth = function () {\n        var blackDepth = this.check();\n        if (Math.pow(2.0, blackDepth) <= this.size + 1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    LLRBNode.prototype.check = function () {\n        if (this.isRed() && this.left.isRed()) {\n            throw fail('Red node has red child(' + this.key + ',' + this.value + ')');\n        }\n        if (this.right.isRed()) {\n            throw fail('Right child of (' + this.key + ',' + this.value + ') is red');\n        }\n        var blackDepth = this.left.check();\n        if (blackDepth !== this.right.check()) {\n            throw fail('Black depths differ');\n        }\n        else {\n            return blackDepth + (this.isRed() ? 0 : 1);\n        }\n    };\n    // tslint:disable-next-line:no-any Empty node is shared between all LLRB trees.\n    LLRBNode.EMPTY = null;\n    LLRBNode.RED = true;\n    LLRBNode.BLACK = false;\n    return LLRBNode;\n}()); // end LLRBNode\nexport { LLRBNode };\n// Represents an empty node (a leaf node in the Red-Black Tree).\nvar LLRBEmptyNode = /** @class */ (function () {\n    function LLRBEmptyNode() {\n        this.size = 0;\n    }\n    // Returns a copy of the current node.\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n        return this;\n    };\n    // Returns a copy of the tree, with the specified key/value added.\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n        return new LLRBNode(key, value);\n    };\n    // Returns a copy of the tree, with the specified key removed.\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\n        return this;\n    };\n    LLRBEmptyNode.prototype.isEmpty = function () {\n        return true;\n    };\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n        return false;\n    };\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n        return false;\n    };\n    LLRBEmptyNode.prototype.minKey = function () {\n        return null;\n    };\n    LLRBEmptyNode.prototype.maxKey = function () {\n        return null;\n    };\n    LLRBEmptyNode.prototype.isRed = function () {\n        return false;\n    };\n    // For testing.\n    LLRBEmptyNode.prototype.checkMaxDepth = function () {\n        return true;\n    };\n    LLRBEmptyNode.prototype.check = function () {\n        return 0;\n    };\n    return LLRBEmptyNode;\n}()); // end LLRBEmptyNode\nexport { LLRBEmptyNode };\nLLRBNode.EMPTY = new LLRBEmptyNode();\n\n//# sourceMappingURL=sorted_map.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/sorted_map.js\n// module id = 134\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert, fail } from '../util/assert';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\nimport { DocumentKey } from './document_key';\nexport var TypeOrder;\n(function (TypeOrder) {\n    // This order is defined by the backend.\n    TypeOrder[TypeOrder[\"NullValue\"] = 0] = \"NullValue\";\n    TypeOrder[TypeOrder[\"BooleanValue\"] = 1] = \"BooleanValue\";\n    TypeOrder[TypeOrder[\"NumberValue\"] = 2] = \"NumberValue\";\n    TypeOrder[TypeOrder[\"TimestampValue\"] = 3] = \"TimestampValue\";\n    TypeOrder[TypeOrder[\"StringValue\"] = 4] = \"StringValue\";\n    TypeOrder[TypeOrder[\"BlobValue\"] = 5] = \"BlobValue\";\n    TypeOrder[TypeOrder[\"RefValue\"] = 6] = \"RefValue\";\n    TypeOrder[TypeOrder[\"GeoPointValue\"] = 7] = \"GeoPointValue\";\n    TypeOrder[TypeOrder[\"ArrayValue\"] = 8] = \"ArrayValue\";\n    TypeOrder[TypeOrder[\"ObjectValue\"] = 9] = \"ObjectValue\";\n})(TypeOrder || (TypeOrder = {}));\n/** Defines the return value for pending server timestamps. */\nexport var ServerTimestampBehavior;\n(function (ServerTimestampBehavior) {\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Default\"] = 0] = \"Default\";\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Estimate\"] = 1] = \"Estimate\";\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Previous\"] = 2] = \"Previous\";\n})(ServerTimestampBehavior || (ServerTimestampBehavior = {}));\n/** Holds properties that define field value deserialization options. */\nvar FieldValueOptions = /** @class */ (function () {\n    function FieldValueOptions(serverTimestampBehavior) {\n        this.serverTimestampBehavior = serverTimestampBehavior;\n    }\n    FieldValueOptions.fromSnapshotOptions = function (options) {\n        switch (options.serverTimestamps) {\n            case 'estimate':\n                return new FieldValueOptions(ServerTimestampBehavior.Estimate);\n            case 'previous':\n                return new FieldValueOptions(ServerTimestampBehavior.Previous);\n            case 'none': // Fall-through intended.\n            case undefined:\n                return FieldValueOptions.defaultOptions;\n            default:\n                return fail('fromSnapshotOptions() called with invalid options.');\n        }\n    };\n    FieldValueOptions.defaultOptions = new FieldValueOptions(ServerTimestampBehavior.Default);\n    return FieldValueOptions;\n}());\nexport { FieldValueOptions };\n/**\n * A field value represents a datatype as stored by Firestore.\n */\nvar FieldValue = /** @class */ (function () {\n    function FieldValue() {\n    }\n    FieldValue.prototype.toString = function () {\n        var val = this.value();\n        return val === null ? 'null' : val.toString();\n    };\n    FieldValue.prototype.defaultCompareTo = function (other) {\n        assert(this.typeOrder !== other.typeOrder, 'Default compareTo should not be used for values of same type.');\n        var cmp = primitiveComparator(this.typeOrder, other.typeOrder);\n        return cmp;\n    };\n    return FieldValue;\n}());\nexport { FieldValue };\nvar NullValue = /** @class */ (function (_super) {\n    __extends(NullValue, _super);\n    function NullValue() {\n        var _this = _super.call(this) || this;\n        _this.typeOrder = TypeOrder.NullValue;\n        // internalValue is unused but we add it to work around\n        // https://github.com/Microsoft/TypeScript/issues/15585\n        _this.internalValue = null;\n        return _this;\n    }\n    NullValue.prototype.value = function (options) {\n        return null;\n    };\n    NullValue.prototype.isEqual = function (other) {\n        return other instanceof NullValue;\n    };\n    NullValue.prototype.compareTo = function (other) {\n        if (other instanceof NullValue) {\n            return 0;\n        }\n        return this.defaultCompareTo(other);\n    };\n    NullValue.INSTANCE = new NullValue();\n    return NullValue;\n}(FieldValue));\nexport { NullValue };\nvar BooleanValue = /** @class */ (function (_super) {\n    __extends(BooleanValue, _super);\n    function BooleanValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.BooleanValue;\n        return _this;\n    }\n    BooleanValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    BooleanValue.prototype.isEqual = function (other) {\n        return (other instanceof BooleanValue &&\n            this.internalValue === other.internalValue);\n    };\n    BooleanValue.prototype.compareTo = function (other) {\n        if (other instanceof BooleanValue) {\n            return primitiveComparator(this, other);\n        }\n        return this.defaultCompareTo(other);\n    };\n    BooleanValue.of = function (value) {\n        return value ? BooleanValue.TRUE : BooleanValue.FALSE;\n    };\n    BooleanValue.TRUE = new BooleanValue(true);\n    BooleanValue.FALSE = new BooleanValue(false);\n    return BooleanValue;\n}(FieldValue));\nexport { BooleanValue };\n/** Base class for IntegerValue and DoubleValue. */\nvar NumberValue = /** @class */ (function (_super) {\n    __extends(NumberValue, _super);\n    function NumberValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.NumberValue;\n        return _this;\n    }\n    NumberValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    NumberValue.prototype.compareTo = function (other) {\n        if (other instanceof NumberValue) {\n            return numericComparator(this.internalValue, other.internalValue);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return NumberValue;\n}(FieldValue));\nexport { NumberValue };\n/** Utility function to compare doubles (using Firestore semantics for NaN). */\nfunction numericComparator(left, right) {\n    if (left < right) {\n        return -1;\n    }\n    else if (left > right) {\n        return 1;\n    }\n    else if (left === right) {\n        return 0;\n    }\n    else {\n        // one or both are NaN.\n        if (isNaN(left)) {\n            return isNaN(right) ? 0 : -1;\n        }\n        else {\n            return 1;\n        }\n    }\n}\n/**\n * Utility function to check numbers for equality using Firestore semantics\n * (NaN === NaN, -0.0 !== 0.0).\n */\nfunction numericEquals(left, right) {\n    // Implemented based on Object.is() polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    if (left === right) {\n        // +0 != -0\n        return left !== 0 || 1 / left === 1 / right;\n    }\n    else {\n        // NaN == NaN\n        return left !== left && right !== right;\n    }\n}\nvar IntegerValue = /** @class */ (function (_super) {\n    __extends(IntegerValue, _super);\n    function IntegerValue(internalValue) {\n        return _super.call(this, internalValue) || this;\n    }\n    IntegerValue.prototype.isEqual = function (other) {\n        // NOTE: DoubleValue and IntegerValue instances may compareTo() the same,\n        // but that doesn't make them equal via isEqual().\n        if (other instanceof IntegerValue) {\n            return numericEquals(this.internalValue, other.internalValue);\n        }\n        else {\n            return false;\n        }\n    };\n    return IntegerValue;\n}(NumberValue));\nexport { IntegerValue };\nvar DoubleValue = /** @class */ (function (_super) {\n    __extends(DoubleValue, _super);\n    function DoubleValue(internalValue) {\n        var _this = _super.call(this, internalValue) || this;\n        _this.internalValue = internalValue;\n        return _this;\n    }\n    DoubleValue.prototype.isEqual = function (other) {\n        // NOTE: DoubleValue and IntegerValue instances may compareTo() the same,\n        // but that doesn't make them equal via isEqual().\n        if (other instanceof DoubleValue) {\n            return numericEquals(this.internalValue, other.internalValue);\n        }\n        else {\n            return false;\n        }\n    };\n    DoubleValue.NAN = new DoubleValue(NaN);\n    DoubleValue.POSITIVE_INFINITY = new DoubleValue(Infinity);\n    DoubleValue.NEGATIVE_INFINITY = new DoubleValue(-Infinity);\n    return DoubleValue;\n}(NumberValue));\nexport { DoubleValue };\n// TODO(b/37267885): Add truncation support\nvar StringValue = /** @class */ (function (_super) {\n    __extends(StringValue, _super);\n    function StringValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.StringValue;\n        return _this;\n    }\n    StringValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    StringValue.prototype.isEqual = function (other) {\n        return (other instanceof StringValue && this.internalValue === other.internalValue);\n    };\n    StringValue.prototype.compareTo = function (other) {\n        if (other instanceof StringValue) {\n            return primitiveComparator(this.internalValue, other.internalValue);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return StringValue;\n}(FieldValue));\nexport { StringValue };\nvar TimestampValue = /** @class */ (function (_super) {\n    __extends(TimestampValue, _super);\n    function TimestampValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.TimestampValue;\n        return _this;\n    }\n    TimestampValue.prototype.value = function (options) {\n        return this.internalValue.toDate();\n    };\n    TimestampValue.prototype.isEqual = function (other) {\n        return (other instanceof TimestampValue &&\n            this.internalValue.isEqual(other.internalValue));\n    };\n    TimestampValue.prototype.compareTo = function (other) {\n        if (other instanceof TimestampValue) {\n            return this.internalValue.compareTo(other.internalValue);\n        }\n        else if (other instanceof ServerTimestampValue) {\n            // Concrete timestamps come before server timestamps.\n            return -1;\n        }\n        else {\n            return this.defaultCompareTo(other);\n        }\n    };\n    return TimestampValue;\n}(FieldValue));\nexport { TimestampValue };\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   TransformMutation (see TransformMutation.applyTo()). They can only exist in\n *   the local view of a document. Therefore they do not need to be parsed or\n *   serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\nvar ServerTimestampValue = /** @class */ (function (_super) {\n    __extends(ServerTimestampValue, _super);\n    function ServerTimestampValue(localWriteTime, previousValue) {\n        var _this = _super.call(this) || this;\n        _this.localWriteTime = localWriteTime;\n        _this.previousValue = previousValue;\n        _this.typeOrder = TypeOrder.TimestampValue;\n        return _this;\n    }\n    ServerTimestampValue.prototype.value = function (options) {\n        if (options &&\n            options.serverTimestampBehavior === ServerTimestampBehavior.Estimate) {\n            return this.localWriteTime.toDate();\n        }\n        else if (options &&\n            options.serverTimestampBehavior === ServerTimestampBehavior.Previous) {\n            return this.previousValue ? this.previousValue.value(options) : null;\n        }\n        else {\n            return null;\n        }\n    };\n    ServerTimestampValue.prototype.isEqual = function (other) {\n        return (other instanceof ServerTimestampValue &&\n            this.localWriteTime.isEqual(other.localWriteTime));\n    };\n    ServerTimestampValue.prototype.compareTo = function (other) {\n        if (other instanceof ServerTimestampValue) {\n            return this.localWriteTime.compareTo(other.localWriteTime);\n        }\n        else if (other instanceof TimestampValue) {\n            // Server timestamps come after all concrete timestamps.\n            return 1;\n        }\n        else {\n            return this.defaultCompareTo(other);\n        }\n    };\n    ServerTimestampValue.prototype.toString = function () {\n        return '<ServerTimestamp localTime=' + this.localWriteTime.toString() + '>';\n    };\n    return ServerTimestampValue;\n}(FieldValue));\nexport { ServerTimestampValue };\nvar BlobValue = /** @class */ (function (_super) {\n    __extends(BlobValue, _super);\n    function BlobValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.BlobValue;\n        return _this;\n    }\n    BlobValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    BlobValue.prototype.isEqual = function (other) {\n        return (other instanceof BlobValue &&\n            this.internalValue.isEqual(other.internalValue));\n    };\n    BlobValue.prototype.compareTo = function (other) {\n        if (other instanceof BlobValue) {\n            return this.internalValue._compareTo(other.internalValue);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return BlobValue;\n}(FieldValue));\nexport { BlobValue };\nvar RefValue = /** @class */ (function (_super) {\n    __extends(RefValue, _super);\n    function RefValue(databaseId, key) {\n        var _this = _super.call(this) || this;\n        _this.databaseId = databaseId;\n        _this.key = key;\n        _this.typeOrder = TypeOrder.RefValue;\n        return _this;\n    }\n    RefValue.prototype.value = function (options) {\n        return this.key;\n    };\n    RefValue.prototype.isEqual = function (other) {\n        if (other instanceof RefValue) {\n            return (this.key.isEqual(other.key) && this.databaseId.isEqual(other.databaseId));\n        }\n        else {\n            return false;\n        }\n    };\n    RefValue.prototype.compareTo = function (other) {\n        if (other instanceof RefValue) {\n            var cmp = this.databaseId.compareTo(other.databaseId);\n            return cmp !== 0 ? cmp : DocumentKey.comparator(this.key, other.key);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return RefValue;\n}(FieldValue));\nexport { RefValue };\nvar GeoPointValue = /** @class */ (function (_super) {\n    __extends(GeoPointValue, _super);\n    function GeoPointValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.GeoPointValue;\n        return _this;\n    }\n    GeoPointValue.prototype.value = function (options) {\n        return this.internalValue;\n    };\n    GeoPointValue.prototype.isEqual = function (other) {\n        return (other instanceof GeoPointValue &&\n            this.internalValue.isEqual(other.internalValue));\n    };\n    GeoPointValue.prototype.compareTo = function (other) {\n        if (other instanceof GeoPointValue) {\n            return this.internalValue._compareTo(other.internalValue);\n        }\n        return this.defaultCompareTo(other);\n    };\n    return GeoPointValue;\n}(FieldValue));\nexport { GeoPointValue };\nvar ObjectValue = /** @class */ (function (_super) {\n    __extends(ObjectValue, _super);\n    function ObjectValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.ObjectValue;\n        return _this;\n    }\n    ObjectValue.prototype.value = function (options) {\n        var result = {};\n        this.internalValue.inorderTraversal(function (key, val) {\n            result[key] = val.value(options);\n        });\n        return result;\n    };\n    ObjectValue.prototype.forEach = function (action) {\n        this.internalValue.inorderTraversal(action);\n    };\n    ObjectValue.prototype.isEqual = function (other) {\n        if (other instanceof ObjectValue) {\n            var it1 = this.internalValue.getIterator();\n            var it2 = other.internalValue.getIterator();\n            while (it1.hasNext() && it2.hasNext()) {\n                var next1 = it1.getNext();\n                var next2 = it2.getNext();\n                if (next1.key !== next2.key || !next1.value.isEqual(next2.value)) {\n                    return false;\n                }\n            }\n            return !it1.hasNext() && !it2.hasNext();\n        }\n        return false;\n    };\n    ObjectValue.prototype.compareTo = function (other) {\n        if (other instanceof ObjectValue) {\n            var it1 = this.internalValue.getIterator();\n            var it2 = other.internalValue.getIterator();\n            while (it1.hasNext() && it2.hasNext()) {\n                var next1 = it1.getNext();\n                var next2 = it2.getNext();\n                var cmp = primitiveComparator(next1.key, next2.key) ||\n                    next1.value.compareTo(next2.value);\n                if (cmp) {\n                    return cmp;\n                }\n            }\n            // Only equal if both iterators are exhausted\n            return primitiveComparator(it1.hasNext(), it2.hasNext());\n        }\n        else {\n            return this.defaultCompareTo(other);\n        }\n    };\n    ObjectValue.prototype.set = function (path, to) {\n        assert(!path.isEmpty(), 'Cannot set field for empty path on ObjectValue');\n        if (path.length === 1) {\n            return this.setChild(path.firstSegment(), to);\n        }\n        else {\n            var child = this.child(path.firstSegment());\n            if (!(child instanceof ObjectValue)) {\n                child = ObjectValue.EMPTY;\n            }\n            var newChild = child.set(path.popFirst(), to);\n            return this.setChild(path.firstSegment(), newChild);\n        }\n    };\n    ObjectValue.prototype.delete = function (path) {\n        assert(!path.isEmpty(), 'Cannot delete field for empty path on ObjectValue');\n        if (path.length === 1) {\n            return new ObjectValue(this.internalValue.remove(path.firstSegment()));\n        }\n        else {\n            // nested field\n            var child = this.child(path.firstSegment());\n            if (child instanceof ObjectValue) {\n                var newChild = child.delete(path.popFirst());\n                return new ObjectValue(this.internalValue.insert(path.firstSegment(), newChild));\n            }\n            else {\n                // Don't actually change a primitive value to an object for a delete\n                return this;\n            }\n        }\n    };\n    ObjectValue.prototype.contains = function (path) {\n        return this.field(path) !== undefined;\n    };\n    ObjectValue.prototype.field = function (path) {\n        assert(!path.isEmpty(), \"Can't get field of empty path\");\n        var field = this;\n        path.forEach(function (pathSegment) {\n            if (field instanceof ObjectValue) {\n                field = field.internalValue.get(pathSegment) || undefined;\n            }\n            else {\n                field = undefined;\n            }\n        });\n        return field;\n    };\n    ObjectValue.prototype.toString = function () {\n        return JSON.stringify(this.value());\n    };\n    ObjectValue.prototype.child = function (childName) {\n        return this.internalValue.get(childName) || undefined;\n    };\n    ObjectValue.prototype.setChild = function (childName, value) {\n        return new ObjectValue(this.internalValue.insert(childName, value));\n    };\n    ObjectValue.EMPTY = new ObjectValue(new SortedMap(primitiveComparator));\n    return ObjectValue;\n}(FieldValue));\nexport { ObjectValue };\nvar ArrayValue = /** @class */ (function (_super) {\n    __extends(ArrayValue, _super);\n    function ArrayValue(internalValue) {\n        var _this = _super.call(this) || this;\n        _this.internalValue = internalValue;\n        _this.typeOrder = TypeOrder.ArrayValue;\n        return _this;\n    }\n    ArrayValue.prototype.value = function (options) {\n        return this.internalValue.map(function (v) { return v.value(options); });\n    };\n    ArrayValue.prototype.forEach = function (action) {\n        this.internalValue.forEach(action);\n    };\n    ArrayValue.prototype.isEqual = function (other) {\n        if (other instanceof ArrayValue) {\n            if (this.internalValue.length !== other.internalValue.length) {\n                return false;\n            }\n            for (var i = 0; i < this.internalValue.length; i++) {\n                if (!this.internalValue[i].isEqual(other.internalValue[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    ArrayValue.prototype.compareTo = function (other) {\n        if (other instanceof ArrayValue) {\n            var minLength = Math.min(this.internalValue.length, other.internalValue.length);\n            for (var i = 0; i < minLength; i++) {\n                var cmp = this.internalValue[i].compareTo(other.internalValue[i]);\n                if (cmp) {\n                    return cmp;\n                }\n            }\n            return primitiveComparator(this.internalValue.length, other.internalValue.length);\n        }\n        else {\n            return this.defaultCompareTo(other);\n        }\n    };\n    ArrayValue.prototype.toString = function () {\n        return JSON.stringify(this.value());\n    };\n    return ArrayValue;\n}(FieldValue));\nexport { ArrayValue };\n\n//# sourceMappingURL=field_value.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/model/field_value.js\n// module id = 136\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert';\nimport { primitiveComparator } from '../util/misc';\n// A RegExp matching ISO 8601 UTC timestamps with optional fraction.\nvar isoRegExp = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\nvar Timestamp = /** @class */ (function () {\n    function Timestamp(seconds, nanos) {\n        this.seconds = seconds;\n        this.nanos = nanos;\n        assert(nanos >= 0, 'timestamp nanoseconds out of range: ' + nanos);\n        assert(nanos < 1e9, 'timestamp nanoseconds out of range' + nanos);\n        // Midnight at the beginning of 1/1/1 is the earliest Firestore supports.\n        assert(seconds >= -62135596800, 'timestamp seconds out of range: ' + seconds);\n        // This will break in the year 10,000.\n        assert(seconds < 253402300800, 'timestamp seconds out of range' + seconds);\n    }\n    Timestamp.now = function () {\n        return Timestamp.fromEpochMilliseconds(Date.now());\n    };\n    Timestamp.fromDate = function (date) {\n        return Timestamp.fromEpochMilliseconds(date.getTime());\n    };\n    Timestamp.fromEpochMilliseconds = function (milliseconds) {\n        var seconds = Math.floor(milliseconds / 1000);\n        var nanos = (milliseconds - seconds * 1000) * 1e6;\n        return new Timestamp(seconds, nanos);\n    };\n    Timestamp.fromISOString = function (utc) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        var nanos = 0;\n        var fraction = isoRegExp.exec(utc);\n        assert(!!fraction, 'invalid timestamp: ' + utc);\n        if (fraction[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            var nanoStr = fraction[1];\n            nanoStr = (nanoStr + '000000000').substr(0, 9);\n            nanos = Number(nanoStr);\n        }\n        // Parse the date to get the seconds.\n        var date = new Date(utc);\n        var seconds = Math.floor(date.getTime() / 1000);\n        return new Timestamp(seconds, nanos);\n    };\n    Timestamp.prototype.toDate = function () {\n        return new Date(this.toEpochMilliseconds());\n    };\n    Timestamp.prototype.toEpochMilliseconds = function () {\n        return this.seconds * 1000 + this.nanos / 1e6;\n    };\n    Timestamp.prototype.compareTo = function (other) {\n        if (this.seconds === other.seconds) {\n            return primitiveComparator(this.nanos, other.nanos);\n        }\n        return primitiveComparator(this.seconds, other.seconds);\n    };\n    Timestamp.prototype.isEqual = function (other) {\n        return other.seconds === this.seconds && other.nanos === this.nanos;\n    };\n    Timestamp.prototype.toString = function () {\n        return 'Timestamp(seconds=' + this.seconds + ', nanos=' + this.nanos + ')';\n    };\n    return Timestamp;\n}());\nexport { Timestamp };\n\n//# sourceMappingURL=timestamp.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/timestamp.js\n// module id = 137\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert';\nimport { encode } from './encoded_resource_path';\nexport var SCHEMA_VERSION = 1;\n/** Performs database creation and (in the future) upgrades between versions. */\nexport function createOrUpgradeDb(db, oldVersion) {\n    assert(oldVersion === 0, 'Unexpected upgrade from version ' + oldVersion);\n    db.createObjectStore(DbMutationQueue.store, {\n        keyPath: DbMutationQueue.keyPath\n    });\n    // TODO(mikelehen): Get rid of \"as any\" if/when TypeScript fixes their\n    // types. https://github.com/Microsoft/TypeScript/issues/14322\n    db.createObjectStore(DbMutationBatch.store, \n    // tslint:disable-next-line:no-any\n    { keyPath: DbMutationBatch.keyPath });\n    var targetDocumentsStore = db.createObjectStore(DbTargetDocument.store, \n    // tslint:disable-next-line:no-any\n    { keyPath: DbTargetDocument.keyPath });\n    targetDocumentsStore.createIndex(DbTargetDocument.documentTargetsIndex, DbTargetDocument.documentTargetsKeyPath, { unique: true });\n    var targetStore = db.createObjectStore(DbTarget.store, {\n        keyPath: DbTarget.keyPath\n    });\n    // NOTE: This is unique only because the TargetId is the suffix.\n    targetStore.createIndex(DbTarget.queryTargetsIndexName, DbTarget.queryTargetsKeyPath, { unique: true });\n    // NOTE: keys for these stores are specified explicitly rather than using a\n    // keyPath.\n    db.createObjectStore(DbDocumentMutation.store);\n    db.createObjectStore(DbRemoteDocument.store);\n    db.createObjectStore(DbOwner.store);\n    db.createObjectStore(DbTargetGlobal.store);\n}\n/**\n * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.\n */\nvar DbTimestamp = /** @class */ (function () {\n    function DbTimestamp(seconds, nanos) {\n        this.seconds = seconds;\n        this.nanos = nanos;\n    }\n    return DbTimestamp;\n}());\nexport { DbTimestamp };\n/**\n * A singleton object to be stored in the 'owner' store in IndexedDb.\n *\n * A given database can be owned by a single tab at a given time. That tab\n * must validate that it is still the owner before every write operation and\n * should regularly write an updated timestamp to prevent other tabs from\n * \"stealing\" ownership of the db.\n */\nvar DbOwner = /** @class */ (function () {\n    function DbOwner(ownerId, leaseTimestampMs) {\n        this.ownerId = ownerId;\n        this.leaseTimestampMs = leaseTimestampMs;\n    }\n    /** Name of the IndexedDb object store. */\n    DbOwner.store = 'owner';\n    return DbOwner;\n}());\nexport { DbOwner };\n/**\n * An object to be stored in the 'mutationQueues' store in IndexedDb.\n *\n * Each user gets a single queue of MutationBatches to apply to the server.\n * DbMutationQueue tracks the metadata about the queue.\n */\nvar DbMutationQueue = /** @class */ (function () {\n    function DbMutationQueue(\n        /**\n         * The normalized user ID to which this queue belongs.\n         */\n        userId, \n        /**\n         * An identifier for the highest numbered batch that has been acknowledged\n         * by the server. All MutationBatches in this queue with batchIds less\n         * than or equal to this value are considered to have been acknowledged by\n         * the server.\n         */\n        lastAcknowledgedBatchId, \n        /**\n         * A stream token that was previously sent by the server.\n         *\n         * See StreamingWriteRequest in datastore.proto for more details about\n         * usage.\n         *\n         * After sending this token, earlier tokens may not be used anymore so\n         * only a single stream token is retained.\n         */\n        lastStreamToken) {\n        this.userId = userId;\n        this.lastAcknowledgedBatchId = lastAcknowledgedBatchId;\n        this.lastStreamToken = lastStreamToken;\n    }\n    /** Name of the IndexedDb object store.  */\n    DbMutationQueue.store = 'mutationQueues';\n    /** Keys are automatically assigned via the userId property. */\n    DbMutationQueue.keyPath = 'userId';\n    return DbMutationQueue;\n}());\nexport { DbMutationQueue };\n/**\n * An object to be stored in the 'mutations' store in IndexedDb.\n *\n * Represents a batch of user-level mutations intended to be sent to the server\n * in a single write. Each user-level batch gets a separate DbMutationBatch\n * with a new batchId.\n */\nvar DbMutationBatch = /** @class */ (function () {\n    function DbMutationBatch(\n        /**\n         * The normalized user ID to which this batch belongs.\n         */\n        userId, \n        /**\n         * An identifier for this batch, allocated by the mutation queue in a\n         * monotonically increasing manner.\n         */\n        batchId, \n        /**\n         * The local write time of the batch, stored as milliseconds since the\n         * epoch.\n         */\n        localWriteTimeMs, \n        /**\n         * A list of mutations to apply. All mutations will be applied atomically.\n         *\n         * Mutations are serialized via JsonProtoSerializer.toMutation().\n         */\n        mutations) {\n        this.userId = userId;\n        this.batchId = batchId;\n        this.localWriteTimeMs = localWriteTimeMs;\n        this.mutations = mutations;\n    }\n    /** Name of the IndexedDb object store.  */\n    DbMutationBatch.store = 'mutations';\n    /** Keys are automatically assigned via the userId, batchId properties. */\n    DbMutationBatch.keyPath = ['userId', 'batchId'];\n    return DbMutationBatch;\n}());\nexport { DbMutationBatch };\n/**\n * An object to be stored in the 'documentMutations' store in IndexedDb.\n *\n * A manually maintained index of all the mutation batches that affect a given\n * document key. The rows in this table are references based on the contents of\n * DbMutationBatch.mutations.\n */\nvar DbDocumentMutation = /** @class */ (function () {\n    function DbDocumentMutation() {\n    }\n    /**\n     * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n     * over all of a user's document mutations.\n     */\n    DbDocumentMutation.prefixForUser = function (userId) {\n        return [userId];\n    };\n    /**\n     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n     * index to iterate over all at document mutations for a given path or lower.\n     */\n    DbDocumentMutation.prefixForPath = function (userId, path) {\n        return [userId, encode(path)];\n    };\n    /**\n     * Creates a full index key of [userId, encodedPath, batchId] for inserting\n     * and deleting into the DbDocumentMutations index.\n     */\n    DbDocumentMutation.key = function (userId, path, batchId) {\n        return [userId, encode(path), batchId];\n    };\n    DbDocumentMutation.store = 'documentMutations';\n    /**\n     * Because we store all the useful information for this store in the key,\n     * there is no useful information to store as the value. The raw (unencoded)\n     * path cannot be stored because IndexedDb doesn't store prototype\n     * information.\n     */\n    DbDocumentMutation.PLACEHOLDER = new DbDocumentMutation();\n    return DbDocumentMutation;\n}());\nexport { DbDocumentMutation };\n/**\n * Represents the known absence of a document at a particular version.\n * Stored in IndexedDb as part of a DbRemoteDocument object.\n */\nvar DbNoDocument = /** @class */ (function () {\n    function DbNoDocument(path, readTime) {\n        this.path = path;\n        this.readTime = readTime;\n    }\n    return DbNoDocument;\n}());\nexport { DbNoDocument };\n/**\n * An object to be stored in the 'remoteDocuments' store in IndexedDb. It\n * represents either a cached document (if it exists) or a cached \"no-document\"\n * (if it is known to not exist).\n *\n * Note: This is the persisted equivalent of a MaybeDocument and could perhaps\n * be made more general if necessary.\n */\nvar DbRemoteDocument = /** @class */ (function () {\n    function DbRemoteDocument(\n        /**\n         * Set to an instance of a DbNoDocument if it is known that no document\n         * exists.\n         */\n        noDocument, \n        /**\n         * Set to an instance of a Document if there's a cached version of the\n         * document.\n         */\n        document) {\n        this.noDocument = noDocument;\n        this.document = document;\n    }\n    DbRemoteDocument.store = 'remoteDocuments';\n    return DbRemoteDocument;\n}());\nexport { DbRemoteDocument };\n/**\n * An object to be stored in the 'targets' store in IndexedDb.\n *\n * This is based on and should be kept in sync with the proto used in the iOS\n * client.\n *\n * Each query the client listens to against the server is tracked on disk so\n * that the query can be efficiently resumed on restart.\n */\nvar DbTarget = /** @class */ (function () {\n    function DbTarget(\n        /**\n         * An auto-generated sequential numeric identifier for the query.\n         *\n         * Queries are stored using their canonicalId as the key, but these\n         * canonicalIds can be quite long so we additionally assign a unique\n         * queryId which can be used by referenced data structures (e.g.\n         * indexes) to minimize the on-disk cost.\n         */\n        targetId, \n        /**\n         * The canonical string representing this query. This is not unique.\n         */\n        canonicalId, \n        /**\n         * The last readTime received from the Watch Service for this query.\n         *\n         * This is the same value as TargetChange.read_time in the protos.\n         */\n        readTime, \n        /**\n         * An opaque, server-assigned token that allows watching a query to be\n         * resumed after disconnecting without retransmitting all the data\n         * that matches the query. The resume token essentially identifies a\n         * point in time from which the server should resume sending results.\n         *\n         * This is related to the snapshotVersion in that the resumeToken\n         * effectively also encodes that value, but the resumeToken is opaque\n         * and sometimes encodes additional information.\n         *\n         * A consequence of this is that the resumeToken should be used when\n         * asking the server to reason about where this client is in the watch\n         * stream, but the client should use the snapshotVersion for its own\n         * purposes.\n         *\n         * This is the same value as TargetChange.resume_token in the protos.\n         */\n        resumeToken, \n        /**\n         * A sequence number representing the last time this query was\n         * listened to, used for garbage collection purposes.\n         *\n         * Conventionally this would be a timestamp value, but device-local\n         * clocks are unreliable and they must be able to create new listens\n         * even while disconnected. Instead this should be a monotonically\n         * increasing number that's incremented on each listen call.\n         *\n         * This is different from the queryId since the queryId is an\n         * immutable identifier assigned to the Query on first use while\n         * lastListenSequenceNumber is updated every time the query is\n         * listened to.\n         */\n        lastListenSequenceNumber, \n        /**\n         * The query for this target.\n         *\n         * Because canonical ids are not unique we must store the actual query. We\n         * use the proto to have an object we can persist without having to\n         * duplicate translation logic to and from a `Query` object.\n         */\n        query) {\n        this.targetId = targetId;\n        this.canonicalId = canonicalId;\n        this.readTime = readTime;\n        this.resumeToken = resumeToken;\n        this.lastListenSequenceNumber = lastListenSequenceNumber;\n        this.query = query;\n    }\n    DbTarget.store = 'targets';\n    /** Keys are automatically assigned via the targetId property. */\n    DbTarget.keyPath = 'targetId';\n    /** The name of the queryTargets index. */\n    DbTarget.queryTargetsIndexName = 'queryTargetsIndex';\n    /**\n     * The index of all canonicalIds to the targets that they match. This is not\n     * a unique mapping because canonicalId does not promise a unique name for all\n     * possible queries, so we append the targetId to make the mapping unique.\n     */\n    DbTarget.queryTargetsKeyPath = ['canonicalId', 'targetId'];\n    return DbTarget;\n}());\nexport { DbTarget };\n/**\n * An object representing an association between a target and a document.\n * Stored in the targetDocument object store to store the documents tracked by a\n * particular target.\n */\nvar DbTargetDocument = /** @class */ (function () {\n    function DbTargetDocument(\n        /**\n         * The targetId identifying a target.\n         */\n        targetId, \n        /**\n         * The path to the document, as encoded in the key.\n         */\n        path) {\n        this.targetId = targetId;\n        this.path = path;\n    }\n    /** Name of the IndexedDb object store.  */\n    DbTargetDocument.store = 'targetDocuments';\n    /** Keys are automatically assigned via the targetId, path properties. */\n    DbTargetDocument.keyPath = ['targetId', 'path'];\n    /** The index name for the reverse index. */\n    DbTargetDocument.documentTargetsIndex = 'documentTargetsIndex';\n    /** We also need to create the reverse index for these properties. */\n    DbTargetDocument.documentTargetsKeyPath = ['path', 'targetId'];\n    return DbTargetDocument;\n}());\nexport { DbTargetDocument };\n/**\n * A record of global state tracked across all Targets, tracked separately\n * to avoid the need for extra indexes.\n *\n * This should be kept in-sync with the proto used in the iOS client.\n */\nvar DbTargetGlobal = /** @class */ (function () {\n    function DbTargetGlobal(\n        /**\n         * The highest numbered target id across all targets.\n         *\n         * See DbTarget.targetId.\n         */\n        highestTargetId, \n        /**\n         * The highest numbered lastListenSequenceNumber across all targets.\n         *\n         * See DbTarget.lastListenSequenceNumber.\n         */\n        highestListenSequenceNumber, \n        /**\n         * A global snapshot version representing the last consistent snapshot we\n         * received from the backend. This is monotonically increasing and any\n         * snapshots received from the backend prior to this version (e.g. for\n         * targets resumed with a resumeToken) should be suppressed (buffered)\n         * until the backend has caught up to this snapshot version again. This\n         * prevents our cache from ever going backwards in time.\n         */\n        lastRemoteSnapshotVersion) {\n        this.highestTargetId = highestTargetId;\n        this.highestListenSequenceNumber = highestListenSequenceNumber;\n        this.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion;\n    }\n    /**\n     * The key string used for the single object that exists in the\n     * DbTargetGlobal store.\n     */\n    DbTargetGlobal.key = 'targetGlobalKey';\n    DbTargetGlobal.store = 'targetGlobal';\n    return DbTargetGlobal;\n}());\nexport { DbTargetGlobal };\n/**\n * The list of all IndexedDB stored used by the SDK. This is used when creating\n * transactions so that access across all stores is done atomically.\n */\nexport var ALL_STORES = [\n    DbMutationQueue.store,\n    DbMutationBatch.store,\n    DbDocumentMutation.store,\n    DbRemoteDocument.store,\n    DbTarget.store,\n    DbOwner.store,\n    DbTargetGlobal.store,\n    DbTargetDocument.store\n];\n\n//# sourceMappingURL=indexeddb_schema.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_schema.js\n// module id = 138\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { fail } from './assert';\nimport { Code, FirestoreError } from './error';\nimport * as obj from './obj';\n/**\n * Validates the invocation of functionName has the exact number of arguments.\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateExactNumberOfArgs('myFunction', arguments, 2);\n */\nexport function validateExactNumberOfArgs(functionName, args, numberOfArgs) {\n    if (args.length !== numberOfArgs) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires \" +\n            formatPlural(numberOfArgs, 'argument') +\n            ', but was called with ' +\n            formatPlural(args.length, 'argument') +\n            '.');\n    }\n}\n/**\n * Validates the invocation of functionName has at least the provided number of\n * arguments (but can have many more).\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateAtLeastNumberOfArgs('myFunction', arguments, 2);\n */\nexport function validateAtLeastNumberOfArgs(functionName, args, minNumberOfArgs) {\n    if (args.length < minNumberOfArgs) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires at least \" +\n            formatPlural(minNumberOfArgs, 'argument') +\n            ', but was called with ' +\n            formatPlural(args.length, 'argument') +\n            '.');\n    }\n}\n/**\n * Validates the invocation of functionName has number of arguments between\n * the values provided.\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);\n */\nexport function validateBetweenNumberOfArgs(functionName, args, minNumberOfArgs, maxNumberOfArgs) {\n    if (args.length < minNumberOfArgs || args.length > maxNumberOfArgs) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires between \" + minNumberOfArgs + \" and \" +\n            (maxNumberOfArgs + \" arguments, but was called with \") +\n            formatPlural(args.length, 'argument') +\n            '.');\n    }\n}\n/**\n * Validates the provided argument is an array and has as least the expected\n * number of elements.\n */\nexport function validateNamedArrayAtLeastNumberOfElements(functionName, value, name, minNumberOfElements) {\n    if (!(value instanceof Array) || value.length < minNumberOfElements) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + name + \" argument to be an \" +\n            'array with at least ' +\n            (formatPlural(minNumberOfElements, 'element') + \".\"));\n    }\n}\n/**\n * Validates the provided positional argument has the native JavaScript type\n * using typeof checks.\n */\nexport function validateArgType(functionName, type, position, argument) {\n    validateType(functionName, type, ordinal(position) + \" argument\", argument);\n}\n/**\n * Validates the provided argument has the native JavaScript type using\n * typeof checks or is undefined.\n */\nexport function validateOptionalArgType(functionName, type, position, argument) {\n    if (argument !== undefined) {\n        validateArgType(functionName, type, position, argument);\n    }\n}\n/**\n * Validates the provided named option has the native JavaScript type using\n * typeof checks.\n */\nexport function validateNamedType(functionName, type, optionName, argument) {\n    validateType(functionName, type, optionName + \" option\", argument);\n}\n/**\n * Validates the provided named option has the native JavaScript type using\n * typeof checks or is undefined.\n */\nexport function validateNamedOptionalType(functionName, type, optionName, argument) {\n    if (argument !== undefined) {\n        validateNamedType(functionName, type, optionName, argument);\n    }\n}\n/**\n * Validates that the provided named option equals one of the expected values.\n */\nexport function validateNamedPropertyEquals(functionName, inputName, optionName, input, expected) {\n    var expectedDescription = [];\n    for (var _i = 0, expected_1 = expected; _i < expected_1.length; _i++) {\n        var val = expected_1[_i];\n        if (val === input) {\n            return;\n        }\n        expectedDescription.push(valueDescription(val));\n    }\n    var actualDescription = valueDescription(input);\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid value \" + actualDescription + \" provided to function \" + functionName + \"() for option \\\"serverTimestamps\\\". Acceptable values: \" + expectedDescription.join(', '));\n}\n/**\n * Validates that the provided named option equals one of the expected values or\n * is undefined.\n */\nexport function validateNamedOptionalPropertyEquals(functionName, inputName, optionName, input, expected) {\n    if (input !== undefined) {\n        validateNamedPropertyEquals(functionName, inputName, optionName, input, expected);\n    }\n}\n/** Helper to validate the type of a provided input. */\nfunction validateType(functionName, type, inputName, input) {\n    if (typeof input !== type || (type === 'object' && !isPlainObject(input))) {\n        var description = valueDescription(input);\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + inputName + \" \" +\n            (\"to be of type \" + type + \", but it was: \" + description));\n    }\n}\n/**\n * Returns true iff it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\nexport function isPlainObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        Object.getPrototypeOf(input) === Object.prototype);\n}\n/** Returns a string describing the type / value of the provided input. */\nexport function valueDescription(input) {\n    if (input === undefined) {\n        return 'undefined';\n    }\n    else if (input === null) {\n        return 'null';\n    }\n    else if (typeof input === 'string') {\n        if (input.length > 20) {\n            input = input.substring(0, 20) + \"...\";\n        }\n        return JSON.stringify(input);\n    }\n    else if (typeof input === 'number' || typeof input === 'boolean') {\n        return '' + input;\n    }\n    else if (typeof input === 'object') {\n        if (input instanceof Array) {\n            return 'an array';\n        }\n        else {\n            var customObjectName = tryGetCustomObjectType(input);\n            if (customObjectName) {\n                return \"a custom \" + customObjectName + \" object\";\n            }\n            else {\n                return 'an object';\n            }\n        }\n    }\n    else if (typeof input === 'function') {\n        return 'a function';\n    }\n    else {\n        return fail('Unknown wrong type: ' + typeof input);\n    }\n}\n/** Hacky method to try to get the constructor name for an object. */\nexport function tryGetCustomObjectType(input) {\n    if (input.constructor) {\n        var funcNameRegex = /function\\s+([^\\s(]+)\\s*\\(/;\n        var results = funcNameRegex.exec(input.constructor.toString());\n        if (results && results.length > 1) {\n            return results[1];\n        }\n    }\n    return null;\n}\n/** Validates the provided argument is defined. */\nexport function validateDefined(functionName, position, argument) {\n    if (argument === undefined) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires a valid \" + ordinal(position) + \" \" +\n            \"argument, but it was undefined.\");\n    }\n}\n/**\n * Validates the provided positional argument is an object, and its keys and\n * values match the expected keys and types provided in optionTypes.\n */\nexport function validateOptionNames(functionName, options, optionNames) {\n    obj.forEach(options, function (key, _) {\n        if (optionNames.indexOf(key) < 0) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Unknown option '\" + key + \"' passed to function \" + functionName + \"(). \" +\n                'Available options: ' +\n                optionNames.join(', '));\n        }\n    });\n}\n/**\n * Helper method to throw an error that the provided argument did not pass\n * an instanceof check.\n */\nexport function invalidClassError(functionName, type, position, argument) {\n    var description = valueDescription(argument);\n    return new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + ordinal(position) + \" \" +\n        (\"argument to be a \" + type + \", but it was: \" + description));\n}\n/** Converts a number to its english word representation */\nfunction ordinal(num) {\n    switch (num) {\n        case 1:\n            return 'first';\n        case 2:\n            return 'second';\n        case 3:\n            return 'third';\n        default:\n            return num + 'th';\n    }\n}\n/**\n * Formats the given word as plural conditionally given the preceding number.\n */\nfunction formatPlural(num, str) {\n    return num + \" \" + str + (num === 1 ? '' : 's');\n}\n\n//# sourceMappingURL=input_validation.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/input_validation.js\n// module id = 140\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Untyped Number alias we can use to check for ES6 methods / properties.\n// tslint:disable-next-line:no-any variable-name\nvar NumberAsAny = Number;\n/**\n * Minimum safe integer in Javascript because of floating point precision.\n * Added to not rely on ES6 features.\n */\nexport var MIN_SAFE_INTEGER = NumberAsAny.MIN_SAFE_INTEGER || -(Math.pow(2, 53) - 1);\n/**\n * Maximum safe integer in Javascript because of floating point precision.\n * Added to not rely on ES6 features.\n */\nexport var MAX_SAFE_INTEGER = NumberAsAny.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n/**\n * Returns whether an number is an integer, uses native implementation if\n * available.\n * Added to not rely on ES6 features.\n * @param value The value to test for being an integer\n */\nexport var isInteger = NumberAsAny.isInteger ||\n    (function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    });\n/**\n * Returns whether a variable is either undefined or null.\n */\nexport function isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value The value to test for being an integer and in the safe range\n */\nexport function isSafeInteger(value) {\n    return (isInteger(value) &&\n        value <= MAX_SAFE_INTEGER &&\n        value >= MIN_SAFE_INTEGER);\n}\n/**\n * Safely checks if the number is NaN.\n */\nexport function safeIsNaN(value) {\n    if (NumberAsAny.IsNaN) {\n        return NumberAsAny.IsNaN(value);\n    }\n    else {\n        return typeof value === 'number' && isNaN(value);\n    }\n}\n\n//# sourceMappingURL=types.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/types.js\n// module id = 141\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { emptyByteString } from '../platform/platform';\n/** An enumeration of the different purposes we have for queries. */\nexport var QueryPurpose;\n(function (QueryPurpose) {\n    /** A regular, normal query. */\n    QueryPurpose[QueryPurpose[\"Listen\"] = 0] = \"Listen\";\n    /**\n     * The query was used to refill a query after an existence filter mismatch.\n     */\n    QueryPurpose[QueryPurpose[\"ExistenceFilterMismatch\"] = 1] = \"ExistenceFilterMismatch\";\n    /** The query was used to resolve a limbo document. */\n    QueryPurpose[QueryPurpose[\"LimboResolution\"] = 2] = \"LimboResolution\";\n})(QueryPurpose || (QueryPurpose = {}));\n/**\n * An immutable set of metadata that the local store tracks for each query.\n */\nvar QueryData = /** @class */ (function () {\n    function QueryData(\n        /** The query being listened to. */\n        query, \n        /**\n         * The target ID to which the query corresponds; Assigned by the\n         * LocalStore for user listens and by the SyncEngine for limbo watches.\n         */\n        targetId, \n        /** The purpose of the query. */\n        purpose, \n        /** The latest snapshot version seen for this target. */\n        snapshotVersion, \n        /**\n         * An opaque, server-assigned token that allows watching a query to be\n         * resumed after disconnecting without retransmitting all the data that\n         * matches the query. The resume token essentially identifies a point in\n         * time from which the server should resume sending results.\n         */\n        resumeToken) {\n        if (snapshotVersion === void 0) { snapshotVersion = SnapshotVersion.MIN; }\n        if (resumeToken === void 0) { resumeToken = emptyByteString(); }\n        this.query = query;\n        this.targetId = targetId;\n        this.purpose = purpose;\n        this.snapshotVersion = snapshotVersion;\n        this.resumeToken = resumeToken;\n    }\n    /**\n     * Creates a new query data instance with an updated snapshot version and\n     * resume token.\n     */\n    QueryData.prototype.update = function (updated) {\n        return new QueryData(this.query, this.targetId, this.purpose, updated.snapshotVersion, updated.resumeToken);\n    };\n    QueryData.prototype.isEqual = function (other) {\n        return (this.targetId === other.targetId &&\n            this.purpose === other.purpose &&\n            this.snapshotVersion.isEqual(other.snapshotVersion) &&\n            this.resumeToken === other.resumeToken &&\n            this.query.isEqual(other.query));\n    };\n    return QueryData;\n}());\nexport { QueryData };\n\n//# sourceMappingURL=query_data.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/query_data.js\n// module id = 142\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { documentKeySet } from '../model/collections';\nimport { emptyByteString } from '../platform/platform';\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */\nvar RemoteEvent = /** @class */ (function () {\n    function RemoteEvent(\n        /**\n         * The snapshot version this event brings us up to, or MIN if not set.\n         */\n        snapshotVersion, \n        /**\n         * A map from target to changes to the target. See TargetChange.\n         */\n        targetChanges, \n        /**\n         * A set of which documents have changed or been deleted, along with the\n         * doc's new values (if not deleted).\n         */\n        documentUpdates) {\n        this.snapshotVersion = snapshotVersion;\n        this.targetChanges = targetChanges;\n        this.documentUpdates = documentUpdates;\n    }\n    RemoteEvent.prototype.addDocumentUpdate = function (doc) {\n        this.documentUpdates = this.documentUpdates.insert(doc.key, doc);\n    };\n    RemoteEvent.prototype.handleExistenceFilterMismatch = function (targetId) {\n        /*\n         * An existence filter mismatch will reset the query and we need to reset\n         * the mapping to contain no documents and an empty resume token.\n         *\n         * Note:\n         *   * The reset mapping is empty, specifically forcing the consumer of the\n         *     change to forget all keys for this targetID;\n         *   * The resume snapshot for this target must be reset\n         *   * The target must be unacked because unwatching and rewatching\n         *     introduces a race for changes.\n         */\n        this.targetChanges[targetId] = {\n            mapping: new ResetMapping(),\n            snapshotVersion: SnapshotVersion.MIN,\n            currentStatusUpdate: CurrentStatusUpdate.MarkNotCurrent,\n            resumeToken: emptyByteString()\n        };\n    };\n    return RemoteEvent;\n}());\nexport { RemoteEvent };\n/**\n * Represents an update to the current status of a target, either explicitly\n * having no new state, or the new value to set. Note \"current\" has special\n * meaning for in the RPC protocol that implies that a target is both up-to-date\n * and consistent with the rest of the watch stream.\n */\nexport var CurrentStatusUpdate;\n(function (CurrentStatusUpdate) {\n    /** The current status is not affected and should not be modified. */\n    CurrentStatusUpdate[CurrentStatusUpdate[\"None\"] = 0] = \"None\";\n    /** The target must be marked as no longer \"current\". */\n    CurrentStatusUpdate[CurrentStatusUpdate[\"MarkNotCurrent\"] = 1] = \"MarkNotCurrent\";\n    /** The target must be marked as \"current\". */\n    CurrentStatusUpdate[CurrentStatusUpdate[\"MarkCurrent\"] = 2] = \"MarkCurrent\";\n})(CurrentStatusUpdate || (CurrentStatusUpdate = {}));\nvar EMPTY_KEY_SET = documentKeySet();\nvar ResetMapping = /** @class */ (function () {\n    function ResetMapping() {\n        this.docs = EMPTY_KEY_SET;\n    }\n    Object.defineProperty(ResetMapping.prototype, \"documents\", {\n        get: function () {\n            return this.docs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResetMapping.prototype.add = function (key) {\n        this.docs = this.docs.add(key);\n    };\n    ResetMapping.prototype.delete = function (key) {\n        this.docs = this.docs.delete(key);\n    };\n    ResetMapping.prototype.isEqual = function (other) {\n        return other !== null && this.docs.isEqual(other.docs);\n    };\n    return ResetMapping;\n}());\nexport { ResetMapping };\nvar UpdateMapping = /** @class */ (function () {\n    function UpdateMapping() {\n        this.addedDocuments = EMPTY_KEY_SET;\n        this.removedDocuments = EMPTY_KEY_SET;\n    }\n    UpdateMapping.prototype.applyToKeySet = function (keys) {\n        var result = keys;\n        this.addedDocuments.forEach(function (key) { return (result = result.add(key)); });\n        this.removedDocuments.forEach(function (key) { return (result = result.delete(key)); });\n        return result;\n    };\n    UpdateMapping.prototype.add = function (key) {\n        this.addedDocuments = this.addedDocuments.add(key);\n        this.removedDocuments = this.removedDocuments.delete(key);\n    };\n    UpdateMapping.prototype.delete = function (key) {\n        this.addedDocuments = this.addedDocuments.delete(key);\n        this.removedDocuments = this.removedDocuments.add(key);\n    };\n    UpdateMapping.prototype.isEqual = function (other) {\n        return (other !== null &&\n            this.addedDocuments.isEqual(other.addedDocuments) &&\n            this.removedDocuments.isEqual(other.removedDocuments));\n    };\n    return UpdateMapping;\n}());\nexport { UpdateMapping };\n\n//# sourceMappingURL=remote_event.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/remote_event.js\n// module id = 143\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { documentKeySet, documentVersionMap } from './collections';\nimport { assert } from '../util/assert';\nimport * as misc from '../util/misc';\nexport var BATCHID_UNKNOWN = -1;\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */\nvar MutationBatch = /** @class */ (function () {\n    function MutationBatch(batchId, localWriteTime, mutations) {\n        this.batchId = batchId;\n        this.localWriteTime = localWriteTime;\n        this.mutations = mutations;\n    }\n    /**\n     * Applies all the mutations in this MutationBatch to the specified document\n     * to create a new remote document\n     *\n     * @param docKey The key of the document to apply mutations to.\n     * @param maybeDoc The document to apply mutations to.\n     * @param batchResult The result of applying the MutationBatch to the\n     * backend.\n     */\n    MutationBatch.prototype.applyToRemoteDocument = function (docKey, maybeDoc, batchResult) {\n        if (maybeDoc) {\n            assert(maybeDoc.key.isEqual(docKey), \"applyToRemoteDocument: key \" + docKey + \" should match maybeDoc key\\n        \" + maybeDoc.key);\n        }\n        var mutationResults = batchResult.mutationResults;\n        assert(mutationResults.length === this.mutations.length, \"Mismatch between mutations length\\n      (\" + this.mutations.length + \") and mutation results length\\n      (\" + mutationResults.length + \").\");\n        for (var i = 0; i < this.mutations.length; i++) {\n            var mutation = this.mutations[i];\n            if (mutation.key.isEqual(docKey)) {\n                var mutationResult = mutationResults[i];\n                maybeDoc = mutation.applyToRemoteDocument(maybeDoc, mutationResult);\n            }\n        }\n        return maybeDoc;\n    };\n    /**\n     * Computes the local view of a document given all the mutations in this\n     * batch.\n     *\n     * @param docKey The key of the document to apply mutations to.\n     * @param maybeDoc The document to apply mutations to.\n     */\n    MutationBatch.prototype.applyToLocalView = function (docKey, maybeDoc) {\n        if (maybeDoc) {\n            assert(maybeDoc.key.isEqual(docKey), \"applyToLocalDocument: key \" + docKey + \" should match maybeDoc key\\n        \" + maybeDoc.key);\n        }\n        var baseDoc = maybeDoc;\n        for (var i = 0; i < this.mutations.length; i++) {\n            var mutation = this.mutations[i];\n            if (mutation.key.isEqual(docKey)) {\n                maybeDoc = mutation.applyToLocalView(maybeDoc, baseDoc, this.localWriteTime);\n            }\n        }\n        return maybeDoc;\n    };\n    MutationBatch.prototype.keys = function () {\n        var keySet = documentKeySet();\n        for (var _i = 0, _a = this.mutations; _i < _a.length; _i++) {\n            var mutation = _a[_i];\n            keySet = keySet.add(mutation.key);\n        }\n        return keySet;\n    };\n    MutationBatch.prototype.isEqual = function (other) {\n        return (this.batchId === other.batchId &&\n            misc.arrayEquals(this.mutations, other.mutations));\n    };\n    /**\n     * Returns true if this mutation batch has already been removed from the\n     * mutation queue.\n     *\n     * Note that not all implementations of the MutationQueue necessarily use\n     * tombstones as part of their implementation and generally speaking no code\n     * outside the mutation queues should really care about this.\n     */\n    MutationBatch.prototype.isTombstone = function () {\n        return this.mutations.length === 0;\n    };\n    /** Converts this batch into a tombstone */\n    MutationBatch.prototype.toTombstone = function () {\n        return new MutationBatch(this.batchId, this.localWriteTime, []);\n    };\n    return MutationBatch;\n}());\nexport { MutationBatch };\n/** The result of applying a mutation batch to the backend. */\nvar MutationBatchResult = /** @class */ (function () {\n    function MutationBatchResult(batch, commitVersion, mutationResults, streamToken, \n        /**\n         * A pre-computed mapping from each mutated document to the resulting\n         * version.\n         */\n        docVersions) {\n        this.batch = batch;\n        this.commitVersion = commitVersion;\n        this.mutationResults = mutationResults;\n        this.streamToken = streamToken;\n        this.docVersions = docVersions;\n    }\n    /**\n     * Creates a new MutationBatchResult for the given batch and results. There\n     * must be one result for each mutation in the batch. This static factory\n     * caches a document=>version mapping (docVersions).\n     */\n    MutationBatchResult.from = function (batch, commitVersion, results, streamToken) {\n        assert(batch.mutations.length === results.length, 'Mutations sent ' +\n            batch.mutations.length +\n            ' must equal results received ' +\n            results.length);\n        var versionMap = documentVersionMap();\n        var mutations = batch.mutations;\n        for (var i = 0; i < mutations.length; i++) {\n            var version = results[i].version;\n            if (version === null) {\n                // deletes don't have a version, so we substitute the commitVersion\n                // of the entire batch.\n                version = commitVersion;\n            }\n            versionMap = versionMap.insert(mutations[i].key, version);\n        }\n        return new MutationBatchResult(batch, commitVersion, results, streamToken, versionMap);\n    };\n    return MutationBatchResult;\n}());\nexport { MutationBatchResult };\n\n//# sourceMappingURL=mutation_batch.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/model/mutation_batch.js\n// module id = 144\n// module chunks = 5","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 162\n// module chunks = 5 6","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { assert, fail } from '../util/assert';\nimport * as misc from '../util/misc';\nimport { Document, NoDocument } from './document';\nimport { ObjectValue, ServerTimestampValue } from './field_value';\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nvar FieldMask = /** @class */ (function () {\n    function FieldMask(fields) {\n        this.fields = fields;\n        // TODO(dimond): validation of FieldMask\n    }\n    FieldMask.prototype.isEqual = function (other) {\n        return misc.arrayEquals(this.fields, other.fields);\n    };\n    return FieldMask;\n}());\nexport { FieldMask };\n/** Transforms a value into a server-generated timestamp. */\nvar ServerTimestampTransform = /** @class */ (function () {\n    function ServerTimestampTransform() {\n    }\n    ServerTimestampTransform.prototype.isEqual = function (other) {\n        return other instanceof ServerTimestampTransform;\n    };\n    ServerTimestampTransform.instance = new ServerTimestampTransform();\n    return ServerTimestampTransform;\n}());\nexport { ServerTimestampTransform };\n/** A field path and the TransformOperation to perform upon it. */\nvar FieldTransform = /** @class */ (function () {\n    function FieldTransform(field, transform) {\n        this.field = field;\n        this.transform = transform;\n    }\n    FieldTransform.prototype.isEqual = function (other) {\n        return (this.field.isEqual(other.field) && this.transform.isEqual(other.transform));\n    };\n    return FieldTransform;\n}());\nexport { FieldTransform };\n/** The result of successfully applying a mutation to the backend. */\nvar MutationResult = /** @class */ (function () {\n    function MutationResult(\n        /**\n         * The version at which the mutation was committed or null for a delete.\n         */\n        version, \n        /**\n         * The resulting fields returned from the backend after a\n         * TransformMutation has been committed. Contains one FieldValue for each\n         * FieldTransform that was in the mutation.\n         *\n         * Will be null if the mutation was not a TransformMutation.\n         */\n        transformResults) {\n        this.version = version;\n        this.transformResults = transformResults;\n    }\n    return MutationResult;\n}());\nexport { MutationResult };\nexport var MutationType;\n(function (MutationType) {\n    MutationType[MutationType[\"Set\"] = 0] = \"Set\";\n    MutationType[MutationType[\"Patch\"] = 1] = \"Patch\";\n    MutationType[MutationType[\"Transform\"] = 2] = \"Transform\";\n    MutationType[MutationType[\"Delete\"] = 3] = \"Delete\";\n})(MutationType || (MutationType = {}));\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nvar Precondition = /** @class */ (function () {\n    function Precondition(updateTime, exists) {\n        this.updateTime = updateTime;\n        this.exists = exists;\n        assert(updateTime === undefined || exists === undefined, 'Precondition can specify \"exists\" or \"updateTime\" but not both');\n    }\n    /** Creates a new Precondition with an exists flag. */\n    Precondition.exists = function (exists) {\n        return new Precondition(undefined, exists);\n    };\n    /** Creates a new Precondition based on a version a document exists at. */\n    Precondition.updateTime = function (version) {\n        return new Precondition(version);\n    };\n    Object.defineProperty(Precondition.prototype, \"isNone\", {\n        /** Returns whether this Precondition is empty. */\n        get: function () {\n            return this.updateTime === undefined && this.exists === undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns true if the preconditions is valid for the given document\n     * (or null if no document is available).\n     */\n    Precondition.prototype.isValidFor = function (maybeDoc) {\n        if (this.updateTime !== undefined) {\n            return (maybeDoc instanceof Document &&\n                maybeDoc.version.isEqual(this.updateTime));\n        }\n        else if (this.exists !== undefined) {\n            if (this.exists) {\n                return maybeDoc instanceof Document;\n            }\n            else {\n                return maybeDoc === null || maybeDoc instanceof NoDocument;\n            }\n        }\n        else {\n            assert(this.isNone, 'Precondition should be empty');\n            return true;\n        }\n    };\n    Precondition.prototype.isEqual = function (other) {\n        return (misc.equals(this.updateTime, other.updateTime) &&\n            this.exists === other.exists);\n    };\n    Precondition.NONE = new Precondition();\n    return Precondition;\n}());\nexport { Precondition };\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also it version.\n * In the case of Set, Patch, and Transform mutations we preserve the existing\n * version. In the case of Delete mutations, we reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        null                  Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      null                  null\n * TransformMutation  Document(v3)          Document(v3)\n * TransformMutation  NoDocument(v3)        NoDocument(v3)\n * TransformMutation  null                  null\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     null                  NoDocument(v0)\n *\n * Note that TransformMutations don't create Documents (in the case of being\n * applied to a NoDocument), even though they would on the backend. This is\n * because the client always combines the TransformMutation with a SetMutation\n * or PatchMutation and we only want to apply the transform if the prior\n * mutation resulted in a Document (always true for a SetMutation, but not\n * necessarily for a PatchMutation).\n *\n * ## Subclassing Notes\n *\n * Subclasses of Mutation need to implement applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document.\n */\nvar Mutation = /** @class */ (function () {\n    function Mutation() {\n    }\n    Mutation.prototype.verifyKeyMatches = function (maybeDoc) {\n        if (maybeDoc != null) {\n            assert(maybeDoc.key.isEqual(this.key), 'Can only apply a mutation to a document with the same key');\n        }\n    };\n    /**\n     * Returns the version from the given document for use as the result of a\n     * mutation. Mutations are defined to return the version of the base document\n     * only if it is an existing document. Deleted and unknown documents have a\n     * post-mutation version of SnapshotVersion.MIN.\n     */\n    Mutation.getPostMutationVersion = function (maybeDoc) {\n        if (maybeDoc instanceof Document) {\n            return maybeDoc.version;\n        }\n        else {\n            return SnapshotVersion.MIN;\n        }\n    };\n    return Mutation;\n}());\nexport { Mutation };\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nvar SetMutation = /** @class */ (function (_super) {\n    __extends(SetMutation, _super);\n    function SetMutation(key, value, precondition) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.value = value;\n        _this.precondition = precondition;\n        _this.type = MutationType.Set;\n        return _this;\n    }\n    SetMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n        this.verifyKeyMatches(maybeDoc);\n        assert(mutationResult.transformResults == null, 'Transform results received by SetMutation.');\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\n        // document the server has accepted the mutation so the precondition must\n        // have held.\n        var version = Mutation.getPostMutationVersion(maybeDoc);\n        return new Document(this.key, version, this.value, {\n            hasLocalMutations: false\n        });\n    };\n    SetMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n        this.verifyKeyMatches(maybeDoc);\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var version = Mutation.getPostMutationVersion(maybeDoc);\n        return new Document(this.key, version, this.value, {\n            hasLocalMutations: true\n        });\n    };\n    SetMutation.prototype.isEqual = function (other) {\n        return (other instanceof SetMutation &&\n            this.key.isEqual(other.key) &&\n            this.value.isEqual(other.value) &&\n            this.precondition.isEqual(other.precondition));\n    };\n    return SetMutation;\n}(Mutation));\nexport { SetMutation };\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nvar PatchMutation = /** @class */ (function (_super) {\n    __extends(PatchMutation, _super);\n    function PatchMutation(key, data, fieldMask, precondition) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.data = data;\n        _this.fieldMask = fieldMask;\n        _this.precondition = precondition;\n        _this.type = MutationType.Patch;\n        return _this;\n    }\n    PatchMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n        this.verifyKeyMatches(maybeDoc);\n        assert(mutationResult.transformResults == null, 'Transform results received by PatchMutation.');\n        // TODO(mcg): Relax enforcement of this precondition\n        //\n        // We shouldn't actually enforce the precondition since it already passed on\n        // the backend, but we may not have a local version of the document to\n        // patch, so we use the precondition to prevent incorrectly putting a\n        // partial document into our cache.\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var version = Mutation.getPostMutationVersion(maybeDoc);\n        var newData = this.patchDocument(maybeDoc);\n        return new Document(this.key, version, newData, {\n            hasLocalMutations: false\n        });\n    };\n    PatchMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n        this.verifyKeyMatches(maybeDoc);\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var version = Mutation.getPostMutationVersion(maybeDoc);\n        var newData = this.patchDocument(maybeDoc);\n        return new Document(this.key, version, newData, {\n            hasLocalMutations: true\n        });\n    };\n    PatchMutation.prototype.isEqual = function (other) {\n        return (other instanceof PatchMutation &&\n            this.key.isEqual(other.key) &&\n            this.fieldMask.isEqual(other.fieldMask) &&\n            this.precondition.isEqual(other.precondition));\n    };\n    /**\n     * Patches the data of document if available or creates a new document. Note\n     * that this does not check whether or not the precondition of this patch\n     * holds.\n     */\n    PatchMutation.prototype.patchDocument = function (maybeDoc) {\n        var data;\n        if (maybeDoc instanceof Document) {\n            data = maybeDoc.data;\n        }\n        else {\n            data = ObjectValue.EMPTY;\n        }\n        return this.patchObject(data);\n    };\n    PatchMutation.prototype.patchObject = function (data) {\n        for (var _i = 0, _a = this.fieldMask.fields; _i < _a.length; _i++) {\n            var fieldPath = _a[_i];\n            var newValue = this.data.field(fieldPath);\n            if (newValue !== undefined) {\n                data = data.set(fieldPath, newValue);\n            }\n            else {\n                data = data.delete(fieldPath);\n            }\n        }\n        return data;\n    };\n    return PatchMutation;\n}(Mutation));\nexport { PatchMutation };\n/**\n * A mutation that modifies specific fields of the document with transform\n * operations. Currently the only supported transform is a server timestamp, but\n * IP Address, increment(n), etc. could be supported in the future.\n *\n * It is somewhat similar to a PatchMutation in that it patches specific fields\n * and has no effect when applied to a null or NoDocument (see comment on\n * Mutation for rationale).\n */\nvar TransformMutation = /** @class */ (function (_super) {\n    __extends(TransformMutation, _super);\n    function TransformMutation(key, fieldTransforms) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.fieldTransforms = fieldTransforms;\n        _this.type = MutationType.Transform;\n        // NOTE: We set a precondition of exists: true as a safety-check, since we\n        // always combine TransformMutations with a SetMutation or PatchMutation which\n        // (if successful) should end up with an existing document.\n        _this.precondition = Precondition.exists(true);\n        return _this;\n    }\n    TransformMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n        this.verifyKeyMatches(maybeDoc);\n        assert(mutationResult.transformResults != null, 'Transform results missing for TransformMutation.');\n        var transformResults = mutationResult.transformResults;\n        // TODO(mcg): Relax enforcement of this precondition\n        //\n        // We shouldn't actually enforce the precondition since it already passed on\n        // the backend, but we may not have a local version of the document to\n        // patch, so we use the precondition to prevent incorrectly putting a\n        // partial document into our cache.\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var doc = this.requireDocument(maybeDoc);\n        var newData = this.transformObject(doc.data, transformResults);\n        return new Document(this.key, doc.version, newData, {\n            hasLocalMutations: false\n        });\n    };\n    TransformMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n        this.verifyKeyMatches(maybeDoc);\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        var doc = this.requireDocument(maybeDoc);\n        var transformResults = this.localTransformResults(localWriteTime, baseDoc);\n        var newData = this.transformObject(doc.data, transformResults);\n        return new Document(this.key, doc.version, newData, {\n            hasLocalMutations: true\n        });\n    };\n    TransformMutation.prototype.isEqual = function (other) {\n        return (other instanceof TransformMutation &&\n            this.key.isEqual(other.key) &&\n            misc.arrayEquals(this.fieldTransforms, other.fieldTransforms) &&\n            this.precondition.isEqual(other.precondition));\n    };\n    /**\n     * Asserts that the given MaybeDocument is actually a Document and verifies\n     * that it matches the key for this mutation. Since we only support\n     * transformations with precondition exists this method is guaranteed to be\n     * safe.\n     */\n    TransformMutation.prototype.requireDocument = function (maybeDoc) {\n        assert(maybeDoc instanceof Document, 'Unknown MaybeDocument type ' + maybeDoc);\n        var doc = maybeDoc;\n        assert(doc.key.isEqual(this.key), 'Can only transform a document with the same key');\n        return doc;\n    };\n    /**\n     * Creates a list of \"transform results\" (a transform result is a field value\n     * representing the result of applying a transform) for use when applying a\n     * TransformMutation locally.\n     *\n     * @param localWriteTime The local time of the transform mutation (used to\n     *     generate ServerTimestampValues).\n     * @param baseDoc The document prior to applying this mutation batch.\n     * @return The transform results list.\n     */\n    TransformMutation.prototype.localTransformResults = function (localWriteTime, baseDoc) {\n        var transformResults = [];\n        for (var _i = 0, _a = this.fieldTransforms; _i < _a.length; _i++) {\n            var fieldTransform = _a[_i];\n            var transform = fieldTransform.transform;\n            if (transform instanceof ServerTimestampTransform) {\n                var previousValue = null;\n                if (baseDoc instanceof Document) {\n                    previousValue = baseDoc.field(fieldTransform.field) || null;\n                }\n                transformResults.push(new ServerTimestampValue(localWriteTime, previousValue));\n            }\n            else {\n                return fail('Encountered unknown transform: ' + transform);\n            }\n        }\n        return transformResults;\n    };\n    TransformMutation.prototype.transformObject = function (data, transformResults) {\n        assert(transformResults.length === this.fieldTransforms.length, 'TransformResults length mismatch.');\n        for (var i = 0; i < this.fieldTransforms.length; i++) {\n            var fieldTransform = this.fieldTransforms[i];\n            var transform = fieldTransform.transform;\n            var fieldPath = fieldTransform.field;\n            if (transform instanceof ServerTimestampTransform) {\n                data = data.set(fieldPath, transformResults[i]);\n            }\n            else {\n                return fail('Encountered unknown transform: ' + transform);\n            }\n        }\n        return data;\n    };\n    return TransformMutation;\n}(Mutation));\nexport { TransformMutation };\n/** A mutation that deletes the document at the given key. */\nvar DeleteMutation = /** @class */ (function (_super) {\n    __extends(DeleteMutation, _super);\n    function DeleteMutation(key, precondition) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.precondition = precondition;\n        _this.type = MutationType.Delete;\n        return _this;\n    }\n    DeleteMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\n        this.verifyKeyMatches(maybeDoc);\n        assert(mutationResult.transformResults == null, 'Transform results received by DeleteMutation.');\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\n        // document the server has accepted the mutation so the precondition must\n        // have held.\n        return new NoDocument(this.key, SnapshotVersion.MIN);\n    };\n    DeleteMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\n        this.verifyKeyMatches(maybeDoc);\n        if (!this.precondition.isValidFor(maybeDoc)) {\n            return maybeDoc;\n        }\n        if (maybeDoc) {\n            assert(maybeDoc.key.isEqual(this.key), 'Can only apply mutation to document with same key');\n        }\n        return new NoDocument(this.key, SnapshotVersion.forDeletedDoc());\n    };\n    DeleteMutation.prototype.isEqual = function (other) {\n        return (other instanceof DeleteMutation &&\n            this.key.isEqual(other.key) &&\n            this.precondition.isEqual(other.precondition));\n    };\n    return DeleteMutation;\n}(Mutation));\nexport { DeleteMutation };\n\n//# sourceMappingURL=mutation.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/model/mutation.js\n// module id = 163\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SortedMap } from './sorted_map';\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nvar SortedSet = /** @class */ (function () {\n    function SortedSet(comparator) {\n        this.comparator = comparator;\n        this.data = new SortedMap(this.comparator);\n    }\n    /**\n     * Creates a SortedSet from the keys of the map.\n     * This is currently implemented as an O(n) copy.\n     */\n    SortedSet.fromMapKeys = function (map) {\n        var keys = new SortedSet(map.comparator);\n        map.forEach(function (key) {\n            keys = keys.add(key);\n        });\n        return keys;\n    };\n    SortedSet.prototype.has = function (elem) {\n        return this.data.get(elem) !== null;\n    };\n    SortedSet.prototype.first = function () {\n        return this.data.minKey();\n    };\n    SortedSet.prototype.last = function () {\n        return this.data.maxKey();\n    };\n    Object.defineProperty(SortedSet.prototype, \"size\", {\n        get: function () {\n            return this.data.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SortedSet.prototype.indexOf = function (elem) {\n        return this.data.indexOf(elem);\n    };\n    /** Iterates elements in order defined by \"comparator\" */\n    SortedSet.prototype.forEach = function (cb) {\n        this.data.inorderTraversal(function (k, v) {\n            cb(k);\n            return false;\n        });\n    };\n    /** Iterates over `elem`s such that: range[0] <= elem < range[1]. */\n    SortedSet.prototype.forEachInRange = function (range, cb) {\n        var iter = this.data.getIteratorFrom(range[0]);\n        while (iter.hasNext()) {\n            var elem = iter.getNext();\n            if (this.comparator(elem.key, range[1]) >= 0)\n                return;\n            cb(elem.key);\n        }\n    };\n    /**\n     * Iterates over `elem`s such that: start <= elem until false is returned.\n     */\n    SortedSet.prototype.forEachWhile = function (cb, start) {\n        var iter;\n        if (start !== undefined) {\n            iter = this.data.getIteratorFrom(start);\n        }\n        else {\n            iter = this.data.getIterator();\n        }\n        while (iter.hasNext()) {\n            var elem = iter.getNext();\n            var result = cb(elem.key);\n            if (!result)\n                return;\n        }\n    };\n    /** Finds the least element greater than or equal to `elem`. */\n    SortedSet.prototype.firstAfterOrEqual = function (elem) {\n        var iter = this.data.getIteratorFrom(elem);\n        return iter.hasNext() ? iter.getNext().key : null;\n    };\n    /** Inserts or updates an element */\n    SortedSet.prototype.add = function (elem) {\n        return this.copy(this.data.remove(elem).insert(elem, true));\n    };\n    /** Deletes an element */\n    SortedSet.prototype.delete = function (elem) {\n        if (!this.has(elem))\n            return this;\n        return this.copy(this.data.remove(elem));\n    };\n    SortedSet.prototype.isEmpty = function () {\n        return this.data.isEmpty();\n    };\n    SortedSet.prototype.unionWith = function (other) {\n        var result = this;\n        other.forEach(function (elem) {\n            result = result.add(elem);\n        });\n        return result;\n    };\n    SortedSet.prototype.isEqual = function (other) {\n        if (!(other instanceof SortedSet))\n            return false;\n        if (this.size !== other.size)\n            return false;\n        var thisIt = this.data.getIterator();\n        var otherIt = other.data.getIterator();\n        while (thisIt.hasNext()) {\n            var thisElem = thisIt.getNext().key;\n            var otherElem = otherIt.getNext().key;\n            if (this.comparator(thisElem, otherElem) !== 0)\n                return false;\n        }\n        return true;\n    };\n    SortedSet.prototype.toString = function () {\n        var result = [];\n        this.forEach(function (elem) { return result.push(elem); });\n        return 'SortedSet(' + result.toString() + ')';\n    };\n    SortedSet.prototype.copy = function (data) {\n        var result = new SortedSet(this.comparator);\n        result.data = data;\n        return result;\n    };\n    return SortedSet;\n}());\nexport { SortedSet };\n\n//# sourceMappingURL=sorted_set.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/sorted_set.js\n// module id = 164\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DocumentKey } from '../model/document_key';\nimport { fail } from '../util/assert';\nimport { SortedMap } from '../util/sorted_map';\nexport var ChangeType;\n(function (ChangeType) {\n    ChangeType[ChangeType[\"Added\"] = 0] = \"Added\";\n    ChangeType[ChangeType[\"Removed\"] = 1] = \"Removed\";\n    ChangeType[ChangeType[\"Modified\"] = 2] = \"Modified\";\n    ChangeType[ChangeType[\"Metadata\"] = 3] = \"Metadata\";\n})(ChangeType || (ChangeType = {}));\nexport var SyncState;\n(function (SyncState) {\n    SyncState[SyncState[\"Local\"] = 0] = \"Local\";\n    SyncState[SyncState[\"Synced\"] = 1] = \"Synced\";\n})(SyncState || (SyncState = {}));\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */\nvar DocumentChangeSet = /** @class */ (function () {\n    function DocumentChangeSet() {\n        this.changeMap = new SortedMap(DocumentKey.comparator);\n    }\n    DocumentChangeSet.prototype.track = function (change) {\n        var key = change.doc.key;\n        var oldChange = this.changeMap.get(key);\n        if (!oldChange) {\n            this.changeMap = this.changeMap.insert(key, change);\n            return;\n        }\n        // Merge the new change with the existing change.\n        if (change.type !== ChangeType.Added &&\n            oldChange.type === ChangeType.Metadata) {\n            this.changeMap = this.changeMap.insert(key, change);\n        }\n        else if (change.type === ChangeType.Metadata &&\n            oldChange.type !== ChangeType.Removed) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: oldChange.type,\n                doc: change.doc\n            });\n        }\n        else if (change.type === ChangeType.Modified &&\n            oldChange.type === ChangeType.Modified) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: ChangeType.Modified,\n                doc: change.doc\n            });\n        }\n        else if (change.type === ChangeType.Modified &&\n            oldChange.type === ChangeType.Added) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: ChangeType.Added,\n                doc: change.doc\n            });\n        }\n        else if (change.type === ChangeType.Removed &&\n            oldChange.type === ChangeType.Added) {\n            this.changeMap = this.changeMap.remove(key);\n        }\n        else if (change.type === ChangeType.Removed &&\n            oldChange.type === ChangeType.Modified) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: ChangeType.Removed,\n                doc: oldChange.doc\n            });\n        }\n        else if (change.type === ChangeType.Added &&\n            oldChange.type === ChangeType.Removed) {\n            this.changeMap = this.changeMap.insert(key, {\n                type: ChangeType.Modified,\n                doc: change.doc\n            });\n        }\n        else {\n            // This includes these cases, which don't make sense:\n            // Added->Added\n            // Removed->Removed\n            // Modified->Added\n            // Removed->Modified\n            // Metadata->Added\n            // Removed->Metadata\n            fail('unsupported combination of changes: ' +\n                JSON.stringify(change) +\n                ' after ' +\n                JSON.stringify(oldChange));\n        }\n    };\n    DocumentChangeSet.prototype.getChanges = function () {\n        var changes = [];\n        this.changeMap.inorderTraversal(function (key, change) {\n            changes.push(change);\n        });\n        return changes;\n    };\n    return DocumentChangeSet;\n}());\nexport { DocumentChangeSet };\nvar ViewSnapshot = /** @class */ (function () {\n    function ViewSnapshot(query, docs, oldDocs, docChanges, fromCache, hasPendingWrites, syncStateChanged) {\n        this.query = query;\n        this.docs = docs;\n        this.oldDocs = oldDocs;\n        this.docChanges = docChanges;\n        this.fromCache = fromCache;\n        this.hasPendingWrites = hasPendingWrites;\n        this.syncStateChanged = syncStateChanged;\n    }\n    ViewSnapshot.prototype.isEqual = function (other) {\n        if (this.fromCache !== other.fromCache ||\n            this.hasPendingWrites !== other.hasPendingWrites ||\n            this.syncStateChanged !== other.syncStateChanged ||\n            !this.query.isEqual(other.query) ||\n            !this.docs.isEqual(other.docs) ||\n            !this.oldDocs.isEqual(other.oldDocs)) {\n            return false;\n        }\n        var changes = this.docChanges;\n        var otherChanges = other.docChanges;\n        if (changes.length !== otherChanges.length) {\n            return false;\n        }\n        for (var i = 0; i < changes.length; i++) {\n            if (changes[i].type !== otherChanges[i].type ||\n                !changes[i].doc.isEqual(otherChanges[i].doc)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ViewSnapshot;\n}());\nexport { ViewSnapshot };\n\n//# sourceMappingURL=view_snapshot.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/view_snapshot.js\n// module id = 165\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { documentKeySet } from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\nimport { PersistencePromise } from './persistence_promise';\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */\nvar ReferenceSet = /** @class */ (function () {\n    function ReferenceSet() {\n        // A set of outstanding references to a document sorted by key.\n        this.refsByKey = new SortedSet(DocReference.compareByKey);\n        // A set of outstanding references to a document sorted by target id.\n        this.refsByTarget = new SortedSet(DocReference.compareByTargetId);\n        /** Keeps track of keys that have references */\n        this.garbageCollector = null;\n    }\n    /** Returns true if the reference set contains no references. */\n    ReferenceSet.prototype.isEmpty = function () {\n        return this.refsByKey.isEmpty();\n    };\n    /** Adds a reference to the given document key for the given ID. */\n    ReferenceSet.prototype.addReference = function (key, id) {\n        var ref = new DocReference(key, id);\n        this.refsByKey = this.refsByKey.add(ref);\n        this.refsByTarget = this.refsByTarget.add(ref);\n    };\n    /** Add references to the given document keys for the given ID. */\n    ReferenceSet.prototype.addReferences = function (keys, id) {\n        var _this = this;\n        keys.forEach(function (key) { return _this.addReference(key, id); });\n    };\n    /**\n     * Removes a reference to the given document key for the given\n     * ID.\n     */\n    ReferenceSet.prototype.removeReference = function (key, id) {\n        this.removeRef(new DocReference(key, id));\n    };\n    ReferenceSet.prototype.removeReferences = function (keys, id) {\n        var _this = this;\n        keys.forEach(function (key) { return _this.removeReference(key, id); });\n    };\n    /**\n     * Clears all references with a given ID. Calls removeRef() for each key\n     * removed.\n     */\n    ReferenceSet.prototype.removeReferencesForId = function (id) {\n        var _this = this;\n        var emptyKey = DocumentKey.EMPTY;\n        var startRef = new DocReference(emptyKey, id);\n        var endRef = new DocReference(emptyKey, id + 1);\n        this.refsByTarget.forEachInRange([startRef, endRef], function (ref) {\n            _this.removeRef(ref);\n        });\n    };\n    ReferenceSet.prototype.removeAllReferences = function () {\n        var _this = this;\n        this.refsByKey.forEach(function (ref) { return _this.removeRef(ref); });\n    };\n    ReferenceSet.prototype.removeRef = function (ref) {\n        this.refsByKey = this.refsByKey.delete(ref);\n        this.refsByTarget = this.refsByTarget.delete(ref);\n        if (this.garbageCollector !== null) {\n            this.garbageCollector.addPotentialGarbageKey(ref.key);\n        }\n    };\n    ReferenceSet.prototype.referencesForId = function (id) {\n        var emptyKey = DocumentKey.EMPTY;\n        var startRef = new DocReference(emptyKey, id);\n        var endRef = new DocReference(emptyKey, id + 1);\n        var keys = documentKeySet();\n        this.refsByTarget.forEachInRange([startRef, endRef], function (ref) {\n            keys = keys.add(ref.key);\n        });\n        return keys;\n    };\n    ReferenceSet.prototype.setGarbageCollector = function (garbageCollector) {\n        this.garbageCollector = garbageCollector;\n    };\n    ReferenceSet.prototype.containsKey = function (txn, key) {\n        var ref = new DocReference(key, 0);\n        var firstRef = this.refsByKey.firstAfterOrEqual(ref);\n        return PersistencePromise.resolve(firstRef !== null && key.isEqual(firstRef.key));\n    };\n    return ReferenceSet;\n}());\nexport { ReferenceSet };\nvar DocReference = /** @class */ (function () {\n    function DocReference(key, targetOrBatchId) {\n        this.key = key;\n        this.targetOrBatchId = targetOrBatchId;\n    }\n    /** Compare by key then by ID */\n    DocReference.compareByKey = function (left, right) {\n        return (DocumentKey.comparator(left.key, right.key) ||\n            primitiveComparator(left.targetOrBatchId, right.targetOrBatchId));\n    };\n    /** Compare by ID then by key */\n    DocReference.compareByTargetId = function (left, right) {\n        return (primitiveComparator(left.targetOrBatchId, right.targetOrBatchId) ||\n            DocumentKey.comparator(left.key, right.key));\n    };\n    return DocReference;\n}());\nexport { DocReference };\n\n//# sourceMappingURL=reference_set.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/reference_set.js\n// module id = 166\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert';\nimport { debug } from '../util/log';\nimport { PersistencePromise } from './persistence_promise';\nvar LOG_TAG = 'SimpleDb';\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */\nvar SimpleDb = /** @class */ (function () {\n    function SimpleDb(db) {\n        this.db = db;\n    }\n    /** Opens the specified database, creating or upgrading it if necessary. */\n    SimpleDb.openOrCreate = function (name, version, runUpgrade) {\n        assert(SimpleDb.isAvailable(), 'IndexedDB not supported in current environment.');\n        debug(LOG_TAG, 'Opening database:', name);\n        return new PersistencePromise(function (resolve, reject) {\n            // TODO(mikelehen): Investigate browser compatibility.\n            // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n            // suggests IE9 and older WebKit browsers handle upgrade\n            // differently.\n            var request = window.indexedDB.open(name, version);\n            request.onsuccess = function (event) {\n                var db = event.target.result;\n                resolve(new SimpleDb(db));\n            };\n            request.onerror = function (event) {\n                reject(event.target.error);\n            };\n            request.onupgradeneeded = function (event) {\n                debug(LOG_TAG, 'Database \"' + name + '\" requires upgrade from version:', event.oldVersion);\n                // TODO(mikelehen): If/when we need to do an actual data\n                // migration, we'll want to wrap db in a SimpleDb and have the\n                // runUpgrade function return a PersistencePromise, since we'll\n                // likely need to do async reads and writes. For now we're\n                // cheating and just passing the raw IndexedDB in, since\n                // createObjectStore(), etc. are synchronous.\n                var db = event.target.result;\n                runUpgrade(db, event.oldVersion);\n            };\n        }).toPromise();\n    };\n    /** Deletes the specified database. */\n    SimpleDb.delete = function (name) {\n        debug(LOG_TAG, 'Removing database:', name);\n        return wrapRequest(window.indexedDB.deleteDatabase(name)).toPromise();\n    };\n    /** Returns true if IndexedDB is available in the current environment. */\n    SimpleDb.isAvailable = function () {\n        if (typeof window === 'undefined' || window.indexedDB == null) {\n            return false;\n        }\n        // We extensively use indexed array values and compound keys,\n        // which IE and Edge do not support. However, they still have indexedDB\n        // defined on the window, so we need to check for them here and make sure\n        // to return that persistence is not enabled for those browsers.\n        // For tracking support of this feature, see here:\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n        // Check the UA string to find out the browser.\n        var ua = window.navigator.userAgent;\n        // IE 10\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n        // IE 11\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n        // Edge\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n        if (ua.indexOf('MSIE ') > 0 ||\n            ua.indexOf('Trident/') > 0 ||\n            ua.indexOf('Edge/') > 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    SimpleDb.prototype.runTransaction = function (mode, objectStores, transactionFn) {\n        var transaction = new SimpleDbTransaction(this.db, mode, objectStores);\n        var transactionFnResult = transactionFn(transaction)\n            .catch(function (error) {\n            // Abort the transaction if there was an\n            // error.\n            transaction.abort();\n            return PersistencePromise.reject(error);\n        })\n            .toPromise();\n        // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n        // fire), but still return the original transactionFnResult back to the\n        // caller.\n        return transaction.completionPromise.then(function () { return transactionFnResult; });\n    };\n    SimpleDb.prototype.close = function () {\n        this.db.close();\n    };\n    return SimpleDb;\n}());\nexport { SimpleDb };\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */\nvar IterationController = /** @class */ (function () {\n    function IterationController(dbCursor) {\n        this.dbCursor = dbCursor;\n        this.shouldStop = false;\n        this.nextKey = null;\n    }\n    Object.defineProperty(IterationController.prototype, \"isDone\", {\n        get: function () {\n            return this.shouldStop;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IterationController.prototype, \"skipToKey\", {\n        get: function () {\n            return this.nextKey;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IterationController.prototype, \"cursor\", {\n        set: function (value) {\n            this.dbCursor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This function can be called to stop iteration at any point.\n     */\n    IterationController.prototype.done = function () {\n        this.shouldStop = true;\n    };\n    /**\n     * This function can be called to skip to that next key, which could be\n     * an index or a primary key.\n     */\n    IterationController.prototype.skip = function (key) {\n        this.nextKey = key;\n    };\n    /**\n     * Delete the current cursor value from the object store.\n     *\n     * NOTE: You CANNOT do this with a keysOnly query.\n     */\n    IterationController.prototype.delete = function () {\n        return wrapRequest(this.dbCursor.delete());\n    };\n    return IterationController;\n}());\nexport { IterationController };\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nvar SimpleDbTransaction = /** @class */ (function () {\n    function SimpleDbTransaction(db, mode, objectStoresNames) {\n        var _this = this;\n        this.aborted = false;\n        this.transaction = db.transaction(objectStoresNames, mode);\n        this.completionPromise = new Promise(function (resolve, reject) {\n            // We consider aborting to be \"normal\" and just resolve the promise.\n            // May need to revisit if/when we actually need to abort transactions.\n            _this.transaction.onabort = _this.transaction.oncomplete = function (event) {\n                resolve();\n            };\n            _this.transaction.onerror = function (event) {\n                reject(event.target.error);\n            };\n        });\n    }\n    SimpleDbTransaction.prototype.abort = function () {\n        if (!this.aborted) {\n            debug(LOG_TAG, 'Aborting transaction.');\n            this.aborted = true;\n            this.transaction.abort();\n        }\n    };\n    /**\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n     * operations performed on the SimpleDbStore happen within the context of this\n     * transaction and it cannot be used anymore once the transaction is\n     * completed.\n     *\n     * Note that we can't actually enforce that the KeyType and ValueType are\n     * correct, but they allow type safety through the rest of the consuming code.\n     */\n    SimpleDbTransaction.prototype.store = function (storeName) {\n        var store = this.transaction.objectStore(storeName);\n        assert(!!store, 'Object store not part of transaction: ' + storeName);\n        return new SimpleDbStore(store);\n    };\n    return SimpleDbTransaction;\n}());\nexport { SimpleDbTransaction };\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */\nvar SimpleDbStore = /** @class */ (function () {\n    function SimpleDbStore(store) {\n        this.store = store;\n    }\n    SimpleDbStore.prototype.put = function (keyOrValue, value) {\n        var request;\n        if (value !== undefined) {\n            debug(LOG_TAG, 'PUT', this.store.name, keyOrValue, value);\n            request = this.store.put(value, keyOrValue);\n        }\n        else {\n            debug(LOG_TAG, 'PUT', this.store.name, '<auto-key>', keyOrValue);\n            request = this.store.put(keyOrValue);\n        }\n        return wrapRequest(request);\n    };\n    /**\n     * Gets the object with the specified key from the specified store, or null\n     * if no object exists with the specified key.\n     *\n     * @key The key of the object to get.\n     * @return The object with the specified key or null if no object exists.\n     */\n    SimpleDbStore.prototype.get = function (key) {\n        var _this = this;\n        var request = this.store.get(key);\n        // tslint:disable-next-line:no-any We're doing an unsafe cast to ValueType.\n        return wrapRequest(request).next(function (result) {\n            // Normalize nonexistence to null.\n            if (result === undefined) {\n                result = null;\n            }\n            debug(LOG_TAG, 'GET', _this.store.name, key, result);\n            return result;\n        });\n    };\n    SimpleDbStore.prototype.delete = function (key) {\n        debug(LOG_TAG, 'DELETE', this.store.name, key);\n        var request = this.store.delete(key);\n        return wrapRequest(request);\n    };\n    SimpleDbStore.prototype.loadAll = function (indexOrRange, range) {\n        var cursor = this.cursor(this.options(indexOrRange, range));\n        var results = [];\n        return this.iterateCursor(cursor, function (key, value) {\n            results.push(value);\n        }).next(function () {\n            return results;\n        });\n    };\n    SimpleDbStore.prototype.deleteAll = function (indexOrRange, range) {\n        debug(LOG_TAG, 'DELETE ALL', this.store.name);\n        var options = this.options(indexOrRange, range);\n        options.keysOnly = false;\n        var cursor = this.cursor(options);\n        return this.iterateCursor(cursor, function (key, value, control) {\n            // NOTE: Calling delete() on a cursor is documented as more efficient than\n            // calling delete() on an object store with a single key\n            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),\n            // however, this requires us *not* to use a keysOnly cursor\n            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We\n            // may want to compare the performance of each method.\n            return control.delete();\n        });\n    };\n    SimpleDbStore.prototype.iterate = function (optionsOrCallback, callback) {\n        var options;\n        if (!callback) {\n            options = {};\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        var cursor = this.cursor(options);\n        return this.iterateCursor(cursor, callback);\n    };\n    SimpleDbStore.prototype.iterateCursor = function (cursorRequest, fn) {\n        var results = [];\n        return new PersistencePromise(function (resolve, reject) {\n            cursorRequest.onerror = function (event) {\n                reject(event.target.error);\n            };\n            cursorRequest.onsuccess = function (event) {\n                var cursor = event.target.result;\n                if (!cursor) {\n                    resolve();\n                    return;\n                }\n                var controller = new IterationController(cursor);\n                var userResult = fn(cursor.primaryKey, cursor.value, controller);\n                if (userResult instanceof PersistencePromise) {\n                    results.push(userResult);\n                }\n                if (controller.isDone) {\n                    resolve();\n                }\n                else if (controller.skipToKey === null) {\n                    cursor.continue();\n                }\n                else {\n                    cursor.continue(controller.skipToKey);\n                }\n            };\n        }).next(function () {\n            return PersistencePromise.waitFor(results);\n        });\n    };\n    SimpleDbStore.prototype.options = function (indexOrRange, range) {\n        var indexName = undefined;\n        if (indexOrRange !== undefined) {\n            if (typeof indexOrRange === 'string') {\n                indexName = indexOrRange;\n            }\n            else {\n                assert(range === undefined, '3rd argument must not be defined if 2nd is a range.');\n                range = indexOrRange;\n            }\n        }\n        return { index: indexName, range: range };\n    };\n    SimpleDbStore.prototype.cursor = function (options) {\n        var direction = 'next';\n        if (options.reverse) {\n            direction = 'prev';\n        }\n        if (options.index) {\n            var index = this.store.index(options.index);\n            if (options.keysOnly) {\n                return index.openKeyCursor(options.range, direction);\n            }\n            else {\n                return index.openCursor(options.range, direction);\n            }\n        }\n        else {\n            return this.store.openCursor(options.range, direction);\n        }\n    };\n    return SimpleDbStore;\n}());\nexport { SimpleDbStore };\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */\nfunction wrapRequest(request) {\n    return new PersistencePromise(function (resolve, reject) {\n        request.onsuccess = function (event) {\n            var result = event.target.result;\n            resolve(result);\n        };\n        request.onerror = function (event) {\n            reject(event.target.error);\n        };\n    });\n}\n\n//# sourceMappingURL=simple_db.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/simple_db.js\n// module id = 167\n// module chunks = 5","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 174\n// module chunks = 5 6","//! moment.js\n//! version : 2.20.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    } else {\n        var k;\n        for (k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n        }\n        else {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction mod(n, x) {\n    return ((n % x) + x) % x;\n}\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            var aliasedRequire = require;\n            aliasedRequire('./locale/' + name);\n            getSetGlobalLocale(oldLocale);\n        } catch (e) {}\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, tmpLocale, parentConfig = baseConfig;\n        // MERGE\n        tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n}\n\nfunction untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n        return 2000 + year;\n    } else if (year <= 999) {\n        return 1900 + year;\n    }\n    return year;\n}\n\nfunction preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\n\nvar obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    } else {\n        var hm = parseInt(numOffset, 10);\n        var m = hm % 100, h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (match) {\n        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n        if (!checkWeekday(match[1], parsedArray, config)) {\n            return;\n        }\n\n        config._a = parsedArray;\n        config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n        config._d = createUTCDate.apply(null, config._a);\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n        case 'year': output = monthDiff(this, that) / 12; break;\n        case 'month': output = monthDiff(this, that); break;\n        case 'quarter': output = monthDiff(this, that) / 3; break;\n        case 'second': output = (this - that) / 1e3; break; // 1000\n        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n        default: output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString(keepOffset) {\n    if (!this.isValid()) {\n        return null;\n    }\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        if (utc) {\n            return this.toDate().toISOString();\n        } else {\n            return new Date(this._d.valueOf()).toISOString().replace('Z', formatMoment(m, 'Z'));\n        }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction clone$1 () {\n    return createDuration(this);\n}\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction sign(x) {\n    return ((x > 0) - (x < 0)) || +x;\n}\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n    return totalSign + 'P' +\n        (Y ? ymSign + Y + 'Y' : '') +\n        (M ? ymSign + M + 'M' : '') +\n        (D ? daysSign + D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? hmsSign + h + 'H' : '') +\n        (m ? hmsSign + m + 'M' : '') +\n        (s ? hmsSign + s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.clone          = clone$1;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.20.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding  = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\n// currently HTML5 input type only supports 24-hour formats\nhooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n    TIME: 'HH:mm',                                  // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n    MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n};\n\nreturn hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/moment.js\n// module id = 176\n// module chunks = 5 10","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 177\n// module chunks = 5 10","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createFirebaseNamespace } from './src/firebaseApp';\nexport var firebase = createFirebaseNamespace();\nexport default firebase;\n\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/esm/index.js\n// module id = 178\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\nexports.CONSTANTS = {\n    /**\n     * @define {boolean} Whether this is the client Node.js SDK.\n     */\n    NODE_CLIENT: false,\n    /**\n     * @define {boolean} Whether this is the Admin Node.js SDK.\n     */\n    NODE_ADMIN: false,\n    /**\n     * Firebase SDK Version\n     */\n    SDK_VERSION: '${JSCORE_VERSION}'\n};\n\n//# sourceMappingURL=constants.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/constants.js\n// module id = 179\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport firebase from '@firebase/app';\n/** The semver (www.semver.org) version of the SDK. */\nexport var SDK_VERSION = firebase.SDK_VERSION;\n\n//# sourceMappingURL=version.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/version.js\n// module id = 180\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PlatformSupport } from '../platform/platform';\nimport { makeConstructorPrivate } from '../util/api';\nimport { Code, FirestoreError } from '../util/error';\nimport { invalidClassError, validateArgType, validateExactNumberOfArgs } from '../util/input_validation';\nimport { primitiveComparator } from '../util/misc';\n/** Helper function to assert Uint8Array is available at runtime. */\nfunction assertUint8ArrayAvailable() {\n    if (typeof Uint8Array === 'undefined') {\n        throw new FirestoreError(Code.UNIMPLEMENTED, 'Uint8Arrays are not available in this environment.');\n    }\n}\n/** Helper function to assert Base64 functions are available at runtime. */\nfunction assertBase64Available() {\n    if (!PlatformSupport.getPlatform().base64Available) {\n        throw new FirestoreError(Code.UNIMPLEMENTED, 'Blobs are unavailable in Firestore in this environment.');\n    }\n}\n/**\n * Immutable class holding a blob (binary data).\n * This class is directly exposed in the public API.\n *\n * Note that while you can't hide the constructor in JavaScript code, we are\n * using the hack above to make sure no-one outside this module can call it.\n */\nvar Blob = /** @class */ (function () {\n    function Blob(binaryString) {\n        assertBase64Available();\n        this._binaryString = binaryString;\n    }\n    Blob.fromBase64String = function (base64) {\n        validateExactNumberOfArgs('Blob.fromBase64String', arguments, 1);\n        validateArgType('Blob.fromBase64String', 'string', 1, base64);\n        assertBase64Available();\n        try {\n            var binaryString = PlatformSupport.getPlatform().atob(base64);\n            return new Blob(binaryString);\n        }\n        catch (e) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Failed to construct Blob from Base64 string: ' + e);\n        }\n    };\n    Blob.fromUint8Array = function (array) {\n        validateExactNumberOfArgs('Blob.fromUint8Array', arguments, 1);\n        assertUint8ArrayAvailable();\n        if (!(array instanceof Uint8Array)) {\n            throw invalidClassError('Blob.fromUint8Array', 'Uint8Array', 1, array);\n        }\n        // We can't call array.map directly because it expects the return type to\n        // be a Uint8Array, whereas we can convert it to a regular array by invoking\n        // map on the Array prototype.\n        var binaryString = Array.prototype.map\n            .call(array, function (char) {\n            return String.fromCharCode(char);\n        })\n            .join('');\n        return new Blob(binaryString);\n    };\n    Blob.prototype.toBase64 = function () {\n        validateExactNumberOfArgs('Blob.toBase64', arguments, 0);\n        assertBase64Available();\n        return PlatformSupport.getPlatform().btoa(this._binaryString);\n    };\n    Blob.prototype.toUint8Array = function () {\n        validateExactNumberOfArgs('Blob.toUint8Array', arguments, 0);\n        assertUint8ArrayAvailable();\n        var buffer = new Uint8Array(this._binaryString.length);\n        for (var i = 0; i < this._binaryString.length; i++) {\n            buffer[i] = this._binaryString.charCodeAt(i);\n        }\n        return buffer;\n    };\n    Blob.prototype.toString = function () {\n        return 'Blob(base64: ' + this.toBase64() + ')';\n    };\n    Blob.prototype.isEqual = function (other) {\n        return this._binaryString === other._binaryString;\n    };\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n    Blob.prototype._compareTo = function (other) {\n        return primitiveComparator(this._binaryString, other._binaryString);\n    };\n    return Blob;\n}());\nexport { Blob };\n// Public instance that disallows construction at runtime. This constructor is\n// used when exporting Blob on firebase.firestore.Blob and will be called Blob\n// publicly. Internally we still use Blob which has a type checked private\n// constructor. Note that Blob and PublicBlob can be used interchangeably in\n// instanceof checks.\n// For our internal TypeScript code PublicBlob doesn't exist as a type, and so\n// we need to use Blob as type and export it too.\n// tslint:disable-next-line:variable-name We're treating this as a class name.\nexport var PublicBlob = makeConstructorPrivate(Blob, 'Use Blob.fromUint8Array() or Blob.fromBase64String() instead.');\n\n//# sourceMappingURL=blob.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/api/blob.js\n// module id = 181\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// We are doing some heavy reflective stuff, lots of any casting necessary\n/* tslint:disable:no-any */\nimport { Code, FirestoreError } from './error';\n/**\n * Helper function to prevent instantiation through the constructor.\n *\n * This method creates a new constructor that throws when it's invoked.\n * The prototype of that constructor is then set to the prototype of the hidden\n * \"class\" to expose all the prototype methods and allow for instanceof\n * checks.\n *\n * To also make all the static methods available, all properties of the\n * original constructor are copied to the new constructor.\n */\nexport function makeConstructorPrivate(cls, optionalMessage) {\n    function PublicConstructor() {\n        var error = 'This constructor is private.';\n        if (optionalMessage) {\n            error += ' ';\n            error += optionalMessage;\n        }\n        throw new FirestoreError(Code.INVALID_ARGUMENT, error);\n    }\n    // Make sure instanceof checks work and all methods are exposed on the public\n    // constructor\n    PublicConstructor.prototype = cls.prototype;\n    // Copy any static methods/members\n    for (var staticProperty in cls) {\n        if (cls.hasOwnProperty(staticProperty)) {\n            PublicConstructor[staticProperty] = cls[staticProperty];\n        }\n    }\n    return PublicConstructor;\n}\n\n//# sourceMappingURL=api.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/api.js\n// module id = 182\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Code, FirestoreError } from '../util/error';\nimport { validateArgType, validateExactNumberOfArgs } from '../util/input_validation';\nimport { primitiveComparator } from '../util/misc';\n/**\n * Immutable class representing a geo point as latitude-longitude pair.\n * This class is directly exposed in the public API, including its constructor.\n */\nvar GeoPoint = /** @class */ (function () {\n    function GeoPoint(latitude, longitude) {\n        validateExactNumberOfArgs('GeoPoint', arguments, 2);\n        validateArgType('GeoPoint', 'number', 1, latitude);\n        validateArgType('GeoPoint', 'number', 2, longitude);\n        if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Latitude must be a number between -90 and 90, but was: ' + latitude);\n        }\n        if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Longitude must be a number between -180 and 180, but was: ' + longitude);\n        }\n        this._lat = latitude;\n        this._long = longitude;\n    }\n    Object.defineProperty(GeoPoint.prototype, \"latitude\", {\n        /**\n         * Returns the latitude of this geo point, a number between -90 and 90.\n         */\n        get: function () {\n            return this._lat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoPoint.prototype, \"longitude\", {\n        /**\n         * Returns the longitude of this geo point, a number between -180 and 180.\n         */\n        get: function () {\n            return this._long;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GeoPoint.prototype.isEqual = function (other) {\n        return this._lat === other._lat && this._long === other._long;\n    };\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n    GeoPoint.prototype._compareTo = function (other) {\n        return (primitiveComparator(this._lat, other._lat) ||\n            primitiveComparator(this._long, other._long));\n    };\n    return GeoPoint;\n}());\nexport { GeoPoint };\n\n//# sourceMappingURL=geo_point.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/api/geo_point.js\n// module id = 183\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { DoubleValue, NullValue, RefValue } from '../model/field_value';\nimport { FieldPath } from '../model/path';\nimport { assert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport { isNullOrUndefined } from '../util/types';\nvar Query = /** @class */ (function () {\n    function Query(path, explicitOrderBy, filters, limit, startAt, endAt) {\n        if (explicitOrderBy === void 0) { explicitOrderBy = []; }\n        if (filters === void 0) { filters = []; }\n        if (limit === void 0) { limit = null; }\n        if (startAt === void 0) { startAt = null; }\n        if (endAt === void 0) { endAt = null; }\n        this.path = path;\n        this.explicitOrderBy = explicitOrderBy;\n        this.filters = filters;\n        this.limit = limit;\n        this.startAt = startAt;\n        this.endAt = endAt;\n        this.memoizedCanonicalId = null;\n        this.memoizedOrderBy = null;\n        if (this.startAt) {\n            this.assertValidBound(this.startAt);\n        }\n        if (this.endAt) {\n            this.assertValidBound(this.endAt);\n        }\n    }\n    Query.atPath = function (path) {\n        return new Query(path);\n    };\n    Object.defineProperty(Query.prototype, \"orderBy\", {\n        get: function () {\n            if (this.memoizedOrderBy === null) {\n                var inequalityField = this.getInequalityFilterField();\n                var firstOrderByField = this.getFirstOrderByField();\n                if (inequalityField !== null && firstOrderByField === null) {\n                    // In order to implicitly add key ordering, we must also add the\n                    // inequality filter field for it to be a valid query.\n                    // Note that the default inequality field and key ordering is ascending.\n                    if (inequalityField.isKeyField()) {\n                        this.memoizedOrderBy = [KEY_ORDERING_ASC];\n                    }\n                    else {\n                        this.memoizedOrderBy = [\n                            new OrderBy(inequalityField),\n                            KEY_ORDERING_ASC\n                        ];\n                    }\n                }\n                else {\n                    assert(inequalityField === null ||\n                        (firstOrderByField !== null &&\n                            inequalityField.isEqual(firstOrderByField)), 'First orderBy should match inequality field.');\n                    this.memoizedOrderBy = [];\n                    var foundKeyOrdering = false;\n                    for (var _i = 0, _a = this.explicitOrderBy; _i < _a.length; _i++) {\n                        var orderBy = _a[_i];\n                        this.memoizedOrderBy.push(orderBy);\n                        if (orderBy.field.isKeyField()) {\n                            foundKeyOrdering = true;\n                        }\n                    }\n                    if (!foundKeyOrdering) {\n                        // The order of the implicit key ordering always matches the last\n                        // explicit order by\n                        var lastDirection = this.explicitOrderBy.length > 0\n                            ? this.explicitOrderBy[this.explicitOrderBy.length - 1].dir\n                            : Direction.ASCENDING;\n                        this.memoizedOrderBy.push(lastDirection === Direction.ASCENDING\n                            ? KEY_ORDERING_ASC\n                            : KEY_ORDERING_DESC);\n                    }\n                }\n            }\n            return this.memoizedOrderBy;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Query.prototype.addFilter = function (filter) {\n        assert(this.getInequalityFilterField() == null ||\n            !(filter instanceof RelationFilter) ||\n            !filter.isInequality() ||\n            filter.field.isEqual(this.getInequalityFilterField()), 'Query must only have one inequality field.');\n        assert(!DocumentKey.isDocumentKey(this.path), 'No filtering allowed for document query');\n        var newFilters = this.filters.concat([filter]);\n        return new Query(this.path, this.explicitOrderBy.slice(), newFilters, this.limit, this.startAt, this.endAt);\n    };\n    Query.prototype.addOrderBy = function (orderBy) {\n        assert(!DocumentKey.isDocumentKey(this.path), 'No ordering allowed for document query');\n        assert(!this.startAt && !this.endAt, 'Bounds must be set after orderBy');\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var newOrderBy = this.explicitOrderBy.concat([orderBy]);\n        return new Query(this.path, newOrderBy, this.filters.slice(), this.limit, this.startAt, this.endAt);\n    };\n    Query.prototype.withLimit = function (limit) {\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), limit, this.startAt, this.endAt);\n    };\n    Query.prototype.withStartAt = function (bound) {\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, bound, this.endAt);\n    };\n    Query.prototype.withEndAt = function (bound) {\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, this.startAt, bound);\n    };\n    // TODO(b/29183165): This is used to get a unique string from a query to, for\n    // example, use as a dictionary key, but the implementation is subject to\n    // collisions. Make it collision-free.\n    Query.prototype.canonicalId = function () {\n        if (this.memoizedCanonicalId === null) {\n            var canonicalId = this.path.canonicalString();\n            canonicalId += '|f:';\n            for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n                var filter = _a[_i];\n                canonicalId += filter.canonicalId();\n                canonicalId += ',';\n            }\n            canonicalId += '|ob:';\n            // TODO(dimond): make this collision resistant\n            for (var _b = 0, _c = this.orderBy; _b < _c.length; _b++) {\n                var orderBy = _c[_b];\n                canonicalId += orderBy.canonicalId();\n                canonicalId += ',';\n            }\n            if (!isNullOrUndefined(this.limit)) {\n                canonicalId += '|l:';\n                canonicalId += this.limit;\n            }\n            if (this.startAt) {\n                canonicalId += '|lb:';\n                canonicalId += this.startAt.canonicalId();\n            }\n            if (this.endAt) {\n                canonicalId += '|ub:';\n                canonicalId += this.endAt.canonicalId();\n            }\n            this.memoizedCanonicalId = canonicalId;\n        }\n        return this.memoizedCanonicalId;\n    };\n    Query.prototype.toString = function () {\n        var str = 'Query(' + this.path.canonicalString();\n        if (this.filters.length > 0) {\n            str += \", filters: [\" + this.filters.join(', ') + \"]\";\n        }\n        if (!isNullOrUndefined(this.limit)) {\n            str += ', limit: ' + this.limit;\n        }\n        if (this.explicitOrderBy.length > 0) {\n            str += \", orderBy: [\" + this.explicitOrderBy.join(', ') + \"]\";\n        }\n        if (this.startAt) {\n            str += ', startAt: ' + this.startAt.canonicalId();\n        }\n        if (this.endAt) {\n            str += ', endAt: ' + this.endAt.canonicalId();\n        }\n        return str + ')';\n    };\n    Query.prototype.isEqual = function (other) {\n        if (this.limit !== other.limit) {\n            return false;\n        }\n        if (this.orderBy.length !== other.orderBy.length) {\n            return false;\n        }\n        for (var i = 0; i < this.orderBy.length; i++) {\n            if (!this.orderBy[i].isEqual(other.orderBy[i])) {\n                return false;\n            }\n        }\n        if (this.filters.length !== other.filters.length) {\n            return false;\n        }\n        for (var i = 0; i < this.filters.length; i++) {\n            if (!this.filters[i].isEqual(other.filters[i])) {\n                return false;\n            }\n        }\n        if (!this.path.isEqual(other.path)) {\n            return false;\n        }\n        if (this.startAt !== null\n            ? !this.startAt.isEqual(other.startAt)\n            : other.startAt !== null) {\n            return false;\n        }\n        return this.endAt !== null\n            ? this.endAt.isEqual(other.endAt)\n            : other.endAt === null;\n    };\n    Query.prototype.docComparator = function (d1, d2) {\n        var comparedOnKeyField = false;\n        for (var _i = 0, _a = this.orderBy; _i < _a.length; _i++) {\n            var orderBy = _a[_i];\n            var comp = orderBy.compare(d1, d2);\n            if (comp !== 0)\n                return comp;\n            comparedOnKeyField = comparedOnKeyField || orderBy.field.isKeyField();\n        }\n        // Assert that we actually compared by key\n        assert(comparedOnKeyField, \"orderBy used that doesn't compare on key field\");\n        return 0;\n    };\n    Query.prototype.matches = function (doc) {\n        return (this.matchesAncestor(doc) &&\n            this.matchesOrderBy(doc) &&\n            this.matchesFilters(doc) &&\n            this.matchesBounds(doc));\n    };\n    Query.prototype.hasLimit = function () {\n        return !isNullOrUndefined(this.limit);\n    };\n    Query.prototype.getFirstOrderByField = function () {\n        return this.explicitOrderBy.length > 0\n            ? this.explicitOrderBy[0].field\n            : null;\n    };\n    Query.prototype.getInequalityFilterField = function () {\n        for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n            var filter = _a[_i];\n            if (filter instanceof RelationFilter && filter.isInequality()) {\n                return filter.field;\n            }\n        }\n        return null;\n    };\n    Query.prototype.isDocumentQuery = function () {\n        return DocumentKey.isDocumentKey(this.path) && this.filters.length === 0;\n    };\n    Query.prototype.matchesAncestor = function (doc) {\n        var docPath = doc.key.path;\n        if (DocumentKey.isDocumentKey(this.path)) {\n            // exact match for document queries\n            return this.path.isEqual(docPath);\n        }\n        else {\n            // shallow ancestor queries by default\n            return (this.path.isPrefixOf(docPath) && this.path.length === docPath.length - 1);\n        }\n    };\n    /**\n     * A document must have a value for every ordering clause in order to show up\n     * in the results.\n     */\n    Query.prototype.matchesOrderBy = function (doc) {\n        for (var _i = 0, _a = this.explicitOrderBy; _i < _a.length; _i++) {\n            var orderBy = _a[_i];\n            // order by key always matches\n            if (!orderBy.field.isKeyField() &&\n                doc.field(orderBy.field) === undefined) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Query.prototype.matchesFilters = function (doc) {\n        for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\n            var filter = _a[_i];\n            if (!filter.matches(doc)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Makes sure a document is within the bounds, if provided.\n     */\n    Query.prototype.matchesBounds = function (doc) {\n        if (this.startAt && !this.startAt.sortsBeforeDocument(this.orderBy, doc)) {\n            return false;\n        }\n        if (this.endAt && this.endAt.sortsBeforeDocument(this.orderBy, doc)) {\n            return false;\n        }\n        return true;\n    };\n    Query.prototype.assertValidBound = function (bound) {\n        assert(bound.position.length <= this.orderBy.length, 'Bound is longer than orderBy');\n    };\n    return Query;\n}());\nexport { Query };\nvar RelationOp = /** @class */ (function () {\n    function RelationOp(name) {\n        this.name = name;\n    }\n    RelationOp.fromString = function (op) {\n        switch (op) {\n            case '<':\n                return RelationOp.LESS_THAN;\n            case '<=':\n                return RelationOp.LESS_THAN_OR_EQUAL;\n            case '==':\n                return RelationOp.EQUAL;\n            case '>=':\n                return RelationOp.GREATER_THAN_OR_EQUAL;\n            case '>':\n                return RelationOp.GREATER_THAN;\n            default:\n                return fail('Unknown relation: ' + op);\n        }\n    };\n    RelationOp.prototype.toString = function () {\n        return this.name;\n    };\n    RelationOp.prototype.isEqual = function (other) {\n        return this.name === other.name;\n    };\n    RelationOp.LESS_THAN = new RelationOp('<');\n    RelationOp.LESS_THAN_OR_EQUAL = new RelationOp('<=');\n    RelationOp.EQUAL = new RelationOp('==');\n    RelationOp.GREATER_THAN = new RelationOp('>');\n    RelationOp.GREATER_THAN_OR_EQUAL = new RelationOp('>=');\n    return RelationOp;\n}());\nexport { RelationOp };\nvar RelationFilter = /** @class */ (function () {\n    function RelationFilter(field, op, value) {\n        this.field = field;\n        this.op = op;\n        this.value = value;\n    }\n    RelationFilter.prototype.matches = function (doc) {\n        if (this.field.isKeyField()) {\n            assert(this.value instanceof RefValue, 'Comparing on key, but filter value not a RefValue');\n            var refValue = this.value;\n            var comparison = DocumentKey.comparator(doc.key, refValue.key);\n            return this.matchesComparison(comparison);\n        }\n        else {\n            var val = doc.field(this.field);\n            return val !== undefined && this.matchesValue(val);\n        }\n    };\n    RelationFilter.prototype.matchesValue = function (value) {\n        // Only compare types with matching backend order (such as double and int).\n        if (this.value.typeOrder !== value.typeOrder) {\n            return false;\n        }\n        return this.matchesComparison(value.compareTo(this.value));\n    };\n    RelationFilter.prototype.matchesComparison = function (comparison) {\n        switch (this.op) {\n            case RelationOp.LESS_THAN:\n                return comparison < 0;\n            case RelationOp.LESS_THAN_OR_EQUAL:\n                return comparison <= 0;\n            case RelationOp.EQUAL:\n                return comparison === 0;\n            case RelationOp.GREATER_THAN:\n                return comparison > 0;\n            case RelationOp.GREATER_THAN_OR_EQUAL:\n                return comparison >= 0;\n            default:\n                return fail('Unknown relation op' + this.op);\n        }\n    };\n    RelationFilter.prototype.isInequality = function () {\n        return this.op !== RelationOp.EQUAL;\n    };\n    RelationFilter.prototype.canonicalId = function () {\n        // TODO(b/29183165): Technically, this won't be unique if two values have\n        // the same description, such as the int 3 and the string \"3\". So we should\n        // add the types in here somehow, too.\n        return (this.field.canonicalString() + this.op.toString() + this.value.toString());\n    };\n    RelationFilter.prototype.isEqual = function (other) {\n        if (other instanceof RelationFilter) {\n            return (this.op.isEqual(other.op) &&\n                this.field.isEqual(other.field) &&\n                this.value.isEqual(other.value));\n        }\n        else {\n            return false;\n        }\n    };\n    RelationFilter.prototype.toString = function () {\n        return this.field.canonicalString() + \" \" + this.op + \" \" + this.value.value();\n    };\n    return RelationFilter;\n}());\nexport { RelationFilter };\n/**\n * Filter that matches 'null' values.\n */\nvar NullFilter = /** @class */ (function () {\n    function NullFilter(field) {\n        this.field = field;\n    }\n    NullFilter.prototype.matches = function (doc) {\n        var val = doc.field(this.field);\n        return val !== undefined && val.value() === null;\n    };\n    NullFilter.prototype.canonicalId = function () {\n        return this.field.canonicalString() + ' IS null';\n    };\n    NullFilter.prototype.toString = function () {\n        return this.field.canonicalString() + \" IS null\";\n    };\n    NullFilter.prototype.isEqual = function (other) {\n        if (other instanceof NullFilter) {\n            return this.field.isEqual(other.field);\n        }\n        else {\n            return false;\n        }\n    };\n    return NullFilter;\n}());\nexport { NullFilter };\n/**\n * Filter that matches 'NaN' values.\n */\nvar NanFilter = /** @class */ (function () {\n    function NanFilter(field) {\n        this.field = field;\n    }\n    NanFilter.prototype.matches = function (doc) {\n        var val = doc.field(this.field).value();\n        return typeof val === 'number' && isNaN(val);\n    };\n    NanFilter.prototype.canonicalId = function () {\n        return this.field.canonicalString() + ' IS NaN';\n    };\n    NanFilter.prototype.toString = function () {\n        return this.field.canonicalString() + \" IS NaN\";\n    };\n    NanFilter.prototype.isEqual = function (other) {\n        if (other instanceof NanFilter) {\n            return this.field.isEqual(other.field);\n        }\n        else {\n            return false;\n        }\n    };\n    return NanFilter;\n}());\nexport { NanFilter };\n/**\n * Creates a filter based on the provided arguments.\n */\nexport function fieldFilter(field, op, value) {\n    if (value.isEqual(NullValue.INSTANCE)) {\n        if (op !== RelationOp.EQUAL) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You can only perform equals ' + 'comparisons on null.');\n        }\n        return new NullFilter(field);\n    }\n    else if (value.isEqual(DoubleValue.NAN)) {\n        if (op !== RelationOp.EQUAL) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You can only perform equals ' + 'comparisons on NaN.');\n        }\n        return new NanFilter(field);\n    }\n    else {\n        return new RelationFilter(field, op, value);\n    }\n}\n/**\n * The direction of sorting in an order by.\n */\nvar Direction = /** @class */ (function () {\n    function Direction(name) {\n        this.name = name;\n    }\n    Direction.prototype.toString = function () {\n        return this.name;\n    };\n    Direction.ASCENDING = new Direction('asc');\n    Direction.DESCENDING = new Direction('desc');\n    return Direction;\n}());\nexport { Direction };\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\nvar Bound = /** @class */ (function () {\n    function Bound(position, before) {\n        this.position = position;\n        this.before = before;\n    }\n    Bound.prototype.canonicalId = function () {\n        // TODO(b/29183165): Make this collision robust.\n        var canonicalId = this.before ? 'b:' : 'a:';\n        for (var _i = 0, _a = this.position; _i < _a.length; _i++) {\n            var component = _a[_i];\n            canonicalId += component.toString();\n        }\n        return canonicalId;\n    };\n    /**\n     * Returns true if a document sorts before a bound using the provided sort\n     * order.\n     */\n    Bound.prototype.sortsBeforeDocument = function (orderBy, doc) {\n        assert(this.position.length <= orderBy.length, \"Bound has more components than query's orderBy\");\n        var comparison = 0;\n        for (var i = 0; i < this.position.length; i++) {\n            var orderByComponent = orderBy[i];\n            var component = this.position[i];\n            if (orderByComponent.field.isKeyField()) {\n                assert(component instanceof RefValue, 'Bound has a non-key value where the key path is being used.');\n                comparison = DocumentKey.comparator(component.key, doc.key);\n            }\n            else {\n                var docValue = doc.field(orderByComponent.field);\n                assert(docValue !== undefined, 'Field should exist since document matched the orderBy already.');\n                comparison = component.compareTo(docValue);\n            }\n            if (orderByComponent.dir === Direction.DESCENDING) {\n                comparison = comparison * -1;\n            }\n            if (comparison !== 0) {\n                break;\n            }\n        }\n        return this.before ? comparison <= 0 : comparison < 0;\n    };\n    Bound.prototype.isEqual = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.before !== other.before ||\n            this.position.length !== other.position.length) {\n            return false;\n        }\n        for (var i = 0; i < this.position.length; i++) {\n            var thisPosition = this.position[i];\n            var otherPosition = other.position[i];\n            return thisPosition.isEqual(otherPosition);\n        }\n        return true;\n    };\n    return Bound;\n}());\nexport { Bound };\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nvar OrderBy = /** @class */ (function () {\n    function OrderBy(field, dir) {\n        this.field = field;\n        if (dir === undefined) {\n            dir = Direction.ASCENDING;\n        }\n        this.dir = dir;\n        this.isKeyOrderBy = field.isKeyField();\n    }\n    OrderBy.prototype.compare = function (d1, d2) {\n        var comparison = this.isKeyOrderBy\n            ? Document.compareByKey(d1, d2)\n            : Document.compareByField(this.field, d1, d2);\n        switch (this.dir) {\n            case Direction.ASCENDING:\n                return comparison;\n            case Direction.DESCENDING:\n                return -1 * comparison;\n            default:\n                return fail('Unknown direction: ' + this.dir);\n        }\n    };\n    OrderBy.prototype.canonicalId = function () {\n        // TODO(b/29183165): Make this collision robust.\n        return this.field.canonicalString() + this.dir.toString();\n    };\n    OrderBy.prototype.toString = function () {\n        return this.field.canonicalString() + \" (\" + this.dir + \")\";\n    };\n    OrderBy.prototype.isEqual = function (other) {\n        return this.dir === other.dir && this.field.isEqual(other.field);\n    };\n    return OrderBy;\n}());\nexport { OrderBy };\nvar KEY_ORDERING_ASC = new OrderBy(FieldPath.keyField(), Direction.ASCENDING);\nvar KEY_ORDERING_DESC = new OrderBy(FieldPath.keyField(), Direction.DESCENDING);\n\n//# sourceMappingURL=query.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/query.js\n// module id = 184\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { fail } from '../util/assert';\nimport { Code } from '../util/error';\nimport * as log from '../util/log';\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers.\n */\nvar RpcCode;\n(function (RpcCode) {\n    RpcCode[RpcCode[\"OK\"] = 0] = \"OK\";\n    RpcCode[RpcCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    RpcCode[RpcCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    RpcCode[RpcCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    RpcCode[RpcCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    RpcCode[RpcCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    RpcCode[RpcCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    RpcCode[RpcCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    RpcCode[RpcCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n    RpcCode[RpcCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    RpcCode[RpcCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    RpcCode[RpcCode[\"ABORTED\"] = 10] = \"ABORTED\";\n    RpcCode[RpcCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    RpcCode[RpcCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    RpcCode[RpcCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    RpcCode[RpcCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    RpcCode[RpcCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n})(RpcCode || (RpcCode = {}));\nexport function isPermanentError(code) {\n    switch (code) {\n        case Code.OK:\n            return fail('Treated status OK as error');\n        case Code.CANCELLED:\n        case Code.UNKNOWN:\n        case Code.DEADLINE_EXCEEDED:\n        case Code.RESOURCE_EXHAUSTED:\n        case Code.INTERNAL:\n        case Code.UNAVAILABLE:\n        // Unauthenticated means something went wrong with our token and we need\n        // to retry with new credentials which will happen automatically.\n        // TODO(b/37325376): Give up after second unauthenticated error.\n        case Code.UNAUTHENTICATED:\n            return false;\n        case Code.INVALID_ARGUMENT:\n        case Code.NOT_FOUND:\n        case Code.ALREADY_EXISTS:\n        case Code.PERMISSION_DENIED:\n        case Code.FAILED_PRECONDITION:\n        // Aborted might be retried in some scenarios, but that is dependant on\n        // the context and should handled individually by the calling code.\n        // See https://cloud.google.com/apis/design/errors.\n        case Code.ABORTED:\n        case Code.OUT_OF_RANGE:\n        case Code.UNIMPLEMENTED:\n        case Code.DATA_LOSS:\n            return true;\n        default:\n            return fail('Unknown status code: ' + code);\n    }\n}\n/**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\nexport function mapCodeFromRpcStatus(status) {\n    // tslint:disable-next-line:no-any lookup by string\n    var code = RpcCode[status];\n    if (code === undefined) {\n        return undefined;\n    }\n    return mapCodeFromRpcCode(code);\n}\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nexport function mapCodeFromRpcCode(code) {\n    if (code === undefined) {\n        // This shouldn't normally happen, but in certain error cases (like trying\n        // to send invalid proto messages) we may get an error with no GRPC code.\n        log.error('GRPC error has no .code');\n        return Code.UNKNOWN;\n    }\n    switch (code) {\n        case RpcCode.OK:\n            return Code.OK;\n        case RpcCode.CANCELLED:\n            return Code.CANCELLED;\n        case RpcCode.UNKNOWN:\n            return Code.UNKNOWN;\n        case RpcCode.DEADLINE_EXCEEDED:\n            return Code.DEADLINE_EXCEEDED;\n        case RpcCode.RESOURCE_EXHAUSTED:\n            return Code.RESOURCE_EXHAUSTED;\n        case RpcCode.INTERNAL:\n            return Code.INTERNAL;\n        case RpcCode.UNAVAILABLE:\n            return Code.UNAVAILABLE;\n        case RpcCode.UNAUTHENTICATED:\n            return Code.UNAUTHENTICATED;\n        case RpcCode.INVALID_ARGUMENT:\n            return Code.INVALID_ARGUMENT;\n        case RpcCode.NOT_FOUND:\n            return Code.NOT_FOUND;\n        case RpcCode.ALREADY_EXISTS:\n            return Code.ALREADY_EXISTS;\n        case RpcCode.PERMISSION_DENIED:\n            return Code.PERMISSION_DENIED;\n        case RpcCode.FAILED_PRECONDITION:\n            return Code.FAILED_PRECONDITION;\n        case RpcCode.ABORTED:\n            return Code.ABORTED;\n        case RpcCode.OUT_OF_RANGE:\n            return Code.OUT_OF_RANGE;\n        case RpcCode.UNIMPLEMENTED:\n            return Code.UNIMPLEMENTED;\n        case RpcCode.DATA_LOSS:\n            return Code.DATA_LOSS;\n        default:\n            return fail('Unknown status code: ' + code);\n    }\n}\n/**\n * Maps an RPC code from a Code. This is the reverse operation from\n * mapCodeFromRpcCode and should really only be used in tests.\n */\nexport function mapRpcCodeFromCode(code) {\n    if (code === undefined) {\n        return RpcCode.OK;\n    }\n    switch (code) {\n        case Code.OK:\n            return RpcCode.OK;\n        case Code.CANCELLED:\n            return RpcCode.CANCELLED;\n        case Code.UNKNOWN:\n            return RpcCode.UNKNOWN;\n        case Code.DEADLINE_EXCEEDED:\n            return RpcCode.DEADLINE_EXCEEDED;\n        case Code.RESOURCE_EXHAUSTED:\n            return RpcCode.RESOURCE_EXHAUSTED;\n        case Code.INTERNAL:\n            return RpcCode.INTERNAL;\n        case Code.UNAVAILABLE:\n            return RpcCode.UNAVAILABLE;\n        case Code.UNAUTHENTICATED:\n            return RpcCode.UNAUTHENTICATED;\n        case Code.INVALID_ARGUMENT:\n            return RpcCode.INVALID_ARGUMENT;\n        case Code.NOT_FOUND:\n            return RpcCode.NOT_FOUND;\n        case Code.ALREADY_EXISTS:\n            return RpcCode.ALREADY_EXISTS;\n        case Code.PERMISSION_DENIED:\n            return RpcCode.PERMISSION_DENIED;\n        case Code.FAILED_PRECONDITION:\n            return RpcCode.FAILED_PRECONDITION;\n        case Code.ABORTED:\n            return RpcCode.ABORTED;\n        case Code.OUT_OF_RANGE:\n            return RpcCode.OUT_OF_RANGE;\n        case Code.UNIMPLEMENTED:\n            return RpcCode.UNIMPLEMENTED;\n        case Code.DATA_LOSS:\n            return RpcCode.DATA_LOSS;\n        default:\n            return fail('Unknown status code: ' + code);\n    }\n}\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nexport function mapCodeFromHttpStatus(status) {\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    //\n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n    switch (status) {\n        case 200:// OK\n            return Code.OK;\n        case 400:// Bad Request\n            return Code.INVALID_ARGUMENT;\n        // Other possibilities based on the forward mapping\n        // return Code.FAILED_PRECONDITION;\n        // return Code.OUT_OF_RANGE;\n        case 401:// Unauthorized\n            return Code.UNAUTHENTICATED;\n        case 403:// Forbidden\n            return Code.PERMISSION_DENIED;\n        case 404:// Not Found\n            return Code.NOT_FOUND;\n        case 409:// Conflict\n            return Code.ABORTED;\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n        case 416:// Range Not Satisfiable\n            return Code.OUT_OF_RANGE;\n        case 429:// Too Many Requests\n            return Code.RESOURCE_EXHAUSTED;\n        case 499:// Client Closed Request\n            return Code.CANCELLED;\n        case 500:// Internal Server Error\n            return Code.UNKNOWN;\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n        case 501:// Unimplemented\n            return Code.UNIMPLEMENTED;\n        case 503:// Service Unavailable\n            return Code.UNAVAILABLE;\n        case 504:// Gateway Timeout\n            return Code.DEADLINE_EXCEEDED;\n        default:\n            if (status >= 200 && status < 300)\n                return Code.OK;\n            if (status >= 400 && status < 500)\n                return Code.FAILED_PRECONDITION;\n            if (status >= 500 && status < 600)\n                return Code.INTERNAL;\n            return Code.UNKNOWN;\n    }\n}\n\n//# sourceMappingURL=rpc_error.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/rpc_error.js\n// module id = 185\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FieldPath as InternalFieldPath } from '../model/path';\nimport { Code, FirestoreError } from '../util/error';\nimport { invalidClassError, validateArgType, validateNamedArrayAtLeastNumberOfElements } from '../util/input_validation';\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n// tslint:disable:strip-private-property-underscore\n/**\n * A FieldPath refers to a field in a document. The path may consist of a single\n * field name (referring to a top-level field in the document), or a list of\n * field names (referring to a nested field in the document).\n */\nvar FieldPath = /** @class */ (function () {\n    /**\n     * Creates a FieldPath from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames A list of field names.\n     */\n    function FieldPath() {\n        var fieldNames = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fieldNames[_i] = arguments[_i];\n        }\n        validateNamedArrayAtLeastNumberOfElements('FieldPath', fieldNames, 'fieldNames', 1);\n        for (var i = 0; i < fieldNames.length; ++i) {\n            validateArgType('FieldPath', 'string', i, fieldNames[i]);\n            if (fieldNames[i].length === 0) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). \" +\n                    'Field names must not be empty.');\n            }\n        }\n        this._internalPath = new InternalFieldPath(fieldNames);\n    }\n    FieldPath.documentId = function () {\n        return FieldPath._DOCUMENT_ID;\n    };\n    FieldPath.prototype.isEqual = function (other) {\n        if (!(other instanceof FieldPath)) {\n            throw invalidClassError('isEqual', 'FieldPath', 1, other);\n        }\n        return this._internalPath.isEqual(other._internalPath);\n    };\n    /**\n     * Internal Note: The backend doesn't technically support querying by\n     * document ID. Instead it queries by the entire document name (full path\n     * included), but in the cases we currently support documentId(), the net\n     * effect is the same.\n     */\n    FieldPath._DOCUMENT_ID = new FieldPath(InternalFieldPath.keyField().canonicalString());\n    return FieldPath;\n}());\nexport { FieldPath };\n/**\n * Matches any characters in a field path string that are reserved.\n */\nvar RESERVED = new RegExp('[~\\\\*/\\\\[\\\\]]');\n/**\n * Parses a field path string into a FieldPath, treating dots as separators.\n */\nexport function fromDotSeparatedString(path) {\n    var found = path.search(RESERVED);\n    if (found >= 0) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not contain \" +\n            \"'~', '*', '/', '[', or ']'\");\n    }\n    try {\n        return new (FieldPath.bind.apply(FieldPath, [void 0].concat(path.split('.'))))();\n    }\n    catch (e) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not be empty, \" +\n            \"begin with '.', end with '.', or contain '..'\");\n    }\n}\n\n//# sourceMappingURL=field_path.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/api/field_path.js\n// module id = 186\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Describes the online state of the Firestore client. Note that this does not\n * indicate whether or not the remote store is trying to connect or not. This is\n * primarily used by the View / EventManager code to change their behavior while\n * offline (e.g. get() calls shouldn't wait for data from the server and\n * snapshot events should set metadata.isFromCache=true).\n */\nexport var OnlineState;\n(function (OnlineState) {\n    /**\n     * The Firestore client is in an unknown online state. This means the client\n     * is either not actively trying to establish a connection or it is currently\n     * trying to establish a connection, but it has not succeeded or failed yet.\n     * Higher-level components should not operate in offline mode.\n     */\n    OnlineState[OnlineState[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * The client is connected and the connections are healthy. This state is\n     * reached after a successful connection and there has been at least one\n     * successful message received from the backends.\n     */\n    OnlineState[OnlineState[\"Healthy\"] = 1] = \"Healthy\";\n    /**\n     * The client is either trying to establish a connection but failing, or it\n     * has been explicitly marked offline via a call to disableNetwork().\n     * Higher-level components should operate in offline mode.\n     */\n    OnlineState[OnlineState[\"Failed\"] = 2] = \"Failed\";\n})(OnlineState || (OnlineState = {}));\n\n//# sourceMappingURL=types.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/types.js\n// module id = 187\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as objUtil from './obj';\n/**\n * A map implementation that uses objects as keys. Objects must implement the\n * Equatable interface and must be immutable. Entries in the map are stored\n * together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */\nvar ObjectMap = /** @class */ (function () {\n    function ObjectMap(mapKeyFn) {\n        this.mapKeyFn = mapKeyFn;\n        /**\n         * The inner map for a key -> value pair. Due to the possibility of\n         * collisions we keep a list of entries that we do a linear search through\n         * to find an actual match. Note that collisions should be rare, so we still\n         * expect near constant time lookups in practice.\n         */\n        this.inner = {};\n    }\n    /** Get a value for this key, or undefined if it does not exist. */\n    ObjectMap.prototype.get = function (key) {\n        var id = this.mapKeyFn(key);\n        var matches = this.inner[id];\n        if (matches === undefined) {\n            return undefined;\n        }\n        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {\n            var _a = matches_1[_i], otherKey = _a[0], value = _a[1];\n            if (otherKey.isEqual(key)) {\n                return value;\n            }\n        }\n        return undefined;\n    };\n    ObjectMap.prototype.has = function (key) {\n        return this.get(key) !== undefined;\n    };\n    /** Put this key and value in the map. */\n    ObjectMap.prototype.set = function (key, value) {\n        var id = this.mapKeyFn(key);\n        var matches = this.inner[id];\n        if (matches === undefined) {\n            this.inner[id] = [[key, value]];\n            return;\n        }\n        for (var i = 0; i < matches.length; i++) {\n            if (matches[i][0].isEqual(key)) {\n                matches[i] = [key, value];\n                return;\n            }\n        }\n        matches.push([key, value]);\n    };\n    /**\n     * Remove this key from the map. Returns a boolean if anything was deleted.\n     */\n    ObjectMap.prototype.delete = function (key) {\n        var id = this.mapKeyFn(key);\n        var matches = this.inner[id];\n        if (matches === undefined) {\n            return false;\n        }\n        for (var i = 0; i < matches.length; i++) {\n            if (matches[i][0].isEqual(key)) {\n                if (matches.length === 1) {\n                    delete this.inner[id];\n                }\n                else {\n                    matches.splice(i, 1);\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    ObjectMap.prototype.forEach = function (fn) {\n        objUtil.forEach(this.inner, function (_, entries) {\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\n                fn(k, v);\n            }\n        });\n    };\n    ObjectMap.prototype.isEmpty = function () {\n        return objUtil.isEmpty(this.inner);\n    };\n    return ObjectMap;\n}());\nexport { ObjectMap };\n\n//# sourceMappingURL=obj_map.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/obj_map.js\n// module id = 188\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResourcePath } from '../model/path';\nimport { assert, fail } from '../util/assert';\nvar escapeChar = '\\u0001';\nvar encodedSeparatorChar = '\\u0001';\nvar encodedNul = '\\u0010';\nvar encodedEscape = '\\u0011';\n/**\n * Encodes a resource path into a IndexedDb-compatible string form.\n */\nexport function encode(path) {\n    var result = '';\n    for (var i = 0; i < path.length; i++) {\n        if (result.length > 0) {\n            result = encodeSeparator(result);\n        }\n        result = encodeSegment(path.get(i), result);\n    }\n    return encodeSeparator(result);\n}\n/** Encodes a single segment of a resource path into the given result */\nfunction encodeSegment(segment, resultBuf) {\n    var result = resultBuf;\n    var length = segment.length;\n    for (var i = 0; i < length; i++) {\n        var c = segment.charAt(i);\n        switch (c) {\n            case '\\0':\n                result += escapeChar + encodedNul;\n                break;\n            case escapeChar:\n                result += escapeChar + encodedEscape;\n                break;\n            default:\n                result += c;\n        }\n    }\n    return result;\n}\n/** Encodes a path separator into the given result */\nfunction encodeSeparator(result) {\n    return result + escapeChar + encodedSeparatorChar;\n}\n/**\n * Decodes the given IndexedDb-compatible string form of a resource path into\n * a ResourcePath instance. Note that this method is not suitable for use with\n * decoding resource names from the server; those are One Platform format\n * strings.\n */\nexport function decode(path) {\n    // Event the empty path must encode as a path of at least length 2. A path\n    // with exactly 2 must be the empty path.\n    var length = path.length;\n    assert(length >= 2, 'Invalid path ' + path);\n    if (length === 2) {\n        assert(path.charAt(0) === escapeChar && path.charAt(1) === encodedSeparatorChar, 'Non-empty path ' + path + ' had length 2');\n        return ResourcePath.EMPTY_PATH;\n    }\n    // Escape characters cannot exist past the second-to-last position in the\n    // source value.\n    var lastReasonableEscapeIndex = length - 2;\n    var segments = [];\n    var segmentBuilder = '';\n    for (var start = 0; start < length;) {\n        // The last two characters of a valid encoded path must be a separator, so\n        // there must be an end to this segment.\n        var end = path.indexOf(escapeChar, start);\n        if (end < 0 || end > lastReasonableEscapeIndex) {\n            fail('Invalid encoded resource path: \"' + path + '\"');\n        }\n        var next = path.charAt(end + 1);\n        switch (next) {\n            case encodedSeparatorChar:\n                var currentPiece = path.substring(start, end);\n                var segment = void 0;\n                if (segmentBuilder.length === 0) {\n                    // Avoid copying for the common case of a segment that excludes \\0\n                    // and \\001\n                    segment = currentPiece;\n                }\n                else {\n                    segmentBuilder += currentPiece;\n                    segment = segmentBuilder;\n                    segmentBuilder = '';\n                }\n                segments.push(segment);\n                break;\n            case encodedNul:\n                segmentBuilder += path.substring(start, end);\n                segmentBuilder += '\\0';\n                break;\n            case encodedEscape:\n                // The escape character can be used in the output to encode itself.\n                segmentBuilder += path.substring(start, end + 1);\n                break;\n            default:\n                fail('Invalid encoded resource path: \"' + path + '\"');\n        }\n        start = end + 2;\n    }\n    return new ResourcePath(segments);\n}\n/**\n * Computes the prefix successor of the given path, computed by encode above.\n * A prefix successor is the first key that cannot be prefixed by the given\n * path. It's useful for defining the end of a prefix scan such that all keys\n * in the scan have the same prefix.\n *\n * Note that this is not a general prefix successor implementation, which is\n * tricky to get right with Strings, given that they encode down to UTF-8.\n * Instead this relies on the fact that all paths encoded by this class are\n * always terminated with a separator, and so a successor can always be\n * cheaply computed by incrementing the last character of the path.\n */\nexport function prefixSuccessor(path) {\n    var c = path.charCodeAt(path.length - 1);\n    // TODO(mcg): this really should be a general thing, but not worth it right\n    // now\n    assert(c === 1, 'successor may only operate on paths generated by encode');\n    return path.substring(0, path.length - 1) + String.fromCharCode(c + 1);\n}\n\n//# sourceMappingURL=encoded_resource_path.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/encoded_resource_path.js\n// module id = 189\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    return Deferred;\n}());\nexport { Deferred };\n/**\n * Takes an array of values and sequences them using the promise (or value)\n * returned by the supplied callback. The callback for each item is called\n * after the promise is resolved for the previous item.\n * The function returns a promise which is resolved after the promise for\n * the last item is resolved.\n */\nexport function sequence(values, fn, initialValue) {\n    var result = Promise.resolve(initialValue);\n    values.forEach(function (value) {\n        result = result.then(function (lastResult) { return fn(value, lastResult); });\n    });\n    return result;\n}\n\n//# sourceMappingURL=promise.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/promise.js\n// module id = 190\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\n/**\n * Throws an error if the provided assertion is falsy\n * @param {*} assertion The assertion to be tested for falsiness\n * @param {!string} message The message to display if the check fails\n */\nexports.assert = function (assertion, message) {\n    if (!assertion) {\n        throw exports.assertionError(message);\n    }\n};\n/**\n * Returns an Error object suitable for throwing.\n * @param {string} message\n * @return {!Error}\n */\nexports.assertionError = function (message) {\n    return new Error('Firebase Database (' +\n        constants_1.CONSTANTS.SDK_VERSION +\n        ') INTERNAL ASSERT FAILED: ' +\n        message);\n};\n\n//# sourceMappingURL=assert.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/assert.js\n// module id = 201\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stringToByteArray = function (str) {\n    // TODO(user): Use native implementations if/when available\n    var out = [], p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if ((c & 0xfc00) == 0xd800 &&\n            i + 1 < str.length &&\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param {Array<number>} bytes Array of numbers representing characters.\n * @return {string} Stringification of the array.\n */\nvar byteArrayToString = function (bytes) {\n    // TODO(user): Use native implementations if/when available\n    var out = [], pos = 0, c = 0;\n    while (pos < bytes.length) {\n        var c1 = bytes[pos++];\n        if (c1 < 128) {\n            out[c++] = String.fromCharCode(c1);\n        }\n        else if (c1 > 191 && c1 < 224) {\n            var c2 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n        }\n        else if (c1 > 239 && c1 < 365) {\n            // Surrogate Pair\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            var c4 = bytes[pos++];\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n                0x10000;\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n        }\n        else {\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n        }\n    }\n    return out.join('');\n};\n// Static lookup maps, lazily populated by init_()\nexports.base64 = {\n    /**\n     * Maps bytes to characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMap_: null,\n    /**\n     * Maps characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMap_: null,\n    /**\n     * Maps bytes to websafe characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMapWebSafe_: null,\n    /**\n     * Maps websafe characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMapWebSafe_: null,\n    /**\n     * Our default alphabet, shared between\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n     * @type {string}\n     */\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n    /**\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n     * @type {string}\n     */\n    get ENCODED_VALS() {\n        return this.ENCODED_VALS_BASE + '+/=';\n    },\n    /**\n     * Our websafe alphabet.\n     * @type {string}\n     */\n    get ENCODED_VALS_WEBSAFE() {\n        return this.ENCODED_VALS_BASE + '-_.';\n    },\n    /**\n     * Whether this browser supports the atob and btoa functions. This extension\n     * started at Mozilla but is now implemented by many browsers. We use the\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\n     * but still allowing the standard per-browser compilations.\n     *\n     * @type {boolean}\n     */\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\n    /**\n     * Base64-encode an array of bytes.\n     *\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\n     *     value in [0, 255]) to encode.\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeByteArray: function (input, opt_webSafe) {\n        if (!Array.isArray(input)) {\n            throw Error('encodeByteArray takes an array as a parameter');\n        }\n        this.init_();\n        var byteToCharMap = opt_webSafe\n            ? this.byteToCharMapWebSafe_\n            : this.byteToCharMap_;\n        var output = [];\n        for (var i = 0; i < input.length; i += 3) {\n            var byte1 = input[i];\n            var haveByte2 = i + 1 < input.length;\n            var byte2 = haveByte2 ? input[i + 1] : 0;\n            var haveByte3 = i + 2 < input.length;\n            var byte3 = haveByte3 ? input[i + 2] : 0;\n            var outByte1 = byte1 >> 2;\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n            var outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                    outByte3 = 64;\n                }\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join('');\n    },\n    /**\n     * Base64-encode a string.\n     *\n     * @param {string} input A string to encode.\n     * @param {boolean=} opt_webSafe If true, we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeString: function (input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return btoa(input);\n        }\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * @param {string} input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the\n     *     alternative alphabet.\n     * @return {string} string representing the decoded value.\n     */\n    decodeString: function (input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return atob(input);\n        }\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * In base-64 decoding, groups of four characters are converted into three\n     * bytes.  If the encoder did not apply padding, the input length may not\n     * be a multiple of 4.\n     *\n     * In this case, the last group will have fewer than 4 characters, and\n     * padding will be inferred.  If the group has one or two characters, it decodes\n     * to one byte.  If the group has three characters, it decodes to two bytes.\n     *\n     * @param {string} input Input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\n     * @return {!Array<number>} bytes representing the decoded value.\n     */\n    decodeStringToByteArray: function (input, opt_webSafe) {\n        this.init_();\n        var charToByteMap = opt_webSafe\n            ? this.charToByteMapWebSafe_\n            : this.charToByteMap_;\n        var output = [];\n        for (var i = 0; i < input.length;) {\n            var byte1 = charToByteMap[input.charAt(i++)];\n            var haveByte2 = i < input.length;\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            var haveByte3 = i < input.length;\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            var haveByte4 = i < input.length;\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n                throw Error();\n            }\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\n            output.push(outByte1);\n            if (byte3 != 64) {\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n                output.push(outByte2);\n                if (byte4 != 64) {\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\n     * Lazy static initialization function. Called before\n     * accessing any of the static map variables.\n     * @private\n     */\n    init_: function () {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n/**\n * URL-safe base64 encoding\n * @param {!string} str\n * @return {!string}\n */\nexports.base64Encode = function (str) {\n    var utf8Bytes = stringToByteArray(str);\n    return exports.base64.encodeByteArray(utf8Bytes, true);\n};\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param {string} str To be decoded\n * @return {?string} Decoded result, if possible\n */\nexports.base64Decode = function (str) {\n    try {\n        return exports.base64.decodeString(str, true);\n    }\n    catch (e) {\n        console.error('base64Decode failed: ', e);\n    }\n    return null;\n};\n\n//# sourceMappingURL=crypt.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/crypt.js\n// module id = 202\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nfunction jsonEval(str) {\n    return JSON.parse(str);\n}\nexports.jsonEval = jsonEval;\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nfunction stringify(data) {\n    return JSON.stringify(data);\n}\nexports.stringify = stringify;\n\n//# sourceMappingURL=json.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/json.js\n// module id = 203\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\nexports.contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nexports.safeGet = function (obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n        return obj[key];\n    // else return undefined.\n};\n/**\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\n *\n * @param {?Object.<K,V>} obj Object to enumerate.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexports.forEach = function (obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n};\n/**\n * Copies all the (own) properties from one object to another.\n * @param {!Object} objTo\n * @param {!Object} objFrom\n * @return {!Object} objTo\n */\nexports.extend = function (objTo, objFrom) {\n    exports.forEach(objFrom, function (key, value) {\n        objTo[key] = value;\n    });\n    return objTo;\n};\n/**\n * Returns a clone of the specified object.\n * @param {!Object} obj\n * @return {!Object} cloned obj.\n */\nexports.clone = function (obj) {\n    return exports.extend({}, obj);\n};\n/**\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\n * for functions.\n *\n * @param obj {*} A potential object.\n * @returns {boolean} True if it's an object.\n */\nexports.isNonNullObject = function (obj) {\n    return typeof obj === 'object' && obj !== null;\n};\nexports.isEmpty = function (obj) {\n    for (var key in obj) {\n        return false;\n    }\n    return true;\n};\nexports.getCount = function (obj) {\n    var rv = 0;\n    for (var key in obj) {\n        rv++;\n    }\n    return rv;\n};\nexports.map = function (obj, f, opt_obj) {\n    var res = {};\n    for (var key in obj) {\n        res[key] = f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n};\nexports.findKey = function (obj, fn, opt_this) {\n    for (var key in obj) {\n        if (fn.call(opt_this, obj[key], key, obj)) {\n            return key;\n        }\n    }\n    return undefined;\n};\nexports.findValue = function (obj, fn, opt_this) {\n    var key = exports.findKey(obj, fn, opt_this);\n    return key && obj[key];\n};\nexports.getAnyKey = function (obj) {\n    for (var key in obj) {\n        return key;\n    }\n};\nexports.getValues = function (obj) {\n    var res = [];\n    var i = 0;\n    for (var key in obj) {\n        res[i++] = obj[key];\n    }\n    return res;\n};\n/**\n * Tests whether every key/value pair in an object pass the test implemented\n * by the provided function\n *\n * @param {?Object.<K,V>} obj Object to test.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexports.every = function (obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            if (!fn(key, obj[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\n\n//# sourceMappingURL=obj.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/obj.js\n// module id = 204\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Blob } from '../api/blob';\nimport { GeoPoint } from '../api/geo_point';\nimport { DatabaseId } from '../core/database_info';\nimport { Bound, Direction, NanFilter, NullFilter, OrderBy, Query, RelationFilter, RelationOp } from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Timestamp } from '../core/timestamp';\nimport { QueryPurpose } from '../local/query_data';\nimport { Document, NoDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport * as fieldValue from '../model/field_value';\nimport { DeleteMutation, FieldMask, FieldTransform, MutationResult, PatchMutation, Precondition, ServerTimestampTransform, SetMutation, TransformMutation } from '../model/mutation';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport { assert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport * as obj from '../util/obj';\nimport * as typeUtils from '../util/types';\nimport { ExistenceFilter } from './existence_filter';\nimport { mapCodeFromRpcCode, mapRpcCodeFromCode } from './rpc_error';\nimport { DocumentWatchChange, ExistenceFilterChange, WatchTargetChange, WatchTargetChangeState } from './watch_change';\nvar DIRECTIONS = (function () {\n    var dirs = {};\n    dirs[Direction.ASCENDING.name] = 'ASCENDING';\n    dirs[Direction.DESCENDING.name] = 'DESCENDING';\n    return dirs;\n})();\nvar OPERATORS = (function () {\n    var ops = {};\n    ops[RelationOp.LESS_THAN.name] = 'LESS_THAN';\n    ops[RelationOp.LESS_THAN_OR_EQUAL.name] = 'LESS_THAN_OR_EQUAL';\n    ops[RelationOp.GREATER_THAN.name] = 'GREATER_THAN';\n    ops[RelationOp.GREATER_THAN_OR_EQUAL.name] = 'GREATER_THAN_OR_EQUAL';\n    ops[RelationOp.EQUAL.name] = 'EQUAL';\n    return ops;\n})();\nfunction assertPresent(value, description) {\n    assert(!typeUtils.isNullOrUndefined(value), description + ' is missing');\n}\nfunction parseInt64(value) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    if (typeof value === 'number') {\n        return value;\n    }\n    else if (typeof value === 'string') {\n        return Number(value);\n    }\n    else {\n        return fail(\"can't parse \" + value);\n    }\n}\n/**\n * Generates JsonObject values for the Datastore API suitable for sending to\n * either GRPC stub methods or via the JSON/HTTP REST API.\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nvar JsonProtoSerializer = /** @class */ (function () {\n    function JsonProtoSerializer(databaseId, options) {\n        this.databaseId = databaseId;\n        this.options = options;\n    }\n    JsonProtoSerializer.prototype.emptyByteString = function () {\n        if (this.options.useProto3Json) {\n            return '';\n        }\n        else {\n            return new Uint8Array(0);\n        }\n    };\n    JsonProtoSerializer.prototype.unsafeCastProtoByteString = function (byteString) {\n        // byteStrings can be either string or UInt8Array, but the typings say\n        // it's always a string. Cast as string to avoid type check failing\n        return byteString;\n    };\n    JsonProtoSerializer.prototype.fromRpcStatus = function (status) {\n        var code = status.code === undefined\n            ? Code.UNKNOWN\n            : mapCodeFromRpcCode(status.code);\n        return new FirestoreError(code, status.message || '');\n    };\n    /**\n     * Returns a value for a number (or undefined) that's appropriate to put into\n     * a google.protobuf.Int32Value proto.\n     * DO NOT USE THIS FOR ANYTHING ELSE.\n     * This method cheats. It's typed as returning \"number\" because that's what\n     * our generated proto interfaces say Int32Value must be. But GRPC actually\n     * expects a { value: <number> } struct.\n     */\n    JsonProtoSerializer.prototype.toInt32Value = function (val) {\n        if (!typeUtils.isNullOrUndefined(val)) {\n            // tslint:disable-next-line:no-any We need to match generated Proto types.\n            return { value: val };\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * Returns a number (or null) from a google.protobuf.Int32Value proto.\n     * DO NOT USE THIS FOR ANYTHING ELSE.\n     * This method cheats. It's typed as accepting \"number\" because that's what\n     * our generated proto interfaces say Int32Value must be, but it actually\n     * accepts { value: number } to match our serialization in toInt32Value().\n     */\n    JsonProtoSerializer.prototype.fromInt32Value = function (val) {\n        var result;\n        if (typeof val === 'object') {\n            // tslint:disable-next-line:no-any We need to match generated Proto types.\n            result = val.value;\n        }\n        else {\n            // We accept raw numbers (without the {value: ... } wrapper) for\n            // compatibility with legacy persisted data.\n            result = val;\n        }\n        return typeUtils.isNullOrUndefined(result) ? null : result;\n    };\n    /**\n     * Returns a value for a Date that's appropriate to put into a proto.\n     * DO NOT USE THIS FOR ANYTHING ELSE.\n     * This method cheats. It's typed as returning \"string\" because that's what\n     * our generated proto interfaces say dates must be. But it's easier and safer\n     * to actually return a Timestamp proto.\n     */\n    JsonProtoSerializer.prototype.toTimestamp = function (timestamp) {\n        return {\n            seconds: timestamp.seconds,\n            nanos: timestamp.nanos\n            // tslint:disable-next-line:no-any\n        };\n    };\n    JsonProtoSerializer.prototype.fromTimestamp = function (date) {\n        // The json interface (for the browser) will return an iso timestamp string,\n        // while the proto js library (for node) will return a\n        // google.protobuf.Timestamp instance.\n        if (typeof date === 'string') {\n            // TODO(b/37282237): Use strings for Proto3 timestamps\n            // assert(this.options.useProto3Json,\n            //   'The timestamp string format requires Proto3.');\n            return Timestamp.fromISOString(date);\n        }\n        else {\n            assert(!!date, 'Cannot deserialize null or undefined timestamp.');\n            // TODO(b/37282237): Use strings for Proto3 timestamps\n            // assert(!this.options.useProto3Json,\n            //   'The timestamp instance format requires Proto JS.');\n            var seconds = parseInt64(date.seconds || '0');\n            var nanos = date.nanos || 0;\n            return new Timestamp(seconds, nanos);\n        }\n    };\n    /**\n     * Returns a value for bytes that's appropriate to put in a proto.\n     * DO NOT USE THIS FOR ANYTHING ELSE.\n     * This method cheats. It's typed as returning \"string\" because that's what\n     * our generated proto interfaces say bytes must be. But it should return\n     * an Uint8Array in Node.\n     */\n    JsonProtoSerializer.prototype.toBytes = function (bytes) {\n        if (this.options.useProto3Json) {\n            return bytes.toBase64();\n        }\n        else {\n            // The typings say it's a string, but it needs to be a Uint8Array in Node.\n            return this.unsafeCastProtoByteString(bytes.toUint8Array());\n        }\n    };\n    /**\n     * Parse the blob from the protos into the internal Blob class. Note that the\n     * typings assume all blobs are strings, but they are actually Uint8Arrays\n     * on Node.\n     */\n    JsonProtoSerializer.prototype.fromBlob = function (blob) {\n        if (typeof blob === 'string') {\n            assert(this.options.useProto3Json, 'Expected bytes to be passed in as Uint8Array, but got a string instead.');\n            return Blob.fromBase64String(blob);\n        }\n        else {\n            assert(!this.options.useProto3Json, 'Expected bytes to be passed in as string, but got something else instead.');\n            return Blob.fromUint8Array(blob);\n        }\n    };\n    JsonProtoSerializer.prototype.toVersion = function (version) {\n        return this.toTimestamp(version.toTimestamp());\n    };\n    JsonProtoSerializer.prototype.fromVersion = function (version) {\n        assert(!!version, \"Trying to deserialize version that isn't set\");\n        return SnapshotVersion.fromTimestamp(this.fromTimestamp(version));\n    };\n    JsonProtoSerializer.prototype.toResourceName = function (databaseId, path) {\n        return this.fullyQualifiedPrefixPath(databaseId)\n            .child('documents')\n            .child(path)\n            .canonicalString();\n    };\n    JsonProtoSerializer.prototype.fromResourceName = function (name) {\n        var resource = ResourcePath.fromString(name);\n        assert(this.isValidResourceName(resource), 'Tried to deserialize invalid key ' + resource.toString());\n        return resource;\n    };\n    JsonProtoSerializer.prototype.toName = function (key) {\n        return this.toResourceName(this.databaseId, key.path);\n    };\n    JsonProtoSerializer.prototype.fromName = function (name) {\n        var resource = this.fromResourceName(name);\n        assert(resource.get(1) === this.databaseId.projectId, 'Tried to deserialize key from different project: ' +\n            resource.get(1) +\n            ' vs ' +\n            this.databaseId.projectId);\n        assert((!resource.get(3) && !this.databaseId.database) ||\n            resource.get(3) === this.databaseId.database, 'Tried to deserialize key from different database: ' +\n            resource.get(3) +\n            ' vs ' +\n            this.databaseId.database);\n        return new DocumentKey(this.extractLocalPathFromResourceName(resource));\n    };\n    JsonProtoSerializer.prototype.toQueryPath = function (path) {\n        if (path.length === 0) {\n            // If the path is empty, the backend requires we leave off the /documents\n            // at the end.\n            return this.encodedDatabaseId;\n        }\n        return this.toResourceName(this.databaseId, path);\n    };\n    JsonProtoSerializer.prototype.fromQueryPath = function (name) {\n        var resourceName = this.fromResourceName(name);\n        if (resourceName.length === 4) {\n            return ResourcePath.EMPTY_PATH;\n        }\n        return this.extractLocalPathFromResourceName(resourceName);\n    };\n    Object.defineProperty(JsonProtoSerializer.prototype, \"encodedDatabaseId\", {\n        get: function () {\n            var path = new ResourcePath([\n                'projects',\n                this.databaseId.projectId,\n                'databases',\n                this.databaseId.database\n            ]);\n            return path.canonicalString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JsonProtoSerializer.prototype.fullyQualifiedPrefixPath = function (databaseId) {\n        return new ResourcePath([\n            'projects',\n            databaseId.projectId,\n            'databases',\n            databaseId.database\n        ]);\n    };\n    JsonProtoSerializer.prototype.extractLocalPathFromResourceName = function (resourceName) {\n        assert(resourceName.length > 4 && resourceName.get(4) === 'documents', 'tried to deserialize invalid key ' + resourceName.toString());\n        return resourceName.popFirst(5);\n    };\n    JsonProtoSerializer.prototype.isValidResourceName = function (path) {\n        // Resource names have at least 4 components (project ID, database ID)\n        return (path.length >= 4 &&\n            path.get(0) === 'projects' &&\n            path.get(2) === 'databases');\n    };\n    JsonProtoSerializer.prototype.toValue = function (val) {\n        if (val instanceof fieldValue.NullValue) {\n            return { nullValue: 'NULL_VALUE' };\n        }\n        else if (val instanceof fieldValue.BooleanValue) {\n            return { booleanValue: val.value() };\n        }\n        else if (val instanceof fieldValue.IntegerValue) {\n            return { integerValue: '' + val.value() };\n        }\n        else if (val instanceof fieldValue.DoubleValue) {\n            var doubleValue = val.value();\n            if (this.options.useProto3Json) {\n                // Proto 3 let's us encode NaN and Infinity as string values as\n                // expected by the backend. This is currently not checked by our unit\n                // tests because they rely on protobuf.js.\n                if (isNaN(doubleValue)) {\n                    return { doubleValue: 'NaN' };\n                }\n                else if (doubleValue === Infinity) {\n                    return { doubleValue: 'Infinity' };\n                }\n                else if (doubleValue === -Infinity) {\n                    return { doubleValue: '-Infinity' };\n                }\n            }\n            return { doubleValue: val.value() };\n        }\n        else if (val instanceof fieldValue.StringValue) {\n            return { stringValue: val.value() };\n        }\n        else if (val instanceof fieldValue.ObjectValue) {\n            return { mapValue: this.toMapValue(val) };\n        }\n        else if (val instanceof fieldValue.ArrayValue) {\n            return { arrayValue: this.toArrayValue(val) };\n        }\n        else if (val instanceof fieldValue.TimestampValue) {\n            return {\n                timestampValue: this.toTimestamp(val.internalValue)\n            };\n        }\n        else if (val instanceof fieldValue.GeoPointValue) {\n            return {\n                geoPointValue: {\n                    latitude: val.value().latitude,\n                    longitude: val.value().longitude\n                }\n            };\n        }\n        else if (val instanceof fieldValue.BlobValue) {\n            return {\n                bytesValue: this.toBytes(val.value())\n            };\n        }\n        else if (val instanceof fieldValue.RefValue) {\n            return {\n                referenceValue: this.toResourceName(val.databaseId, val.key.path)\n            };\n        }\n        else {\n            return fail('Unknown FieldValue ' + JSON.stringify(val));\n        }\n    };\n    JsonProtoSerializer.prototype.fromValue = function (obj) {\n        var _this = this;\n        // tslint:disable-next-line:no-any\n        var type = obj['value_type'];\n        if (hasTag(obj, type, 'nullValue')) {\n            return fieldValue.NullValue.INSTANCE;\n        }\n        else if (hasTag(obj, type, 'booleanValue')) {\n            return fieldValue.BooleanValue.of(obj.booleanValue);\n        }\n        else if (hasTag(obj, type, 'integerValue')) {\n            return new fieldValue.IntegerValue(parseInt64(obj.integerValue));\n        }\n        else if (hasTag(obj, type, 'doubleValue')) {\n            if (this.options.useProto3Json) {\n                // Proto 3 uses the string values 'NaN' and 'Infinity'.\n                if (obj.doubleValue === 'NaN') {\n                    return fieldValue.DoubleValue.NAN;\n                }\n                else if (obj.doubleValue === 'Infinity') {\n                    return fieldValue.DoubleValue.POSITIVE_INFINITY;\n                }\n                else if (obj.doubleValue === '-Infinity') {\n                    return fieldValue.DoubleValue.NEGATIVE_INFINITY;\n                }\n            }\n            return new fieldValue.DoubleValue(obj.doubleValue);\n        }\n        else if (hasTag(obj, type, 'stringValue')) {\n            return new fieldValue.StringValue(obj.stringValue);\n        }\n        else if (hasTag(obj, type, 'mapValue')) {\n            return this.fromFields(obj.mapValue.fields || {});\n        }\n        else if (hasTag(obj, type, 'arrayValue')) {\n            // \"values\" is not present if the array is empty\n            assertPresent(obj.arrayValue, 'arrayValue');\n            var values = obj.arrayValue.values || [];\n            return new fieldValue.ArrayValue(values.map(function (v) { return _this.fromValue(v); }));\n        }\n        else if (hasTag(obj, type, 'timestampValue')) {\n            assertPresent(obj.timestampValue, 'timestampValue');\n            return new fieldValue.TimestampValue(this.fromTimestamp(obj.timestampValue));\n        }\n        else if (hasTag(obj, type, 'geoPointValue')) {\n            assertPresent(obj.geoPointValue, 'geoPointValue');\n            var latitude = obj.geoPointValue.latitude || 0;\n            var longitude = obj.geoPointValue.longitude || 0;\n            return new fieldValue.GeoPointValue(new GeoPoint(latitude, longitude));\n        }\n        else if (hasTag(obj, type, 'bytesValue')) {\n            assertPresent(obj.bytesValue, 'bytesValue');\n            var blob = this.fromBlob(obj.bytesValue);\n            return new fieldValue.BlobValue(blob);\n        }\n        else if (hasTag(obj, type, 'referenceValue')) {\n            assertPresent(obj.referenceValue, 'referenceValue');\n            var resourceName = this.fromResourceName(obj.referenceValue);\n            var dbId = new DatabaseId(resourceName.get(1), resourceName.get(3));\n            var key = new DocumentKey(this.extractLocalPathFromResourceName(resourceName));\n            return new fieldValue.RefValue(dbId, key);\n        }\n        else {\n            return fail('Unknown Value proto ' + JSON.stringify(obj));\n        }\n    };\n    /** Creates an api.Document from key and fields (but no create/update time) */\n    JsonProtoSerializer.prototype.toMutationDocument = function (key, fields) {\n        return {\n            name: this.toName(key),\n            fields: this.toFields(fields)\n        };\n    };\n    JsonProtoSerializer.prototype.toDocument = function (document) {\n        assert(!document.hasLocalMutations, \"Can't serialize documents with mutations.\");\n        return {\n            name: this.toName(document.key),\n            fields: this.toFields(document.data),\n            updateTime: this.toTimestamp(document.version.toTimestamp())\n        };\n    };\n    JsonProtoSerializer.prototype.fromDocument = function (document) {\n        return new Document(this.fromName(document.name), this.fromVersion(document.updateTime), this.fromFields(document.fields || {}), { hasLocalMutations: false });\n    };\n    JsonProtoSerializer.prototype.toFields = function (fields) {\n        var _this = this;\n        var result = {};\n        fields.forEach(function (key, value) {\n            result[key] = _this.toValue(value);\n        });\n        return result;\n    };\n    JsonProtoSerializer.prototype.fromFields = function (object) {\n        var _this = this;\n        // Proto map<string, Value> gets mapped to Object, so cast it.\n        var map = object;\n        var result = fieldValue.ObjectValue.EMPTY;\n        obj.forEach(map, function (key, value) {\n            result = result.set(new FieldPath([key]), _this.fromValue(value));\n        });\n        return result;\n    };\n    JsonProtoSerializer.prototype.toMapValue = function (map) {\n        return {\n            fields: this.toFields(map)\n        };\n    };\n    JsonProtoSerializer.prototype.toArrayValue = function (array) {\n        var _this = this;\n        var result = [];\n        array.forEach(function (value) {\n            result.push(_this.toValue(value));\n        });\n        return { values: result };\n    };\n    JsonProtoSerializer.prototype.fromFound = function (doc) {\n        assert(!!doc.found, 'Tried to deserialize a found document from a missing document.');\n        assertPresent(doc.found.name, 'doc.found.name');\n        assertPresent(doc.found.updateTime, 'doc.found.updateTime');\n        var key = this.fromName(doc.found.name);\n        var version = this.fromVersion(doc.found.updateTime);\n        var fields = this.fromFields(doc.found.fields || {});\n        return new Document(key, version, fields, { hasLocalMutations: false });\n    };\n    JsonProtoSerializer.prototype.fromMissing = function (result) {\n        assert(!!result.missing, 'Tried to deserialize a missing document from a found document.');\n        assert(!!result.readTime, 'Tried to deserialize a missing document without a read time.');\n        var key = this.fromName(result.missing);\n        var version = this.fromVersion(result.readTime);\n        return new NoDocument(key, version);\n    };\n    JsonProtoSerializer.prototype.fromMaybeDocument = function (result) {\n        // tslint:disable-next-line:no-any\n        var type = result['result'];\n        if (hasTag(result, type, 'found')) {\n            return this.fromFound(result);\n        }\n        else if (hasTag(result, type, 'missing')) {\n            return this.fromMissing(result);\n        }\n        return fail('invalid batch get response: ' + JSON.stringify(result));\n    };\n    JsonProtoSerializer.prototype.toWatchTargetChangeState = function (state) {\n        switch (state) {\n            case WatchTargetChangeState.Added:\n                return 'ADD';\n            case WatchTargetChangeState.Current:\n                return 'CURRENT';\n            case WatchTargetChangeState.NoChange:\n                return 'NO_CHANGE';\n            case WatchTargetChangeState.Removed:\n                return 'REMOVE';\n            case WatchTargetChangeState.Reset:\n                return 'RESET';\n            default:\n                return fail('Unknown WatchTargetChangeState: ' + state);\n        }\n    };\n    JsonProtoSerializer.prototype.toTestWatchChange = function (watchChange) {\n        if (watchChange instanceof ExistenceFilterChange) {\n            return {\n                filter: {\n                    count: watchChange.existenceFilter.count,\n                    targetId: watchChange.targetId\n                }\n            };\n        }\n        if (watchChange instanceof DocumentWatchChange) {\n            if (watchChange.newDoc instanceof Document) {\n                var doc = watchChange.newDoc;\n                return {\n                    documentChange: {\n                        document: {\n                            name: this.toName(doc.key),\n                            fields: this.toFields(doc.data),\n                            updateTime: this.toVersion(doc.version)\n                        },\n                        targetIds: watchChange.updatedTargetIds,\n                        removedTargetIds: watchChange.removedTargetIds\n                    }\n                };\n            }\n            else if (watchChange.newDoc instanceof NoDocument) {\n                var doc = watchChange.newDoc;\n                return {\n                    documentDelete: {\n                        document: this.toName(doc.key),\n                        readTime: this.toVersion(doc.version),\n                        removedTargetIds: watchChange.removedTargetIds\n                    }\n                };\n            }\n            else if (watchChange.newDoc === null) {\n                return {\n                    documentRemove: {\n                        document: this.toName(watchChange.key),\n                        removedTargetIds: watchChange.removedTargetIds\n                    }\n                };\n            }\n        }\n        if (watchChange instanceof WatchTargetChange) {\n            var cause = undefined;\n            if (watchChange.cause) {\n                cause = {\n                    code: mapRpcCodeFromCode(watchChange.cause.code),\n                    message: watchChange.cause.message\n                };\n            }\n            return {\n                targetChange: {\n                    targetChangeType: this.toWatchTargetChangeState(watchChange.state),\n                    targetIds: watchChange.targetIds,\n                    resumeToken: this.unsafeCastProtoByteString(watchChange.resumeToken),\n                    cause: cause\n                }\n            };\n        }\n        return fail('Unrecognized watch change: ' + JSON.stringify(watchChange));\n    };\n    JsonProtoSerializer.prototype.fromWatchChange = function (change) {\n        // tslint:disable-next-line:no-any\n        var type = change['response_type'];\n        var watchChange;\n        if (hasTag(change, type, 'targetChange')) {\n            assertPresent(change.targetChange, 'targetChange');\n            // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n            // if unset\n            var state = this.fromWatchTargetChangeState(change.targetChange.targetChangeType || 'NO_CHANGE');\n            var targetIds = change.targetChange.targetIds || [];\n            var resumeToken = change.targetChange.resumeToken || this.emptyByteString();\n            var causeProto = change.targetChange.cause;\n            var cause = causeProto && this.fromRpcStatus(causeProto);\n            watchChange = new WatchTargetChange(state, targetIds, resumeToken, cause || null);\n        }\n        else if (hasTag(change, type, 'documentChange')) {\n            assertPresent(change.documentChange, 'documentChange');\n            assertPresent(change.documentChange.document, 'documentChange.name');\n            assertPresent(change.documentChange.document.name, 'documentChange.document.name');\n            assertPresent(change.documentChange.document.updateTime, 'documentChange.document.updateTime');\n            var entityChange = change.documentChange;\n            var key = this.fromName(entityChange.document.name);\n            var version = this.fromVersion(entityChange.document.updateTime);\n            var fields = this.fromFields(entityChange.document.fields || {});\n            var doc = new Document(key, version, fields, {\n                hasLocalMutations: false\n            });\n            var updatedTargetIds = entityChange.targetIds || [];\n            var removedTargetIds = entityChange.removedTargetIds || [];\n            watchChange = new DocumentWatchChange(updatedTargetIds, removedTargetIds, doc.key, doc);\n        }\n        else if (hasTag(change, type, 'documentDelete')) {\n            assertPresent(change.documentDelete, 'documentDelete');\n            assertPresent(change.documentDelete.document, 'documentDelete.document');\n            var docDelete = change.documentDelete;\n            var key = this.fromName(docDelete.document);\n            var version = docDelete.readTime\n                ? this.fromVersion(docDelete.readTime)\n                : SnapshotVersion.forDeletedDoc();\n            var doc = new NoDocument(key, version);\n            var removedTargetIds = docDelete.removedTargetIds || [];\n            watchChange = new DocumentWatchChange([], removedTargetIds, doc.key, doc);\n        }\n        else if (hasTag(change, type, 'documentRemove')) {\n            assertPresent(change.documentRemove, 'documentRemove');\n            assertPresent(change.documentRemove.document, 'documentRemove');\n            var docRemove = change.documentRemove;\n            var key = this.fromName(docRemove.document);\n            var removedTargetIds = docRemove.removedTargetIds || [];\n            watchChange = new DocumentWatchChange([], removedTargetIds, key, null);\n        }\n        else if (hasTag(change, type, 'filter')) {\n            // TODO(dimond): implement existence filter parsing with strategy.\n            assertPresent(change.filter, 'filter');\n            assertPresent(change.filter.targetId, 'filter.targetId');\n            var filter = change.filter;\n            var count = filter.count || 0;\n            var existenceFilter = new ExistenceFilter(count);\n            var targetId = filter.targetId;\n            watchChange = new ExistenceFilterChange(targetId, existenceFilter);\n        }\n        else {\n            return fail('Unknown change type ' + JSON.stringify(change));\n        }\n        return watchChange;\n    };\n    JsonProtoSerializer.prototype.fromWatchTargetChangeState = function (state) {\n        if (state === 'NO_CHANGE') {\n            return WatchTargetChangeState.NoChange;\n        }\n        else if (state === 'ADD') {\n            return WatchTargetChangeState.Added;\n        }\n        else if (state === 'REMOVE') {\n            return WatchTargetChangeState.Removed;\n        }\n        else if (state === 'CURRENT') {\n            return WatchTargetChangeState.Current;\n        }\n        else if (state === 'RESET') {\n            return WatchTargetChangeState.Reset;\n        }\n        else {\n            return fail('Got unexpected TargetChange.state: ' + state);\n        }\n    };\n    JsonProtoSerializer.prototype.versionFromListenResponse = function (change) {\n        // We have only reached a consistent snapshot for the entire stream if there\n        // is a read_time set and it applies to all targets (i.e. the list of\n        // targets is empty). The backend is guaranteed to send such responses.\n        // tslint:disable-next-line:no-any\n        var type = change['response_type'];\n        if (!hasTag(change, type, 'targetChange')) {\n            return SnapshotVersion.MIN;\n        }\n        var targetChange = change.targetChange;\n        if (targetChange.targetIds && targetChange.targetIds.length) {\n            return SnapshotVersion.MIN;\n        }\n        if (!targetChange.readTime) {\n            return SnapshotVersion.MIN;\n        }\n        return this.fromVersion(targetChange.readTime);\n    };\n    JsonProtoSerializer.prototype.toMutation = function (mutation) {\n        var _this = this;\n        var result;\n        if (mutation instanceof SetMutation) {\n            result = {\n                update: this.toMutationDocument(mutation.key, mutation.value)\n            };\n        }\n        else if (mutation instanceof DeleteMutation) {\n            result = { delete: this.toName(mutation.key) };\n        }\n        else if (mutation instanceof PatchMutation) {\n            result = {\n                update: this.toMutationDocument(mutation.key, mutation.data),\n                updateMask: this.toDocumentMask(mutation.fieldMask)\n            };\n        }\n        else if (mutation instanceof TransformMutation) {\n            result = {\n                transform: {\n                    document: this.toName(mutation.key),\n                    fieldTransforms: mutation.fieldTransforms.map(function (transform) {\n                        return _this.toFieldTransform(transform);\n                    })\n                }\n            };\n        }\n        else {\n            return fail('Unknown mutation type ' + mutation.type);\n        }\n        if (!mutation.precondition.isNone) {\n            result.currentDocument = this.toPrecondition(mutation.precondition);\n        }\n        return result;\n    };\n    JsonProtoSerializer.prototype.fromMutation = function (proto) {\n        var _this = this;\n        var precondition = proto.currentDocument\n            ? this.fromPrecondition(proto.currentDocument)\n            : Precondition.NONE;\n        if (proto.update) {\n            assertPresent(proto.update.name, 'name');\n            var key = this.fromName(proto.update.name);\n            var value = this.fromFields(proto.update.fields || {});\n            if (proto.updateMask) {\n                var fieldMask = this.fromDocumentMask(proto.updateMask);\n                return new PatchMutation(key, value, fieldMask, precondition);\n            }\n            else {\n                return new SetMutation(key, value, precondition);\n            }\n        }\n        else if (proto.delete) {\n            var key = this.fromName(proto.delete);\n            return new DeleteMutation(key, precondition);\n        }\n        else if (proto.transform) {\n            var key = this.fromName(proto.transform.document);\n            var fieldTransforms = proto.transform.fieldTransforms.map(function (transform) {\n                return _this.fromFieldTransform(transform);\n            });\n            assert(precondition.exists === true, 'Transforms only support precondition \"exists == true\"');\n            return new TransformMutation(key, fieldTransforms);\n        }\n        else {\n            return fail('unknown mutation proto: ' + JSON.stringify(proto));\n        }\n    };\n    JsonProtoSerializer.prototype.toPrecondition = function (precondition) {\n        assert(!precondition.isNone, \"Can't serialize an empty precondition\");\n        if (precondition.updateTime !== undefined) {\n            return {\n                updateTime: this.toVersion(precondition.updateTime)\n            };\n        }\n        else if (precondition.exists !== undefined) {\n            return { exists: precondition.exists };\n        }\n        else {\n            return fail('Unknown precondition');\n        }\n    };\n    JsonProtoSerializer.prototype.fromPrecondition = function (precondition) {\n        if (precondition.updateTime !== undefined) {\n            return Precondition.updateTime(this.fromVersion(precondition.updateTime));\n        }\n        else if (precondition.exists !== undefined) {\n            return Precondition.exists(precondition.exists);\n        }\n        else {\n            return Precondition.NONE;\n        }\n    };\n    JsonProtoSerializer.prototype.fromWriteResult = function (proto) {\n        var _this = this;\n        // NOTE: Deletes don't have an updateTime.\n        var version = proto.updateTime\n            ? this.fromVersion(proto.updateTime)\n            : null;\n        var transformResults = null;\n        if (proto.transformResults && proto.transformResults.length > 0) {\n            transformResults = proto.transformResults.map(function (result) {\n                return _this.fromValue(result);\n            });\n        }\n        return new MutationResult(version, transformResults);\n    };\n    JsonProtoSerializer.prototype.fromWriteResults = function (protos) {\n        var _this = this;\n        return (protos || []).map(function (proto) { return _this.fromWriteResult(proto); });\n    };\n    JsonProtoSerializer.prototype.toFieldTransform = function (fieldTransform) {\n        assert(fieldTransform.transform instanceof ServerTimestampTransform, 'Unknown transform: ' + fieldTransform.transform);\n        return {\n            fieldPath: fieldTransform.field.canonicalString(),\n            setToServerValue: 'REQUEST_TIME'\n        };\n    };\n    JsonProtoSerializer.prototype.fromFieldTransform = function (proto) {\n        assert(proto.setToServerValue === 'REQUEST_TIME', 'Unknown transform proto: ' + JSON.stringify(proto));\n        var fieldPath = FieldPath.fromServerFormat(proto.fieldPath);\n        return new FieldTransform(fieldPath, ServerTimestampTransform.instance);\n    };\n    JsonProtoSerializer.prototype.toDocumentsTarget = function (query) {\n        return { documents: [this.toQueryPath(query.path)] };\n    };\n    JsonProtoSerializer.prototype.fromDocumentsTarget = function (documentsTarget) {\n        var count = documentsTarget.documents.length;\n        assert(count === 1, 'DocumentsTarget contained other than 1 document: ' + count);\n        var name = documentsTarget.documents[0];\n        return Query.atPath(this.fromQueryPath(name));\n    };\n    JsonProtoSerializer.prototype.toQueryTarget = function (query) {\n        // Dissect the path into parent, collectionId, and optional key filter.\n        var result = { structuredQuery: {} };\n        if (query.path.isEmpty()) {\n            result.parent = this.toQueryPath(ResourcePath.EMPTY_PATH);\n        }\n        else {\n            var path = query.path;\n            assert(path.length % 2 !== 0, 'Document queries with filters are not supported.');\n            result.parent = this.toQueryPath(path.popLast());\n            result.structuredQuery.from = [{ collectionId: path.lastSegment() }];\n        }\n        var where = this.toFilter(query.filters);\n        if (where) {\n            result.structuredQuery.where = where;\n        }\n        var orderBy = this.toOrder(query.orderBy);\n        if (orderBy) {\n            result.structuredQuery.orderBy = orderBy;\n        }\n        var limit = this.toInt32Value(query.limit);\n        if (limit !== undefined) {\n            result.structuredQuery.limit = limit;\n        }\n        if (query.startAt) {\n            result.structuredQuery.startAt = this.toCursor(query.startAt);\n        }\n        if (query.endAt) {\n            result.structuredQuery.endAt = this.toCursor(query.endAt);\n        }\n        return result;\n    };\n    JsonProtoSerializer.prototype.fromQueryTarget = function (target) {\n        var path = this.fromQueryPath(target.parent);\n        var query = target.structuredQuery;\n        var fromCount = query.from ? query.from.length : 0;\n        if (fromCount > 0) {\n            assert(fromCount === 1, 'StructuredQuery.from with more than one collection is not supported.');\n            var from = query.from[0];\n            path = path.child(from.collectionId);\n        }\n        var filterBy = [];\n        if (query.where) {\n            filterBy = this.fromFilter(query.where);\n        }\n        var orderBy = [];\n        if (query.orderBy) {\n            orderBy = this.fromOrder(query.orderBy);\n        }\n        var limit = null;\n        if (query.limit) {\n            limit = this.fromInt32Value(query.limit);\n        }\n        var startAt = null;\n        if (query.startAt) {\n            startAt = this.fromCursor(query.startAt);\n        }\n        var endAt = null;\n        if (query.endAt) {\n            endAt = this.fromCursor(query.endAt);\n        }\n        return new Query(path, orderBy, filterBy, limit, startAt, endAt);\n    };\n    JsonProtoSerializer.prototype.toListenRequestLabels = function (queryData) {\n        var value = this.toLabel(queryData.purpose);\n        if (value == null) {\n            return null;\n        }\n        else {\n            return {\n                'goog-listen-tags': value\n            };\n        }\n    };\n    JsonProtoSerializer.prototype.toLabel = function (purpose) {\n        switch (purpose) {\n            case QueryPurpose.Listen:\n                return null;\n            case QueryPurpose.ExistenceFilterMismatch:\n                return 'existence-filter-mismatch';\n            case QueryPurpose.LimboResolution:\n                return 'limbo-document';\n            default:\n                return fail('Unrecognized query purpose: ' + purpose);\n        }\n    };\n    JsonProtoSerializer.prototype.toTarget = function (queryData) {\n        var result;\n        var query = queryData.query;\n        if (query.isDocumentQuery()) {\n            result = { documents: this.toDocumentsTarget(query) };\n        }\n        else {\n            result = { query: this.toQueryTarget(query) };\n        }\n        result.targetId = queryData.targetId;\n        if (queryData.resumeToken.length > 0) {\n            result.resumeToken = this.unsafeCastProtoByteString(queryData.resumeToken);\n        }\n        return result;\n    };\n    JsonProtoSerializer.prototype.toFilter = function (filters) {\n        var _this = this;\n        if (filters.length === 0)\n            return;\n        var protos = filters.map(function (filter) {\n            return filter instanceof RelationFilter\n                ? _this.toRelationFilter(filter)\n                : _this.toUnaryFilter(filter);\n        });\n        if (protos.length === 1) {\n            return protos[0];\n        }\n        return { compositeFilter: { op: 'AND', filters: protos } };\n    };\n    JsonProtoSerializer.prototype.fromFilter = function (filter) {\n        var _this = this;\n        if (!filter) {\n            return [];\n        }\n        else if (filter.unaryFilter !== undefined) {\n            return [this.fromUnaryFilter(filter)];\n        }\n        else if (filter.fieldFilter !== undefined) {\n            return [this.fromRelationFilter(filter)];\n        }\n        else if (filter.compositeFilter !== undefined) {\n            return filter.compositeFilter.filters\n                .map(function (f) { return _this.fromFilter(f); })\n                .reduce(function (accum, current) { return accum.concat(current); });\n        }\n        else {\n            return fail('Unknown filter: ' + JSON.stringify(filter));\n        }\n    };\n    JsonProtoSerializer.prototype.toOrder = function (orderBys) {\n        var _this = this;\n        if (orderBys.length === 0)\n            return;\n        return orderBys.map(function (order) { return _this.toPropertyOrder(order); });\n    };\n    JsonProtoSerializer.prototype.fromOrder = function (orderBys) {\n        var _this = this;\n        return orderBys.map(function (order) { return _this.fromPropertyOrder(order); });\n    };\n    JsonProtoSerializer.prototype.toCursor = function (cursor) {\n        var _this = this;\n        return {\n            before: cursor.before,\n            values: cursor.position.map(function (component) { return _this.toValue(component); })\n        };\n    };\n    JsonProtoSerializer.prototype.fromCursor = function (cursor) {\n        var _this = this;\n        var before = !!cursor.before;\n        var position = cursor.values.map(function (component) { return _this.fromValue(component); });\n        return new Bound(position, before);\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toDirection = function (dir) {\n        return DIRECTIONS[dir.name];\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.fromDirection = function (dir) {\n        switch (dir) {\n            case 'ASCENDING':\n                return Direction.ASCENDING;\n            case 'DESCENDING':\n                return Direction.DESCENDING;\n            default:\n                return undefined;\n        }\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toOperatorName = function (op) {\n        return OPERATORS[op.name];\n    };\n    JsonProtoSerializer.prototype.fromOperatorName = function (op) {\n        switch (op) {\n            case 'EQUAL':\n                return RelationOp.EQUAL;\n            case 'GREATER_THAN':\n                return RelationOp.GREATER_THAN;\n            case 'GREATER_THAN_OR_EQUAL':\n                return RelationOp.GREATER_THAN_OR_EQUAL;\n            case 'LESS_THAN':\n                return RelationOp.LESS_THAN;\n            case 'LESS_THAN_OR_EQUAL':\n                return RelationOp.LESS_THAN_OR_EQUAL;\n            case 'OPERATOR_UNSPECIFIED':\n                return fail('Unspecified relation');\n            default:\n                return fail('Unknown relation');\n        }\n    };\n    JsonProtoSerializer.prototype.toFieldPathReference = function (path) {\n        return { fieldPath: path.canonicalString() };\n    };\n    JsonProtoSerializer.prototype.fromFieldPathReference = function (fieldReference) {\n        return FieldPath.fromServerFormat(fieldReference.fieldPath);\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toPropertyOrder = function (orderBy) {\n        return {\n            field: this.toFieldPathReference(orderBy.field),\n            direction: this.toDirection(orderBy.dir)\n        };\n    };\n    JsonProtoSerializer.prototype.fromPropertyOrder = function (orderBy) {\n        return new OrderBy(this.fromFieldPathReference(orderBy.field), this.fromDirection(orderBy.direction));\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toRelationFilter = function (filter) {\n        if (filter instanceof RelationFilter) {\n            return {\n                fieldFilter: {\n                    field: this.toFieldPathReference(filter.field),\n                    op: this.toOperatorName(filter.op),\n                    value: this.toValue(filter.value)\n                }\n            };\n        }\n        else {\n            return fail('Unrecognized filter: ' + JSON.stringify(filter));\n        }\n    };\n    JsonProtoSerializer.prototype.fromRelationFilter = function (filter) {\n        return new RelationFilter(this.fromFieldPathReference(filter.fieldFilter.field), this.fromOperatorName(filter.fieldFilter.op), this.fromValue(filter.fieldFilter.value));\n    };\n    // visible for testing\n    JsonProtoSerializer.prototype.toUnaryFilter = function (filter) {\n        if (filter instanceof NanFilter) {\n            return {\n                unaryFilter: {\n                    field: this.toFieldPathReference(filter.field),\n                    op: 'IS_NAN'\n                }\n            };\n        }\n        else if (filter instanceof NullFilter) {\n            return {\n                unaryFilter: {\n                    field: this.toFieldPathReference(filter.field),\n                    op: 'IS_NULL'\n                }\n            };\n        }\n        else {\n            return fail('Unrecognized filter: ' + JSON.stringify(filter));\n        }\n    };\n    JsonProtoSerializer.prototype.fromUnaryFilter = function (filter) {\n        switch (filter.unaryFilter.op) {\n            case 'IS_NAN':\n                var nanField = this.fromFieldPathReference(filter.unaryFilter.field);\n                return new NanFilter(nanField);\n            case 'IS_NULL':\n                var nullField = this.fromFieldPathReference(filter.unaryFilter.field);\n                return new NullFilter(nullField);\n            case 'OPERATOR_UNSPECIFIED':\n                return fail('Unspecified filter');\n            default:\n                return fail('Unknown filter');\n        }\n    };\n    JsonProtoSerializer.prototype.toDocumentMask = function (fieldMask) {\n        return {\n            fieldPaths: fieldMask.fields.map(function (field) { return field.canonicalString(); })\n        };\n    };\n    JsonProtoSerializer.prototype.fromDocumentMask = function (proto) {\n        var paths = proto.fieldPaths || [];\n        var fields = paths.map(function (path) { return FieldPath.fromServerFormat(path); });\n        return new FieldMask(fields);\n    };\n    return JsonProtoSerializer;\n}());\nexport { JsonProtoSerializer };\n/**\n * Checks for a specific oneof tag in a protocol buffer message.\n *\n * This intentionally accommodates two distinct cases:\n *\n * 1) Messages containing a type tag: these are the format produced by GRPC in\n * return values. These may contain default-value mappings for all tags in the\n * oneof but the type tag specifies which one was actually set.\n *\n * 2) Messages that don't contain a type tag: these are the format required by\n * GRPC as inputs. If we emitted objects with type tags, ProtoBuf.js would\n * choke claiming that the tags aren't fields in the Message.\n *\n * Allowing both formats here makes the serializer able to consume the outputs\n * it produces: for all messages it supports, fromX(toX(value)) == value.\n *\n * Note that case 2 suffers from ambiguity: if multiple tags are present\n * without a type tag then the callers are structured in such a way that the\n * first invocation will win. Since we only parse in this mode when parsing\n * the output of a serialize method this works, but it's not a general\n * solution.\n *\n * Unfortunately there is no general solution here because proto3 makes it\n * impossible to distinguish unset from explicitly set fields: both have the\n * default value for the type. Without the type tag but multiple value tags\n * it's possible to have default values for each tag in the oneof and not be\n * able to know which was actually in effect.\n */\nfunction hasTag(obj, type, tag) {\n    return type === tag || (!type && tag in obj);\n}\n\n//# sourceMappingURL=serializer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/serializer.js\n// module id = 205\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { primitiveComparator } from '../util/misc';\nvar DatabaseInfo = /** @class */ (function () {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId The database to use.\n     * @param persistenceKey A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host The Firestore backend host to connect to.\n     * @param ssl Whether to use SSL when connecting.\n     */\n    function DatabaseInfo(databaseId, persistenceKey, host, ssl) {\n        this.databaseId = databaseId;\n        this.persistenceKey = persistenceKey;\n        this.host = host;\n        this.ssl = ssl;\n    }\n    return DatabaseInfo;\n}());\nexport { DatabaseInfo };\n/** The default database name for a project. */\nvar DEFAULT_DATABASE_NAME = '(default)';\n/** Represents the database ID a Firestore client is associated with. */\nvar DatabaseId = /** @class */ (function () {\n    function DatabaseId(projectId, database) {\n        this.projectId = projectId;\n        this.database = database ? database : DEFAULT_DATABASE_NAME;\n    }\n    Object.defineProperty(DatabaseId.prototype, \"isDefaultDatabase\", {\n        get: function () {\n            return this.database === DEFAULT_DATABASE_NAME;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DatabaseId.prototype.isEqual = function (other) {\n        return (other instanceof DatabaseId &&\n            other.projectId === this.projectId &&\n            other.database === this.database);\n    };\n    DatabaseId.prototype.compareTo = function (other) {\n        return (primitiveComparator(this.projectId, other.projectId) ||\n            primitiveComparator(this.database, other.database));\n    };\n    return DatabaseId;\n}());\nexport { DatabaseId };\n\n//# sourceMappingURL=database_info.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/database_info.js\n// module id = 206\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { maybeDocumentMap } from '../model/collections';\nimport { emptyByteString } from '../platform/platform';\nimport { assert, fail } from '../util/assert';\nimport * as objUtils from '../util/obj';\nimport { CurrentStatusUpdate, RemoteEvent, ResetMapping, UpdateMapping } from './remote_event';\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */\nvar DocumentWatchChange = /** @class */ (function () {\n    function DocumentWatchChange(\n        /** The new document applies to all of these targets. */\n        updatedTargetIds, \n        /** The new document is removed from all of these targets. */\n        removedTargetIds, \n        /** The key of the document for this change. */\n        key, \n        /**\n         * The new document or NoDocument if it was deleted. Is null if the\n         * document went out of view without the server sending a new document.\n         */\n        newDoc) {\n        this.updatedTargetIds = updatedTargetIds;\n        this.removedTargetIds = removedTargetIds;\n        this.key = key;\n        this.newDoc = newDoc;\n    }\n    return DocumentWatchChange;\n}());\nexport { DocumentWatchChange };\nvar ExistenceFilterChange = /** @class */ (function () {\n    function ExistenceFilterChange(targetId, existenceFilter) {\n        this.targetId = targetId;\n        this.existenceFilter = existenceFilter;\n    }\n    return ExistenceFilterChange;\n}());\nexport { ExistenceFilterChange };\nexport var WatchTargetChangeState;\n(function (WatchTargetChangeState) {\n    WatchTargetChangeState[WatchTargetChangeState[\"NoChange\"] = 0] = \"NoChange\";\n    WatchTargetChangeState[WatchTargetChangeState[\"Added\"] = 1] = \"Added\";\n    WatchTargetChangeState[WatchTargetChangeState[\"Removed\"] = 2] = \"Removed\";\n    WatchTargetChangeState[WatchTargetChangeState[\"Current\"] = 3] = \"Current\";\n    WatchTargetChangeState[WatchTargetChangeState[\"Reset\"] = 4] = \"Reset\";\n})(WatchTargetChangeState || (WatchTargetChangeState = {}));\nvar WatchTargetChange = /** @class */ (function () {\n    function WatchTargetChange(\n        /** What kind of change occurred to the watch target. */\n        state, \n        /** The target IDs that were added/removed/set. */\n        targetIds, \n        /**\n         * An opaque, server-assigned token that allows watching a query to be\n         * resumed after disconnecting without retransmitting all the data that\n         * matches the query. The resume token essentially identifies a point in\n         * time from which the server should resume sending results.\n         */\n        resumeToken, \n        /** An RPC error indicating why the watch failed. */\n        cause) {\n        if (resumeToken === void 0) { resumeToken = emptyByteString(); }\n        if (cause === void 0) { cause = null; }\n        this.state = state;\n        this.targetIds = targetIds;\n        this.resumeToken = resumeToken;\n        this.cause = cause;\n    }\n    return WatchTargetChange;\n}());\nexport { WatchTargetChange };\n/**\n * A helper class to accumulate watch changes into a RemoteEvent and other\n * target information.\n */\nvar WatchChangeAggregator = /** @class */ (function () {\n    function WatchChangeAggregator(snapshotVersion, listenTargets, pendingTargetResponses) {\n        this.snapshotVersion = snapshotVersion;\n        this.listenTargets = listenTargets;\n        /** The existence filter - if any - for the given target IDs. */\n        this.existenceFilters = {};\n        /** Keeps track of the current target mappings */\n        this.targetChanges = {};\n        /** Keeps track of document to update */\n        this.documentUpdates = maybeDocumentMap();\n        /** Whether this aggregator was frozen and can no longer be modified */\n        this.frozen = false;\n        this.pendingTargetResponses = objUtils.shallowCopy(pendingTargetResponses);\n    }\n    /** Aggregates a watch change into the current state */\n    WatchChangeAggregator.prototype.add = function (watchChange) {\n        assert(!this.frozen, 'Trying to modify frozen WatchChangeAggregator.');\n        if (watchChange instanceof DocumentWatchChange) {\n            this.addDocumentChange(watchChange);\n        }\n        else if (watchChange instanceof WatchTargetChange) {\n            this.addTargetChange(watchChange);\n        }\n        else if (watchChange instanceof ExistenceFilterChange) {\n            this.addExistenceFilterChange(watchChange);\n        }\n        else {\n            fail('Unknown watch change: ' + watchChange);\n        }\n    };\n    /** Aggregates all provided watch changes to the current state in order */\n    WatchChangeAggregator.prototype.addChanges = function (watchChanges) {\n        var _this = this;\n        assert(!this.frozen, 'Trying to modify frozen WatchChangeAggregator.');\n        watchChanges.forEach(function (change) { return _this.add(change); });\n    };\n    /**\n     * Converts the current state into a remote event with the snapshot version\n     * provided via the constructor.\n     */\n    WatchChangeAggregator.prototype.createRemoteEvent = function () {\n        var _this = this;\n        var targetChanges = this.targetChanges;\n        // Remove all the non-active targets from the remote event.\n        objUtils.forEachNumber(this.targetChanges, function (targetId) {\n            if (!_this.isActiveTarget(targetId)) {\n                delete targetChanges[targetId];\n            }\n        });\n        // Mark this aggregator as frozen so no further modifications are made\n        this.frozen = true;\n        return new RemoteEvent(this.snapshotVersion, targetChanges, this.documentUpdates);\n    };\n    WatchChangeAggregator.prototype.ensureTargetChange = function (targetId) {\n        var change = this.targetChanges[targetId];\n        if (!change) {\n            // Create an UpdateMapping by default, since resets are always explicit.\n            change = {\n                currentStatusUpdate: CurrentStatusUpdate.None,\n                snapshotVersion: this.snapshotVersion,\n                mapping: new UpdateMapping(),\n                resumeToken: emptyByteString()\n            };\n            this.targetChanges[targetId] = change;\n        }\n        return change;\n    };\n    /**\n     * We need to wait for watch to ack targets before we process those events,\n     * so to know if a target is active, there must be no pending acks we're\n     * waiting for and it must be in the current list of targets that the client\n     * cares about.\n     *\n     * This method is visible for testing.\n     */\n    WatchChangeAggregator.prototype.isActiveTarget = function (targetId) {\n        return (!objUtils.contains(this.pendingTargetResponses, targetId) &&\n            objUtils.contains(this.listenTargets, targetId));\n    };\n    WatchChangeAggregator.prototype.addDocumentChange = function (docChange) {\n        var relevant = false;\n        for (var _i = 0, _a = docChange.updatedTargetIds; _i < _a.length; _i++) {\n            var targetId = _a[_i];\n            if (this.isActiveTarget(targetId)) {\n                var change = this.ensureTargetChange(targetId);\n                change.mapping.add(docChange.key);\n                relevant = true;\n            }\n        }\n        for (var _b = 0, _c = docChange.removedTargetIds; _b < _c.length; _b++) {\n            var targetId = _c[_b];\n            if (this.isActiveTarget(targetId)) {\n                var change = this.ensureTargetChange(targetId);\n                change.mapping.delete(docChange.key);\n                relevant = true;\n            }\n        }\n        // Only update the document if there is a new document to replace to an\n        // active target that is being listened to, this might be just a target\n        // update instead.\n        if (docChange.newDoc && relevant) {\n            this.documentUpdates = this.documentUpdates.insert(docChange.key, docChange.newDoc);\n        }\n    };\n    WatchChangeAggregator.prototype.addTargetChange = function (targetChange) {\n        var _this = this;\n        targetChange.targetIds.forEach(function (targetId) {\n            var change = _this.ensureTargetChange(targetId);\n            switch (targetChange.state) {\n                case WatchTargetChangeState.NoChange:\n                    if (_this.isActiveTarget(targetId)) {\n                        // Creating the change above satisfies the semantics of no-change.\n                        applyResumeToken(change, targetChange.resumeToken);\n                    }\n                    break;\n                case WatchTargetChangeState.Added:\n                    // We need to decrement the number of pending acks needed from watch\n                    // for this targetId.\n                    _this.recordTargetResponse(targetId);\n                    if (!objUtils.contains(_this.pendingTargetResponses, targetId)) {\n                        // We have a freshly added target, so we need to reset any state\n                        // that we had previously This can happen e.g. when remove and add\n                        // back a target for existence filter mismatches.\n                        change.mapping = new UpdateMapping();\n                        change.currentStatusUpdate = CurrentStatusUpdate.None;\n                        delete _this.existenceFilters[targetId];\n                    }\n                    applyResumeToken(change, targetChange.resumeToken);\n                    break;\n                case WatchTargetChangeState.Removed:\n                    // We need to keep track of removed targets to we can\n                    // post-filter and remove any target changes.\n                    // We need to decrement the number of pending acks needed from watch\n                    // for this targetId.\n                    _this.recordTargetResponse(targetId);\n                    assert(!targetChange.cause, 'WatchChangeAggregator does not handle errored targets');\n                    break;\n                case WatchTargetChangeState.Current:\n                    if (_this.isActiveTarget(targetId)) {\n                        change.currentStatusUpdate = CurrentStatusUpdate.MarkCurrent;\n                        applyResumeToken(change, targetChange.resumeToken);\n                    }\n                    break;\n                case WatchTargetChangeState.Reset:\n                    if (_this.isActiveTarget(targetId)) {\n                        // Overwrite any existing target mapping with a reset\n                        // mapping. Every subsequent update will modify the reset\n                        // mapping, not an update mapping.\n                        change.mapping = new ResetMapping();\n                        applyResumeToken(change, targetChange.resumeToken);\n                    }\n                    break;\n                default:\n                    fail('Unknown target watch change state: ' + targetChange.state);\n            }\n        });\n    };\n    /**\n     * Record that we get a watch target add/remove by decrementing the number of\n     * pending target responses that we have.\n     */\n    WatchChangeAggregator.prototype.recordTargetResponse = function (targetId) {\n        var newCount = (this.pendingTargetResponses[targetId] || 0) - 1;\n        if (newCount === 0) {\n            delete this.pendingTargetResponses[targetId];\n        }\n        else {\n            this.pendingTargetResponses[targetId] = newCount;\n        }\n    };\n    WatchChangeAggregator.prototype.addExistenceFilterChange = function (change) {\n        if (this.isActiveTarget(change.targetId)) {\n            this.existenceFilters[change.targetId] = change.existenceFilter;\n        }\n    };\n    return WatchChangeAggregator;\n}());\nexport { WatchChangeAggregator };\n/**\n * Applies the resume token to the TargetChange, but only when it has a new\n * value. null and empty resumeTokens are discarded.\n */\nfunction applyResumeToken(change, resumeToken) {\n    if (resumeToken.length > 0) {\n        change.resumeToken = resumeToken;\n    }\n}\n\n//# sourceMappingURL=watch_change.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/watch_change.js\n// module id = 207\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert';\nimport { SortedMap } from '../util/sorted_map';\nimport { documentMap } from './collections';\nimport { DocumentKey } from './document_key';\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */\nvar DocumentSet = /** @class */ (function () {\n    /** The default ordering is by key if the comparator is omitted */\n    function DocumentSet(comp) {\n        // We are adding document key comparator to the end as it's the only\n        // guaranteed unique property of a document.\n        if (comp) {\n            this.comparator = function (d1, d2) {\n                return comp(d1, d2) || DocumentKey.comparator(d1.key, d2.key);\n            };\n        }\n        else {\n            this.comparator = function (d1, d2) {\n                return DocumentKey.comparator(d1.key, d2.key);\n            };\n        }\n        this.keyedMap = documentMap();\n        this.sortedSet = new SortedMap(this.comparator);\n    }\n    /**\n     * Returns an empty copy of the existing DocumentSet, using the same\n     * comparator.\n     */\n    DocumentSet.emptySet = function (oldSet) {\n        return new DocumentSet(oldSet.comparator);\n    };\n    DocumentSet.prototype.has = function (key) {\n        return this.keyedMap.get(key) != null;\n    };\n    DocumentSet.prototype.get = function (key) {\n        return this.keyedMap.get(key);\n    };\n    DocumentSet.prototype.first = function () {\n        return this.sortedSet.minKey();\n    };\n    DocumentSet.prototype.last = function () {\n        return this.sortedSet.maxKey();\n    };\n    DocumentSet.prototype.isEmpty = function () {\n        return this.sortedSet.isEmpty();\n    };\n    /**\n     * Returns previous document or null if it's a first doc.\n     *\n     * @param key A key that MUST be present in the DocumentSet.\n     */\n    DocumentSet.prototype.prevDoc = function (key) {\n        assert(this.has(key), 'Trying to get a previous document to non-existing key: ' + key);\n        var doc = this.keyedMap.get(key);\n        return this.sortedSet.getPredecessorKey(doc);\n    };\n    /**\n     * Returns the index of the provided key in the document set, or -1 if the\n     * document key is not present in the set;\n     */\n    DocumentSet.prototype.indexOf = function (key) {\n        var doc = this.keyedMap.get(key);\n        return doc ? this.sortedSet.indexOf(doc) : -1;\n    };\n    Object.defineProperty(DocumentSet.prototype, \"size\", {\n        get: function () {\n            return this.sortedSet.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Iterates documents in order defined by \"comparator\" */\n    DocumentSet.prototype.forEach = function (cb) {\n        this.sortedSet.inorderTraversal(function (k, v) {\n            cb(k);\n            return false;\n        });\n    };\n    /** Inserts or updates a document with the same key */\n    DocumentSet.prototype.add = function (doc) {\n        // First remove the element if we have it.\n        var set = this.delete(doc.key);\n        return set.copy(set.keyedMap.insert(doc.key, doc), set.sortedSet.insert(doc, null));\n    };\n    /** Deletes a document with a given key */\n    DocumentSet.prototype.delete = function (key) {\n        var doc = this.get(key);\n        if (!doc) {\n            return this;\n        }\n        return this.copy(this.keyedMap.remove(key), this.sortedSet.remove(doc));\n    };\n    DocumentSet.prototype.isEqual = function (other) {\n        if (!(other instanceof DocumentSet))\n            return false;\n        if (this.size !== other.size)\n            return false;\n        var thisIt = this.sortedSet.getIterator();\n        var otherIt = other.sortedSet.getIterator();\n        while (thisIt.hasNext()) {\n            var thisDoc = thisIt.getNext().key;\n            var otherDoc = otherIt.getNext().key;\n            if (!thisDoc.isEqual(otherDoc))\n                return false;\n        }\n        return true;\n    };\n    DocumentSet.prototype.toString = function () {\n        var docStrings = [];\n        this.forEach(function (doc) {\n            docStrings.push(doc.toString());\n        });\n        if (docStrings.length === 0) {\n            return 'DocumentSet ()';\n        }\n        else {\n            return 'DocumentSet (\\n  ' + docStrings.join('  \\n') + '\\n)';\n        }\n    };\n    DocumentSet.prototype.copy = function (keyedMap, sortedSet) {\n        var newSet = new DocumentSet();\n        newSet.comparator = this.comparator;\n        newSet.keyedMap = keyedMap;\n        newSet.sortedSet = sortedSet;\n        return newSet;\n    };\n    return DocumentSet;\n}());\nexport { DocumentSet };\n\n//# sourceMappingURL=document_set.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/model/document_set.js\n// module id = 208\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { documentKeySet } from '../model/collections';\nimport { PersistencePromise } from './persistence_promise';\n/**\n * A garbage collector implementation that eagerly collects documents as soon as\n * they're no longer referenced in any of its registered GarbageSources.\n *\n * This implementation keeps track of a set of keys that are potentially garbage\n * without keeping an exact reference count. During collectGarbage, the\n * collector verifies that all potential garbage keys actually have no\n * references by consulting its list of garbage sources.\n */\nvar EagerGarbageCollector = /** @class */ (function () {\n    function EagerGarbageCollector() {\n        this.isEager = true;\n        /**\n         * The garbage collectible sources to double-check during garbage collection.\n         */\n        this.sources = [];\n        /**\n         * A set of potentially garbage keys.\n         * PORTING NOTE: This would be a mutable set if Javascript had one.\n         */\n        this.potentialGarbage = documentKeySet();\n    }\n    EagerGarbageCollector.prototype.addGarbageSource = function (garbageSource) {\n        this.sources.push(garbageSource);\n        garbageSource.setGarbageCollector(this);\n    };\n    EagerGarbageCollector.prototype.removeGarbageSource = function (garbageSource) {\n        this.sources.splice(this.sources.indexOf(garbageSource), 1);\n        garbageSource.setGarbageCollector(null);\n    };\n    EagerGarbageCollector.prototype.addPotentialGarbageKey = function (key) {\n        this.potentialGarbage = this.potentialGarbage.add(key);\n    };\n    EagerGarbageCollector.prototype.collectGarbage = function (txn) {\n        var _this = this;\n        var promises = [];\n        var garbageKeys = documentKeySet();\n        this.potentialGarbage.forEach(function (key) {\n            var hasRefsPromise = _this.documentHasAnyReferences(txn, key);\n            promises.push(hasRefsPromise.next(function (hasRefs) {\n                // If there are no references, get the key.\n                if (!hasRefs) {\n                    garbageKeys = garbageKeys.add(key);\n                }\n                return PersistencePromise.resolve();\n            }));\n        });\n        // Clear locally retained potential keys and returned confirmed garbage.\n        this.potentialGarbage = documentKeySet();\n        return PersistencePromise.waitFor(promises).next(function () { return garbageKeys; });\n    };\n    EagerGarbageCollector.prototype.documentHasAnyReferences = function (txn, key) {\n        var initial = PersistencePromise.resolve(false);\n        return this.sources\n            .map(function (source) { return function () { return source.containsKey(txn, key); }; })\n            .reduce(function (promise, nextPromise) {\n            return promise.next(function (result) {\n                if (result) {\n                    return PersistencePromise.resolve(true);\n                }\n                else {\n                    return nextPromise();\n                }\n            });\n        }, initial);\n    };\n    return EagerGarbageCollector;\n}());\nexport { EagerGarbageCollector };\n\n//# sourceMappingURL=eager_garbage_collector.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/eager_garbage_collector.js\n// module id = 209\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar RESERVED_BITS = 1;\nvar GeneratorIds;\n(function (GeneratorIds) {\n    GeneratorIds[GeneratorIds[\"LocalStore\"] = 0] = \"LocalStore\";\n    GeneratorIds[GeneratorIds[\"SyncEngine\"] = 1] = \"SyncEngine\";\n})(GeneratorIds || (GeneratorIds = {}));\n/**\n * TargetIdGenerator generates monotonically increasing integer IDs. There are\n * separate generators for different scopes. While these generators will operate\n * independently of each other, they are scoped, such that no two generators\n * will ever produce the same ID. This is useful, because sometimes the backend\n * may group IDs from separate parts of the client into the same ID space.\n */\nvar TargetIdGenerator = /** @class */ (function () {\n    function TargetIdGenerator(generatorId, initAfter) {\n        if (initAfter === void 0) { initAfter = 0; }\n        this.generatorId = generatorId;\n        // Replace the generator part of initAfter with this generator's ID.\n        var afterWithoutGenerator = (initAfter >> RESERVED_BITS) << RESERVED_BITS;\n        var afterGenerator = initAfter - afterWithoutGenerator;\n        if (afterGenerator >= generatorId) {\n            // For example, if:\n            //   this.generatorId = 0b0000\n            //   after = 0b1011\n            //   afterGenerator = 0b0001\n            // Then:\n            //   previous = 0b1010\n            //   next = 0b1100\n            this.previousId = afterWithoutGenerator | this.generatorId;\n        }\n        else {\n            // For example, if:\n            //   this.generatorId = 0b0001\n            //   after = 0b1010\n            //   afterGenerator = 0b0000\n            // Then:\n            //   previous = 0b1001\n            //   next = 0b1011\n            this.previousId =\n                (afterWithoutGenerator | this.generatorId) - (1 << RESERVED_BITS);\n        }\n    }\n    TargetIdGenerator.prototype.next = function () {\n        this.previousId += 1 << RESERVED_BITS;\n        return this.previousId;\n    };\n    TargetIdGenerator.forLocalStore = function (initAfter) {\n        if (initAfter === void 0) { initAfter = 0; }\n        return new TargetIdGenerator(GeneratorIds.LocalStore, initAfter);\n    };\n    TargetIdGenerator.forSyncEngine = function () {\n        return new TargetIdGenerator(GeneratorIds.SyncEngine);\n    };\n    return TargetIdGenerator;\n}());\nexport { TargetIdGenerator };\n\n//# sourceMappingURL=target_id_generator.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/target_id_generator.js\n// module id = 210\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { makeConstructorPrivate } from '../util/api';\n/**\n * An opaque base class for FieldValue sentinel objects in our public API,\n * with public static methods for creating said sentinel objects.\n */\n// tslint:disable-next-line:class-as-namespace  We use this as a base class.\nvar FieldValueImpl = /** @class */ (function () {\n    function FieldValueImpl() {\n    }\n    FieldValueImpl.delete = function () {\n        return DeleteFieldValueImpl.instance;\n    };\n    FieldValueImpl.serverTimestamp = function () {\n        return ServerTimestampFieldValueImpl.instance;\n    };\n    FieldValueImpl.prototype.isEqual = function (other) {\n        return this === other;\n    };\n    return FieldValueImpl;\n}());\nexport { FieldValueImpl };\nvar DeleteFieldValueImpl = /** @class */ (function (_super) {\n    __extends(DeleteFieldValueImpl, _super);\n    function DeleteFieldValueImpl() {\n        return _super.call(this) || this;\n    }\n    /** Singleton instance. */\n    DeleteFieldValueImpl.instance = new DeleteFieldValueImpl();\n    return DeleteFieldValueImpl;\n}(FieldValueImpl));\nexport { DeleteFieldValueImpl };\nvar ServerTimestampFieldValueImpl = /** @class */ (function (_super) {\n    __extends(ServerTimestampFieldValueImpl, _super);\n    function ServerTimestampFieldValueImpl() {\n        return _super.call(this) || this;\n    }\n    /** Singleton instance. */\n    ServerTimestampFieldValueImpl.instance = new ServerTimestampFieldValueImpl();\n    return ServerTimestampFieldValueImpl;\n}(FieldValueImpl));\nexport { ServerTimestampFieldValueImpl };\n// Public instance that disallows construction at runtime. This constructor is\n// used when exporting FieldValueImpl on firebase.firestore.FieldValue and will\n// be called FieldValue publicly. Internally we still use FieldValueImpl which\n// has a type-checked private constructor. Note that FieldValueImpl and\n// PublicFieldValue can be used interchangeably in instanceof checks.\n// For our internal TypeScript code PublicFieldValue doesn't exist as a type,\n// and so we need to use FieldValueImpl as type and export it too.\n// tslint:disable-next-line:variable-name  We treat this as a class name.\nexport var PublicFieldValue = makeConstructorPrivate(FieldValueImpl, 'Use FieldValue.<field>() instead.');\n\n//# sourceMappingURL=field_value.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/api/field_value.js\n// module id = 211\n// module chunks = 5","import * as React from 'react';\nimport * as moment from 'moment';\n\nimport * as firebase from '../../../data/firebase';\n\ninterface GithubContribution {\n  id: string;\n  repo: string;\n  isFork: boolean;\n  isPrivate: boolean;\n  issueCount: {\n    total: number;\n    authored: number;\n  };\n  commitsCount: {\n    total: number;\n    authored: number;\n  };\n  pullRequestCount: {\n    total: {\n      open: number;\n      merged: number;\n    };\n    authored: {\n      open: number;\n      merged: number;\n    };\n  };\n}\n\ninterface Contributions {\n  [kind: string]: GithubContribution[];\n}\n\ninterface ContributionSummary {\n  repo: string;\n  commits: number;\n  pullRequests: number;\n  issues: number;\n}\n\ninterface Meta {\n  date: Date;\n}\n\nconst GithubContributionsStats = firebase.withCollection(\n  class GithubContributions extends React.Component<\n    firebase.FirestoreComponentProps<GithubContribution[]>\n  > {\n    render() {\n      const { data } = this.props;\n\n      const contributions = data\n        ? data.sort((a, b) => a.id.localeCompare(b.id)).reduce(\n            (contributions, contrib) => {\n              const contribKind = contrib.isPrivate ? 'private' : 'public';\n              const contribs = contributions[contribKind];\n              if (contribs) {\n                contribs.push(contrib);\n              } else {\n                contributions[contribKind] = [contrib];\n              }\n              return contributions;\n            },\n            {} as Contributions,\n          )\n        : {};\n\n      return (\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            {Object.keys(contributions).map(kind => {\n              const contribs = contributions[kind];\n              return (\n                <div key={`contributions-${kind}`} className=\"col-sm text-center\">\n                  {kind === 'public' ? 'Public' : 'Private'} contributions :{' '}\n                  <strong className=\"text-success\">{contribs.length}</strong>\n                </div>\n              );\n            })}\n          </div>\n          <hr />\n          <div className=\"row\">\n            <section className=\"container-fluid\">\n              <div className=\"text-center\">\n                <h4>Public contributions for all repositories</h4>\n              </div>\n              <div className=\"card-deck mx-auto\">\n                {(contributions['public'] || [])\n                  .reduce(\n                    (\n                      summary: ContributionSummary[],\n                      contribution: GithubContribution,\n                    ) => {\n                      const repo = contribution.repo;\n                      const repoSummary = summary.find(s => s.repo === contribution.repo);\n                      if (repoSummary) {\n                        repoSummary.issues += contribution.issueCount.authored;\n                        repoSummary.commits += contribution.commitsCount.authored;\n                        repoSummary.pullRequests +=\n                          contribution.pullRequestCount.authored.open +\n                          contribution.pullRequestCount.authored.merged;\n                      } else {\n                        summary.push({\n                          repo,\n                          commits: contribution.commitsCount.authored,\n                          issues: contribution.issueCount.authored,\n                          pullRequests:\n                            contribution.pullRequestCount.authored.open +\n                            contribution.pullRequestCount.authored.merged,\n                        });\n                      }\n                      return summary;\n                    },\n                    [] as ContributionSummary[],\n                  )\n                  .filter(\n                    repoSummary =>\n                      repoSummary.commits > 0 &&\n                      repoSummary.issues > 0 &&\n                      repoSummary.pullRequests > 0,\n                  )\n                  .map(repoSummary => (\n                    <div key={repoSummary.repo} className=\"col-sm-6\">\n                      <div className=\"card\">\n                        <div className=\"card-header text-center\">\n                          <h5 className=\"card-title\">{repoSummary.repo}</h5>\n                        </div>\n                        <div className=\"card-body text-justify\">\n                          <div className=\"card-text\">\n                            <ul className=\"list-group list-group-flush\">\n                              <li className=\"list-group-item\">\n                                Commits:{' '}\n                                <span className=\"badge badge-pill badge-dark\">\n                                  {repoSummary.commits}\n                                </span>\n                              </li>\n                              <li className=\"list-group-item\">\n                                Issues:{' '}\n                                <span className=\"badge badge-pill badge-dark\">\n                                  {repoSummary.issues}\n                                </span>\n                              </li>\n                              <li className=\"list-group-item\">\n                                Pull requests:{' '}\n                                <span className=\"badge badge-pill badge-dark\">\n                                  {repoSummary.pullRequests}\n                                </span>\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </section>\n          </div>\n        </div>\n      );\n    }\n  },\n  db =>\n    db\n      .collection('contribution')\n      .where('platform', '==', 'github')\n      .orderBy('until', 'desc'),\n  doc => ({\n    id: doc.id,\n    repo: doc.data()['repo'],\n    isFork: doc.data()['is_fork'],\n    isPrivate: doc.data()['is_private'],\n    issueCount: {\n      total: doc.data()['issues_count']['total'],\n      authored: doc.data()['issues_count']['authored'],\n    },\n    commitsCount: {\n      total: doc.data()['commits_count']['total'],\n      authored: doc.data()['commits_count']['authored'],\n    },\n    pullRequestCount: {\n      total: {\n        open: doc.data()['pull_request_count']['total']['open'],\n        merged: doc.data()['pull_request_count']['total']['merged'],\n      },\n      authored: {\n        open: doc.data()['pull_request_count']['authored']['open'],\n        merged: doc.data()['pull_request_count']['authored']['merged'],\n      },\n    },\n  }),\n);\n\nconst Meta = firebase.withDocument(\n  class ContributionMeta extends React.Component<firebase.FirestoreComponentProps<Meta>> {\n    render() {\n      const { data } = this.props;\n      return data ? (\n        <div className=\"text-center\">\n          <h4>Last run : {`${moment(data.date).format('DD-MM-YYYY')}`}</h4>\n        </div>\n      ) : null;\n    }\n  },\n  db => db.collection('meta').doc('last_run'),\n  doc => ({\n    id: doc.id,\n    date: doc.data()['date'],\n  }),\n);\n\nexport default class GithubStats extends React.Component<any, any> {\n  public render() {\n    return (\n      <div className=\"github\">\n        <Meta />\n        <hr />\n        <GithubContributionsStats />\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/stats/pages/stats_github.tsx","import * as React from 'react';\n\nimport * as firebase from 'firebase/app';\nimport * as firestore from './store';\n\n/**\n * Remove the variants of the second union of string literals from\n * the first.\n *\n * @see https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-307871458\n */\ntype Diff<T extends string, U extends string> = ({ [P in T]: P } &\n  { [P in U]: never } & { [x: string]: never })[T];\n\n/**\n * Drop keys `K` from `T`.\n *\n * @see https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-307871458\n */\ntype Omit<T, K extends keyof T> = Pick<T, Diff<keyof T, K>>;\n\nexport interface FirestoreComponentProps<T> {\n  data?: T;\n}\n\nexport function withDocument<T, P extends FirestoreComponentProps<T>>(\n  Comp: React.ComponentClass<P> | React.StatelessComponent<P>,\n  query: (db: firebase.firestore.Firestore) => firebase.firestore.DocumentReference,\n  transform: (data: firebase.firestore.DocumentSnapshot) => T,\n): React.ComponentClass<Omit<P, keyof FirestoreComponentProps<T>>> {\n  interface LocalState {\n    db: firestore.Firestore;\n    updateListener?: () => void;\n    data?: T;\n  }\n\n  class WithFirestoreComponent extends React.Component<\n    Omit<P, keyof FirestoreComponentProps<T>>,\n    LocalState\n  > {\n    constructor(props: Omit<P, keyof FirestoreComponentProps<T>>) {\n      super(props);\n      this.state = {\n        db: firestore.ref(),\n      };\n    }\n\n    componentWillMount() {\n      const { db } = this.state;\n      switch (db.kind) {\n        case firestore.Status.OK:\n          this.setState({\n            updateListener: query(db.ref).onSnapshot(snapshot => {\n              this.setState({\n                data: transform(snapshot),\n              });\n            }),\n          });\n        case firestore.Status.Err:\n          return;\n      }\n    }\n\n    componentWillUnmount() {\n      const { updateListener } = this.state;\n      updateListener && updateListener();\n    }\n\n    render() {\n      const { data } = this.state;\n      return <Comp data={data} {...this.props} />;\n    }\n  }\n\n  return WithFirestoreComponent;\n}\n\nexport function withCollection<T, P extends FirestoreComponentProps<T[]>>(\n  Comp: React.ComponentClass<P> | React.StatelessComponent<P>,\n  query: (db: firebase.firestore.Firestore) => firebase.firestore.Query,\n  transform: (data: firebase.firestore.DocumentData) => T,\n): React.ComponentClass<Omit<P, keyof FirestoreComponentProps<T[]>>> {\n  interface LocalState {\n    db: firestore.Firestore;\n    updateListener?: () => void;\n    data?: T[];\n  }\n\n  class WithFirestoreComponent extends React.Component<\n    Omit<P, keyof FirestoreComponentProps<T>>,\n    LocalState\n  > {\n    constructor(props: Omit<P, keyof FirestoreComponentProps<T>>) {\n      super(props);\n      this.state = {\n        db: firestore.ref(),\n      };\n    }\n\n    componentWillMount() {\n      const { db } = this.state;\n      switch (db.kind) {\n        case firestore.Status.OK:\n          this.setState({\n            updateListener: query(db.ref).onSnapshot(snapshot => {\n              this.setState({\n                data: snapshot.docs.map(doc => transform(doc)),\n              });\n            }),\n          });\n        case firestore.Status.Err:\n          return;\n      }\n    }\n\n    componentWillUnmount() {\n      const { updateListener } = this.state;\n      updateListener && updateListener();\n    }\n\n    render() {\n      const { data } = this.state;\n      return <Comp data={data} {...this.props} />;\n    }\n  }\n\n  return WithFirestoreComponent;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/firebase.tsx","import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst app = firebase.initializeApp(\n  {\n    apiKey: process.env.REACT_APP_FIRESTORE_API_KEY,\n    messagingSenderId: process.env.REACT_APP_FIRESTORE_SENDER_ID,\n    authDomain: `${process.env.REACT_APP_FIRESTORE_PROJECT_ID}.firebaseapp.com`,\n    databaseURL: `https://${process.env.REACT_APP_FIRESTORE_PROJECT_ID}.firebaseio.com`,\n    projectId: process.env.REACT_APP_FIRESTORE_PROJECT_ID,\n    storageBucket: `${process.env.REACT_APP_FIRESTORE_PROJECT_ID}.appspot.com`,\n  },\n  process.env.REACT_APP_FIRESTORE_PROJECT_ID,\n);\n\nexport const enum Status {\n  OK,\n  Err,\n}\n\ninterface OKFirestore {\n  kind: Status.OK;\n  ref: firebase.firestore.Firestore;\n}\n\ninterface ErrFirestore {\n  kind: Status.Err;\n  message: string;\n}\n\nexport type Firestore = OKFirestore | ErrFirestore;\n\nexport const ref = (): Firestore => {\n  if (app && app.firestore) {\n    return {\n      kind: Status.OK,\n      ref: app.firestore(),\n    };\n  }\n  return {\n    kind: Status.Err,\n    message: 'Failed to initialize Firestore',\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/store.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/polyfill');\nmodule.exports = require('@firebase/app').default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/firebase/app/index.js\n// module id = 254\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport './src/polyfills/promise';\nimport './src/shims/find';\nimport './src/shims/findIndex';\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/dist/esm/index.js\n// module id = 255\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __global = (function () {\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    throw new Error('unable to locate global object');\n})();\n// Polyfill Promise\nif (typeof Promise === 'undefined') {\n    // HACK: TS throws an error if I attempt to use 'dot-notation'\n    __global['Promise'] = Promise = require('promise-polyfill');\n}\n\n//# sourceMappingURL=promise.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/dist/esm/src/polyfills/promise.js\n// module id = 256\n// module chunks = 5","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    return new Promise(function (resolve, reject) {\n      if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');\n      var args = Array.prototype.slice.call(arr);\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise-polyfill/promise.js\n// module id = 257\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * This is the Array.prototype.find polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * https://tc39.github.io/ecma262/#sec-array.prototype.find\n */\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function (predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return undefined.\n            return undefined;\n        }\n    });\n}\n\n//# sourceMappingURL=find.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/dist/esm/src/shims/find.js\n// module id = 258\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * This is the Array.prototype.findIndex polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n * https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n */\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function (predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return -1.\n            return -1;\n        }\n    });\n}\n\n//# sourceMappingURL=findIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/dist/esm/src/shims/findIndex.js\n// module id = 259\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createSubscribe, deepCopy, deepExtend, ErrorFactory, patchProperty } from '@firebase/util';\nvar contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n// An array to capture listeners before the true auth functions\n// exist\nvar tokenListeners = [];\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nvar FirebaseAppImpl = /** @class */ (function () {\n    function FirebaseAppImpl(options, name, firebase_) {\n        this.firebase_ = firebase_;\n        this.isDeleted_ = false;\n        this.services_ = {};\n        this.name_ = name;\n        this.options_ = deepCopy(options);\n        this.INTERNAL = {\n            getUid: function () { return null; },\n            getToken: function () { return Promise.resolve(null); },\n            addAuthTokenListener: function (callback) {\n                tokenListeners.push(callback);\n                // Make sure callback is called, asynchronously, in the absence of the auth module\n                setTimeout(function () { return callback(null); }, 0);\n            },\n            removeAuthTokenListener: function (callback) {\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\n            }\n        };\n    }\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.options_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAppImpl.prototype.delete = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.checkDestroyed_();\n            resolve();\n        })\n            .then(function () {\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\n            var services = [];\n            Object.keys(_this.services_).forEach(function (serviceKey) {\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n                    services.push(_this.services_[serviceKey][instanceKey]);\n                });\n            });\n            return Promise.all(services.map(function (service) {\n                return service.INTERNAL.delete();\n            }));\n        })\n            .then(function () {\n            _this.isDeleted_ = true;\n            _this.services_ = {};\n        });\n    };\n    /**\n     * Return a service instance associated with this app (creating it\n     * on demand), identified by the passed instanceIdentifier.\n     *\n     * NOTE: Currently storage is the only one that is leveraging this\n     * functionality. They invoke it by calling:\n     *\n     * ```javascript\n     * firebase.app().storage('STORAGE BUCKET ID')\n     * ```\n     *\n     * The service name is passed to this already\n     * @internal\n     */\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\n        this.checkDestroyed_();\n        if (!this.services_[name]) {\n            this.services_[name] = {};\n        }\n        if (!this.services_[name][instanceIdentifier]) {\n            /**\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\n             * then we will pass that instance on, otherwise we pass `null`\n             */\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\n                ? instanceIdentifier\n                : undefined;\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n            this.services_[name][instanceIdentifier] = service;\n        }\n        return this.services_[name][instanceIdentifier];\n    };\n    /**\n     * Callback function used to extend an App instance at the time\n     * of service instance creation.\n     */\n    FirebaseAppImpl.prototype.extendApp = function (props) {\n        var _this = this;\n        // Copy the object onto the FirebaseAppImpl prototype\n        deepExtend(this, props);\n        /**\n         * If the app has overwritten the addAuthTokenListener stub, forward\n         * the active token listeners on to the true fxn.\n         *\n         * TODO: This function is required due to our current module\n         * structure. Once we are able to rely strictly upon a single module\n         * implementation, this code should be refactored and Auth should\n         * provide these stubs and the upgrade logic\n         */\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n            tokenListeners.forEach(function (listener) {\n                _this.INTERNAL.addAuthTokenListener(listener);\n            });\n            tokenListeners = [];\n        }\n    };\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            error('app-deleted', { name: this.name_ });\n        }\n    };\n    return FirebaseAppImpl;\n}());\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n    FirebaseAppImpl.prototype.delete ||\n    console.log('dc');\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace() {\n    var apps_ = {};\n    var factories = {};\n    var appHooks = {};\n    // A namespace is a plain JavaScript Object.\n    var namespace = {\n        // Hack to prevent Babel from modifying the object returned\n        // as the firebase namespace.\n        __esModule: true,\n        initializeApp: initializeApp,\n        app: app,\n        apps: null,\n        Promise: Promise,\n        SDK_VERSION: '4.9.0',\n        INTERNAL: {\n            registerService: registerService,\n            createFirebaseNamespace: createFirebaseNamespace,\n            extendNamespace: extendNamespace,\n            createSubscribe: createSubscribe,\n            ErrorFactory: ErrorFactory,\n            removeApp: removeApp,\n            factories: factories,\n            useAsService: useAsService,\n            Promise: Promise,\n            deepExtend: deepExtend\n        }\n    };\n    // Inject a circular default export to allow Babel users who were previously\n    // using:\n    //\n    //   import firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase').default;\n    //\n    // instead of\n    //\n    //   import * as firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase');\n    patchProperty(namespace, 'default', namespace);\n    // firebase.apps is a read-only getter.\n    Object.defineProperty(namespace, 'apps', {\n        get: getApps\n    });\n    /**\n     * Called by App.delete() - but before any services associated with the App\n     * are deleted.\n     */\n    function removeApp(name) {\n        var app = apps_[name];\n        callAppHooks(app, 'delete');\n        delete apps_[name];\n    }\n    /**\n     * Get the App object for a given name (or DEFAULT).\n     */\n    function app(name) {\n        name = name || DEFAULT_ENTRY_NAME;\n        if (!contains(apps_, name)) {\n            error('no-app', { name: name });\n        }\n        return apps_[name];\n    }\n    patchProperty(app, 'App', FirebaseAppImpl);\n    /**\n     * Create a new App instance (name must be unique).\n     */\n    function initializeApp(options, name) {\n        if (name === undefined) {\n            name = DEFAULT_ENTRY_NAME;\n        }\n        else {\n            if (typeof name !== 'string' || name === '') {\n                error('bad-app-name', { name: name + '' });\n            }\n        }\n        if (contains(apps_, name)) {\n            error('duplicate-app', { name: name });\n        }\n        var app = new FirebaseAppImpl(options, name, namespace);\n        apps_[name] = app;\n        callAppHooks(app, 'create');\n        return app;\n    }\n    /*\n     * Return an array of all the non-deleted FirebaseApps.\n     */\n    function getApps() {\n        // Make a copy so caller cannot mutate the apps list.\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\n    }\n    /*\n     * Register a Firebase Service.\n     *\n     * firebase.INTERNAL.registerService()\n     *\n     * TODO: Implement serviceProperties.\n     */\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n        // Cannot re-register a service that already exists\n        if (factories[name]) {\n            error('duplicate-service', { name: name });\n        }\n        // Capture the service factory for later service instantiation\n        factories[name] = createService;\n        // Capture the appHook, if passed\n        if (appHook) {\n            appHooks[name] = appHook;\n            // Run the **new** app hook on all existing apps\n            getApps().forEach(function (app) {\n                appHook('create', app);\n            });\n        }\n        // The Service namespace is an accessor function ...\n        var serviceNamespace = function (appArg) {\n            if (appArg === void 0) { appArg = app(); }\n            if (typeof appArg[name] !== 'function') {\n                // Invalid argument.\n                // This happens in the following case: firebase.storage('gs:/')\n                error('invalid-app-argument', { name: name });\n            }\n            // Forward service instance lookup to the FirebaseApp.\n            return appArg[name]();\n        };\n        // ... and a container for service-level properties.\n        if (serviceProperties !== undefined) {\n            deepExtend(serviceNamespace, serviceProperties);\n        }\n        // Monkey-patch the serviceNamespace onto the firebase namespace\n        namespace[name] = serviceNamespace;\n        // Patch the FirebaseAppImpl prototype\n        FirebaseAppImpl.prototype[name] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var serviceFxn = this._getService.bind(this, name);\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n        };\n        return serviceNamespace;\n    }\n    /**\n     * Patch the top-level firebase namespace with additional properties.\n     *\n     * firebase.INTERNAL.extendNamespace()\n     */\n    function extendNamespace(props) {\n        deepExtend(namespace, props);\n    }\n    function callAppHooks(app, eventName) {\n        Object.keys(factories).forEach(function (serviceName) {\n            // Ignore virtual services\n            var factoryName = useAsService(app, serviceName);\n            if (factoryName === null) {\n                return;\n            }\n            if (appHooks[factoryName]) {\n                appHooks[factoryName](eventName, app);\n            }\n        });\n    }\n    // Map the requested service to a registered service name\n    // (used to map auth to serverAuth service when needed).\n    function useAsService(app, name) {\n        if (name === 'serverAuth') {\n            return null;\n        }\n        var useService = name;\n        var options = app.options;\n        return useService;\n    }\n    return namespace;\n}\nfunction error(code, args) {\n    throw appErrors.create(code, args);\n}\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nvar errors = {\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\n        'call Firebase App.initializeApp()',\n    'bad-app-name': \"Illegal App name: '{$name}\",\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\n        'account is only allowed in a Node.js environment. On client ' +\n        'devices, you should instead initialize the SDK with an api key and ' +\n        'auth domain',\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\n        'Firebase App instance.'\n};\nvar appErrors = new ErrorFactory('app', 'Firebase', errors);\n\n\n//# sourceMappingURL=firebaseApp.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/esm/src/firebaseApp.js\n// module id = 260\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/assert\"));\n__export(require(\"./src/crypt\"));\n__export(require(\"./src/constants\"));\n__export(require(\"./src/deepCopy\"));\n__export(require(\"./src/deferred\"));\n__export(require(\"./src/environment\"));\n__export(require(\"./src/errors\"));\n__export(require(\"./src/json\"));\n__export(require(\"./src/jwt\"));\n__export(require(\"./src/obj\"));\n__export(require(\"./src/query\"));\n__export(require(\"./src/sha1\"));\n__export(require(\"./src/subscribe\"));\n__export(require(\"./src/validation\"));\n__export(require(\"./src/utf8\"));\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/index.js\n// module id = 261\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\nexports.deepCopy = deepCopy;\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!source.hasOwnProperty(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\nexports.deepExtend = deepExtend;\n// TODO: Really needed (for JSCompiler type checking)?\nfunction patchProperty(obj, prop, value) {\n    obj[prop] = value;\n}\nexports.patchProperty = patchProperty;\n\n//# sourceMappingURL=deepCopy.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/deepCopy.js\n// module id = 262\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    /**\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\n     * @return {!function(?(Error), ?=)}\n     */\n    Deferred.prototype.wrapCallback = function (callback) {\n        var _this = this;\n        return function (error, value) {\n            if (error) {\n                _this.reject(error);\n            }\n            else {\n                _this.resolve(value);\n            }\n            if (typeof callback === 'function') {\n                // Attaching noop handler just in case developer wasn't expecting\n                // promises\n                _this.promise.catch(function () { });\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (callback.length === 1) {\n                    callback(error);\n                }\n                else {\n                    callback(error, value);\n                }\n            }\n        };\n    };\n    return Deferred;\n}());\nexports.Deferred = Deferred;\n\n//# sourceMappingURL=deferred.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/deferred.js\n// module id = 263\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nexports.getUA = function () {\n    if (typeof navigator !== 'undefined' &&\n        typeof navigator['userAgent'] === 'string') {\n        return navigator['userAgent'];\n    }\n    else {\n        return '';\n    }\n};\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nexports.isMobileCordova = function () {\n    return (typeof window !== 'undefined' &&\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(exports.getUA()));\n};\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nexports.isReactNative = function () {\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\n};\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nexports.isNodeSdk = function () {\n    return constants_1.CONSTANTS.NODE_CLIENT === true || constants_1.CONSTANTS.NODE_ADMIN === true;\n};\n\n//# sourceMappingURL=environment.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/environment.js\n// module id = 264\n// module chunks = 5","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERROR_NAME = 'FirebaseError';\nvar captureStackTrace = Error\n    .captureStackTrace;\n// Export for faking in tests\nfunction patchCapture(captureFake) {\n    var result = captureStackTrace;\n    captureStackTrace = captureFake;\n    return result;\n}\nexports.patchCapture = patchCapture;\nvar FirebaseError = /** @class */ (function () {\n    function FirebaseError(code, message) {\n        this.code = code;\n        this.message = message;\n        var stack;\n        // We want the stack value, if implemented by Error\n        if (captureStackTrace) {\n            // Patches this.stack, omitted calls above ErrorFactory#create\n            captureStackTrace(this, ErrorFactory.prototype.create);\n        }\n        else {\n            var err_1 = Error.apply(this, arguments);\n            this.name = ERROR_NAME;\n            // Make non-enumerable getter for the property.\n            Object.defineProperty(this, 'stack', {\n                get: function () {\n                    return err_1.stack;\n                }\n            });\n        }\n    }\n    return FirebaseError;\n}());\nexports.FirebaseError = FirebaseError;\n// Back-door inheritance\nFirebaseError.prototype = Object.create(Error.prototype);\nFirebaseError.prototype.constructor = FirebaseError;\nFirebaseError.prototype.name = ERROR_NAME;\nvar ErrorFactory = /** @class */ (function () {\n    function ErrorFactory(service, serviceName, errors) {\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n        // Matches {$name}, by default.\n        this.pattern = /\\{\\$([^}]+)}/g;\n        // empty\n    }\n    ErrorFactory.prototype.create = function (code, data) {\n        if (data === undefined) {\n            data = {};\n        }\n        var template = this.errors[code];\n        var fullCode = this.service + '/' + code;\n        var message;\n        if (template === undefined) {\n            message = 'Error';\n        }\n        else {\n            message = template.replace(this.pattern, function (match, key) {\n                var value = data[key];\n                return value !== undefined ? value.toString() : '<' + key + '?>';\n            });\n        }\n        // Service: Error message (service/code).\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\n        var err = new FirebaseError(fullCode, message);\n        // Populate the Error object with message parts for programmatic\n        // accesses (e.g., e.file).\n        for (var prop in data) {\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\n                continue;\n            }\n            err[prop] = data[prop];\n        }\n        return err;\n    };\n    return ErrorFactory;\n}());\nexports.ErrorFactory = ErrorFactory;\n\n//# sourceMappingURL=errors.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/errors.js\n// module id = 265\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypt_1 = require(\"./crypt\");\nvar json_1 = require(\"./json\");\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {{header: *, claims: *, data: *, signature: string}}\n */\nexports.decode = function (token) {\n    var header = {}, claims = {}, data = {}, signature = '';\n    try {\n        var parts = token.split('.');\n        header = json_1.jsonEval(crypt_1.base64Decode(parts[0]) || '');\n        claims = json_1.jsonEval(crypt_1.base64Decode(parts[1]) || '');\n        signature = parts[2];\n        data = claims['d'] || {};\n        delete claims['d'];\n    }\n    catch (e) { }\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isValidTimestamp = function (token) {\n    var claims = exports.decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\n    if (typeof claims === 'object') {\n        if (claims.hasOwnProperty('nbf')) {\n            validSince = claims['nbf'];\n        }\n        else if (claims.hasOwnProperty('iat')) {\n            validSince = claims['iat'];\n        }\n        if (claims.hasOwnProperty('exp')) {\n            validUntil = claims['exp'];\n        }\n        else {\n            // token will expire after 24h by default\n            validUntil = validSince + 86400;\n        }\n    }\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\n};\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {?number}\n */\nexports.issuedAtTime = function (token) {\n    var claims = exports.decode(token).claims;\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n        return claims['iat'];\n    }\n    return null;\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\n * signature.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isValidFormat = function (token) {\n    var decoded = exports.decode(token), claims = decoded.claims;\n    return (!!decoded.signature &&\n        !!claims &&\n        typeof claims === 'object' &&\n        claims.hasOwnProperty('iat'));\n};\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isAdmin = function (token) {\n    var claims = exports.decode(token).claims;\n    return typeof claims === 'object' && claims['admin'] === true;\n};\n\n//# sourceMappingURL=jwt.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/jwt.js\n// module id = 266\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar obj_1 = require(\"./obj\");\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nexports.querystring = function (querystringParams) {\n    var params = [];\n    obj_1.forEach(querystringParams, function (key, value) {\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayVal) {\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n            });\n        }\n        else {\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        }\n    });\n    return params.length ? '&' + params.join('&') : '';\n};\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\nexports.querystringDecode = function (querystring) {\n    var obj = {};\n    var tokens = querystring.replace(/^\\?/, '').split('&');\n    tokens.forEach(function (token) {\n        if (token) {\n            var key = token.split('=');\n            obj[key[0]] = key[1];\n        }\n    });\n    return obj;\n};\n\n//# sourceMappingURL=query.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/query.js\n// module id = 267\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_1 = require(\"./hash\");\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @extends {Hash}\n * @final\n * @struct\n */\nvar Sha1 = /** @class */ (function (_super) {\n    __extends(Sha1, _super);\n    function Sha1() {\n        var _this = _super.call(this) || this;\n        /**\n         * Holds the previous values of accumulated variables a-e in the compress_\n         * function.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.chain_ = [];\n        /**\n         * A buffer holding the partially computed hash result.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.buf_ = [];\n        /**\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n         * as the message schedule in the docs.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.W_ = [];\n        /**\n         * Contains data needed to pad messages less than 64 bytes.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.pad_ = [];\n        /**\n         * @private {number}\n         */\n        _this.inbuf_ = 0;\n        /**\n         * @private {number}\n         */\n        _this.total_ = 0;\n        _this.blockSize = 512 / 8;\n        _this.pad_[0] = 128;\n        for (var i = 1; i < _this.blockSize; ++i) {\n            _this.pad_[i] = 0;\n        }\n        _this.reset();\n        return _this;\n    }\n    Sha1.prototype.reset = function () {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    };\n    /**\n     * Internal compress helper function.\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\n     * @param {number=} opt_offset Offset of the block in the buffer.\n     * @private\n     */\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\n        if (!opt_offset) {\n            opt_offset = 0;\n        }\n        var W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (var i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] =\n                    (buf.charCodeAt(opt_offset) << 24) |\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\n                        buf.charCodeAt(opt_offset + 3);\n                opt_offset += 4;\n            }\n        }\n        else {\n            for (var i = 0; i < 16; i++) {\n                W[i] =\n                    (buf[opt_offset] << 24) |\n                        (buf[opt_offset + 1] << 16) |\n                        (buf[opt_offset + 2] << 8) |\n                        buf[opt_offset + 3];\n                opt_offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (var i = 16; i < 80; i++) {\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n        }\n        var a = this.chain_[0];\n        var b = this.chain_[1];\n        var c = this.chain_[2];\n        var d = this.chain_[3];\n        var e = this.chain_[4];\n        var f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (var i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ (b & (c ^ d));\n                    k = 0x5a827999;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            }\n            else {\n                if (i < 60) {\n                    f = (b & c) | (d & (b | c));\n                    k = 0x8f1bbcdc;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n            e = d;\n            d = c;\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n    };\n    Sha1.prototype.update = function (bytes, opt_length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (opt_length === undefined) {\n            opt_length = bytes.length;\n        }\n        var lengthMinusBlock = opt_length - this.blockSize;\n        var n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        var buf = this.buf_;\n        var inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < opt_length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf == 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n            else {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += opt_length;\n    };\n    /** @override */\n    Sha1.prototype.digest = function () {\n        var digest = [];\n        var totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        }\n        else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (var i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        var n = 0;\n        for (var i = 0; i < 5; i++) {\n            for (var j = 24; j >= 0; j -= 8) {\n                digest[n] = (this.chain_[i] >> j) & 255;\n                ++n;\n            }\n        }\n        return digest;\n    };\n    return Sha1;\n}(hash_1.Hash));\nexports.Sha1 = Sha1;\n\n//# sourceMappingURL=sha1.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/sha1.js\n// module id = 268\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See Sha1 and Md5 for sample implementations.\n *\n */\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        /**\n         * The block size for the hasher.\n         * @type {number}\n         */\n        this.blockSize = -1;\n    }\n    return Hash;\n}());\nexports.Hash = Hash;\n\n//# sourceMappingURL=hash.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/hash.js\n// module id = 269\n// module chunks = 5","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nfunction createSubscribe(executor, onNoObservers) {\n    var proxy = new ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\nexports.createSubscribe = createSubscribe;\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nvar ObserverProxy = /** @class */ (function () {\n    /**\n     * @param executor Function which can make calls to a single Observer\n     *     as a proxy.\n     * @param onNoObservers Callback when count of Observers goes to zero.\n     */\n    function ObserverProxy(executor, onNoObservers) {\n        var _this = this;\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = Promise.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task\n            .then(function () {\n            executor(_this);\n        })\n            .catch(function (e) {\n            _this.error(e);\n        });\n    }\n    ObserverProxy.prototype.next = function (value) {\n        this.forEachObserver(function (observer) {\n            observer.next(value);\n        });\n    };\n    ObserverProxy.prototype.error = function (error) {\n        this.forEachObserver(function (observer) {\n            observer.error(error);\n        });\n        this.close(error);\n    };\n    ObserverProxy.prototype.complete = function () {\n        this.forEachObserver(function (observer) {\n            observer.complete();\n        });\n        this.close();\n    };\n    /**\n     * Subscribe function that can be used to add an Observer to the fan-out list.\n     *\n     * - We require that no event is sent to a subscriber sychronously to their\n     *   call to subscribe().\n     */\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\n        var _this = this;\n        var observer;\n        if (nextOrObserver === undefined &&\n            error === undefined &&\n            complete === undefined) {\n            throw new Error('Missing Observer.');\n        }\n        // Assemble an Observer object when passed as callback functions.\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n            observer = nextOrObserver;\n        }\n        else {\n            observer = {\n                next: nextOrObserver,\n                error: error,\n                complete: complete\n            };\n        }\n        if (observer.next === undefined) {\n            observer.next = noop;\n        }\n        if (observer.error === undefined) {\n            observer.error = noop;\n        }\n        if (observer.complete === undefined) {\n            observer.complete = noop;\n        }\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) {\n            this.task.then(function () {\n                try {\n                    if (_this.finalError) {\n                        observer.error(_this.finalError);\n                    }\n                    else {\n                        observer.complete();\n                    }\n                }\n                catch (e) {\n                    // nothing\n                }\n                return;\n            });\n        }\n        this.observers.push(observer);\n        return unsub;\n    };\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\n        if (this.observers === undefined || this.observers[i] === undefined) {\n            return;\n        }\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n            this.onNoObservers(this);\n        }\n    };\n    ObserverProxy.prototype.forEachObserver = function (fn) {\n        if (this.finalized) {\n            // Already closed by previous event....just eat the additional values.\n            return;\n        }\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for (var i = 0; i < this.observers.length; i++) {\n            this.sendOne(i, fn);\n        }\n    };\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    ObserverProxy.prototype.sendOne = function (i, fn) {\n        var _this = this;\n        // Execute the callback asynchronously\n        this.task.then(function () {\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\n                try {\n                    fn(_this.observers[i]);\n                }\n                catch (e) {\n                    // Ignore exceptions raised in Observers or missing methods of an\n                    // Observer.\n                    // Log error to console. b/31404806\n                    if (typeof console !== 'undefined' && console.error) {\n                        console.error(e);\n                    }\n                }\n            }\n        });\n    };\n    ObserverProxy.prototype.close = function (err) {\n        var _this = this;\n        if (this.finalized) {\n            return;\n        }\n        this.finalized = true;\n        if (err !== undefined) {\n            this.finalError = err;\n        }\n        // Proxy is no longer needed - garbage collect references\n        this.task.then(function () {\n            _this.observers = undefined;\n            _this.onNoObservers = undefined;\n        });\n    };\n    return ObserverProxy;\n}());\n/** Turn synchronous function into one called asynchronously. */\nfunction async(fn, onError) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        Promise.resolve(true)\n            .then(function () {\n            fn.apply(void 0, args);\n        })\n            .catch(function (error) {\n            if (onError) {\n                onError(error);\n            }\n        });\n    };\n}\nexports.async = async;\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in obj && typeof obj[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction noop() {\n    // do nothing\n}\n\n//# sourceMappingURL=subscribe.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/subscribe.js\n// module id = 270\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param {!string} fnName The function name\n * @param {!number} minCount The minimum number of arguments to allow for the function call\n * @param {!number} maxCount The maximum number of argument to allow for the function call\n * @param {!number} argCount The actual number of arguments provided.\n */\nexports.validateArgCount = function (fnName, minCount, maxCount, argCount) {\n    var argError;\n    if (argCount < minCount) {\n        argError = 'at least ' + minCount;\n    }\n    else if (argCount > maxCount) {\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n    }\n    if (argError) {\n        var error = fnName +\n            ' failed: Was called with ' +\n            argCount +\n            (argCount === 1 ? ' argument.' : ' arguments.') +\n            ' Expects ' +\n            argError +\n            '.';\n        throw new Error(error);\n    }\n};\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param {!string} fnName The function name\n * @param {!number} argumentNumber The index of the argument\n * @param {boolean} optional Whether or not the argument is optional\n * @return {!string} The prefix to add to the error thrown for validation.\n */\nfunction errorPrefix(fnName, argumentNumber, optional) {\n    var argName = '';\n    switch (argumentNumber) {\n        case 1:\n            argName = optional ? 'first' : 'First';\n            break;\n        case 2:\n            argName = optional ? 'second' : 'Second';\n            break;\n        case 3:\n            argName = optional ? 'third' : 'Third';\n            break;\n        case 4:\n            argName = optional ? 'fourth' : 'Fourth';\n            break;\n        default:\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\n    }\n    var error = fnName + ' failed: ';\n    error += argName + ' argument ';\n    return error;\n}\nexports.errorPrefix = errorPrefix;\n/**\n * @param {!string} fnName\n * @param {!number} argumentNumber\n * @param {!string} namespace\n * @param {boolean} optional\n */\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\n    if (optional && !namespace)\n        return;\n    if (typeof namespace !== 'string') {\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid firebase namespace.');\n    }\n}\nexports.validateNamespace = validateNamespace;\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\n    if (optional && !callback)\n        return;\n    if (typeof callback !== 'function')\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid function.');\n}\nexports.validateCallback = validateCallback;\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\n    if (optional && !context)\n        return;\n    if (typeof context !== 'object' || context === null)\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid context object.');\n}\nexports.validateContextObject = validateContextObject;\n\n//# sourceMappingURL=validation.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/validation.js\n// module id = 271\n// module chunks = 5","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert_1 = require(\"./assert\");\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\n * @param {string} str\n * @return {Array}\n */\nexports.stringToByteArray = function (str) {\n    var out = [], p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            var high = c - 0xd800; // the high 10 bits.\n            i++;\n            assert_1.assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if (c < 65536) {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexports.stringLength = function (str) {\n    var p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            p++;\n        }\n        else if (c < 2048) {\n            p += 2;\n        }\n        else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        }\n        else {\n            p += 3;\n        }\n    }\n    return p;\n};\n\n//# sourceMappingURL=utf8.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/utf8.js\n// module id = 272\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('@firebase/firestore');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/firebase/firestore/index.js\n// module id = 273\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport firebase from '@firebase/app';\nimport './src/platform_browser/browser_init';\nimport { configureForFirebase } from './src/platform/config';\nexport function registerFirestore(instance) {\n    configureForFirebase(instance);\n}\nregisterFirestore(firebase);\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/index.js\n// module id = 274\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PlatformSupport } from '../platform/platform';\nimport { BrowserPlatform } from './browser_platform';\n/**\n * This code needs to run before Firestore is used. This can be achieved in\n * several ways:\n *   1) Through the JSCompiler compiling this code and then (automatically)\n *      executing it before exporting the Firestore symbols.\n *   2) Through importing this module first in a Firestore main module\n */\nPlatformSupport.setPlatform(new BrowserPlatform());\n\n//# sourceMappingURL=browser_init.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/platform_browser/browser_init.js\n// module id = 275\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { WebChannelConnection } from './webchannel_connection';\nvar BrowserPlatform = /** @class */ (function () {\n    function BrowserPlatform() {\n        this.emptyByteString = '';\n        this.base64Available = typeof atob !== 'undefined';\n    }\n    BrowserPlatform.prototype.loadConnection = function (databaseInfo) {\n        return Promise.resolve(new WebChannelConnection(databaseInfo));\n    };\n    BrowserPlatform.prototype.newSerializer = function (databaseId) {\n        return new JsonProtoSerializer(databaseId, { useProto3Json: true });\n    };\n    BrowserPlatform.prototype.formatJSON = function (value) {\n        return JSON.stringify(value);\n    };\n    BrowserPlatform.prototype.atob = function (encoded) {\n        return atob(encoded);\n    };\n    BrowserPlatform.prototype.btoa = function (raw) {\n        return btoa(raw);\n    };\n    return BrowserPlatform;\n}());\nexport { BrowserPlatform };\n\n//# sourceMappingURL=browser_platform.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/platform_browser/browser_platform.js\n// module id = 276\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ExistenceFilter = /** @class */ (function () {\n    // TODO(b/33078163): just use simplest form of existence filter for now\n    function ExistenceFilter(count) {\n        this.count = count;\n    }\n    ExistenceFilter.prototype.isEqual = function (other) {\n        return other && other.count === this.count;\n    };\n    return ExistenceFilter;\n}());\nexport { ExistenceFilter };\n\n//# sourceMappingURL=existence_filter.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/existence_filter.js\n// module id = 277\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ErrorCode, EventType, WebChannel, XhrIoPool, createWebChannelTransport } from '@firebase/webchannel-wrapper';\nimport { SDK_VERSION } from '../core/version';\nimport { mapCodeFromHttpStatus, mapCodeFromRpcStatus } from '../remote/rpc_error';\nimport { StreamBridge } from '../remote/stream_bridge';\nimport { assert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport * as log from '../util/log';\nvar LOG_TAG = 'Connection';\nvar RPC_STREAM_SERVICE = 'google.firestore.v1beta1.Firestore';\nvar RPC_URL_VERSION = 'v1beta1';\n/** Maps RPC names to the corresponding REST endpoint name. */\nvar RPC_NAME_REST_MAPPING = {\n    BatchGetDocuments: 'batchGet',\n    Commit: 'commit'\n};\n// TODO(b/38203344): The SDK_VERSION is set independently from Firebase because\n// we are doing out-of-band releases. Once we release as part of Firebase, we\n// should use the Firebase version instead.\nvar X_GOOG_API_CLIENT_VALUE = 'gl-js/ fire/' + SDK_VERSION;\nvar XHR_TIMEOUT_SECS = 15;\nvar WebChannelConnection = /** @class */ (function () {\n    function WebChannelConnection(info) {\n        this.databaseId = info.databaseId;\n        this.pool = new XhrIoPool();\n        var proto = info.ssl ? 'https' : 'http';\n        this.baseUrl = proto + '://' + info.host;\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n    WebChannelConnection.prototype.modifyHeadersForRequest = function (headers, token) {\n        if (token) {\n            for (var header in token.authHeaders) {\n                if (token.authHeaders.hasOwnProperty(header)) {\n                    headers[header] = token.authHeaders[header];\n                }\n            }\n        }\n        headers['X-Goog-Api-Client'] = X_GOOG_API_CLIENT_VALUE;\n        // This header is used to improve routing and project isolation by the\n        // backend.\n        headers['google-cloud-resource-prefix'] =\n            \"projects/\" + this.databaseId.projectId + \"/\" +\n                (\"databases/\" + this.databaseId.database);\n    };\n    WebChannelConnection.prototype.invokeRPC = function (rpcName, request, token) {\n        var _this = this;\n        var url = this.makeUrl(rpcName);\n        return new Promise(function (resolve, reject) {\n            // tslint:disable-next-line:no-any XhrIoPool doesn't have TS typings.\n            _this.pool.getObject(function (xhr) {\n                xhr.listenOnce(EventType.COMPLETE, function () {\n                    try {\n                        switch (xhr.getLastErrorCode()) {\n                            case ErrorCode.NO_ERROR:\n                                var json = xhr.getResponseJson();\n                                log.debug(LOG_TAG, 'XHR received:', JSON.stringify(json));\n                                resolve(json);\n                                break;\n                            case ErrorCode.TIMEOUT:\n                                log.debug(LOG_TAG, 'RPC \"' + rpcName + '\" timed out');\n                                reject(new FirestoreError(Code.DEADLINE_EXCEEDED, 'Request time out'));\n                                break;\n                            case ErrorCode.HTTP_ERROR:\n                                var status_1 = xhr.getStatus();\n                                log.debug(LOG_TAG, 'RPC \"' + rpcName + '\" failed with status:', status_1, 'response text:', xhr.getResponseText());\n                                if (status_1 > 0) {\n                                    reject(new FirestoreError(mapCodeFromHttpStatus(status_1), 'Server responded with status ' + xhr.getStatusText()));\n                                }\n                                else {\n                                    // If we received an HTTP_ERROR but there's no status code,\n                                    // it's most probably a connection issue\n                                    log.debug(LOG_TAG, 'RPC \"' + rpcName + '\" failed');\n                                    reject(new FirestoreError(Code.UNAVAILABLE, 'Connection failed.'));\n                                }\n                                break;\n                            default:\n                                fail('RPC \"' +\n                                    rpcName +\n                                    '\" failed with unanticipated ' +\n                                    'webchannel error ' +\n                                    xhr.getLastErrorCode() +\n                                    ': ' +\n                                    xhr.getLastError() +\n                                    ', giving up.');\n                        }\n                    }\n                    finally {\n                        log.debug(LOG_TAG, 'RPC \"' + rpcName + '\" completed.');\n                        _this.pool.releaseObject(xhr);\n                    }\n                });\n                var requestString = JSON.stringify(request);\n                log.debug(LOG_TAG, 'XHR sending: ', url + ' ' + requestString);\n                // Content-Type: text/plain will avoid preflight requests which might\n                // mess with CORS and redirects by proxies. If we add custom headers\n                // we will need to change this code to potentially use the\n                // $httpOverwrite parameter supported by ESF to avoid\n                // triggering preflight requests.\n                var headers = { 'Content-Type': 'text/plain' };\n                _this.modifyHeadersForRequest(headers, token);\n                xhr.send(url, 'POST', requestString, headers, XHR_TIMEOUT_SECS);\n            });\n        });\n    };\n    WebChannelConnection.prototype.invokeStreamingRPC = function (rpcName, request, token) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.invokeRPC(rpcName, request, token);\n    };\n    WebChannelConnection.prototype.openStream = function (rpcName, token) {\n        var urlParts = [\n            this.baseUrl,\n            '/',\n            RPC_STREAM_SERVICE,\n            '/',\n            rpcName,\n            '/channel'\n        ];\n        var webchannelTransport = createWebChannelTransport();\n        var request = {\n            // Background channel test avoids the initial two test calls and decreases\n            // initial cold start time.\n            // TODO(dimond): wenboz@ mentioned this might affect use with proxies and\n            // we should monitor closely for any reports.\n            backgroundChannelTest: true,\n            // Required for backend stickiness, routing behavior is based on this\n            // parameter.\n            httpSessionIdParam: 'gsessionid',\n            initMessageHeaders: {},\n            // Send our custom headers as a '$httpHeaders=' url param to avoid CORS\n            // preflight round-trip. This is formally defined here:\n            // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L40\n            httpHeadersOverwriteParam: '$httpHeaders',\n            sendRawJson: true,\n            supportsCrossDomainXhr: true\n        };\n        this.modifyHeadersForRequest(request.initMessageHeaders, token);\n        var url = urlParts.join('');\n        log.debug(LOG_TAG, 'Creating WebChannel: ' + url + ' ' + request);\n        // tslint:disable-next-line:no-any Because listen isn't defined on it.\n        var channel = webchannelTransport.createWebChannel(url, request);\n        // WebChannel supports sending the first message with the handshake - saving\n        // a network round trip. However, it will have to call send in the same\n        // JS event loop as open. In order to enforce this, we delay actually\n        // opening the WebChannel until send is called. Whether we have called\n        // open is tracked with this variable.\n        var opened = false;\n        // A flag to determine whether the stream was closed (by us or through an\n        // error/close event) to avoid delivering multiple close events or sending\n        // on a closed stream\n        var closed = false;\n        var streamBridge = new StreamBridge({\n            sendFn: function (msg) {\n                if (!closed) {\n                    if (!opened) {\n                        log.debug(LOG_TAG, 'Opening WebChannel transport.');\n                        channel.open();\n                        opened = true;\n                    }\n                    log.debug(LOG_TAG, 'WebChannel sending:', msg);\n                    channel.send(msg);\n                }\n                else {\n                    log.debug(LOG_TAG, 'Not sending because WebChannel is closed:', msg);\n                }\n            },\n            closeFn: function () { return channel.close(); }\n        });\n        // Closure events are guarded and exceptions are swallowed, so catch any\n        // exception and rethrow using a setTimeout so they become visible again.\n        // Note that eventually this function could go away if we are confident\n        // enough the code is exception free.\n        var unguardedEventListen = function (type, fn) {\n            // TODO(dimond): closure typing seems broken because WebChannel does\n            // not implement goog.events.Listenable\n            channel.listen(type, function (param) {\n                try {\n                    fn(param);\n                }\n                catch (e) {\n                    setTimeout(function () {\n                        throw e;\n                    }, 0);\n                }\n            });\n        };\n        unguardedEventListen(WebChannel.EventType.OPEN, function () {\n            if (!closed) {\n                log.debug(LOG_TAG, 'WebChannel transport opened.');\n            }\n        });\n        unguardedEventListen(WebChannel.EventType.CLOSE, function () {\n            if (!closed) {\n                closed = true;\n                log.debug(LOG_TAG, 'WebChannel transport closed');\n                streamBridge.callOnClose();\n            }\n        });\n        unguardedEventListen(WebChannel.EventType.ERROR, function (err) {\n            if (!closed) {\n                closed = true;\n                log.debug(LOG_TAG, 'WebChannel transport errored:', err);\n                streamBridge.callOnClose(new FirestoreError(Code.UNAVAILABLE, 'The operation could not be completed'));\n            }\n        });\n        unguardedEventListen(WebChannel.EventType.MESSAGE, function (msg) {\n            if (!closed) {\n                var msgData = msg.data[0];\n                assert(!!msgData, 'Got a webchannel message without data.');\n                // TODO(b/35143891): There is a bug in One Platform that caused errors\n                // (and only errors) to be wrapped in an extra array. To be forward\n                // compatible with the bug we need to check either condition. The latter\n                // can be removed once the fix has been rolled out.\n                var error = \n                // tslint:disable-next-line:no-any msgData.error is not typed.\n                msgData.error || (msgData[0] && msgData[0].error);\n                if (error) {\n                    log.debug(LOG_TAG, 'WebChannel received error:', error);\n                    // error.status will be a string like 'OK' or 'NOT_FOUND'.\n                    var status_2 = error.status;\n                    var code = mapCodeFromRpcStatus(status_2);\n                    var message = error.message;\n                    if (code === undefined) {\n                        code = Code.INTERNAL;\n                        message =\n                            'Unknown error status: ' +\n                                status_2 +\n                                ' with message ' +\n                                error.message;\n                    }\n                    // Mark closed so no further events are propagated\n                    closed = true;\n                    streamBridge.callOnClose(new FirestoreError(code, message));\n                    channel.close();\n                }\n                else {\n                    log.debug(LOG_TAG, 'WebChannel received:', msgData);\n                    streamBridge.callOnMessage(msgData);\n                }\n            }\n        });\n        setTimeout(function () {\n            // Technically we could/should wait for the WebChannel opened event,\n            // but because we want to send the first message with the WebChannel\n            // handshake we pretend the channel opened here (asynchronously), and\n            // then delay the actual open until the first message is sent.\n            streamBridge.callOnOpen();\n        }, 0);\n        return streamBridge;\n    };\n    // visible for testing\n    WebChannelConnection.prototype.makeUrl = function (rpcName) {\n        var urlRpcName = RPC_NAME_REST_MAPPING[rpcName];\n        assert(urlRpcName !== undefined, 'Unknown REST mapping for: ' + rpcName);\n        var url = [this.baseUrl, '/', RPC_URL_VERSION];\n        url.push('/projects/');\n        url.push(this.databaseId.projectId);\n        url.push('/databases/');\n        url.push(this.databaseId.database);\n        url.push('/documents');\n        url.push(':');\n        url.push(urlRpcName);\n        return url.join('');\n    };\n    return WebChannelConnection;\n}());\nexport { WebChannelConnection };\n\n//# sourceMappingURL=webchannel_connection.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/platform_browser/webchannel_connection.js\n// module id = 278\n// module chunks = 5","(function() {var g,goog=goog||{},k=this;function l(a){return\"string\"==typeof a}function aa(){}\nfunction ba(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function n(a){return\"array\"==ba(a)}function ca(a){var b=ba(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function da(a){return\"function\"==ba(a)}function p(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}var q=\"closure_uid_\"+(1E9*Math.random()>>>0),ea=0;function fa(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction ha(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function r(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?r=fa:r=ha;return r.apply(null,arguments)}\nfunction ia(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}}var t=Date.now||function(){return+new Date};function u(a,b){function c(){}c.prototype=b.prototype;a.H=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Cb=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};function ja(a){if(Error.captureStackTrace)Error.captureStackTrace(this,ja);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}u(ja,Error);ja.prototype.name=\"CustomError\";function ka(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")}var la=String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};function ma(a,b){return a<b?-1:a>b?1:0};function na(a,b){b.unshift(a);ja.call(this,ka.apply(null,b));b.shift()}u(na,ja);na.prototype.name=\"AssertionError\";function oa(a,b){throw new na(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));};function w(){0!=qa&&(ra[this[q]||(this[q]=++ea)]=this);this.i=this.i;this.w=this.w}var qa=0,ra={};w.prototype.i=!1;w.prototype.Z=function(){if(!this.i&&(this.i=!0,this.A(),0!=qa)){var a=this[q]||(this[q]=++ea);delete ra[a]}};w.prototype.A=function(){if(this.w)for(;this.w.length;)this.w.shift()()};var sa=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(l(a))return l(b)&&1==b.length?a.indexOf(b,0):-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},ta=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=l(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};\nfunction ua(a){a:{var b=va;for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:l(a)?a.charAt(b):a[b]}function wa(a){if(!n(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0}function xa(a){return Array.prototype.concat.apply([],arguments)}function ya(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};var x;a:{var za=k.navigator;if(za){var Aa=za.userAgent;if(Aa){x=Aa;break a}}x=\"\"}function y(a){return-1!=x.indexOf(a)};function Ba(a,b,c){for(var d in a)b.call(c,a[d],d,a)}function Ca(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b}function Da(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b}function Ea(a){var b={},c;for(c in a)b[c]=a[c];return b}var Fa=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\nfunction Ga(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<Fa.length;f++)c=Fa[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function Ha(a){Ha[\" \"](a);return a}Ha[\" \"]=aa;function Ia(a,b){var c=Ja;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var Ka=y(\"Opera\"),z=y(\"Trident\")||y(\"MSIE\"),La=y(\"Edge\"),Ma=y(\"Gecko\")&&!(-1!=x.toLowerCase().indexOf(\"webkit\")&&!y(\"Edge\"))&&!(y(\"Trident\")||y(\"MSIE\"))&&!y(\"Edge\"),Na=-1!=x.toLowerCase().indexOf(\"webkit\")&&!y(\"Edge\");function Oa(){var a=k.document;return a?a.documentMode:void 0}var Pa;\na:{var Qa=\"\",Ra=function(){var a=x;if(Ma)return/rv:([^\\);]+)(\\)|;)/.exec(a);if(La)return/Edge\\/([\\d\\.]+)/.exec(a);if(z)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(Na)return/WebKit\\/(\\S+)/.exec(a);if(Ka)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();Ra&&(Qa=Ra?Ra[1]:\"\");if(z){var Sa=Oa();if(null!=Sa&&Sa>parseFloat(Qa)){Pa=String(Sa);break a}}Pa=Qa}var Ja={};\nfunction Ta(a){return Ia(a,function(){for(var b=0,c=la(String(Pa)).split(\".\"),d=la(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var h=c[f]||\"\",m=d[f]||\"\";do{h=/(\\d*)(\\D*)(.*)/.exec(h)||[\"\",\"\",\"\",\"\"];m=/(\\d*)(\\D*)(.*)/.exec(m)||[\"\",\"\",\"\",\"\"];if(0==h[0].length&&0==m[0].length)break;b=ma(0==h[1].length?0:parseInt(h[1],10),0==m[1].length?0:parseInt(m[1],10))||ma(0==h[2].length,0==m[2].length)||ma(h[2],m[2]);h=h[3];m=m[3]}while(0==b)}return 0<=b})}var Ua;var Va=k.document;\nUa=Va&&z?Oa()||(\"CSS1Compat\"==Va.compatMode?parseInt(Pa,10):5):void 0;var Wa=Object.freeze||function(a){return a};var Xa=!z||9<=Number(Ua),Ya=z&&!Ta(\"9\"),Za=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});k.addEventListener(\"test\",aa,b);k.removeEventListener(\"test\",aa,b);return a}();function A(a,b){this.type=a;this.a=this.target=b;this.Pa=!0}A.prototype.b=function(){this.Pa=!1};function $a(a,b){A.call(this,a?a.type:\"\");this.relatedTarget=this.a=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType=\"\";this.c=null;if(a){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.a=b;if(b=a.relatedTarget){if(Ma){a:{try{Ha(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==c?b=\na.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=\na.metaKey;this.pointerId=a.pointerId||0;this.pointerType=l(a.pointerType)?a.pointerType:ab[a.pointerType]||\"\";this.c=a;a.defaultPrevented&&this.b()}}u($a,A);var ab=Wa({2:\"touch\",3:\"pen\",4:\"mouse\"});$a.prototype.b=function(){$a.H.b.call(this);var a=this.c;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Ya)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};var bb=\"closure_listenable_\"+(1E6*Math.random()|0);function cb(a){return!(!a||!a[bb])}var db=0;function eb(a,b,c,d,e){this.listener=a;this.a=null;this.src=b;this.type=c;this.capture=!!d;this.ga=e;this.key=++db;this.Y=this.ca=!1}function fb(a){a.Y=!0;a.listener=null;a.a=null;a.src=null;a.ga=null};function gb(a){this.src=a;this.a={};this.b=0}gb.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var h=hb(a,b,d,e);-1<h?(b=a[h],c||(b.ca=!1)):(b=new eb(b,this.src,f,!!d,e),b.ca=c,a.push(b));return b};function ib(a,b){var c=b.type;if(c in a.a){var d=a.a[c],e=sa(d,b),f;(f=0<=e)&&Array.prototype.splice.call(d,e,1);f&&(fb(b),0==a.a[c].length&&(delete a.a[c],a.b--))}}function jb(a,b,c,d,e){a=a.a[b.toString()];b=-1;a&&(b=hb(a,c,d,e));return-1<b?a[b]:null}\nfunction hb(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.Y&&f.listener==b&&f.capture==!!c&&f.ga==d)return e}return-1};var kb=\"closure_lm_\"+(1E6*Math.random()|0),lb={},mb=0;function nb(a,b,c,d,e){if(d&&d.once)return ob(a,b,c,d,e);if(n(b)){for(var f=0;f<b.length;f++)nb(a,b[f],c,d,e);return null}c=pb(c);return cb(a)?a.aa(b,c,p(d)?!!d.capture:!!d,e):qb(a,b,c,!1,d,e)}\nfunction qb(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var h=p(e)?!!e.capture:!!e,m=rb(a);m||(a[kb]=m=new gb(a));c=m.add(b,c,d,h,f);if(c.a)return c;d=sb();c.a=d;d.src=a;d.listener=c;if(a.addEventListener)Za||(e=h),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(tb(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");mb++;return c}\nfunction sb(){var a=ub,b=Xa?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function ob(a,b,c,d,e){if(n(b)){for(var f=0;f<b.length;f++)ob(a,b[f],c,d,e);return null}c=pb(c);return cb(a)?a.Ha(b,c,p(d)?!!d.capture:!!d,e):qb(a,b,c,!0,d,e)}function vb(a,b,c,d,e){if(n(b))for(var f=0;f<b.length;f++)vb(a,b[f],c,d,e);else d=p(d)?!!d.capture:!!d,c=pb(c),cb(a)?a.va(b,c,d,e):a&&(a=rb(a))&&(b=jb(a,b,c,d,e))&&wb(b)}\nfunction wb(a){if(\"number\"!=typeof a&&a&&!a.Y){var b=a.src;if(cb(b))ib(b.c,a);else{var c=a.type,d=a.a;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(tb(c),d):b.addListener&&b.removeListener&&b.removeListener(d);mb--;(c=rb(b))?(ib(c,a),0==c.b&&(c.src=null,b[kb]=null)):fb(a)}}}function tb(a){return a in lb?lb[a]:lb[a]=\"on\"+a}\nfunction xb(a,b,c,d){var e=!0;if(a=rb(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.Y&&(f=yb(f,d),e=e&&!1!==f)}return e}function yb(a,b){var c=a.listener,d=a.ga||a.src;a.ca&&wb(a);return c.call(d,b)}\nfunction ub(a,b){if(a.Y)return!0;if(!Xa){if(!b)a:{b=[\"window\",\"event\"];for(var c=k,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new $a(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(h){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.a;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;0<=e;e--){b.a=d[e];var f=xb(d[e],a,!0,b);c=c&&f}for(e=0;e<d.length;e++)b.a=d[e],f=xb(d[e],a,!1,b),c=c&&f}return c}return yb(a,\nnew $a(b,this))}function rb(a){a=a[kb];return a instanceof gb?a:null}var zb=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function pb(a){if(da(a))return a;a[zb]||(a[zb]=function(b){return a.handleEvent(b)});return a[zb]};function B(){w.call(this);this.c=new gb(this);this.P=this;this.K=null}u(B,w);B.prototype[bb]=!0;g=B.prototype;g.addEventListener=function(a,b,c,d){nb(this,a,b,c,d)};g.removeEventListener=function(a,b,c,d){vb(this,a,b,c,d)};\ng.dispatchEvent=function(a){var b,c=this.K;if(c)for(b=[];c;c=c.K)b.push(c);c=this.P;var d=a.type||a;if(l(a))a=new A(a,c);else if(a instanceof A)a.target=a.target||c;else{var e=a;a=new A(d,c);Ga(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var h=a.a=b[f];e=Ab(h,d,!0,a)&&e}h=a.a=c;e=Ab(h,d,!0,a)&&e;e=Ab(h,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)h=a.a=b[f],e=Ab(h,d,!1,a)&&e;return e};\ng.A=function(){B.H.A.call(this);if(this.c){var a=this.c,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,fb(d[e]);delete a.a[c];a.b--}}this.K=null};g.aa=function(a,b,c,d){return this.c.add(String(a),b,!1,c,d)};g.Ha=function(a,b,c,d){return this.c.add(String(a),b,!0,c,d)};g.va=function(a,b,c,d){var e=this.c;a=String(a).toString();if(a in e.a){var f=e.a[a];b=hb(f,b,c,d);-1<b&&(fb(f[b]),Array.prototype.splice.call(f,b,1),0==f.length&&(delete e.a[a],e.b--))}};\nfunction Ab(a,b,c,d){b=a.c.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var h=b[f];if(h&&!h.Y&&h.capture==c){var m=h.listener,v=h.ga||h.src;h.ca&&ib(a.c,h);e=!1!==m.call(v,d)&&e}}return e&&0!=d.Pa};function Bb(a){return/^\\s*$/.test(a)?!1:/^[\\],:{}\\s\\u2028\\u2029]*$/.test(a.replace(/\\\\[\"\\\\\\/bfnrtu]/g,\"@\").replace(/(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g,\"]\").replace(/(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g,\"\"))}function Cb(a){a=String(a);if(Bb(a))try{return eval(\"(\"+a+\")\")}catch(b){}throw Error(\"Invalid JSON string: \"+a);}function Db(a){var b=[];Eb(new Fb,a,b);return b.join(\"\")}function Fb(){}\nfunction Eb(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(n(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),Eb(a,d[f],c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");e=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],\"function\"!=typeof f&&(c.push(e),Gb(d,c),c.push(\":\"),Eb(a,f,c),e=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":Gb(b,c);break;case \"number\":c.push(isFinite(b)&&\n!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}}var Hb={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},Ib=/\\uffff/.test(\"\\uffff\")?/[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Gb(a,b){b.push('\"',a.replace(Ib,function(a){var b=Hb[a];b||(b=\"\\\\u\"+(a.charCodeAt(0)|65536).toString(16).substr(1),Hb[a]=b);return b}),'\"')};function Jb(a,b){this.c=a;this.f=b;this.b=0;this.a=null}Jb.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function Kb(){this.b=this.a=null}var Nb=new Jb(function(){return new Lb},function(a){a.reset()});Kb.prototype.add=function(a,b){var c=Nb.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function Ob(){var a=Pb,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function Lb(){this.next=this.b=this.a=null}Lb.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};Lb.prototype.reset=function(){this.next=this.b=this.a=null};function Qb(a){k.setTimeout(function(){throw a;},0)}var Rb;\nfunction Sb(){var a=k.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!y(\"Presto\")&&(a=function(){var a=document.createElement(\"IFRAME\");a.style.display=\"none\";a.src=\"\";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write(\"\");a.close();var c=\"callImmediate\"+Math.random(),d=\"file:\"==b.location.protocol?\"*\":b.location.protocol+\"//\"+b.location.host;a=r(function(a){if((\"*\"==d||a.origin==d)&&a.data==\nc)this.port1.onmessage()},this);b.addEventListener(\"message\",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if(\"undefined\"!==typeof a&&!y(\"Trident\")&&!y(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var a=c.za;c.za=null;a()}};return function(a){d.next={za:a};d=d.next;b.port2.postMessage(0)}}return\"undefined\"!==typeof document&&\"onreadystatechange\"in document.createElement(\"SCRIPT\")?function(a){var b=document.createElement(\"SCRIPT\");\nb.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};var Tb;function Ub(){if(-1!=String(k.Promise).indexOf(\"[native code]\")){var a=k.Promise.resolve(void 0);Tb=function(){a.then(Vb)}}else Tb=function(){var a=Vb;!da(k.setImmediate)||k.Window&&k.Window.prototype&&!y(\"Edge\")&&k.Window.prototype.setImmediate==k.setImmediate?(Rb||(Rb=Sb()),Rb(a)):k.setImmediate(a)}}var Wb=!1,Pb=new Kb;function Vb(){for(var a;a=Ob();){try{a.a.call(a.b)}catch(c){Qb(c)}var b=Nb;b.f(a);100>b.b&&(b.b++,a.next=b.a,b.a=a)}Wb=!1};function Xb(a,b){B.call(this);this.b=a||1;this.a=b||k;this.f=r(this.kb,this);this.g=t()}u(Xb,B);g=Xb.prototype;g.$=!1;g.L=null;g.kb=function(){if(this.$){var a=t()-this.g;0<a&&a<.8*this.b?this.L=this.a.setTimeout(this.f,this.b-a):(this.L&&(this.a.clearTimeout(this.L),this.L=null),this.dispatchEvent(\"tick\"),this.$&&(this.L=this.a.setTimeout(this.f,this.b),this.g=t()))}};g.start=function(){this.$=!0;this.L||(this.L=this.a.setTimeout(this.f,this.b),this.g=t())};\nfunction Yb(a){a.$=!1;a.L&&(a.a.clearTimeout(a.L),a.L=null)}g.A=function(){Xb.H.A.call(this);Yb(this);delete this.a};function Zb(a,b,c){if(da(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)};function $b(a,b,c){w.call(this);this.f=null!=c?r(a,c):a;this.c=b;this.b=r(this.eb,this);this.a=[]}u($b,w);g=$b.prototype;g.ha=!1;g.X=null;g.Xa=function(a){this.a=arguments;this.X?this.ha=!0:ac(this)};g.A=function(){$b.H.A.call(this);this.X&&(k.clearTimeout(this.X),this.X=null,this.ha=!1,this.a=[])};g.eb=function(){this.X=null;this.ha&&(this.ha=!1,ac(this))};function ac(a){a.X=Zb(a.b,a.c);a.f.apply(null,a.a)};function C(a){w.call(this);this.b=a;this.a={}}u(C,w);var bc=[];C.prototype.aa=function(a,b,c,d){n(b)||(b&&(bc[0]=b.toString()),b=bc);for(var e=0;e<b.length;e++){var f=nb(a,b[e],c||this.handleEvent,d||!1,this.b||this);if(!f)break;this.a[f.key]=f}return this};\nC.prototype.va=function(a,b,c,d,e){if(n(b))for(var f=0;f<b.length;f++)this.va(a,b[f],c,d,e);else c=c||this.handleEvent,d=p(d)?!!d.capture:!!d,e=e||this.b||this,c=pb(c),d=!!d,b=cb(a)?jb(a.c,String(b),c,d,e):a?(a=rb(a))?jb(a,b,c,d,e):null:null,b&&(wb(b),delete this.a[b.key])};function cc(a){Ba(a.a,function(a,c){this.a.hasOwnProperty(c)&&wb(a)},a);a.a={}}C.prototype.A=function(){C.H.A.call(this);cc(this)};C.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\");};function dc(a,b,c){this.reset(a,b,c,void 0,void 0)}dc.prototype.a=null;var ec=0;dc.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||ec++;d||t();delete this.a};function fc(a){this.f=a;this.b=this.c=this.a=null}function D(a,b){this.name=a;this.value=b}D.prototype.toString=function(){return this.name};var gc=new D(\"SEVERE\",1E3),hc=new D(\"WARNING\",900),ic=new D(\"INFO\",800),jc=new D(\"CONFIG\",700),kc=new D(\"FINE\",500);function lc(a){if(a.c)return a.c;if(a.a)return lc(a.a);oa(\"Root logger has no level set.\");return null}fc.prototype.log=function(a,b,c){if(a.value>=lc(this).value)for(da(b)&&(b=b()),a=new dc(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};\nvar mc={},nc=null;function oc(a){nc||(nc=new fc(\"\"),mc[\"\"]=nc,nc.c=jc);var b;if(!(b=mc[a])){b=new fc(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=oc(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;mc[a]=b}return b};function E(a,b){a&&a.log(hc,b,void 0)}function pc(a,b){a&&a.log(ic,b,void 0)}function F(a,b){a&&a.log(kc,b,void 0)};function qc(){this.a=oc(\"goog.labs.net.webChannel.WebChannelDebug\");this.b=!0}qc.prototype.Ea=function(){this.b=!1};function rc(a,b,c,d,e,f){H(a,function(){if(a.b)if(f){var h=\"\";for(var m=f.split(\"&\"),v=0;v<m.length;v++){var G=m[v].split(\"=\");if(1<G.length){var Z=G[0];G=G[1];var Mb=Z.split(\"_\");h=2<=Mb.length&&\"type\"==Mb[1]?h+(Z+\"=\"+G+\"&\"):h+(Z+\"=redacted&\")}}}else h=null;else h=f;return\"XMLHTTP REQ (\"+d+\") [attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+h})}\nfunction sc(a,b,c,d,e,f,h){H(a,function(){return\"XMLHTTP RESP (\"+d+\") [ attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+f+\" \"+h})}function tc(a,b,c,d){H(a,function(){return\"XMLHTTP TEXT (\"+b+\"): \"+uc(a,c)+(d?\" \"+d:\"\")})}function vc(a,b){H(a,function(){return\"TIMEOUT: \"+b})}function I(a,b){F(a.a,b)}function wc(a,b,c){(a=a.a)&&a.log(gc,c||\"Exception\",b)}function H(a,b){pc(a.a,b)}function xc(a,b){(a=a.a)&&a.log(gc,b,void 0)}\nfunction uc(a,b){if(!a.b)return b;if(!b)return null;try{var c=JSON.parse(b);if(c)for(var d=0;d<c.length;d++)if(n(c[d])){var e=c[d];if(!(2>e.length)){var f=e[1];if(n(f)&&!(1>f.length)){var h=f[0];if(\"noop\"!=h&&\"stop\"!=h&&\"close\"!=h)for(var m=1;m<f.length;m++)f[m]=\"\"}}}return Db(c)}catch(v){return I(a,\"Exception parsing expected JS array - probably was not JS\"),b}};var yc=new B;function zc(a){A.call(this,\"serverreachability\",a)}u(zc,A);function Ac(a){yc.dispatchEvent(new zc(yc,a))}function Bc(a){A.call(this,\"statevent\",a)}u(Bc,A);function J(a){yc.dispatchEvent(new Bc(yc,a))}function Cc(a){A.call(this,\"timingevent\",a)}u(Cc,A);function Dc(a,b,c){yc.dispatchEvent(new Cc(yc,a,b,c))}function Ec(a,b){if(!da(a))throw Error(\"Fn must not be null and must be a function\");return k.setTimeout(function(){a()},b)};var Fc={NO_ERROR:0,lb:1,sb:2,rb:3,ob:4,qb:5,tb:6,Ra:7,TIMEOUT:8,wb:9};var Gc={nb:\"complete\",Ab:\"success\",Sa:\"error\",Ra:\"abort\",yb:\"ready\",zb:\"readystatechange\",TIMEOUT:\"timeout\",ub:\"incrementaldata\",xb:\"progress\",pb:\"downloadprogress\",Bb:\"uploadprogress\"};function Hc(){}Hc.prototype.a=null;function Ic(a){var b;(b=a.a)||(b={},Jc(a)&&(b[0]=!0,b[1]=!0),b=a.a=b);return b};var Kc;function Lc(){}u(Lc,Hc);function Mc(a){return(a=Jc(a))?new ActiveXObject(a):new XMLHttpRequest}function Jc(a){if(!a.b&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.b=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.b}Kc=new Lc;function K(a,b,c,d){this.i=a;this.b=b;this.f=c;this.T=d||1;this.N=new C(this);this.S=Nc;a=this.I=new Xb;a.b=Oc;a.L&&a.$?(Yb(a),a.start()):a.L&&Yb(a);this.j=null;this.c=!1;this.m=this.g=this.h=this.K=this.D=this.U=this.w=null;this.u=[];this.a=null;this.F=0;this.l=this.o=null;this.C=-1;this.B=!1;this.P=0;this.J=null;this.M=!1}var Nc=45E3,Oc=250;\nfunction Pc(a,b){switch(a){case 0:return\"Non-200 return code (\"+b+\")\";case 1:return\"XMLHTTP failure (no data)\";case 2:return\"HttpConnection timeout\";default:return\"Unknown error\"}}var Qc={},Rc={};g=K.prototype;g.setTimeout=function(a){this.S=a};function Sc(a,b,c){a.K=1;a.h=Tc(L(b));a.m=c;a.M=!0;Uc(a,null)}function Vc(a,b,c,d){a.K=1;a.h=Tc(L(b));a.m=null;a.M=c;Uc(a,d)}\nfunction Uc(a,b){a.D=t();Wc(a);a.g=L(a.h);Xc(a.g,\"t\",a.T);a.F=0;a.a=a.i.da(a.i.ia()?b:null);0<a.P&&(a.J=new $b(r(a.Qa,a,a.a),a.P));a.N.aa(a.a,\"readystatechange\",a.hb);b=a.j?Ea(a.j):{};a.m?(a.o||(a.o=\"POST\"),b[\"Content-Type\"]=\"application/x-www-form-urlencoded\",a.a.fa(a.g,a.o,a.m,b)):(a.o=\"GET\",a.a.fa(a.g,a.o,null,b));Ac(1);rc(a.b,a.o,a.g,a.f,a.T,a.m)}g.hb=function(a){a=a.target;var b=this.J;b&&3==M(a)?(I(this.b,\"Throttling readystatechange.\"),b.Xa()):this.Qa(a)};\ng.Qa=function(a){try{a==this.a?Yc(this):E(this.b.a,\"Called back with an unexpected xmlhttp\")}catch(c){if(I(this.b,\"Failed call to OnXmlHttpReadyStateChanged_\"),this.a&&this.a.V()){var b=this;wc(this.b,c,function(){return\"ResponseText: \"+b.a.V()})}else wc(this.b,c,\"No response text\")}finally{}};\nfunction Yc(a){var b=M(a.a),c=a.a.Fa(),d=a.a.W();if(!(3>b||3==b&&!Ka&&!a.a.V())){a.B||4!=b||7==c||(8==c||0>=d?Ac(3):Ac(2));Zc(a);var e=a.a.W();a.C=e;(c=a.a.V())||I(a.b,function(){return\"No response text for uri \"+a.g+\" status \"+e});a.c=200==e;sc(a.b,a.o,a.g,a.f,a.T,b,e);a.c?(a.M?($c(a,b,c),Ka&&a.c&&3==b&&ad(a)):(tc(a.b,a.f,c,null),bd(a,c)),4==b&&cd(a),a.c&&!a.B&&(4==b?a.i.ua(a):(a.c=!1,Wc(a)))):(400==e&&0<c.indexOf(\"Unknown SID\")?(a.l=3,J(12),E(a.b.a,\"XMLHTTP Unknown SID (\"+a.f+\")\")):(a.l=0,J(13),\nE(a.b.a,\"XMLHTTP Bad status \"+e+\" (\"+a.f+\")\")),cd(a),dd(a))}}function $c(a,b,c){for(var d=!0;!a.B&&a.F<c.length;){var e=ed(a,c);if(e==Rc){4==b&&(a.l=4,J(14),d=!1);tc(a.b,a.f,null,\"[Incomplete Response]\");break}else if(e==Qc){a.l=4;J(15);tc(a.b,a.f,c,\"[Invalid Chunk]\");d=!1;break}else tc(a.b,a.f,e,null),bd(a,e)}4==b&&0==c.length&&(a.l=1,J(16),d=!1);a.c=a.c&&d;d||(tc(a.b,a.f,c,\"[Invalid Chunked Response]\"),cd(a),dd(a))}\ng.gb=function(){var a=M(this.a),b=this.a.V();this.F<b.length&&(Zc(this),$c(this,a,b),this.c&&4!=a&&Wc(this))};function ad(a){a.N.aa(a.I,\"tick\",a.gb);a.I.start()}function ed(a,b){var c=a.F,d=b.indexOf(\"\\n\",c);if(-1==d)return Rc;c=Number(b.substring(c,d));if(isNaN(c))return Qc;d+=1;if(d+c>b.length)return Rc;b=b.substr(d,c);a.F=d+c;return b}g.cancel=function(){this.B=!0;cd(this)};function Wc(a){a.U=t()+a.S;fd(a,a.S)}\nfunction fd(a,b){if(null!=a.w)throw Error(\"WatchDog timer not null\");a.w=Ec(r(a.fb,a),b)}function Zc(a){a.w&&(k.clearTimeout(a.w),a.w=null)}g.fb=function(){this.w=null;var a=t();0<=a-this.U?(this.c&&xc(this.b,\"Received watchdog timeout even though request loaded successfully\"),vc(this.b,this.g),2!=this.K&&(Ac(3),J(17)),cd(this),this.l=2,dd(this)):(E(this.b.a,\"WatchDog timer called too early\"),fd(this,this.U-a))};function dd(a){a.i.Ja()||a.B||a.i.ua(a)}\nfunction cd(a){Zc(a);var b=a.J;b&&\"function\"==typeof b.Z&&b.Z();a.J=null;Yb(a.I);cc(a.N);a.a&&(b=a.a,a.a=null,b.abort(),b.Z())}function bd(a,b){try{a.i.Ma(a,b),Ac(4)}catch(c){wc(a.b,c,\"Error in httprequest callback\")}};function gd(a){if(a.v&&\"function\"==typeof a.v)return a.v();if(l(a))return a.split(\"\");if(ca(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}return Ca(a)}\nfunction hd(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ca(a)||l(a))ta(a,b,void 0);else{if(a.O&&\"function\"==typeof a.O)var c=a.O();else if(a.v&&\"function\"==typeof a.v)c=void 0;else if(ca(a)||l(a)){c=[];for(var d=a.length,e=0;e<d;e++)c.push(e)}else c=Da(a);d=gd(a);e=d.length;for(var f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)}};function N(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a){a instanceof N?(c=a.O(),d=a.v()):(c=Da(a),d=Ca(a));for(var e=0;e<c.length;e++)this.set(c[e],d[e])}}g=N.prototype;g.s=function(){return this.c};g.v=function(){id(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};g.O=function(){id(this);return this.a.concat()};\nfunction jd(a){a.b={};a.a.length=0;a.c=0}function kd(a,b){return O(a.b,b)?(delete a.b[b],a.c--,a.a.length>2*a.c&&id(a),!0):!1}function id(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];O(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],O(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}g.get=function(a,b){return O(this.b,a)?this.b[a]:b};g.set=function(a,b){O(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};\ng.forEach=function(a,b){for(var c=this.O(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function O(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var ld=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function md(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function P(a,b){this.b=this.j=this.f=\"\";this.i=null;this.g=this.a=\"\";this.h=!1;var c;a instanceof P?(this.h=void 0!==b?b:a.h,nd(this,a.f),this.j=a.j,od(this,a.b),pd(this,a.i),this.a=a.a,qd(this,rd(a.c)),this.g=a.g):a&&(c=String(a).match(ld))?(this.h=!!b,nd(this,c[1]||\"\",!0),this.j=sd(c[2]||\"\"),od(this,c[3]||\"\",!0),pd(this,c[4]),this.a=sd(c[5]||\"\",!0),qd(this,c[6]||\"\",!0),this.g=sd(c[7]||\"\")):(this.h=!!b,this.c=new td(null,this.h))}\nP.prototype.toString=function(){var a=[],b=this.f;b&&a.push(ud(b,vd,!0),\":\");var c=this.b;if(c||\"file\"==b)a.push(\"//\"),(b=this.j)&&a.push(ud(b,vd,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.i,null!=c&&a.push(\":\",String(c));if(c=this.a)this.b&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(ud(c,\"/\"==c.charAt(0)?wd:xd,!0));(c=this.c.toString())&&a.push(\"?\",c);(c=this.g)&&a.push(\"#\",ud(c,yd));return a.join(\"\")};\nP.prototype.resolve=function(a){var b=L(this),c=!!a.f;c?nd(b,a.f):c=!!a.j;c?b.j=a.j:c=!!a.b;c?od(b,a.b):c=null!=a.i;var d=a.a;if(c)pd(b,a.i);else if(c=!!a.a){if(\"/\"!=d.charAt(0))if(this.b&&!this.a)d=\"/\"+d;else{var e=b.a.lastIndexOf(\"/\");-1!=e&&(d=b.a.substr(0,e+1)+d)}e=d;if(\"..\"==e||\".\"==e)d=\"\";else if(-1!=e.indexOf(\"./\")||-1!=e.indexOf(\"/.\")){d=0==e.lastIndexOf(\"/\",0);e=e.split(\"/\");for(var f=[],h=0;h<e.length;){var m=e[h++];\".\"==m?d&&h==e.length&&f.push(\"\"):\"..\"==m?((1<f.length||1==f.length&&\"\"!=\nf[0])&&f.pop(),d&&h==e.length&&f.push(\"\")):(f.push(m),d=!0)}d=f.join(\"/\")}else d=e}c?b.a=d:c=\"\"!==a.c.toString();c?qd(b,rd(a.c)):c=!!a.g;c&&(b.g=a.g);return b};function L(a){return new P(a)}function nd(a,b,c){a.f=c?sd(b,!0):b;a.f&&(a.f=a.f.replace(/:$/,\"\"))}function od(a,b,c){a.b=c?sd(b,!0):b}function pd(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.i=b}else a.i=null}function qd(a,b,c){b instanceof td?(a.c=b,zd(a.c,a.h)):(c||(b=ud(b,Ad)),a.c=new td(b,a.h))}\nfunction Q(a,b,c){a.c.set(b,c)}function Xc(a,b,c){n(c)||(c=[String(c)]);Bd(a.c,b,c)}function Tc(a){Q(a,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^t()).toString(36));return a}function Cd(a){return a instanceof P?L(a):new P(a,void 0)}function Dd(a,b,c,d){var e=new P(null,void 0);a&&nd(e,a);b&&od(e,b);c&&pd(e,c);d&&(e.a=d);return e}function sd(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}\nfunction ud(a,b,c){return l(a)?(a=encodeURI(a).replace(b,Ed),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function Ed(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var vd=/[#\\/\\?@]/g,xd=/[#\\?:]/g,wd=/[#\\?]/g,Ad=/[#\\?@]/g,yd=/#/g;function td(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}function R(a){a.a||(a.a=new N,a.b=0,a.c&&md(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}g=td.prototype;g.s=function(){R(this);return this.b};\ng.add=function(a,b){R(this);this.c=null;a=Fd(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};function Gd(a,b){R(a);b=Fd(a,b);O(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,kd(a.a,b))}function Hd(a,b){R(a);b=Fd(a,b);return O(a.a.b,b)}g.forEach=function(a,b){R(this);this.a.forEach(function(c,d){ta(c,function(c){a.call(b,c,d,this)},this)},this)};\ng.O=function(){R(this);for(var a=this.a.v(),b=this.a.O(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};g.v=function(a){R(this);var b=[];if(l(a))Hd(this,a)&&(b=xa(b,this.a.get(Fd(this,a))));else{a=this.a.v();for(var c=0;c<a.length;c++)b=xa(b,a[c])}return b};g.set=function(a,b){R(this);this.c=null;a=Fd(this,a);Hd(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};g.get=function(a,b){a=a?this.v(a):[];return 0<a.length?String(a[0]):b};\nfunction Bd(a,b,c){Gd(a,b);0<c.length&&(a.c=null,a.a.set(Fd(a,b),ya(c)),a.b+=c.length)}g.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var a=[],b=this.a.O(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.v(d);for(var f=0;f<d.length;f++){var h=e;\"\"!==d[f]&&(h+=\"=\"+encodeURIComponent(String(d[f])));a.push(h)}}return this.c=a.join(\"&\")};function rd(a){var b=new td;b.c=a.c;a.a&&(b.a=new N(a.a),b.b=a.b);return b}\nfunction Fd(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function zd(a,b){b&&!a.f&&(R(a),a.c=null,a.a.forEach(function(a,b){var c=b.toLowerCase();b!=c&&(Gd(this,b),Bd(this,c,a))},a));a.f=b};function Id(){this.a=t()}var Jd=null;Id.prototype.set=function(a){this.a=a};Id.prototype.reset=function(){this.set(t())};Id.prototype.get=function(){return this.a};function Kd(){Jd||(Jd=new Id)}function Ld(){Jd||(Jd=new Id)}u(Ld,Kd);function Md(){}var Nd={OPEN:\"a\",mb:\"b\",Sa:\"c\",vb:\"d\"};function Od(){A.call(this,\"d\")}u(Od,A);function Pd(){A.call(this,\"c\")}u(Pd,A);function Qd(a,b){this.a=a;this.b=b;this.c=this.i=null;this.h=!1;this.l=null;this.f=-1;this.m=this.g=null}g=Qd.prototype;g.R=null;\nfunction Rd(a){I(a.b,\"TestConnection: starting stage 2\");var b=a.a.I.a;if(null!=b)I(a.b,function(){return\"TestConnection: skipping stage 2, precomputed result is \"+b?\"Buffered\":\"Unbuffered\"}),J(4),b?(J(10),Sd(a.a,a,!1)):(J(11),Sd(a.a,a,!0));else{a.c=new K(a,a.b,void 0,void 0);a.c.j=a.i;var c=Td(a.a,a.g,a.l);J(4);Xc(c,\"TYPE\",\"xmlhttp\");var d=a.a.j,e=a.a.K;d&&e&&Q(c,d,e);Vc(a.c,c,!1,a.g)}}g.da=function(a){return this.a.da(a)};g.abort=function(){this.c&&(this.c.cancel(),this.c=null);this.f=-1};\ng.Ja=function(){return!1};\ng.Ma=function(a,b){this.f=a.C;if(0==this.R){I(this.b,\"TestConnection: Got data for stage 1\");if(!this.a.D&&(a=a.a)){var c=a.a?a.a.getResponseHeader(\"X-Client-Wire-Protocol\"):null;this.m=c?c:null;this.a.j&&((a=a.a?a.a.getResponseHeader(\"X-HTTP-Session-Id\"):null)?this.a.K=a:E(this.b.a,\"Missing X_HTTP_SESSION_ID in the handshake response\"))}if(b){try{var d=this.a.ma.a.parse(b)}catch(e){wc(this.b,e);Ud(this.a,this);return}this.g=d[0]}else I(this.b,\"TestConnection: Null responseText\"),Ud(this.a,this)}else if(1==\nthis.R)if(this.h)J(6);else if(\"11111\"==b){if(J(5),this.h=!0,!z||10<=Number(Ua))this.f=200,this.c.cancel(),I(this.b,\"Test connection succeeded; using streaming connection\"),J(11),Sd(this.a,this,!0)}else J(7),this.h=!1};\ng.ua=function(){this.f=this.c.C;this.c.c?0==this.R?(this.R=1,I(this.b,\"TestConnection: request complete for initial check\"),Rd(this)):1==this.R&&(I(this.b,\"TestConnection: request complete for stage 2\"),this.h?(I(this.b,\"Test connection succeeded; using streaming connection\"),J(11),Sd(this.a,this,!0)):(I(this.b,\"Test connection failed; not using streaming\"),J(10),Sd(this.a,this,!1))):(I(this.b,\"TestConnection: request failed, in state \"+this.R),0==this.R?J(8):1==this.R&&J(9),Ud(this.a,this))};\ng.ia=function(){return this.a.ia()};g.ra=function(){return this.a.ra()};function Vd(){this.a=this.b=null};function S(){this.a=new N}function Wd(a){var b=typeof a;return\"object\"==b&&a||\"function\"==b?\"o\"+(a[q]||(a[q]=++ea)):b.charAt(0)+a}S.prototype.s=function(){return this.a.s()};S.prototype.add=function(a){this.a.set(Wd(a),a)};S.prototype.contains=function(a){a=Wd(a);return O(this.a.b,a)};S.prototype.v=function(){return this.a.v()};function Xd(a,b){this.a=a;this.b=b};function Yd(a){this.g=a||Zd;this.f=k.pa&&k.pa.Ka&&k.pa.Ka()&&k.pa.Ka().Db?this.g:1;this.a=null;1<this.f&&(this.a=new S);this.b=null;this.c=[]}var Zd=10;function $d(a,b){a.a||-1==b.indexOf(\"spdy\")&&-1==b.indexOf(\"quic\")&&-1==b.indexOf(\"h2\")||(a.f=a.g,a.a=new S,a.b&&(ae(a,a.b),a.b=null))}function be(a){return a.b?!0:a.a?a.a.s()>=a.f:!1}function ce(a,b){return a.b?a.b==b:a.a?a.a.contains(b):!1}function ae(a,b){a.a?a.a.add(b):a.b=b}\nfunction de(a,b){a.b&&a.b==b?a.b=null:a.a&&a.a.contains(b)&&kd(a.a.a,Wd(b))}Yd.prototype.cancel=function(){this.c=ee(this);this.b?(this.b.cancel(),this.b=null):this.a&&0!=this.a.a.c&&(ta(this.a.v(),function(a){a.cancel()}),jd(this.a.a))};function ee(a){if(null!=a.b)return a.c.concat(a.b.u);if(null!=a.a&&0!=a.a.a.c){var b=a.c;ta(a.a.v(),function(a){b=b.concat(a.u)});return b}return ya(a.c)}function fe(a,b){a.c=a.c.concat(b)};function ge(){}ge.prototype.stringify=function(a){return k.JSON.stringify(a,void 0)};ge.prototype.parse=function(a){return k.JSON.parse(a,void 0)};function he(){this.a=new ge}function ie(a,b,c){var d=c||\"\";try{hd(a,function(a,c){var e=a;p(a)&&(e=Db(a));b.push(d+c+\"=\"+encodeURIComponent(e))})}catch(e){throw b.push(d+\"type=\"+encodeURIComponent(\"_badmap\")),e;}};function je(a,b){var c=new qc;I(c,\"TestLoadImage: loading \"+a);var d=new Image;d.onload=ia(ke,c,d,\"TestLoadImage: loaded\",!0,b);d.onerror=ia(ke,c,d,\"TestLoadImage: error\",!1,b);d.onabort=ia(ke,c,d,\"TestLoadImage: abort\",!1,b);d.ontimeout=ia(ke,c,d,\"TestLoadImage: timeout\",!1,b);k.setTimeout(function(){if(d.ontimeout)d.ontimeout()},1E4);d.src=a}function ke(a,b,c,d,e){try{I(a,c),b.onload=null,b.onerror=null,b.onabort=null,b.ontimeout=null,e(d)}catch(f){wc(a,f)}};function T(a){B.call(this);this.headers=new N;this.F=a||null;this.f=!1;this.D=this.a=null;this.M=this.u=\"\";this.j=0;this.g=\"\";this.h=this.J=this.o=this.I=!1;this.l=0;this.B=null;this.N=le;this.C=this.m=!1}u(T,B);var le=\"\";T.prototype.b=oc(\"goog.net.XhrIo\");var me=/^https?$/i,ne=[\"POST\",\"PUT\"];g=T.prototype;\ng.fa=function(a,b,c,d){if(this.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.u+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.u=a;this.g=\"\";this.j=0;this.M=b;this.I=!1;this.f=!0;this.a=this.F?Mc(this.F):Mc(Kc);this.D=this.F?Ic(this.F):Ic(Kc);this.a.onreadystatechange=r(this.La,this);try{F(this.b,U(this,\"Opening Xhr\")),this.J=!0,this.a.open(b,String(a),!0),this.J=!1}catch(f){F(this.b,U(this,\"Error opening Xhr: \"+f.message));oe(this,f);return}a=c||\"\";var e=new N(this.headers);\nd&&hd(d,function(a,b){e.set(b,a)});d=ua(e.O());c=k.FormData&&a instanceof k.FormData;!(0<=sa(ne,b))||d||c||e.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");e.forEach(function(a,b){this.a.setRequestHeader(b,a)},this);this.N&&(this.a.responseType=this.N);\"withCredentials\"in this.a&&this.a.withCredentials!==this.m&&(this.a.withCredentials=this.m);try{pe(this),0<this.l&&(this.C=qe(this.a),F(this.b,U(this,\"Will abort after \"+this.l+\"ms if incomplete, xhr2 \"+this.C)),this.C?(this.a.timeout=\nthis.l,this.a.ontimeout=r(this.Ia,this)):this.B=Zb(this.Ia,this.l,this)),F(this.b,U(this,\"Sending request\")),this.o=!0,this.a.send(a),this.o=!1}catch(f){F(this.b,U(this,\"Send error: \"+f.message)),oe(this,f)}};function qe(a){return z&&Ta(9)&&\"number\"==typeof a.timeout&&void 0!==a.ontimeout}function va(a){return\"content-type\"==a.toLowerCase()}\ng.Ia=function(){\"undefined\"!=typeof goog&&this.a&&(this.g=\"Timed out after \"+this.l+\"ms, aborting\",this.j=8,F(this.b,U(this,this.g)),this.dispatchEvent(\"timeout\"),this.abort(8))};function oe(a,b){a.f=!1;a.a&&(a.h=!0,a.a.abort(),a.h=!1);a.g=b;a.j=5;re(a);se(a)}function re(a){a.I||(a.I=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))}\ng.abort=function(a){this.a&&this.f&&(F(this.b,U(this,\"Aborting\")),this.f=!1,this.h=!0,this.a.abort(),this.h=!1,this.j=a||7,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),se(this))};g.A=function(){this.a&&(this.f&&(this.f=!1,this.h=!0,this.a.abort(),this.h=!1),se(this,!0));T.H.A.call(this)};g.La=function(){this.i||(this.J||this.o||this.h?te(this):this.cb())};g.cb=function(){te(this)};\nfunction te(a){if(a.f&&\"undefined\"!=typeof goog)if(a.D[1]&&4==M(a)&&2==a.W())F(a.b,U(a,\"Local request error detected and ignored\"));else if(a.o&&4==M(a))Zb(a.La,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==M(a)){F(a.b,U(a,\"Request complete\"));a.f=!1;try{var b=a.W();a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.u).match(ld)[1]||null;if(!f&&k.self&&k.self.location){var h=k.self.location.protocol;\nf=h.substr(0,h.length-1)}e=!me.test(f?f.toLowerCase():\"\")}d=e}d?(a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\")):(a.j=6,a.g=a.Ga()+\" [\"+a.W()+\"]\",re(a))}finally{se(a)}}}function se(a,b){if(a.a){pe(a);var c=a.a,d=a.D[0]?aa:null;a.a=null;a.D=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(gc,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}}function pe(a){a.a&&a.C&&(a.a.ontimeout=null);a.B&&(k.clearTimeout(a.B),a.B=null)}\nfunction M(a){return a.a?a.a.readyState:0}g.W=function(){try{return 2<M(this)?this.a.status:-1}catch(a){return-1}};g.Ga=function(){try{return 2<M(this)?this.a.statusText:\"\"}catch(a){return F(this.b,\"Can not get status: \"+a.message),\"\"}};g.V=function(){try{return this.a?this.a.responseText:\"\"}catch(a){return F(this.b,\"Can not get responseText: \"+a.message),\"\"}};\ng.Ya=function(a){if(this.a){var b=this.a.responseText;a&&0==b.indexOf(a)&&(b=b.substring(a.length));a:{a=b;if(k.JSON)try{var c=k.JSON.parse(a);break a}catch(d){}c=Cb(a)}return c}};g.Fa=function(){return this.j};g.ab=function(){return l(this.g)?this.g:String(this.g)};function U(a,b){return b+\" [\"+a.M+\" \"+a.u+\" \"+a.W()+\"]\"};function ue(a){var b=\"\";Ba(a,function(a,d){b+=d;b+=\":\";b+=a;b+=\"\\r\\n\"});return b}function ve(a,b,c){a:{for(d in c){var d=!1;break a}d=!0}if(d)return a;c=ue(c);if(l(a)){b=encodeURIComponent(String(b));c=null!=c?\"=\"+encodeURIComponent(String(c)):\"\";if(b+=c){c=a.indexOf(\"#\");0>c&&(c=a.length);d=a.indexOf(\"?\");if(0>d||d>c){d=c;var e=\"\"}else e=a.substring(d+1,c);a=[a.substr(0,d),e,a.substr(c)];c=a[1];a[1]=b?c?c+\"&\"+b:b:c;a=a[0]+(a[1]?\"?\"+a[1]:\"\")+a[2]}return a}Q(a,b,c);return a};function we(a){this.ya=0;this.g=[];this.a=new qc;this.I=new Vd;this.ja=this.wa=this.F=this.ka=this.b=this.K=this.j=this.U=this.h=this.M=this.i=null;this.Ua=this.P=0;this.la=this.B=this.o=this.m=this.l=this.f=null;this.u=this.xa=this.N=-1;this.T=this.w=this.C=0;this.S=a&&a.supportsCrossDomainXhr||!1;this.J=\"\";this.c=new Yd(a&&a.concurrentRequestLimit);this.ma=new he;this.D=a&&void 0!==a.backgroundChannelTest?a.backgroundChannelTest:!0;this.Ta=a&&a.fastHandshake||!1;a&&a.Ea&&this.a.Ea()}g=we.prototype;\ng.oa=8;g.G=1;function xe(a){I(a.a,\"disconnect()\");ye(a);if(3==a.G){var b=a.P++,c=L(a.F);Q(c,\"SID\",a.J);Q(c,\"RID\",b);Q(c,\"TYPE\",\"terminate\");ze(a,c);b=new K(a,a.a,b,void 0);b.K=2;b.h=Tc(L(c));c=!1;k.navigator&&k.navigator.sendBeacon&&(c=k.navigator.sendBeacon(b.h.toString(),\"\"));!c&&k.Image&&((new Image).src=b.h,c=!0);c||(b.a=b.i.da(null),b.a.fa(b.h));b.D=t();Wc(b)}Ae(a)}\nfunction ye(a){a.B&&(a.B.abort(),a.B=null);a.b&&(a.b.cancel(),a.b=null);a.m&&(k.clearTimeout(a.m),a.m=null);Be(a);a.c.cancel();a.l&&(k.clearTimeout(a.l),a.l=null)}function Ce(a,b){1E3==a.g.length&&xc(a.a,function(){return\"Already have 1000 queued maps upon queueing \"+Db(b)});a.g.push(new Xd(a.Ua++,b));3==a.G&&De(a)}g.Ja=function(){return 0==this.G};function De(a){be(a.c)||a.l||(a.l=Ec(r(a.Oa,a),0),a.C=0)}\nfunction Ee(a,b){var c=a.c;if((c.b?1:c.a?c.a.s():0)>=a.c.f-(a.l?1:0))return xc(a.a,\"Unexpected retry request is scheduled.\"),!1;if(a.l)return I(a.a,\"Use the retry request that is already scheduled.\"),a.g=b.u.concat(a.g),!0;if(1==a.G||2==a.G||2<=a.C)return!1;I(a.a,\"Going to retry POST\");a.l=Ec(r(a.Oa,a,b),Fe(a,a.C));a.C++;return!0}\ng.Oa=function(a){this.l=null;I(this.a,\"startForwardChannel_\");if(1==this.G)if(a)xc(this.a,\"Not supposed to retry the open\");else{I(this.a,\"open_()\");this.P=Math.floor(1E5*Math.random());a=this.P++;var b=new K(this,this.a,a,void 0),c=this.i;this.M&&(c?(c=Ea(c),Ga(c,this.M)):c=this.M);null===this.h&&(b.j=c);var d=Ge(this,b),e=L(this.F);Q(e,\"RID\",a);Q(e,\"CVER\",21);this.D&&this.j&&Q(e,\"X-HTTP-Session-Id\",this.j);ze(this,e);this.h&&c&&ve(e,this.h,c);ae(this.c,b);this.Ta?(Q(e,\"$req\",d),Sc(b,e,null)):Sc(b,\ne,d);this.G=2}else 3==this.G&&(a?He(this,a):0==this.g.length?I(this.a,\"startForwardChannel_ returned: nothing to send\"):be(this.c)?xc(this.a,\"startForwardChannel_ returned: connection already in progress\"):(He(this),I(this.a,\"startForwardChannel_ finished, sent request\")))};\nfunction He(a,b){var c;b?c=b.f:c=a.P++;var d=L(a.F);Q(d,\"SID\",a.J);Q(d,\"RID\",c);Q(d,\"AID\",a.N);ze(a,d);a.h&&a.i&&ve(d,a.h,a.i);c=new K(a,a.a,c,a.C+1);null===a.h&&(c.j=a.i);b&&(a.g=b.u.concat(a.g));b=Ge(a,c);c.setTimeout(1E4+Math.round(1E4*Math.random()));ae(a.c,c);Sc(c,d,b)}function ze(a,b){a.f&&hd({},function(a,d){Q(b,d,a)})}\nfunction Ge(a,b){var c=Math.min(a.g.length,1E3),d=a.f?r(a.f.Va,a.f,a):null;a:for(var e=a.g,f=-1;;){var h=[\"count=\"+c];-1==f?0<c?(f=e[0].a,h.push(\"ofs=\"+f)):f=0:h.push(\"ofs=\"+f);for(var m=!0,v=0;v<c;v++){var G=e[v].a,Z=e[v].b;G-=f;if(0>G)f=Math.max(0,e[v].a-100),m=!1;else try{ie(Z,h,\"req\"+G+\"_\")}catch(Mb){d&&d(Z)}}if(m){d=h.join(\"&\");break a}}a=a.g.splice(0,c);b.u=a;return d}function Ie(a){if(!a.b&&!a.m){a.T=1;var b=a.Na;Tb||Ub();Wb||(Tb(),Wb=!0);Pb.add(b,a);a.w=0}}\nfunction Je(a){if(a.b||a.m)return xc(a.a,\"Request already in progress\"),!1;if(3<=a.w)return!1;I(a.a,\"Going to retry GET\");a.T++;a.m=Ec(r(a.Na,a),Fe(a,a.w));a.w++;return!0}\ng.Na=function(){this.m=null;I(this.a,\"Creating new HttpRequest\");this.b=new K(this,this.a,\"rpc\",this.T);null===this.h&&(this.b.j=this.i);this.b.P=0;var a=L(this.wa);Q(a,\"RID\",\"rpc\");Q(a,\"SID\",this.J);Q(a,\"CI\",this.la?\"0\":\"1\");Q(a,\"AID\",this.N);ze(this,a);Q(a,\"TYPE\",\"xmlhttp\");this.h&&this.i&&ve(a,this.h,this.i);Vc(this.b,a,!0,this.ja);I(this.a,\"New Request created\")};\nfunction Sd(a,b,c){I(a.a,\"Test Connection Finished\");var d=b.m;d&&$d(a.c,d);a.la=c;a.u=b.f;I(a.a,\"connectChannel_()\");a.F=Ke(a,a.ka);De(a)}function Ud(a,b){I(a.a,\"Test Connection Failed\");a.u=b.f;V(a,2)}\ng.Ma=function(a,b){if(0!=this.G&&(this.b==a||ce(this.c,a)))if(this.u=a.C,ce(this.c,a)&&3==this.G){try{var c=this.ma.a.parse(b)}catch(f){c=null}if(n(c)&&3==c.length)if(b=c,0==b[0])a:if(I(this.a,\"Server claims our backchannel is missing.\"),this.m)I(this.a,\"But we are currently starting the request.\");else{if(this.b)if(this.b.D+3E3<a.D)Be(this),this.b.cancel(),this.b=null;else break a;else E(this.a.a,\"We do not have a BackChannel established\");Je(this);J(18)}else this.xa=b[1],a=this.xa-this.N,0<a&&(b=\nb[2],I(this.a,b+\" bytes (in \"+a+\" arrays) are outstanding on the BackChannel\"),37500>b&&this.la&&0==this.w&&!this.o&&(this.o=Ec(r(this.bb,this),6E3)));else I(this.a,\"Bad POST response data returned\"),V(this,11)}else if(this.b==a&&Be(this),!/^[\\s\\xa0]*$/.test(b))for(b=c=this.ma.a.parse(b),c=0;c<b.length;c++){var d=b[c];this.N=d[0];d=d[1];if(2==this.G)if(\"c\"==d[0]){this.J=d[1];this.ja=d[2];var e=d[3];null!=e&&(this.oa=e,H(this.a,\"VER=\"+this.oa));d=d[4];null!=d&&(this.ya=d,H(this.a,\"SVER=\"+this.ya));\nthis.D&&(d=a.a)&&((e=d.a?d.a.getResponseHeader(\"X-Client-Wire-Protocol\"):null)&&$d(this.c,e),this.j&&((d=d.a?d.a.getResponseHeader(\"X-HTTP-Session-Id\"):null)?(this.K=d,Q(this.F,this.j,d)):E(this.a.a,\"Missing X_HTTP_SESSION_ID in the handshake response\")));this.G=3;this.f&&this.f.Da();this.wa=Td(this,this.ja,this.ka);Ie(this)}else\"stop\"!=d[0]&&\"close\"!=d[0]||V(this,7);else 3==this.G&&(\"stop\"==d[0]||\"close\"==d[0]?\"stop\"==d[0]?V(this,7):xe(this):\"noop\"!=d[0]&&this.f&&this.f.Ca(d),this.w=0)}};\ng.bb=function(){null!=this.o&&(this.o=null,this.b.cancel(),this.b=null,Je(this),J(19))};function Be(a){null!=a.o&&(k.clearTimeout(a.o),a.o=null)}\ng.ua=function(a){I(this.a,\"Request complete\");var b=null;if(this.b==a){Be(this);this.b=null;var c=2}else if(ce(this.c,a))b=a.u,de(this.c,a),c=1;else return;this.u=a.C;if(0!=this.G)if(a.c)1==c?(Dc(a.m?a.m.length:0,t()-a.D,this.C),De(this)):Ie(this);else{var d=a.l;if(3==d||0==d&&0<this.u)I(this.a,\"Not retrying due to error type\");else{var e=this;I(this.a,function(){return\"Maybe retrying, last error: \"+Pc(d,e.u)});if(1==c&&Ee(this,a)||2==c&&Je(this))return;I(this.a,\"Exceeded max number of retries\")}b&&\n0<b.length&&fe(this.c,b);I(this.a,\"Error: HTTP request failed\");switch(d){case 1:V(this,5);break;case 4:V(this,10);break;case 3:V(this,6);break;default:V(this,2)}}};function Fe(a,b){var c=5E3+Math.floor(1E4*Math.random());a.ra()||(I(a.a,\"Inactive channel\"),c*=2);return c*b}\nfunction V(a,b){H(a.a,\"Error code \"+b);if(2==b){var c=null;a.f&&(c=null);var d=r(a.jb,a);c||(c=new P(\"//www.google.com/images/cleardot.gif\"),k.location&&\"http\"==k.location.protocol||nd(c,\"https\"),Tc(c));je(c.toString(),d)}else J(2);I(a.a,\"HttpChannel: error - \"+b);a.G=0;a.f&&a.f.Ba(b);Ae(a);ye(a)}g.jb=function(a){a?(H(this.a,\"Successfully pinged google.com\"),J(2)):(H(this.a,\"Failed to ping google.com\"),J(1))};\nfunction Ae(a){a.G=0;a.u=-1;if(a.f){var b=ee(a.c);if(0!=b.length||0!=a.g.length)I(a.a,function(){return\"Number of undelivered maps, pending: \"+b.length+\", outgoing: \"+a.g.length}),a.c.c.length=0,ya(a.g),a.g.length=0;a.f.Aa()}}function Ke(a,b){b=Le(a,null,b);I(a.a,\"GetForwardChannelUri: \"+b);return b}function Td(a,b,c){b=Le(a,a.ia()?b:null,c);I(a.a,\"GetBackChannelUri: \"+b);return b}\nfunction Le(a,b,c){var d=Cd(c);if(\"\"!=d.b)b&&od(d,b+\".\"+d.b),pd(d,d.i);else{var e=k.location,f;b?f=b+\".\"+e.hostname:f=e.hostname;d=Dd(e.protocol,f,e.port,c)}a.U&&Ba(a.U,function(a,b){Q(d,b,a)});b=a.j;c=a.K;b&&c&&Q(d,b,c);Q(d,\"VER\",a.oa);ze(a,d);return d}g.da=function(a){if(a&&!this.S)throw Error(\"Can't create secondary domain capable XhrIo object.\");a=new T;a.m=this.S;return a};g.ra=function(){return!!this.f&&!0};g.ia=function(){return this.S};new Ld;function Me(){}g=Me.prototype;g.Da=function(){};\ng.Ca=function(){};g.Ba=function(){};g.Aa=function(){};g.Va=function(){};function Ne(a){for(var b=arguments[0],c=1;c<arguments.length;c++){var d=arguments[c];if(0==d.lastIndexOf(\"/\",0))b=d;else{var e;(e=\"\"==b)||(e=b.length-1,e=0<=e&&b.indexOf(\"/\",e)==e);e?b+=d:b+=\"/\"+d}}return b};function Oe(){if(z&&!(10<=Number(Ua)))throw Error(\"Environmental error: no available transport.\");}Oe.prototype.a=function(a,b){return new W(a,b)};\nfunction W(a,b){B.call(this);this.a=new we(b);this.b=a;this.m=b&&b.testUrl?b.testUrl:Ne(this.b,\"test\");this.f=oc(\"goog.labs.net.webChannel.WebChannelBaseTransport\");this.g=b&&b.messageUrlParams||null;a=b&&b.messageHeaders||null;b&&b.clientProtocolHeaderRequired&&(a?a[\"X-Client-Protocol\"]=\"webchannel\":a={\"X-Client-Protocol\":\"webchannel\"});this.a.i=a;a=b&&b.initMessageHeaders||null;b&&b.messageContentType&&(a?a[\"X-WebChannel-Content-Type\"]=b.messageContentType:a={\"X-WebChannel-Content-Type\":b.messageContentType});\nthis.a.M=a;(a=b&&b.httpHeadersOverwriteParam)&&!/^[\\s\\xa0]*$/.test(a)&&(this.a.h=a);this.l=b&&b.supportsCrossDomainXhr||!1;this.j=b&&b.sendRawJson||!1;(b=b&&b.httpSessionIdParam)&&!/^[\\s\\xa0]*$/.test(b)&&(this.a.j=b,a=this.g,null!==a&&b in a&&(a=this.g,b in a&&delete a[b],E(this.f,\"Ignore httpSessionIdParam also specified with messageUrlParams: \"+b)));this.h=new Pe(this)}u(W,B);g=W.prototype;g.addEventListener=function(a,b,c,d){W.H.addEventListener.call(this,a,b,c,d)};\ng.removeEventListener=function(a,b,c,d){W.H.removeEventListener.call(this,a,b,c,d)};\ng.Za=function(){this.a.f=this.h;this.l&&(this.a.S=!0);var a=this.a,b=this.m,c=this.b,d=this.g||void 0;I(a.a,\"connect()\");J(0);a.ka=c;a.U=d||{};a.D&&(I(a.a,\"connect() bypassed channel-test.\"),a.I.b=[],a.I.a=!1);I(a.a,\"connectTest_()\");a.B=new Qd(a,a.a);null===a.h&&(a.B.i=a.i);c=b;a.h&&a.i&&(c=ve(b,a.h,a.i));a=a.B;a.l=c;b=Ke(a.a,a.l);J(3);c=a.a.I.b;null!=c?(a.g=c[0],a.R=1,Rd(a)):(Xc(b,\"MODE\",\"init\"),!a.a.D&&a.a.j&&Xc(b,\"X-HTTP-Session-Id\",a.a.j),a.c=new K(a,a.b,void 0,void 0),a.c.j=a.i,Vc(a.c,b,!1,\nnull),a.R=0)};g.close=function(){xe(this.a)};g.$a=function(a){if(l(a)){var b={};b.__data__=a;Ce(this.a,b)}else this.j?(b={},b.__data__=Db(a),Ce(this.a,b)):Ce(this.a,a)};g.A=function(){this.a.f=null;delete this.h;xe(this.a);delete this.a;W.H.A.call(this)};function Qe(a){Od.call(this);var b=a.__sm__;if(b){a:{for(var c in b){a=c;break a}a=void 0}(this.c=a)?(a=this.c,this.data=null!==b&&a in b?b[a]:void 0):this.data=b}else this.data=a}u(Qe,Od);function Re(){Pd.call(this);this.status=1}u(Re,Pd);\nfunction Pe(a){this.a=a}u(Pe,Me);Pe.prototype.Da=function(){pc(this.a.f,\"WebChannel opened on \"+this.a.b);this.a.dispatchEvent(\"a\")};Pe.prototype.Ca=function(a){this.a.dispatchEvent(new Qe(a))};Pe.prototype.Ba=function(a){pc(this.a.f,\"WebChannel aborted on \"+this.a.b+\" due to channel error: \"+a);this.a.dispatchEvent(new Re(a))};Pe.prototype.Aa=function(){pc(this.a.f,\"WebChannel closed on \"+this.a.b);this.a.dispatchEvent(\"b\")};var Se=ia(function(a,b){function c(){}c.prototype=a.prototype;var d=new c;a.apply(d,Array.prototype.slice.call(arguments,1));return d},Oe);function Te(){this.b=[];this.a=[]}function Ue(a){0==a.b.length&&(a.b=a.a,a.b.reverse(),a.a=[]);return a.b.pop()}Te.prototype.s=function(){return this.b.length+this.a.length};Te.prototype.contains=function(a){return 0<=sa(this.b,a)||0<=sa(this.a,a)};Te.prototype.v=function(){for(var a=[],b=this.b.length-1;0<=b;--b)a.push(this.b[b]);var c=this.a.length;for(b=0;b<c;++b)a.push(this.a[b]);return a};function Ve(a,b){w.call(this);this.h=a||0;this.c=b||10;if(this.h>this.c)throw Error(We);this.a=new Te;this.b=new S;this.g=null;this.ba()}u(Ve,w);var We=\"[goog.structs.Pool] Min can not be greater than max\";g=Ve.prototype;g.ea=function(){var a=t();if(!(null!=this.g&&0>a-this.g)){for(var b;0<this.a.s()&&(b=Ue(this.a),!this.ta(b));)this.ba();!b&&this.s()<this.c&&(b=this.qa());b&&(this.g=a,this.b.add(b));return b}};g.ib=function(a){return kd(this.b.a,Wd(a))?(this.na(a),!0):!1};\ng.na=function(a){kd(this.b.a,Wd(a));this.ta(a)&&this.s()<this.c?this.a.a.push(a):Xe(a)};g.ba=function(){for(var a=this.a;this.s()<this.h;){var b=this.qa();a.a.push(b)}for(;this.s()>this.c&&0<this.a.s();)Xe(Ue(a))};g.qa=function(){return{}};function Xe(a){if(\"function\"==typeof a.Z)a.Z();else for(var b in a)a[b]=null}g.ta=function(a){return\"function\"==typeof a.Wa?a.Wa():!0};g.contains=function(a){return this.a.contains(a)||this.b.contains(a)};g.s=function(){return this.a.s()+this.b.s()};\ng.A=function(){Ve.H.A.call(this);if(0<this.b.s())throw Error(\"[goog.structs.Pool] Objects not released\");delete this.b;for(var a=this.a;0!=a.b.length||0!=a.a.length;)Xe(Ue(a));delete this.a};function Ye(a,b){this.a=a;this.b=b};function Ze(a){this.a=[];if(a)a:{if(a instanceof Ze){var b=a.O();a=a.v();if(0>=this.s()){for(var c=this.a,d=0;d<b.length;d++)c.push(new Ye(b[d],a[d]));break a}}else b=Da(a),a=Ca(a);for(d=0;d<b.length;d++)$e(this,b[d],a[d])}}function $e(a,b,c){var d=a.a;d.push(new Ye(b,c));b=d.length-1;a=a.a;for(c=a[b];0<b;)if(d=b-1>>1,a[d].a>c.a)a[b]=a[d],b=d;else break;a[b]=c}Ze.prototype.v=function(){for(var a=this.a,b=[],c=a.length,d=0;d<c;d++)b.push(a[d].b);return b};\nZe.prototype.O=function(){for(var a=this.a,b=[],c=a.length,d=0;d<c;d++)b.push(a[d].a);return b};Ze.prototype.s=function(){return this.a.length};function af(){Ze.call(this)}u(af,Ze);function X(a,b){this.f=new af;Ve.call(this,a,b)}u(X,Ve);g=X.prototype;g.ea=function(a,b){if(!a)return X.H.ea.call(this);$e(this.f,void 0!==b?b:100,a);this.sa()};g.sa=function(){for(var a=this.f;0<a.s();){var b=this.ea();if(b){var c=a,d=c.a,e=d.length;var f=d[0];if(0>=e)f=void 0;else{if(1==e)wa(d);else{d[0]=d.pop();d=0;c=c.a;e=c.length;for(var h=c[d];d<e>>1;){var m=2*d+1,v=2*d+2;m=v<e&&c[v].a<c[m].a?v:m;if(c[m].a>h.a)break;c[d]=c[m];d=m}c[d]=h}f=f.b}f.apply(this,[b])}else break}};\ng.na=function(a){X.H.na.call(this,a);this.sa()};g.ba=function(){X.H.ba.call(this);this.sa()};g.A=function(){X.H.A.call(this);k.clearTimeout(void 0);wa(this.f.a);this.f=null};function Y(a,b,c,d){this.l=a;this.j=!!d;X.call(this,b,c)}u(Y,X);Y.prototype.qa=function(){var a=new T,b=this.l;b&&b.forEach(function(b,d){a.headers.set(d,b)});this.j&&(a.m=!0);return a};Y.prototype.ta=function(a){return!a.i&&!a.a};Oe.prototype.createWebChannel=Oe.prototype.a;W.prototype.send=W.prototype.$a;W.prototype.open=W.prototype.Za;W.prototype.close=W.prototype.close;Fc.NO_ERROR=0;Fc.TIMEOUT=8;Fc.HTTP_ERROR=6;Gc.COMPLETE=\"complete\";Md.EventType=Nd;Nd.OPEN=\"a\";Nd.CLOSE=\"b\";Nd.ERROR=\"c\";Nd.MESSAGE=\"d\";B.prototype.listen=B.prototype.aa;Y.prototype.getObject=Y.prototype.ea;Y.prototype.releaseObject=Y.prototype.ib;T.prototype.listenOnce=T.prototype.Ha;T.prototype.getLastError=T.prototype.ab;T.prototype.getLastErrorCode=T.prototype.Fa;\nT.prototype.getStatus=T.prototype.W;T.prototype.getStatusText=T.prototype.Ga;T.prototype.getResponseJson=T.prototype.Ya;T.prototype.getResponseText=T.prototype.V;T.prototype.getResponseText=T.prototype.V;T.prototype.send=T.prototype.fa;module.exports={createWebChannelTransport:Se,ErrorCode:Fc,EventType:Gc,WebChannel:Md,XhrIoPool:Y};}).call(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/webchannel-wrapper/dist/index.js\n// module id = 279\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert';\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nvar StreamBridge = /** @class */ (function () {\n    function StreamBridge(args) {\n        this.sendFn = args.sendFn;\n        this.closeFn = args.closeFn;\n    }\n    StreamBridge.prototype.onOpen = function (callback) {\n        assert(!this.wrappedOnOpen, 'Called onOpen on stream twice!');\n        this.wrappedOnOpen = callback;\n    };\n    StreamBridge.prototype.onClose = function (callback) {\n        assert(!this.wrappedOnClose, 'Called onClose on stream twice!');\n        this.wrappedOnClose = callback;\n    };\n    StreamBridge.prototype.onMessage = function (callback) {\n        assert(!this.wrappedOnMessage, 'Called onMessage on stream twice!');\n        this.wrappedOnMessage = callback;\n    };\n    StreamBridge.prototype.close = function () {\n        this.closeFn();\n    };\n    StreamBridge.prototype.send = function (msg) {\n        this.sendFn(msg);\n    };\n    StreamBridge.prototype.callOnOpen = function () {\n        assert(this.wrappedOnOpen !== undefined, 'Cannot call onOpen because no callback was set');\n        this.wrappedOnOpen();\n    };\n    StreamBridge.prototype.callOnClose = function (err) {\n        assert(this.wrappedOnClose !== undefined, 'Cannot call onClose because no callback was set');\n        this.wrappedOnClose(err);\n    };\n    StreamBridge.prototype.callOnMessage = function (msg) {\n        assert(this.wrappedOnMessage !== undefined, 'Cannot call onMessage because no callback was set');\n        this.wrappedOnMessage(msg);\n    };\n    return StreamBridge;\n}());\nexport { StreamBridge };\n\n//# sourceMappingURL=stream_bridge.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/stream_bridge.js\n// module id = 280\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PublicBlob } from '../api/blob';\nimport { Firestore, PublicCollectionReference, PublicDocumentReference, PublicDocumentSnapshot, PublicFirestore, PublicQuery, PublicQueryDocumentSnapshot, PublicQuerySnapshot, PublicTransaction, PublicWriteBatch } from '../api/database';\nimport { FieldPath } from '../api/field_path';\nimport { PublicFieldValue } from '../api/field_value';\nimport { GeoPoint } from '../api/geo_point';\nimport { shallowCopy } from '../util/obj';\nvar firestoreNamespace = {\n    Firestore: PublicFirestore,\n    GeoPoint: GeoPoint,\n    Blob: PublicBlob,\n    Transaction: PublicTransaction,\n    WriteBatch: PublicWriteBatch,\n    DocumentReference: PublicDocumentReference,\n    DocumentSnapshot: PublicDocumentSnapshot,\n    Query: PublicQuery,\n    QueryDocumentSnapshot: PublicQueryDocumentSnapshot,\n    QuerySnapshot: PublicQuerySnapshot,\n    CollectionReference: PublicCollectionReference,\n    FieldPath: FieldPath,\n    FieldValue: PublicFieldValue,\n    setLogLevel: Firestore.setLogLevel\n};\n/**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n */\nexport function configureForFirebase(firebase) {\n    firebase.INTERNAL.registerService('firestore', function (app) { return new Firestore(app); }, shallowCopy(firestoreNamespace));\n}\n/**\n * Exports the Firestore namespace into the provided `exportObject` object under\n * the key 'firestore'. This is used for wrapped binary that exposes Firestore\n * as a goog module.\n */\nexport function configureForStandalone(exportObject) {\n    var copiedNamespace = shallowCopy(firestoreNamespace);\n    // Unlike the use with Firebase, the standalone allows the use of the\n    // constructor, so export it's internal class\n    copiedNamespace['Firestore'] = Firestore;\n    exportObject['firestore'] = copiedNamespace;\n}\n\n//# sourceMappingURL=config.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/platform/config.js\n// module id = 281\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { FieldPath as ExternalFieldPath } from './field_path';\nimport { DatabaseId, DatabaseInfo } from '../core/database_info';\nimport { FirestoreClient } from '../core/firestore_client';\nimport { Bound, Direction, fieldFilter, OrderBy, Query as InternalQuery, RelationFilter, RelationOp } from '../core/query';\nimport { ChangeType } from '../core/view_snapshot';\nimport { NoDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { ArrayValue, FieldValueOptions, ObjectValue, RefValue } from '../model/field_value';\nimport { DeleteMutation, Precondition } from '../model/mutation';\nimport { ResourcePath } from '../model/path';\nimport { PlatformSupport } from '../platform/platform';\nimport { makeConstructorPrivate } from '../util/api';\nimport { assert, fail } from '../util/assert';\nimport { AsyncObserver } from '../util/async_observer';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { invalidClassError, validateArgType, validateAtLeastNumberOfArgs, validateBetweenNumberOfArgs, validateDefined, validateExactNumberOfArgs, validateNamedOptionalType, validateNamedOptionalPropertyEquals, validateNamedType, validateOptionalArgType, validateOptionNames, valueDescription } from '../util/input_validation';\nimport * as log from '../util/log';\nimport { LogLevel } from '../util/log';\nimport { AutoId } from '../util/misc';\nimport * as objUtils from '../util/obj';\nimport { EmptyCredentialsProvider, FirebaseCredentialsProvider, makeCredentialsProvider } from './credentials';\nimport { isPartialObserver } from './observer';\nimport { DocumentKeyReference, fieldPathFromArgument, UserDataConverter } from './user_data_converter';\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n// tslint:disable:strip-private-property-underscore\nvar DEFAULT_HOST = 'firestore.googleapis.com';\nvar DEFAULT_SSL = true;\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied firestore.Settings object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nvar FirestoreSettings = /** @class */ (function () {\n    function FirestoreSettings(settings) {\n        if (settings.host === undefined) {\n            if (settings.ssl !== undefined) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n            }\n            this.host = DEFAULT_HOST;\n            this.ssl = DEFAULT_SSL;\n        }\n        else {\n            validateNamedType('settings', 'string', 'host', settings.host);\n            this.host = settings.host;\n            validateNamedOptionalType('settings', 'boolean', 'ssl', settings.ssl);\n            this.ssl = objUtils.defaulted(settings.ssl, DEFAULT_SSL);\n        }\n        validateOptionNames('settings', settings, ['host', 'ssl', 'credentials']);\n        validateNamedOptionalType('settings', 'object', 'credentials', settings.credentials);\n        this.credentials = settings.credentials;\n    }\n    FirestoreSettings.prototype.isEqual = function (other) {\n        return (this.host === other.host &&\n            this.ssl === other.ssl &&\n            this.credentials === other.credentials);\n    };\n    return FirestoreSettings;\n}());\nvar FirestoreConfig = /** @class */ (function () {\n    function FirestoreConfig() {\n    }\n    return FirestoreConfig;\n}());\n/**\n * The root reference to the database.\n */\nvar Firestore = /** @class */ (function () {\n    function Firestore(databaseIdOrApp) {\n        var _this = this;\n        this._queue = new AsyncQueue();\n        this.INTERNAL = {\n            delete: function () {\n                if (_this._firestoreClient) {\n                    return _this._firestoreClient.shutdown();\n                }\n                else {\n                    return Promise.resolve();\n                }\n            },\n            // Exposed via INTERNAL for use in tests.\n            drainAsyncQueue: function (executeDelayedTasks) {\n                return _this._queue.drain(executeDelayedTasks);\n            }\n        };\n        var config = new FirestoreConfig();\n        if (typeof databaseIdOrApp.options === 'object') {\n            // This is very likely a Firebase app object\n            // TODO(b/34177605): Can we somehow use instanceof?\n            var app = databaseIdOrApp;\n            config.firebaseApp = app;\n            config.databaseId = Firestore.databaseIdFromApp(app);\n            config.persistenceKey = config.firebaseApp.name;\n            config.credentials = new FirebaseCredentialsProvider(app);\n        }\n        else {\n            var external_1 = databaseIdOrApp;\n            if (!external_1.projectId) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide projectId');\n            }\n            config.databaseId = new DatabaseId(external_1.projectId, external_1.database);\n            // Use a default persistenceKey that lines up with FirebaseApp.\n            config.persistenceKey = '[DEFAULT]';\n            config.credentials = new EmptyCredentialsProvider();\n        }\n        config.settings = new FirestoreSettings({});\n        this._config = config;\n        this._databaseId = config.databaseId;\n    }\n    Firestore.prototype.settings = function (settingsLiteral) {\n        validateExactNumberOfArgs('Firestore.settings', arguments, 1);\n        validateArgType('Firestore.settings', 'object', 1, settingsLiteral);\n        if (objUtils.contains(settingsLiteral, 'persistence')) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, '\"persistence\" is now specified with a separate call to ' +\n                'firestore.enablePersistence().');\n        }\n        var newSettings = new FirestoreSettings(settingsLiteral);\n        if (this._firestoreClient && !this._config.settings.isEqual(newSettings)) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'Firestore has already been started and its settings can no longer ' +\n                'be changed. You can only call settings() before calling any other ' +\n                'methods on a Firestore object.');\n        }\n        this._config.settings = newSettings;\n        if (newSettings.credentials !== undefined) {\n            this._config.credentials = makeCredentialsProvider(newSettings.credentials);\n        }\n    };\n    Firestore.prototype.enableNetwork = function () {\n        this.ensureClientConfigured();\n        return this._firestoreClient.enableNetwork();\n    };\n    Firestore.prototype.disableNetwork = function () {\n        this.ensureClientConfigured();\n        return this._firestoreClient.disableNetwork();\n    };\n    Firestore.prototype.enablePersistence = function () {\n        if (this._firestoreClient) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'Firestore has already been started and persistence can no longer ' +\n                'be enabled. You can only call enablePersistence() before calling ' +\n                'any other methods on a Firestore object.');\n        }\n        return this.configureClient(/* persistence= */ true);\n    };\n    Firestore.prototype.ensureClientConfigured = function () {\n        if (!this._firestoreClient) {\n            this.configureClient(/* persistence= */ false);\n        }\n        return this._firestoreClient;\n    };\n    Firestore.prototype.configureClient = function (persistence) {\n        var _this = this;\n        assert(!!this._config.settings.host, 'FirestoreSettings.host cannot be falsey');\n        assert(!this._firestoreClient, 'configureClient() called multiple times');\n        var databaseInfo = new DatabaseInfo(this._config.databaseId, this._config.persistenceKey, this._config.settings.host, this._config.settings.ssl);\n        var preConverter = function (value) {\n            if (value instanceof DocumentReference) {\n                var thisDb = _this._config.databaseId;\n                var otherDb = value.firestore._config.databaseId;\n                if (!otherDb.isEqual(thisDb)) {\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Document reference is for database ' +\n                        (otherDb.projectId + \"/\" + otherDb.database + \" but should be \") +\n                        (\"for database \" + thisDb.projectId + \"/\" + thisDb.database));\n                }\n                return new DocumentKeyReference(_this._config.databaseId, value._key);\n            }\n            else {\n                return value;\n            }\n        };\n        this._dataConverter = new UserDataConverter(preConverter);\n        this._firestoreClient = new FirestoreClient(PlatformSupport.getPlatform(), databaseInfo, this._config.credentials, this._queue);\n        return this._firestoreClient.start(persistence);\n    };\n    Firestore.databaseIdFromApp = function (app) {\n        var options = app.options;\n        if (!objUtils.contains(options, 'projectId')) {\n            // TODO(b/62673263): We can safely remove the special handling of\n            // 'firestoreId' once alpha testers have upgraded.\n            if (objUtils.contains(options, 'firestoreId')) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, '\"firestoreId\" is now specified as \"projectId\" in ' +\n                    'firebase.initializeApp.');\n            }\n            throw new FirestoreError(Code.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n        }\n        if (objUtils.contains(options, 'firestoreOptions')) {\n            // TODO(b/62673263): We can safely remove the special handling of\n            // 'firestoreOptions' once alpha testers have upgraded.\n            throw new FirestoreError(Code.INVALID_ARGUMENT, '\"firestoreOptions\" values are now specified with ' +\n                'Firestore.settings()');\n        }\n        var projectId = options['projectId'];\n        if (!projectId || typeof projectId !== 'string') {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'projectId must be a string in FirebaseApp.options');\n        }\n        return new DatabaseId(projectId);\n    };\n    Object.defineProperty(Firestore.prototype, \"app\", {\n        get: function () {\n            if (!this._config.firebaseApp) {\n                throw new FirestoreError(Code.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\n                    'not available');\n            }\n            return this._config.firebaseApp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Firestore.prototype.collection = function (pathString) {\n        validateExactNumberOfArgs('Firestore.collection', arguments, 1);\n        validateArgType('Firestore.collection', 'string', 1, pathString);\n        if (!pathString) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide a non-empty collection path to collection()');\n        }\n        this.ensureClientConfigured();\n        return new CollectionReference(ResourcePath.fromString(pathString), this);\n    };\n    Firestore.prototype.doc = function (pathString) {\n        validateExactNumberOfArgs('Firestore.doc', arguments, 1);\n        validateArgType('Firestore.doc', 'string', 1, pathString);\n        if (!pathString) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide a non-empty document path to doc()');\n        }\n        this.ensureClientConfigured();\n        return DocumentReference.forPath(ResourcePath.fromString(pathString), this);\n    };\n    Firestore.prototype.runTransaction = function (updateFunction) {\n        var _this = this;\n        validateExactNumberOfArgs('Firestore.runTransaction', arguments, 1);\n        validateArgType('Firestore.runTransaction', 'function', 1, updateFunction);\n        return this.ensureClientConfigured().transaction(function (transaction) {\n            return updateFunction(new Transaction(_this, transaction));\n        });\n    };\n    Firestore.prototype.batch = function () {\n        this.ensureClientConfigured();\n        return new WriteBatch(this);\n    };\n    Object.defineProperty(Firestore, \"logLevel\", {\n        get: function () {\n            switch (log.getLogLevel()) {\n                case LogLevel.DEBUG:\n                    return 'debug';\n                case LogLevel.ERROR:\n                    return 'error';\n                case LogLevel.SILENT:\n                    return 'silent';\n                default:\n                    return fail('Unknown log level: ' + log.getLogLevel());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Firestore.setLogLevel = function (level) {\n        validateExactNumberOfArgs('Firestore.setLogLevel', arguments, 1);\n        validateArgType('Firestore.setLogLevel', 'string', 1, level);\n        switch (level) {\n            case 'debug':\n                log.setLogLevel(log.LogLevel.DEBUG);\n                break;\n            case 'error':\n                log.setLogLevel(log.LogLevel.ERROR);\n                break;\n            case 'silent':\n                log.setLogLevel(log.LogLevel.SILENT);\n                break;\n            default:\n                throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid log level: ' + level);\n        }\n    };\n    return Firestore;\n}());\nexport { Firestore };\n/**\n * A reference to a transaction.\n */\nvar Transaction = /** @class */ (function () {\n    function Transaction(_firestore, _transaction) {\n        this._firestore = _firestore;\n        this._transaction = _transaction;\n    }\n    Transaction.prototype.get = function (documentRef) {\n        var _this = this;\n        validateExactNumberOfArgs('Transaction.get', arguments, 1);\n        var ref = validateReference('Transaction.get', documentRef, this._firestore);\n        return this._transaction\n            .lookup([ref._key])\n            .then(function (docs) {\n            if (!docs || docs.length !== 1) {\n                return fail('Mismatch in docs returned from document lookup.');\n            }\n            var doc = docs[0];\n            if (doc instanceof NoDocument) {\n                return new DocumentSnapshot(_this._firestore, ref._key, null, false);\n            }\n            return new DocumentSnapshot(_this._firestore, ref._key, doc, false);\n        });\n    };\n    Transaction.prototype.set = function (documentRef, value, options) {\n        validateBetweenNumberOfArgs('Transaction.set', arguments, 2, 3);\n        var ref = validateReference('Transaction.set', documentRef, this._firestore);\n        options = validateSetOptions('Transaction.set', options);\n        var parsed = options.merge\n            ? this._firestore._dataConverter.parseMergeData('Transaction.set', value)\n            : this._firestore._dataConverter.parseSetData('Transaction.set', value);\n        this._transaction.set(ref._key, parsed);\n        return this;\n    };\n    Transaction.prototype.update = function (documentRef, fieldOrUpdateData, value) {\n        var moreFieldsAndValues = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            moreFieldsAndValues[_i - 3] = arguments[_i];\n        }\n        var ref;\n        var parsed;\n        if (typeof fieldOrUpdateData === 'string' ||\n            fieldOrUpdateData instanceof ExternalFieldPath) {\n            validateAtLeastNumberOfArgs('Transaction.update', arguments, 3);\n            ref = validateReference('Transaction.update', documentRef, this._firestore);\n            parsed = this._firestore._dataConverter.parseUpdateVarargs('Transaction.update', fieldOrUpdateData, value, moreFieldsAndValues);\n        }\n        else {\n            validateExactNumberOfArgs('Transaction.update', arguments, 2);\n            ref = validateReference('Transaction.update', documentRef, this._firestore);\n            parsed = this._firestore._dataConverter.parseUpdateData('Transaction.update', fieldOrUpdateData);\n        }\n        this._transaction.update(ref._key, parsed);\n        return this;\n    };\n    Transaction.prototype.delete = function (documentRef) {\n        validateExactNumberOfArgs('Transaction.delete', arguments, 1);\n        var ref = validateReference('Transaction.delete', documentRef, this._firestore);\n        this._transaction.delete(ref._key);\n        return this;\n    };\n    return Transaction;\n}());\nexport { Transaction };\nvar WriteBatch = /** @class */ (function () {\n    function WriteBatch(_firestore) {\n        this._firestore = _firestore;\n        this._mutations = [];\n        this._committed = false;\n    }\n    WriteBatch.prototype.set = function (documentRef, value, options) {\n        validateBetweenNumberOfArgs('WriteBatch.set', arguments, 2, 3);\n        this.verifyNotCommitted();\n        var ref = validateReference('WriteBatch.set', documentRef, this._firestore);\n        options = validateSetOptions('WriteBatch.set', options);\n        var parsed = options.merge\n            ? this._firestore._dataConverter.parseMergeData('WriteBatch.set', value)\n            : this._firestore._dataConverter.parseSetData('WriteBatch.set', value);\n        this._mutations = this._mutations.concat(parsed.toMutations(ref._key, Precondition.NONE));\n        return this;\n    };\n    WriteBatch.prototype.update = function (documentRef, fieldOrUpdateData, value) {\n        var moreFieldsAndValues = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            moreFieldsAndValues[_i - 3] = arguments[_i];\n        }\n        this.verifyNotCommitted();\n        var ref;\n        var parsed;\n        if (typeof fieldOrUpdateData === 'string' ||\n            fieldOrUpdateData instanceof ExternalFieldPath) {\n            validateAtLeastNumberOfArgs('WriteBatch.update', arguments, 3);\n            ref = validateReference('WriteBatch.update', documentRef, this._firestore);\n            parsed = this._firestore._dataConverter.parseUpdateVarargs('WriteBatch.update', fieldOrUpdateData, value, moreFieldsAndValues);\n        }\n        else {\n            validateExactNumberOfArgs('WriteBatch.update', arguments, 2);\n            ref = validateReference('WriteBatch.update', documentRef, this._firestore);\n            parsed = this._firestore._dataConverter.parseUpdateData('WriteBatch.update', fieldOrUpdateData);\n        }\n        this._mutations = this._mutations.concat(parsed.toMutations(ref._key, Precondition.exists(true)));\n        return this;\n    };\n    WriteBatch.prototype.delete = function (documentRef) {\n        validateExactNumberOfArgs('WriteBatch.delete', arguments, 1);\n        this.verifyNotCommitted();\n        var ref = validateReference('WriteBatch.delete', documentRef, this._firestore);\n        this._mutations = this._mutations.concat(new DeleteMutation(ref._key, Precondition.NONE));\n        return this;\n    };\n    WriteBatch.prototype.commit = function () {\n        this.verifyNotCommitted();\n        this._committed = true;\n        if (this._mutations.length > 0) {\n            return this._firestore.ensureClientConfigured().write(this._mutations);\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    WriteBatch.prototype.verifyNotCommitted = function () {\n        if (this._committed) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'A write batch can no longer be used after commit() ' +\n                'has been called.');\n        }\n    };\n    return WriteBatch;\n}());\nexport { WriteBatch };\n/**\n * A reference to a particular document in a collection in the database.\n */\nvar DocumentReference = /** @class */ (function () {\n    function DocumentReference(_key, firestore) {\n        this._key = _key;\n        this.firestore = firestore;\n        this._firestoreClient = this.firestore.ensureClientConfigured();\n    }\n    DocumentReference.forPath = function (path, firestore) {\n        if (path.length % 2 !== 0) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid document reference. Document ' +\n                'references must have an even number of segments, but ' +\n                (path.canonicalString() + \" has \" + path.length));\n        }\n        return new DocumentReference(new DocumentKey(path), firestore);\n    };\n    Object.defineProperty(DocumentReference.prototype, \"id\", {\n        get: function () {\n            return this._key.path.lastSegment();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentReference.prototype, \"parent\", {\n        get: function () {\n            return new CollectionReference(this._key.path.popLast(), this.firestore);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentReference.prototype, \"path\", {\n        get: function () {\n            return this._key.path.canonicalString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DocumentReference.prototype.collection = function (pathString) {\n        validateExactNumberOfArgs('DocumentReference.collection', arguments, 1);\n        validateArgType('DocumentReference.collection', 'string', 1, pathString);\n        if (!pathString) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide a non-empty collection name to collection()');\n        }\n        var path = ResourcePath.fromString(pathString);\n        return new CollectionReference(this._key.path.child(path), this.firestore);\n    };\n    DocumentReference.prototype.isEqual = function (other) {\n        if (!(other instanceof DocumentReference)) {\n            throw invalidClassError('isEqual', 'DocumentReference', 1, other);\n        }\n        return this.firestore === other.firestore && this._key.isEqual(other._key);\n    };\n    DocumentReference.prototype.set = function (value, options) {\n        validateBetweenNumberOfArgs('DocumentReference.set', arguments, 1, 2);\n        options = validateSetOptions('DocumentReference.set', options);\n        var parsed = options.merge\n            ? this.firestore._dataConverter.parseMergeData('DocumentReference.set', value)\n            : this.firestore._dataConverter.parseSetData('DocumentReference.set', value);\n        return this._firestoreClient.write(parsed.toMutations(this._key, Precondition.NONE));\n    };\n    DocumentReference.prototype.update = function (fieldOrUpdateData, value) {\n        var moreFieldsAndValues = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            moreFieldsAndValues[_i - 2] = arguments[_i];\n        }\n        var parsed;\n        if (typeof fieldOrUpdateData === 'string' ||\n            fieldOrUpdateData instanceof ExternalFieldPath) {\n            validateAtLeastNumberOfArgs('DocumentReference.update', arguments, 2);\n            parsed = this.firestore._dataConverter.parseUpdateVarargs('DocumentReference.update', fieldOrUpdateData, value, moreFieldsAndValues);\n        }\n        else {\n            validateExactNumberOfArgs('DocumentReference.update', arguments, 1);\n            parsed = this.firestore._dataConverter.parseUpdateData('DocumentReference.update', fieldOrUpdateData);\n        }\n        return this._firestoreClient.write(parsed.toMutations(this._key, Precondition.exists(true)));\n    };\n    DocumentReference.prototype.delete = function () {\n        validateExactNumberOfArgs('DocumentReference.delete', arguments, 0);\n        return this._firestoreClient.write([\n            new DeleteMutation(this._key, Precondition.NONE)\n        ]);\n    };\n    DocumentReference.prototype.onSnapshot = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        validateBetweenNumberOfArgs('DocumentReference.onSnapshot', arguments, 1, 4);\n        var options = {\n            includeMetadataChanges: false\n        };\n        var observer;\n        var currArg = 0;\n        if (typeof args[currArg] === 'object' &&\n            !isPartialObserver(args[currArg])) {\n            options = args[currArg];\n            validateOptionNames('DocumentReference.onSnapshot', options, [\n                'includeMetadataChanges'\n            ]);\n            validateNamedOptionalType('DocumentReference.onSnapshot', 'boolean', 'includeMetadataChanges', options.includeMetadataChanges);\n            currArg++;\n        }\n        var internalOptions = {\n            includeDocumentMetadataChanges: options.includeMetadataChanges,\n            includeQueryMetadataChanges: options.includeMetadataChanges\n        };\n        if (isPartialObserver(args[currArg])) {\n            observer = args[currArg];\n        }\n        else {\n            validateArgType('DocumentReference.onSnapshot', 'function', currArg, args[currArg]);\n            validateOptionalArgType('DocumentReference.onSnapshot', 'function', currArg + 1, args[currArg + 1]);\n            validateOptionalArgType('DocumentReference.onSnapshot', 'function', currArg + 2, args[currArg + 2]);\n            observer = {\n                next: args[currArg],\n                error: args[currArg + 1],\n                complete: args[currArg + 2]\n            };\n        }\n        return this.onSnapshotInternal(internalOptions, observer);\n    };\n    DocumentReference.prototype.onSnapshotInternal = function (options, observer) {\n        var _this = this;\n        var errHandler = function (err) {\n            console.error('Uncaught Error in onSnapshot:', err);\n        };\n        if (observer.error) {\n            errHandler = observer.error.bind(observer);\n        }\n        var asyncObserver = new AsyncObserver({\n            next: function (snapshot) {\n                if (observer.next) {\n                    assert(snapshot.docs.size <= 1, 'Too many documents returned on a document query');\n                    var doc = snapshot.docs.get(_this._key);\n                    observer.next(new DocumentSnapshot(_this.firestore, _this._key, doc, snapshot.fromCache));\n                }\n            },\n            error: errHandler\n        });\n        var internalListener = this._firestoreClient.listen(InternalQuery.atPath(this._key.path), asyncObserver, options);\n        return function () {\n            asyncObserver.mute();\n            _this._firestoreClient.unlisten(internalListener);\n        };\n    };\n    DocumentReference.prototype.get = function () {\n        var _this = this;\n        validateExactNumberOfArgs('DocumentReference.get', arguments, 0);\n        return new Promise(function (resolve, reject) {\n            var unlisten = _this.onSnapshotInternal({\n                includeQueryMetadataChanges: true,\n                includeDocumentMetadataChanges: true,\n                waitForSyncWhenOnline: true\n            }, {\n                next: function (snap) {\n                    // Remove query first before passing event to user to avoid\n                    // user actions affecting the now stale query.\n                    unlisten();\n                    if (!snap.exists && snap.metadata.fromCache) {\n                        // TODO(dimond): If we're online and the document doesn't\n                        // exist then we resolve with a doc.exists set to false. If\n                        // we're offline however, we reject the Promise in this\n                        // case. Two options: 1) Cache the negative response from\n                        // the server so we can deliver that even when you're\n                        // offline 2) Actually reject the Promise in the online case\n                        // if the document doesn't exist.\n                        reject(new FirestoreError(Code.ABORTED, 'Failed to get document because the client is ' + 'offline.'));\n                    }\n                    else {\n                        resolve(snap);\n                    }\n                },\n                error: reject\n            });\n        });\n    };\n    return DocumentReference;\n}());\nexport { DocumentReference };\nvar SnapshotMetadata = /** @class */ (function () {\n    function SnapshotMetadata(hasPendingWrites, fromCache) {\n        this.hasPendingWrites = hasPendingWrites;\n        this.fromCache = fromCache;\n    }\n    SnapshotMetadata.prototype.isEqual = function (other) {\n        return (this.hasPendingWrites === other.hasPendingWrites &&\n            this.fromCache === other.fromCache);\n    };\n    return SnapshotMetadata;\n}());\nvar DocumentSnapshot = /** @class */ (function () {\n    function DocumentSnapshot(_firestore, _key, _document, _fromCache) {\n        this._firestore = _firestore;\n        this._key = _key;\n        this._document = _document;\n        this._fromCache = _fromCache;\n    }\n    DocumentSnapshot.prototype.data = function (options) {\n        validateBetweenNumberOfArgs('DocumentSnapshot.data', arguments, 0, 1);\n        options = validateSnapshotOptions('DocumentSnapshot.data', options);\n        return !this._document\n            ? undefined\n            : this.convertObject(this._document.data, FieldValueOptions.fromSnapshotOptions(options));\n    };\n    DocumentSnapshot.prototype.get = function (fieldPath, options) {\n        validateBetweenNumberOfArgs('DocumentSnapshot.get', arguments, 1, 2);\n        options = validateSnapshotOptions('DocumentSnapshot.get', options);\n        if (this._document) {\n            var value = this._document.data.field(fieldPathFromArgument('DocumentSnapshot.get', fieldPath));\n            if (value !== undefined) {\n                return this.convertValue(value, FieldValueOptions.fromSnapshotOptions(options));\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DocumentSnapshot.prototype, \"id\", {\n        get: function () {\n            return this._key.path.lastSegment();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentSnapshot.prototype, \"ref\", {\n        get: function () {\n            return new DocumentReference(this._key, this._firestore);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentSnapshot.prototype, \"exists\", {\n        get: function () {\n            return this._document !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DocumentSnapshot.prototype, \"metadata\", {\n        get: function () {\n            return new SnapshotMetadata(this._document !== null && this._document.hasLocalMutations, this._fromCache);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DocumentSnapshot.prototype.isEqual = function (other) {\n        if (!(other instanceof DocumentSnapshot)) {\n            throw invalidClassError('isEqual', 'DocumentSnapshot', 1, other);\n        }\n        return (this._firestore === other._firestore &&\n            this._fromCache === other._fromCache &&\n            this._key.isEqual(other._key) &&\n            (this._document === null\n                ? other._document === null\n                : this._document.isEqual(other._document)));\n    };\n    DocumentSnapshot.prototype.convertObject = function (data, options) {\n        var _this = this;\n        var result = {};\n        data.forEach(function (key, value) {\n            result[key] = _this.convertValue(value, options);\n        });\n        return result;\n    };\n    DocumentSnapshot.prototype.convertValue = function (value, options) {\n        if (value instanceof ObjectValue) {\n            return this.convertObject(value, options);\n        }\n        else if (value instanceof ArrayValue) {\n            return this.convertArray(value, options);\n        }\n        else if (value instanceof RefValue) {\n            var key = value.value(options);\n            var database = this._firestore.ensureClientConfigured().databaseId();\n            if (!value.databaseId.isEqual(database)) {\n                // TODO(b/64130202): Somehow support foreign references.\n                log.error(\"Document \" + this._key.path + \" contains a document \" +\n                    \"reference within a different database (\" +\n                    (value.databaseId.projectId + \"/\" + value.databaseId.database + \") which is not \") +\n                    \"supported. It will be treated as a reference in the current \" +\n                    (\"database (\" + database.projectId + \"/\" + database.database + \") \") +\n                    \"instead.\");\n            }\n            return new DocumentReference(key, this._firestore);\n        }\n        else {\n            return value.value(options);\n        }\n    };\n    DocumentSnapshot.prototype.convertArray = function (data, options) {\n        var _this = this;\n        return data.internalValue.map(function (value) {\n            return _this.convertValue(value, options);\n        });\n    };\n    return DocumentSnapshot;\n}());\nexport { DocumentSnapshot };\nvar QueryDocumentSnapshot = /** @class */ (function (_super) {\n    __extends(QueryDocumentSnapshot, _super);\n    function QueryDocumentSnapshot(firestore, key, document, fromCache) {\n        return _super.call(this, firestore, key, document, fromCache) || this;\n    }\n    QueryDocumentSnapshot.prototype.data = function (options) {\n        var data = _super.prototype.data.call(this, options);\n        assert(typeof data === 'object', 'Document in a QueryDocumentSnapshot should exist');\n        return data;\n    };\n    return QueryDocumentSnapshot;\n}(DocumentSnapshot));\nexport { QueryDocumentSnapshot };\nvar Query = /** @class */ (function () {\n    function Query(_query, firestore) {\n        this._query = _query;\n        this.firestore = firestore;\n    }\n    Query.prototype.where = function (field, opStr, value) {\n        validateExactNumberOfArgs('Query.where', arguments, 3);\n        validateArgType('Query.where', 'string', 2, opStr);\n        validateDefined('Query.where', 3, value);\n        var fieldValue;\n        var fieldPath = fieldPathFromArgument('Query.where', field);\n        if (fieldPath.isKeyField()) {\n            if (typeof value === 'string') {\n                if (value.indexOf('/') !== -1) {\n                    // TODO(dimond): Allow slashes once ancestor queries are supported\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Function Query.where() requires its third parameter to be a ' +\n                        'valid document ID if the first parameter is ' +\n                        'FieldPath.documentId(), but it contains a slash.');\n                }\n                if (value === '') {\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Function Query.where() requires its third parameter to be a ' +\n                        'valid document ID if the first parameter is ' +\n                        'FieldPath.documentId(), but it was an empty string.');\n                }\n                var path = this._query.path.child(new ResourcePath([value]));\n                assert(path.length % 2 === 0, 'Path should be a document key');\n                fieldValue = new RefValue(this.firestore._databaseId, new DocumentKey(path));\n            }\n            else if (value instanceof DocumentReference) {\n                var ref = value;\n                fieldValue = new RefValue(this.firestore._databaseId, ref._key);\n            }\n            else {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function Query.where() requires its third parameter to be a \" +\n                    \"string or a DocumentReference if the first parameter is \" +\n                    \"FieldPath.documentId(), but it was: \" +\n                    (valueDescription(value) + \".\"));\n            }\n        }\n        else {\n            fieldValue = this.firestore._dataConverter.parseQueryValue('Query.where', value);\n        }\n        var filter = fieldFilter(fieldPath, RelationOp.fromString(opStr), fieldValue);\n        this.validateNewFilter(filter);\n        return new Query(this._query.addFilter(filter), this.firestore);\n    };\n    Query.prototype.orderBy = function (field, directionStr) {\n        validateBetweenNumberOfArgs('Query.orderBy', arguments, 1, 2);\n        validateOptionalArgType('Query.orderBy', 'string', 2, directionStr);\n        var direction;\n        if (directionStr === undefined || directionStr === 'asc') {\n            direction = Direction.ASCENDING;\n        }\n        else if (directionStr === 'desc') {\n            direction = Direction.DESCENDING;\n        }\n        else {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function Query.orderBy() has unknown direction '\" + directionStr + \"', \" +\n                \"expected 'asc' or 'desc'.\");\n        }\n        if (this._query.startAt !== null) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You must not call Query.startAt() or ' +\n                'Query.startAfter() before calling Query.orderBy().');\n        }\n        if (this._query.endAt !== null) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You must not call Query.endAt() or ' +\n                'Query.endBefore() before calling Query.orderBy().');\n        }\n        var fieldPath = fieldPathFromArgument('Query.orderBy', field);\n        var orderBy = new OrderBy(fieldPath, direction);\n        this.validateNewOrderBy(orderBy);\n        return new Query(this._query.addOrderBy(orderBy), this.firestore);\n    };\n    Query.prototype.limit = function (n) {\n        validateExactNumberOfArgs('Query.limit', arguments, 1);\n        validateArgType('Query.limit', 'number', 1, n);\n        if (n <= 0) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid Query. Query limit (\" + n + \") is invalid. Limit must be \" +\n                'positive.');\n        }\n        return new Query(this._query.withLimit(n), this.firestore);\n    };\n    Query.prototype.startAt = function (docOrField) {\n        var fields = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            fields[_i - 1] = arguments[_i];\n        }\n        validateAtLeastNumberOfArgs('Query.startAt', arguments, 1);\n        var bound = this.boundFromDocOrFields('Query.startAt', docOrField, fields, \n        /*before=*/ true);\n        return new Query(this._query.withStartAt(bound), this.firestore);\n    };\n    Query.prototype.startAfter = function (docOrField) {\n        var fields = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            fields[_i - 1] = arguments[_i];\n        }\n        validateAtLeastNumberOfArgs('Query.startAfter', arguments, 1);\n        var bound = this.boundFromDocOrFields('Query.startAfter', docOrField, fields, \n        /*before=*/ false);\n        return new Query(this._query.withStartAt(bound), this.firestore);\n    };\n    Query.prototype.endBefore = function (docOrField) {\n        var fields = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            fields[_i - 1] = arguments[_i];\n        }\n        validateAtLeastNumberOfArgs('Query.endBefore', arguments, 1);\n        var bound = this.boundFromDocOrFields('Query.endBefore', docOrField, fields, \n        /*before=*/ true);\n        return new Query(this._query.withEndAt(bound), this.firestore);\n    };\n    Query.prototype.endAt = function (docOrField) {\n        var fields = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            fields[_i - 1] = arguments[_i];\n        }\n        validateAtLeastNumberOfArgs('Query.endAt', arguments, 1);\n        var bound = this.boundFromDocOrFields('Query.endAt', docOrField, fields, \n        /*before=*/ false);\n        return new Query(this._query.withEndAt(bound), this.firestore);\n    };\n    Query.prototype.isEqual = function (other) {\n        if (!(other instanceof Query)) {\n            throw invalidClassError('isEqual', 'Query', 1, other);\n        }\n        return (this.firestore === other.firestore && this._query.isEqual(other._query));\n    };\n    /** Helper function to create a bound from a document or fields */\n    Query.prototype.boundFromDocOrFields = function (methodName, docOrField, fields, before) {\n        validateDefined(methodName, 1, docOrField);\n        if (docOrField instanceof DocumentSnapshot) {\n            if (fields.length > 0) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Too many arguments provided to \" + methodName + \"().\");\n            }\n            var snap = docOrField;\n            if (!snap.exists) {\n                throw new FirestoreError(Code.NOT_FOUND, \"Can't use a DocumentSnapshot that doesn't exist for \" +\n                    (methodName + \"().\"));\n            }\n            return this.boundFromDocument(methodName, snap._document, before);\n        }\n        else {\n            var allFields = [docOrField].concat(fields);\n            return this.boundFromFields(methodName, allFields, before);\n        }\n    };\n    /**\n     * Create a Bound from a query and a document.\n     *\n     * Note that the Bound will always include the key of the document\n     * and so only the provided document will compare equal to the returned\n     * position.\n     *\n     * Will throw if the document does not contain all fields of the order by\n     * of the query.\n     */\n    Query.prototype.boundFromDocument = function (methodName, doc, before) {\n        var components = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n        for (var _i = 0, _a = this._query.orderBy; _i < _a.length; _i++) {\n            var orderBy = _a[_i];\n            if (orderBy.field.isKeyField()) {\n                components.push(new RefValue(this.firestore._databaseId, doc.key));\n            }\n            else {\n                var value = doc.field(orderBy.field);\n                if (value !== undefined) {\n                    components.push(value);\n                }\n                else {\n                    var field = orderBy.field.canonicalString();\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. You are trying to start or end a query using a \" +\n                        (\"document for which the field '\" + field + \"' (used as the \") +\n                        \"orderBy) does not exist.\");\n                }\n            }\n        }\n        return new Bound(components, before);\n    };\n    /**\n     * Converts a list of field values to a Bound for the given query.\n     */\n    Query.prototype.boundFromFields = function (methodName, values, before) {\n        // Use explicit order by's because it has to match the query the user made\n        var orderBy = this._query.explicitOrderBy;\n        if (values.length > orderBy.length) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Too many arguments provided to \" + methodName + \"(). \" +\n                \"The number of arguments must be less than or equal to the \" +\n                \"number of Query.orderBy() clauses\");\n        }\n        var components = [];\n        for (var i = 0; i < values.length; i++) {\n            var rawValue = values[i];\n            var orderByComponent = orderBy[i];\n            if (orderByComponent.field.isKeyField()) {\n                if (typeof rawValue !== 'string') {\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. Expected a string for document ID in \" +\n                        (methodName + \"(), but got a \" + typeof rawValue));\n                }\n                if (rawValue.indexOf('/') !== -1) {\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. Document ID '\" + rawValue + \"' contains a slash in \" +\n                        (methodName + \"()\"));\n                }\n                var key = new DocumentKey(this._query.path.child(rawValue));\n                components.push(new RefValue(this.firestore._databaseId, key));\n            }\n            else {\n                var wrapped = this.firestore._dataConverter.parseQueryValue(methodName, rawValue);\n                components.push(wrapped);\n            }\n        }\n        return new Bound(components, before);\n    };\n    Query.prototype.onSnapshot = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        validateBetweenNumberOfArgs('Query.onSnapshot', arguments, 1, 4);\n        var options = {};\n        var observer;\n        var currArg = 0;\n        if (typeof args[currArg] === 'object' &&\n            !isPartialObserver(args[currArg])) {\n            options = args[currArg];\n            validateOptionNames('Query.onSnapshot', options, [\n                'includeQueryMetadataChanges',\n                'includeDocumentMetadataChanges'\n            ]);\n            validateNamedOptionalType('Query.onSnapshot', 'boolean', 'includeDocumentMetadataChanges', options.includeDocumentMetadataChanges);\n            validateNamedOptionalType('Query.onSnapshot', 'boolean', 'includeQueryMetadataChanges', options.includeQueryMetadataChanges);\n            currArg++;\n        }\n        if (isPartialObserver(args[currArg])) {\n            observer = args[currArg];\n        }\n        else {\n            validateArgType('Query.onSnapshot', 'function', currArg, args[currArg]);\n            validateOptionalArgType('Query.onSnapshot', 'function', currArg + 1, args[currArg + 1]);\n            validateOptionalArgType('Query.onSnapshot', 'function', currArg + 2, args[currArg + 2]);\n            observer = {\n                next: args[currArg],\n                error: args[currArg + 1],\n                complete: args[currArg + 2]\n            };\n        }\n        return this.onSnapshotInternal(options, observer);\n    };\n    Query.prototype.onSnapshotInternal = function (options, observer) {\n        var _this = this;\n        var errHandler = function (err) {\n            console.error('Uncaught Error in onSnapshot:', err);\n        };\n        if (observer.error) {\n            errHandler = observer.error.bind(observer);\n        }\n        var asyncObserver = new AsyncObserver({\n            next: function (result) {\n                if (observer.next) {\n                    observer.next(new QuerySnapshot(_this.firestore, _this._query, result));\n                }\n            },\n            error: errHandler\n        });\n        var firestoreClient = this.firestore.ensureClientConfigured();\n        var internalListener = firestoreClient.listen(this._query, asyncObserver, options);\n        return function () {\n            asyncObserver.mute();\n            firestoreClient.unlisten(internalListener);\n        };\n    };\n    Query.prototype.get = function () {\n        var _this = this;\n        validateExactNumberOfArgs('Query.get', arguments, 0);\n        return new Promise(function (resolve, reject) {\n            var unlisten = _this.onSnapshotInternal({\n                includeDocumentMetadataChanges: false,\n                includeQueryMetadataChanges: true,\n                waitForSyncWhenOnline: true\n            }, {\n                next: function (result) {\n                    // Remove query first before passing event to user to avoid\n                    // user actions affecting the now stale query.\n                    unlisten();\n                    resolve(result);\n                },\n                error: reject\n            });\n        });\n    };\n    Query.prototype.validateNewFilter = function (filter) {\n        if (filter instanceof RelationFilter && filter.isInequality()) {\n            var existingField = this._query.getInequalityFilterField();\n            if (existingField !== null && !existingField.isEqual(filter.field)) {\n                throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. All where filters with an inequality' +\n                    ' (<, <=, >, or >=) must be on the same field. But you have' +\n                    (\" inequality filters on '\" + existingField.toString() + \"'\") +\n                    (\" and '\" + filter.field.toString() + \"'\"));\n            }\n            var firstOrderByField = this._query.getFirstOrderByField();\n            if (firstOrderByField !== null) {\n                this.validateOrderByAndInequalityMatch(filter.field, firstOrderByField);\n            }\n        }\n    };\n    Query.prototype.validateNewOrderBy = function (orderBy) {\n        if (this._query.getFirstOrderByField() === null) {\n            // This is the first order by. It must match any inequality.\n            var inequalityField = this._query.getInequalityFilterField();\n            if (inequalityField !== null) {\n                this.validateOrderByAndInequalityMatch(inequalityField, orderBy.field);\n            }\n        }\n    };\n    Query.prototype.validateOrderByAndInequalityMatch = function (inequality, orderBy) {\n        if (!orderBy.isEqual(inequality)) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. You have a where filter with an inequality \" +\n                (\"(<, <=, >, or >=) on field '\" + inequality.toString() + \"' \") +\n                (\"and so you must also use '\" + inequality.toString() + \"' \") +\n                \"as your first Query.orderBy(), but your first Query.orderBy() \" +\n                (\"is on field '\" + orderBy.toString() + \"' instead.\"));\n        }\n    };\n    return Query;\n}());\nexport { Query };\nvar QuerySnapshot = /** @class */ (function () {\n    function QuerySnapshot(_firestore, _originalQuery, _snapshot) {\n        this._firestore = _firestore;\n        this._originalQuery = _originalQuery;\n        this._snapshot = _snapshot;\n        this._cachedChanges = null;\n        this.metadata = new SnapshotMetadata(_snapshot.hasPendingWrites, _snapshot.fromCache);\n    }\n    Object.defineProperty(QuerySnapshot.prototype, \"docs\", {\n        get: function () {\n            var result = [];\n            this.forEach(function (doc) { return result.push(doc); });\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuerySnapshot.prototype, \"empty\", {\n        get: function () {\n            return this._snapshot.docs.isEmpty();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuerySnapshot.prototype, \"size\", {\n        get: function () {\n            return this._snapshot.docs.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuerySnapshot.prototype.forEach = function (callback, thisArg) {\n        var _this = this;\n        validateBetweenNumberOfArgs('QuerySnapshot.forEach', arguments, 1, 2);\n        validateArgType('QuerySnapshot.forEach', 'function', 1, callback);\n        this._snapshot.docs.forEach(function (doc) {\n            callback.call(thisArg, _this.convertToDocumentImpl(doc));\n        });\n    };\n    Object.defineProperty(QuerySnapshot.prototype, \"query\", {\n        get: function () {\n            return new Query(this._originalQuery, this._firestore);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QuerySnapshot.prototype, \"docChanges\", {\n        get: function () {\n            if (!this._cachedChanges) {\n                this._cachedChanges = changesFromSnapshot(this._firestore, this._snapshot);\n            }\n            return this._cachedChanges;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Check the equality. The call can be very expensive. */\n    QuerySnapshot.prototype.isEqual = function (other) {\n        if (!(other instanceof QuerySnapshot)) {\n            throw invalidClassError('isEqual', 'QuerySnapshot', 1, other);\n        }\n        return (this._firestore === other._firestore &&\n            this._originalQuery.isEqual(other._originalQuery) &&\n            this._snapshot.isEqual(other._snapshot));\n    };\n    QuerySnapshot.prototype.convertToDocumentImpl = function (doc) {\n        return new QueryDocumentSnapshot(this._firestore, doc.key, doc, this.metadata.fromCache);\n    };\n    return QuerySnapshot;\n}());\nexport { QuerySnapshot };\nvar CollectionReference = /** @class */ (function (_super) {\n    __extends(CollectionReference, _super);\n    function CollectionReference(path, firestore) {\n        var _this = _super.call(this, InternalQuery.atPath(path), firestore) || this;\n        if (path.length % 2 !== 1) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid collection reference. Collection ' +\n                'references must have an odd number of segments, but ' +\n                (path.canonicalString() + \" has \" + path.length));\n        }\n        return _this;\n    }\n    Object.defineProperty(CollectionReference.prototype, \"id\", {\n        get: function () {\n            return this._query.path.lastSegment();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CollectionReference.prototype, \"parent\", {\n        get: function () {\n            var parentPath = this._query.path.popLast();\n            if (parentPath.isEmpty()) {\n                return null;\n            }\n            else {\n                return new DocumentReference(new DocumentKey(parentPath), this.firestore);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CollectionReference.prototype, \"path\", {\n        get: function () {\n            return this._query.path.canonicalString();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CollectionReference.prototype.doc = function (pathString) {\n        validateBetweenNumberOfArgs('CollectionReference.doc', arguments, 0, 1);\n        // We allow omission of 'pathString' but explicitly prohibit passing in both\n        // 'undefined' and 'null'.\n        if (arguments.length === 0) {\n            pathString = AutoId.newId();\n        }\n        validateArgType('CollectionReference.doc', 'string', 1, pathString);\n        if (pathString === '') {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Document path must be a non-empty string');\n        }\n        var path = ResourcePath.fromString(pathString);\n        return DocumentReference.forPath(this._query.path.child(path), this.firestore);\n    };\n    CollectionReference.prototype.add = function (value) {\n        validateExactNumberOfArgs('CollectionReference.add', arguments, 1);\n        validateArgType('CollectionReference.add', 'object', 1, value);\n        var docRef = this.doc();\n        return docRef.set(value).then(function () { return docRef; });\n    };\n    return CollectionReference;\n}(Query));\nexport { CollectionReference };\nfunction validateSetOptions(methodName, options) {\n    if (options === undefined) {\n        return {\n            merge: false\n        };\n    }\n    validateOptionNames(methodName, options, ['merge']);\n    validateNamedOptionalType(methodName, 'boolean', 'merge', options.merge);\n    return options;\n}\nfunction validateSnapshotOptions(methodName, options) {\n    if (options === undefined) {\n        return {};\n    }\n    validateOptionNames(methodName, options, ['serverTimestamps']);\n    validateNamedOptionalPropertyEquals(methodName, 'options', 'serverTimestamps', options.serverTimestamps, ['estimate', 'previous', 'none']);\n    return options;\n}\nfunction validateReference(methodName, documentRef, firestore) {\n    if (!(documentRef instanceof DocumentReference)) {\n        throw invalidClassError(methodName, 'DocumentReference', 1, documentRef);\n    }\n    else if (documentRef.firestore !== firestore) {\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Provided document reference is from a different Firestore instance.');\n    }\n    else {\n        return documentRef;\n    }\n}\n/**\n * Calculates the array of firestore.DocumentChange's for a given ViewSnapshot.\n *\n * Exported for testing.\n */\nexport function changesFromSnapshot(firestore, snapshot) {\n    if (snapshot.oldDocs.isEmpty()) {\n        // Special case the first snapshot because index calculation is easy and\n        // fast\n        var lastDoc_1;\n        var index_1 = 0;\n        return snapshot.docChanges.map(function (change) {\n            var doc = new QueryDocumentSnapshot(firestore, change.doc.key, change.doc, snapshot.fromCache);\n            assert(change.type === ChangeType.Added, 'Invalid event type for first snapshot');\n            assert(!lastDoc_1 || snapshot.query.docComparator(lastDoc_1, change.doc) < 0, 'Got added events in wrong order');\n            lastDoc_1 = change.doc;\n            return {\n                type: 'added',\n                doc: doc,\n                oldIndex: -1,\n                newIndex: index_1++\n            };\n        });\n    }\n    else {\n        // A DocumentSet that is updated incrementally as changes are applied to use\n        // to lookup the index of a document.\n        var indexTracker_1 = snapshot.oldDocs;\n        return snapshot.docChanges.map(function (change) {\n            var doc = new QueryDocumentSnapshot(firestore, change.doc.key, change.doc, snapshot.fromCache);\n            var oldIndex = -1;\n            var newIndex = -1;\n            if (change.type !== ChangeType.Added) {\n                oldIndex = indexTracker_1.indexOf(change.doc.key);\n                assert(oldIndex >= 0, 'Index for document not found');\n                indexTracker_1 = indexTracker_1.delete(change.doc.key);\n            }\n            if (change.type !== ChangeType.Removed) {\n                indexTracker_1 = indexTracker_1.add(change.doc);\n                newIndex = indexTracker_1.indexOf(change.doc.key);\n            }\n            return { type: resultChangeType(change.type), doc: doc, oldIndex: oldIndex, newIndex: newIndex };\n        });\n    }\n}\nfunction resultChangeType(type) {\n    switch (type) {\n        case ChangeType.Added:\n            return 'added';\n        case ChangeType.Modified:\n        case ChangeType.Metadata:\n            return 'modified';\n        case ChangeType.Removed:\n            return 'removed';\n        default:\n            return fail('Unknown change type: ' + type);\n    }\n}\n// Export the classes with a private constructor (it will fail if invoked\n// at runtime). Note that this still allows instanceof checks.\n// We're treating the variables as class names, so disable checking for lower\n// case variable names.\n// tslint:disable:variable-name\nexport var PublicFirestore = makeConstructorPrivate(Firestore, 'Use firebase.firestore() instead.');\nexport var PublicTransaction = makeConstructorPrivate(Transaction, 'Use firebase.firestore().runTransaction() instead.');\nexport var PublicWriteBatch = makeConstructorPrivate(WriteBatch, 'Use firebase.firestore().batch() instead.');\nexport var PublicDocumentReference = makeConstructorPrivate(DocumentReference, 'Use firebase.firestore().doc() instead.');\nexport var PublicDocumentSnapshot = makeConstructorPrivate(DocumentSnapshot);\nexport var PublicQueryDocumentSnapshot = makeConstructorPrivate(QueryDocumentSnapshot);\nexport var PublicQuery = makeConstructorPrivate(Query);\nexport var PublicQuerySnapshot = makeConstructorPrivate(QuerySnapshot);\nexport var PublicCollectionReference = makeConstructorPrivate(CollectionReference, 'Use firebase.firestore().collection() instead.');\n// tslint:enable:variable-name\n\n//# sourceMappingURL=database.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/api/database.js\n// module id = 282\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventManager, QueryListener } from './event_manager';\nimport { SyncEngine } from './sync_engine';\nimport { EagerGarbageCollector } from '../local/eager_garbage_collector';\nimport { IndexedDbPersistence } from '../local/indexeddb_persistence';\nimport { LocalStore } from '../local/local_store';\nimport { MemoryPersistence } from '../local/memory_persistence';\nimport { NoOpGarbageCollector } from '../local/no_op_garbage_collector';\nimport { Datastore } from '../remote/datastore';\nimport { RemoteStore } from '../remote/remote_store';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { Code } from '../util/error';\nimport { debug } from '../util/log';\nimport { Deferred } from '../util/promise';\nvar LOG_TAG = 'FirestoreClient';\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the\n * pieces of the client SDK architecture. It is responsible for creating the\n * async queue that is shared by all of the other components in the system.\n */\nvar FirestoreClient = /** @class */ (function () {\n    function FirestoreClient(platform, databaseInfo, credentials, \n        /**\n         * Asynchronous queue responsible for all of our internal processing. When\n         * we get incoming work from the user (via public API) or the network\n         * (incoming GRPC messages), we should always schedule onto this queue.\n         * This ensures all of our work is properly serialized (e.g. we don't\n         * start processing a new operation while the previous one is waiting for\n         * an async I/O to complete).\n         */\n        asyncQueue) {\n        this.platform = platform;\n        this.databaseInfo = databaseInfo;\n        this.credentials = credentials;\n        this.asyncQueue = asyncQueue;\n    }\n    /**\n     * Starts up the FirestoreClient, returning only whether or not enabling\n     * persistence succeeded.\n     *\n     * The intent here is to \"do the right thing\" as far as users are concerned.\n     * Namely, in cases where offline persistence is requested and possible,\n     * enable it, but otherwise fall back to persistence disabled. For the most\n     * part we expect this to succeed one way or the other so we don't expect our\n     * users to actually wait on the firestore.enablePersistence Promise since\n     * they generally won't care.\n     *\n     * Of course some users actually do care about whether or not persistence\n     * was successfully enabled, so the Promise returned from this method\n     * indicates this outcome.\n     *\n     * This presents a problem though: even before enablePersistence resolves or\n     * rejects, users may have made calls to e.g. firestore.collection() which\n     * means that the FirestoreClient in there will be available and will be\n     * enqueuing actions on the async queue.\n     *\n     * Meanwhile any failure of an operation on the async queue causes it to\n     * panic and reject any further work, on the premise that unhandled errors\n     * are fatal.\n     *\n     * Consequently the fallback is handled internally here in start, and if the\n     * fallback succeeds we signal success to the async queue even though the\n     * start() itself signals failure.\n     *\n     * @param usePersistence Whether or not to attempt to enable persistence.\n     * @returns A deferred result indicating the user-visible result of enabling\n     *     offline persistence. This method will reject this if IndexedDB fails to\n     *     start for any reason. If usePersistence is false this is\n     *     unconditionally resolved.\n     */\n    FirestoreClient.prototype.start = function (usePersistence) {\n        var _this = this;\n        // We defer our initialization until we get the current user from\n        // setUserChangeListener(). We block the async queue until we got the\n        // initial user and the initialization is completed. This will prevent\n        // any scheduled work from happening before initialization is completed.\n        //\n        // If initializationDone resolved then the FirestoreClient is in a usable\n        // state.\n        var initializationDone = new Deferred();\n        // If usePersistence is true, certain classes of errors while starting are\n        // recoverable but only by falling back to persistence disabled.\n        //\n        // If there's an error in the first case but not in recovery we cannot\n        // reject the promise blocking the async queue because this will cause the\n        // async queue to panic.\n        var persistenceResult = new Deferred();\n        var initialized = false;\n        this.credentials.setUserChangeListener(function (user) {\n            if (!initialized) {\n                initialized = true;\n                _this.initializePersistence(usePersistence, persistenceResult)\n                    .then(function () { return _this.initializeRest(user); })\n                    .then(initializationDone.resolve, initializationDone.reject);\n            }\n            else {\n                _this.asyncQueue.schedule(function () {\n                    return _this.handleUserChange(user);\n                });\n            }\n        });\n        // Block the async queue until initialization is done\n        this.asyncQueue.schedule(function () {\n            return initializationDone.promise;\n        });\n        // Return only the result of enabling persistence. Note that this does not\n        // need to await the completion of initializationDone because the result of\n        // this method should not reflect any other kind of failure to start.\n        return persistenceResult.promise;\n    };\n    /** Enables the network connection and requeues all pending operations. */\n    FirestoreClient.prototype.enableNetwork = function () {\n        var _this = this;\n        return this.asyncQueue.schedule(function () {\n            return _this.remoteStore.enableNetwork();\n        });\n    };\n    /**\n     * Initializes persistent storage, attempting to use IndexedDB if\n     * usePersistence is true or memory-only if false.\n     *\n     * If IndexedDB fails because it's already open in another tab or because the\n     * platform can't possibly support our implementation then this method rejects\n     * the persistenceResult and falls back on memory-only persistence.\n     *\n     * @param usePersistence indicates whether or not to use offline persistence\n     * @param persistenceResult A deferred result indicating the user-visible\n     *     result of enabling offline persistence. This method will reject this if\n     *     IndexedDB fails to start for any reason. If usePersistence is false\n     *     this is unconditionally resolved.\n     * @returns a Promise indicating whether or not initialization should\n     *     continue, i.e. that one of the persistence implementations actually\n     *     succeeded.\n     */\n    FirestoreClient.prototype.initializePersistence = function (usePersistence, persistenceResult) {\n        var _this = this;\n        if (usePersistence) {\n            return this.startIndexedDbPersistence()\n                .then(persistenceResult.resolve)\n                .catch(function (error) {\n                // Regardless of whether or not the retry succeeds, from an user\n                // perspective, offline persistence has failed.\n                persistenceResult.reject(error);\n                // An unknown failure on the first stage shuts everything down.\n                if (!_this.canFallback(error)) {\n                    return Promise.reject(error);\n                }\n                console.warn('Error enabling offline storage. Falling back to' +\n                    ' storage disabled: ' +\n                    error);\n                return _this.startMemoryPersistence();\n            });\n        }\n        else {\n            // When usePersistence == false, enabling offline persistence is defined\n            // to unconditionally succeed. This allows start() to have the same\n            // signature for both cases, despite the fact that the returned promise\n            // is only used in the enablePersistence call.\n            persistenceResult.resolve();\n            return this.startMemoryPersistence();\n        }\n    };\n    FirestoreClient.prototype.canFallback = function (error) {\n        return (error.code === Code.FAILED_PRECONDITION ||\n            error.code === Code.UNIMPLEMENTED);\n    };\n    /**\n     * Starts IndexedDB-based persistence.\n     *\n     * @returns A promise indicating success or failure.\n     */\n    FirestoreClient.prototype.startIndexedDbPersistence = function () {\n        // TODO(http://b/33384523): For now we just disable garbage collection\n        // when persistence is enabled.\n        this.garbageCollector = new NoOpGarbageCollector();\n        var storagePrefix = IndexedDbPersistence.buildStoragePrefix(this.databaseInfo);\n        // Opt to use proto3 JSON in case the platform doesn't support Uint8Array.\n        var serializer = new JsonProtoSerializer(this.databaseInfo.databaseId, {\n            useProto3Json: true\n        });\n        this.persistence = new IndexedDbPersistence(storagePrefix, serializer);\n        return this.persistence.start();\n    };\n    /**\n     * Starts Memory-backed persistence. In practice this cannot fail.\n     *\n     * @returns A promise that will successfully resolve.\n     */\n    FirestoreClient.prototype.startMemoryPersistence = function () {\n        this.garbageCollector = new EagerGarbageCollector();\n        this.persistence = new MemoryPersistence();\n        return this.persistence.start();\n    };\n    /**\n     * Initializes the rest of the FirestoreClient, assuming the initial user\n     * has been obtained from the credential provider and some persistence\n     * implementation is available in this.persistence.\n     */\n    FirestoreClient.prototype.initializeRest = function (user) {\n        var _this = this;\n        return this.platform\n            .loadConnection(this.databaseInfo)\n            .then(function (connection) {\n            _this.localStore = new LocalStore(_this.persistence, user, _this.garbageCollector);\n            var serializer = _this.platform.newSerializer(_this.databaseInfo.databaseId);\n            var datastore = new Datastore(_this.databaseInfo, _this.asyncQueue, connection, _this.credentials, serializer);\n            var onlineStateChangedHandler = function (onlineState) {\n                _this.syncEngine.applyOnlineStateChange(onlineState);\n                _this.eventMgr.applyOnlineStateChange(onlineState);\n            };\n            _this.remoteStore = new RemoteStore(_this.localStore, datastore, onlineStateChangedHandler);\n            _this.syncEngine = new SyncEngine(_this.localStore, _this.remoteStore, user);\n            // Setup wiring between sync engine and remote store\n            _this.remoteStore.syncEngine = _this.syncEngine;\n            _this.eventMgr = new EventManager(_this.syncEngine);\n            // NOTE: RemoteStore depends on LocalStore (for persisting stream\n            // tokens, refilling mutation queue, etc.) so must be started after\n            // LocalStore.\n            return _this.localStore.start();\n        })\n            .then(function () {\n            return _this.remoteStore.start();\n        });\n    };\n    FirestoreClient.prototype.handleUserChange = function (user) {\n        this.asyncQueue.verifyOperationInProgress();\n        debug(LOG_TAG, 'User Changed: ' + user.uid);\n        return this.syncEngine.handleUserChange(user);\n    };\n    /** Disables the network connection. Pending operations will not complete. */\n    FirestoreClient.prototype.disableNetwork = function () {\n        var _this = this;\n        return this.asyncQueue.schedule(function () {\n            return _this.remoteStore.disableNetwork();\n        });\n    };\n    FirestoreClient.prototype.shutdown = function () {\n        var _this = this;\n        return this.asyncQueue\n            .schedule(function () {\n            _this.credentials.removeUserChangeListener();\n            return _this.remoteStore.shutdown();\n        })\n            .then(function () {\n            // PORTING NOTE: LocalStore does not need an explicit shutdown on web.\n            return _this.persistence.shutdown();\n        });\n    };\n    FirestoreClient.prototype.listen = function (query, observer, options) {\n        var _this = this;\n        var listener = new QueryListener(query, observer, options);\n        this.asyncQueue.schedule(function () {\n            return _this.eventMgr.listen(listener);\n        });\n        return listener;\n    };\n    FirestoreClient.prototype.unlisten = function (listener) {\n        var _this = this;\n        this.asyncQueue.schedule(function () {\n            return _this.eventMgr.unlisten(listener);\n        });\n    };\n    FirestoreClient.prototype.write = function (mutations) {\n        var _this = this;\n        var deferred = new Deferred();\n        this.asyncQueue.schedule(function () { return _this.syncEngine.write(mutations, deferred); });\n        return deferred.promise;\n    };\n    FirestoreClient.prototype.databaseId = function () {\n        return this.databaseInfo.databaseId;\n    };\n    FirestoreClient.prototype.transaction = function (updateFunction) {\n        var _this = this;\n        // We have to wait for the async queue to be sure syncEngine is initialized.\n        return this.asyncQueue\n            .schedule(function () {\n            return Promise.resolve();\n        })\n            .then(function () {\n            return _this.syncEngine.runTransaction(updateFunction);\n        });\n    };\n    return FirestoreClient;\n}());\nexport { FirestoreClient };\n\n//# sourceMappingURL=firestore_client.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/firestore_client.js\n// module id = 283\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OnlineState } from './types';\nimport { ChangeType, ViewSnapshot } from './view_snapshot';\nimport { DocumentSet } from '../model/document_set';\nimport { assert } from '../util/assert';\nimport { ObjectMap } from '../util/obj_map';\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */\nvar QueryListenersInfo = /** @class */ (function () {\n    function QueryListenersInfo() {\n        this.listeners = [];\n    }\n    return QueryListenersInfo;\n}());\n/**\n * EventManager is responsible for mapping queries to query event emitters.\n * It handles \"fan-out\". -- Identical queries will re-use the same watch on the\n * backend.\n */\nvar EventManager = /** @class */ (function () {\n    function EventManager(syncEngine) {\n        this.syncEngine = syncEngine;\n        this.queries = new ObjectMap(function (q) {\n            return q.canonicalId();\n        });\n        this.onlineState = OnlineState.Unknown;\n        this.syncEngine.subscribe(this.onChange.bind(this), this.onError.bind(this));\n    }\n    EventManager.prototype.listen = function (listener) {\n        var query = listener.query;\n        var firstListen = false;\n        var queryInfo = this.queries.get(query);\n        if (!queryInfo) {\n            firstListen = true;\n            queryInfo = new QueryListenersInfo();\n            this.queries.set(query, queryInfo);\n        }\n        queryInfo.listeners.push(listener);\n        listener.applyOnlineStateChange(this.onlineState);\n        if (queryInfo.viewSnap)\n            listener.onViewSnapshot(queryInfo.viewSnap);\n        if (firstListen) {\n            return this.syncEngine.listen(query).then(function (targetId) {\n                queryInfo.targetId = targetId;\n                return targetId;\n            });\n        }\n        else {\n            return Promise.resolve(queryInfo.targetId);\n        }\n    };\n    EventManager.prototype.unlisten = function (listener) {\n        var query = listener.query;\n        var lastListen = false;\n        var queryInfo = this.queries.get(query);\n        if (queryInfo) {\n            var i = queryInfo.listeners.indexOf(listener);\n            if (i >= 0) {\n                queryInfo.listeners.splice(i, 1);\n                lastListen = queryInfo.listeners.length === 0;\n            }\n        }\n        if (lastListen) {\n            this.queries.delete(query);\n            return this.syncEngine.unlisten(query);\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    EventManager.prototype.onChange = function (viewSnaps) {\n        for (var _i = 0, viewSnaps_1 = viewSnaps; _i < viewSnaps_1.length; _i++) {\n            var viewSnap = viewSnaps_1[_i];\n            var query = viewSnap.query;\n            var queryInfo = this.queries.get(query);\n            if (queryInfo) {\n                for (var _a = 0, _b = queryInfo.listeners; _a < _b.length; _a++) {\n                    var listener = _b[_a];\n                    listener.onViewSnapshot(viewSnap);\n                }\n                queryInfo.viewSnap = viewSnap;\n            }\n        }\n    };\n    EventManager.prototype.onError = function (query, error) {\n        var queryInfo = this.queries.get(query);\n        if (queryInfo) {\n            for (var _i = 0, _a = queryInfo.listeners; _i < _a.length; _i++) {\n                var listener = _a[_i];\n                listener.onError(error);\n            }\n        }\n        // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n        // after an error.\n        this.queries.delete(query);\n    };\n    EventManager.prototype.applyOnlineStateChange = function (onlineState) {\n        this.onlineState = onlineState;\n        this.queries.forEach(function (_, queryInfo) {\n            for (var _i = 0, _a = queryInfo.listeners; _i < _a.length; _i++) {\n                var listener = _a[_i];\n                listener.applyOnlineStateChange(onlineState);\n            }\n        });\n    };\n    return EventManager;\n}());\nexport { EventManager };\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */\nvar QueryListener = /** @class */ (function () {\n    function QueryListener(query, queryObserver, options) {\n        this.query = query;\n        this.queryObserver = queryObserver;\n        /**\n         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n         * observer. This flag is set to true once we've actually raised an event.\n         */\n        this.raisedInitialEvent = false;\n        this.onlineState = OnlineState.Unknown;\n        this.options = options || {};\n    }\n    QueryListener.prototype.onViewSnapshot = function (snap) {\n        assert(snap.docChanges.length > 0 || snap.syncStateChanged, 'We got a new snapshot with no changes?');\n        if (!this.options.includeDocumentMetadataChanges) {\n            // Remove the metadata only changes.\n            var docChanges = [];\n            for (var _i = 0, _a = snap.docChanges; _i < _a.length; _i++) {\n                var docChange = _a[_i];\n                if (docChange.type !== ChangeType.Metadata) {\n                    docChanges.push(docChange);\n                }\n            }\n            snap = new ViewSnapshot(snap.query, snap.docs, snap.oldDocs, docChanges, snap.fromCache, snap.hasPendingWrites, snap.syncStateChanged);\n        }\n        if (!this.raisedInitialEvent) {\n            if (this.shouldRaiseInitialEvent(snap, this.onlineState)) {\n                this.raiseInitialEvent(snap);\n            }\n        }\n        else if (this.shouldRaiseEvent(snap)) {\n            this.queryObserver.next(snap);\n        }\n        this.snap = snap;\n    };\n    QueryListener.prototype.onError = function (error) {\n        this.queryObserver.error(error);\n    };\n    QueryListener.prototype.applyOnlineStateChange = function (onlineState) {\n        this.onlineState = onlineState;\n        if (this.snap &&\n            !this.raisedInitialEvent &&\n            this.shouldRaiseInitialEvent(this.snap, onlineState)) {\n            this.raiseInitialEvent(this.snap);\n        }\n    };\n    QueryListener.prototype.shouldRaiseInitialEvent = function (snap, onlineState) {\n        assert(!this.raisedInitialEvent, 'Determining whether to raise first event but already had first event');\n        // Always raise the first event when we're synced\n        if (!snap.fromCache) {\n            return true;\n        }\n        // NOTE: We consider OnlineState.Unknown as online (it should become Failed\n        // or Online if we wait long enough).\n        var maybeOnline = onlineState !== OnlineState.Failed;\n        // Don't raise the event if we're online, aren't synced yet (checked\n        // above) and are waiting for a sync.\n        if (this.options.waitForSyncWhenOnline && maybeOnline) {\n            assert(snap.fromCache, 'Waiting for sync, but snapshot is not from cache');\n            return false;\n        }\n        // Raise data from cache if we have any documents or we are offline\n        return !snap.docs.isEmpty() || onlineState === OnlineState.Failed;\n    };\n    QueryListener.prototype.shouldRaiseEvent = function (snap) {\n        // We don't need to handle includeDocumentMetadataChanges here because\n        // the Metadata only changes have already been stripped out if needed.\n        // At this point the only changes we will see are the ones we should\n        // propagate.\n        if (snap.docChanges.length > 0) {\n            return true;\n        }\n        var hasPendingWritesChanged = this.snap && this.snap.hasPendingWrites !== snap.hasPendingWrites;\n        if (snap.syncStateChanged || hasPendingWritesChanged) {\n            return this.options.includeQueryMetadataChanges === true;\n        }\n        // Generally we should have hit one of the cases above, but it's possible\n        // to get here if there were only metadata docChanges and they got\n        // stripped out.\n        return false;\n    };\n    QueryListener.prototype.raiseInitialEvent = function (snap) {\n        assert(!this.raisedInitialEvent, 'Trying to raise initial events for second time');\n        snap = new ViewSnapshot(snap.query, snap.docs, DocumentSet.emptySet(snap.docs), QueryListener.getInitialViewChanges(snap), snap.fromCache, snap.hasPendingWrites, true);\n        this.raisedInitialEvent = true;\n        this.queryObserver.next(snap);\n    };\n    /** Returns changes as if all documents in the snap were added. */\n    QueryListener.getInitialViewChanges = function (snap) {\n        var result = [];\n        snap.docs.forEach(function (doc) {\n            result.push({ type: ChangeType.Added, doc: doc });\n        });\n        return result;\n    };\n    return QueryListener;\n}());\nexport { QueryListener };\n\n//# sourceMappingURL=event_manager.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/event_manager.js\n// module id = 284\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EagerGarbageCollector } from '../local/eager_garbage_collector';\nimport { LocalViewChanges } from '../local/local_view_changes';\nimport { QueryData, QueryPurpose } from '../local/query_data';\nimport { ReferenceSet } from '../local/reference_set';\nimport { NoDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { CurrentStatusUpdate, RemoteEvent } from '../remote/remote_event';\nimport { assert, fail } from '../util/assert';\nimport * as log from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport * as objUtils from '../util/obj';\nimport { ObjectMap } from '../util/obj_map';\nimport { SortedMap } from '../util/sorted_map';\nimport { isNullOrUndefined } from '../util/types';\nimport { Query } from './query';\nimport { SnapshotVersion } from './snapshot_version';\nimport { TargetIdGenerator } from './target_id_generator';\nimport { AddedLimboDocument, RemovedLimboDocument, View } from './view';\nvar LOG_TAG = 'SyncEngine';\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\nvar QueryView = /** @class */ (function () {\n    function QueryView(\n        /**\n         * The query itself.\n         */\n        query, \n        /**\n         * The target number created by the client that is used in the watch\n         * stream to identify this query.\n         */\n        targetId, \n        /**\n         * An identifier from the datastore backend that indicates the last state\n         * of the results that was received. This can be used to indicate where\n         * to continue receiving new doc changes for the query.\n         */\n        resumeToken, \n        /**\n         * The view is responsible for computing the final merged truth of what\n         * docs are in the query. It gets notified of local and remote changes,\n         * and applies the query filters and limits to determine the most correct\n         * possible results.\n         */\n        view) {\n        this.query = query;\n        this.targetId = targetId;\n        this.resumeToken = resumeToken;\n        this.view = view;\n    }\n    return QueryView;\n}());\n/**\n * SyncEngine is the central controller in the client SDK architecture. It is\n * the glue code between the EventManager, LocalStore, and RemoteStore. Some of\n * SyncEngine's responsibilities include:\n * 1. Coordinating client requests and remote events between the EventManager\n *    and the local and remote data stores.\n * 2. Managing a View object for each query, providing the unified view between\n *    the local and remote data stores.\n * 3. Notifying the RemoteStore when the LocalStore has new mutations in its\n *    queue that need sending to the backend.\n *\n * The SyncEngine’s methods should only ever be called by methods running in the\n * global async queue.\n */\nvar SyncEngine = /** @class */ (function () {\n    function SyncEngine(localStore, remoteStore, currentUser) {\n        this.localStore = localStore;\n        this.remoteStore = remoteStore;\n        this.currentUser = currentUser;\n        this.viewHandler = null;\n        this.errorHandler = null;\n        this.queryViewsByQuery = new ObjectMap(function (q) {\n            return q.canonicalId();\n        });\n        this.queryViewsByTarget = {};\n        this.limboTargetsByKey = new SortedMap(DocumentKey.comparator);\n        this.limboKeysByTarget = {};\n        this.limboDocumentRefs = new ReferenceSet();\n        this.limboCollector = new EagerGarbageCollector();\n        /** Stores user completion handlers, indexed by User and BatchId. */\n        this.mutationUserCallbacks = {};\n        this.targetIdGenerator = TargetIdGenerator.forSyncEngine();\n    }\n    /** Subscribes view and error handler. Can be called only once. */\n    SyncEngine.prototype.subscribe = function (viewHandler, errorHandler) {\n        assert(viewHandler !== null && errorHandler !== null, 'View and error handlers cannot be null');\n        assert(this.viewHandler === null && this.errorHandler === null, 'SyncEngine already has a subscriber.');\n        this.viewHandler = viewHandler;\n        this.errorHandler = errorHandler;\n        this.limboCollector.addGarbageSource(this.limboDocumentRefs);\n    };\n    /**\n     * Initiates the new listen, resolves promise when listen enqueued to the\n     * server. All the subsequent view snapshots or errors are sent to the\n     * subscribed handlers. Returns the targetId of the query.\n     */\n    SyncEngine.prototype.listen = function (query) {\n        var _this = this;\n        this.assertSubscribed('listen()');\n        assert(!this.queryViewsByQuery.has(query), 'We already listen to the query: ' + query);\n        return this.localStore.allocateQuery(query).then(function (queryData) {\n            return _this.localStore\n                .executeQuery(query)\n                .then(function (docs) {\n                return _this.localStore\n                    .remoteDocumentKeys(queryData.targetId)\n                    .then(function (remoteKeys) {\n                    var view = new View(query, remoteKeys);\n                    var viewDocChanges = view.computeDocChanges(docs);\n                    var viewChange = view.applyChanges(viewDocChanges);\n                    assert(viewChange.limboChanges.length === 0, 'View returned limbo docs before target ack from the server.');\n                    assert(!!viewChange.snapshot, 'applyChanges for new view should always return a snapshot');\n                    var data = new QueryView(query, queryData.targetId, queryData.resumeToken, view);\n                    _this.queryViewsByQuery.set(query, data);\n                    _this.queryViewsByTarget[queryData.targetId] = data;\n                    _this.viewHandler([viewChange.snapshot]);\n                    _this.remoteStore.listen(queryData);\n                });\n            })\n                .then(function () {\n                return queryData.targetId;\n            });\n        });\n    };\n    /** Stops listening to the query. */\n    SyncEngine.prototype.unlisten = function (query) {\n        var _this = this;\n        this.assertSubscribed('unlisten()');\n        var queryView = this.queryViewsByQuery.get(query);\n        assert(!!queryView, 'Trying to unlisten on query not found:' + query);\n        return this.localStore.releaseQuery(query).then(function () {\n            _this.remoteStore.unlisten(queryView.targetId);\n            return _this.removeAndCleanupQuery(queryView).then(function () {\n                return _this.localStore.collectGarbage();\n            });\n        });\n    };\n    /**\n     * Initiates the write of local mutation batch which involves adding the\n     * writes to the mutation queue, notifying the remote store about new\n     * mutations and raising events for any changes this write caused.\n     *\n     * The promise returned by this call is resolved when the above steps\n     * have completed, *not* when the write was acked by the backend. The\n     * userCallback is resolved once the write was acked/rejected by the\n     * backend (or failed locally for any other reason).\n     */\n    SyncEngine.prototype.write = function (batch, userCallback) {\n        var _this = this;\n        this.assertSubscribed('write()');\n        return this.localStore\n            .localWrite(batch)\n            .then(function (result) {\n            _this.addMutationCallback(result.batchId, userCallback);\n            return _this.emitNewSnapsAndNotifyLocalStore(result.changes);\n        })\n            .then(function () {\n            return _this.remoteStore.fillWritePipeline();\n        });\n    };\n    // TODO(klimt): Wrap the given error in a standard Firestore error object.\n    SyncEngine.prototype.wrapUpdateFunctionError = function (error) {\n        return error;\n    };\n    /**\n     * Takes an updateFunction in which a set of reads and writes can be performed\n     * atomically. In the updateFunction, the client can read and write values\n     * using the supplied transaction object. After the updateFunction, all\n     * changes will be committed. If some other client has changed any of the data\n     * referenced, then the updateFunction will be called again. If the\n     * updateFunction still fails after the given number of retries, then the\n     * transaction will be rejection.\n     *\n     * The transaction object passed to the updateFunction contains methods for\n     * accessing documents and collections. Unlike other datastore access, data\n     * accessed with the transaction will not reflect local changes that have not\n     * been committed. For this reason, it is required that all reads are\n     * performed before any writes. Transactions must be performed while online.\n     *\n     * The promise returned is resolved when the transaction is fully committed.\n     */\n    SyncEngine.prototype.runTransaction = function (updateFunction, retries) {\n        var _this = this;\n        if (retries === void 0) { retries = 5; }\n        assert(retries >= 0, 'Got negative number of retries for transaction.');\n        var transaction = this.remoteStore.createTransaction();\n        var wrappedUpdateFunction = function () {\n            try {\n                var userPromise = updateFunction(transaction);\n                if (isNullOrUndefined(userPromise) ||\n                    !userPromise.catch ||\n                    !userPromise.then) {\n                    return Promise.reject(Error('Transaction callback must return a Promise'));\n                }\n                return userPromise.catch(function (e) {\n                    return Promise.reject(_this.wrapUpdateFunctionError(e));\n                });\n            }\n            catch (e) {\n                return Promise.reject(_this.wrapUpdateFunctionError(e));\n            }\n        };\n        return wrappedUpdateFunction().then(function (result) {\n            return transaction\n                .commit()\n                .then(function () {\n                return result;\n            })\n                .catch(function (error) {\n                if (retries === 0) {\n                    return Promise.reject(error);\n                }\n                // TODO(klimt): Put in a retry delay?\n                return _this.runTransaction(updateFunction, retries - 1);\n            });\n        });\n    };\n    SyncEngine.prototype.applyRemoteEvent = function (remoteEvent) {\n        var _this = this;\n        this.assertSubscribed('applyRemoteEvent()');\n        // Make sure limbo documents are deleted if there were no results\n        objUtils.forEachNumber(remoteEvent.targetChanges, function (targetId, targetChange) {\n            var limboKey = _this.limboKeysByTarget[targetId];\n            if (limboKey &&\n                targetChange.currentStatusUpdate ===\n                    CurrentStatusUpdate.MarkCurrent &&\n                !remoteEvent.documentUpdates.get(limboKey)) {\n                // When listening to a query the server responds with a snapshot\n                // containing documents matching the query and a current marker\n                // telling us we're now in sync. It's possible for these to arrive\n                // as separate remote events or as a single remote event.\n                // For a document query, there will be no documents sent in the\n                // response if the document doesn't exist.\n                //\n                // If the snapshot arrives separately from the current marker,\n                // we handle it normally and updateTrackedLimbos will resolve the\n                // limbo status of the document, removing it from limboDocumentRefs.\n                // This works because clients only initiate limbo resolution when\n                // a target is current and because all current targets are\n                // always at a consistent snapshot.\n                //\n                // However, if the document doesn't exist and the current marker\n                // arrives, the document is not present in the snapshot and our\n                // normal view handling would consider the document to remain in\n                // limbo indefinitely because there are no updates to the document.\n                // To avoid this, we specially handle this just this case here:\n                // synthesizing a delete.\n                //\n                // TODO(dimond): Ideally we would have an explicit lookup query\n                // instead resulting in an explicit delete message and we could\n                // remove this special logic.\n                remoteEvent.addDocumentUpdate(new NoDocument(limboKey, remoteEvent.snapshotVersion));\n            }\n        });\n        return this.localStore.applyRemoteEvent(remoteEvent).then(function (changes) {\n            return _this.emitNewSnapsAndNotifyLocalStore(changes, remoteEvent);\n        });\n    };\n    /**\n     * Applies an OnlineState change to the sync engine and notifies any views of\n     * the change.\n     */\n    SyncEngine.prototype.applyOnlineStateChange = function (onlineState) {\n        var newViewSnapshots = [];\n        this.queryViewsByQuery.forEach(function (query, queryView) {\n            var viewChange = queryView.view.applyOnlineStateChange(onlineState);\n            assert(viewChange.limboChanges.length === 0, 'OnlineState should not affect limbo documents.');\n            if (viewChange.snapshot) {\n                newViewSnapshots.push(viewChange.snapshot);\n            }\n        });\n        this.viewHandler(newViewSnapshots);\n    };\n    SyncEngine.prototype.rejectListen = function (targetId, err) {\n        var _this = this;\n        this.assertSubscribed('rejectListens()');\n        var limboKey = this.limboKeysByTarget[targetId];\n        if (limboKey) {\n            // Since this query failed, we won't want to manually unlisten to it.\n            // So go ahead and remove it from bookkeeping.\n            this.limboTargetsByKey = this.limboTargetsByKey.remove(limboKey);\n            delete this.limboKeysByTarget[targetId];\n            // TODO(klimt): We really only should do the following on permission\n            // denied errors, but we don't have the cause code here.\n            // It's a limbo doc. Create a synthetic event saying it was deleted.\n            // This is kind of a hack. Ideally, we would have a method in the local\n            // store to purge a document. However, it would be tricky to keep all of\n            // the local store's invariants with another method.\n            var docMap = new SortedMap(DocumentKey.comparator);\n            docMap = docMap.insert(limboKey, new NoDocument(limboKey, SnapshotVersion.forDeletedDoc()));\n            var event_1 = new RemoteEvent(SnapshotVersion.MIN, {}, docMap);\n            return this.applyRemoteEvent(event_1);\n        }\n        else {\n            var queryView_1 = this.queryViewsByTarget[targetId];\n            assert(!!queryView_1, 'Unknown targetId: ' + targetId);\n            return this.localStore.releaseQuery(queryView_1.query).then(function () {\n                return _this.removeAndCleanupQuery(queryView_1).then(function () {\n                    _this.errorHandler(queryView_1.query, err);\n                });\n            });\n        }\n    };\n    SyncEngine.prototype.applySuccessfulWrite = function (mutationBatchResult) {\n        var _this = this;\n        this.assertSubscribed('applySuccessfulWrite()');\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught\n        // up), so we raise user callbacks first so that they consistently happen\n        // before listen events.\n        this.processUserCallback(mutationBatchResult.batch.batchId, \n        /*error=*/ null);\n        return this.localStore\n            .acknowledgeBatch(mutationBatchResult)\n            .then(function (changes) {\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\n        });\n    };\n    SyncEngine.prototype.rejectFailedWrite = function (batchId, error) {\n        var _this = this;\n        this.assertSubscribed('rejectFailedWrite()');\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught up),\n        // so we raise user callbacks first so that they consistently happen before\n        // listen events.\n        this.processUserCallback(batchId, error);\n        return this.localStore.rejectBatch(batchId).then(function (changes) {\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\n        });\n    };\n    SyncEngine.prototype.addMutationCallback = function (batchId, callback) {\n        var newCallbacks = this.mutationUserCallbacks[this.currentUser.toKey()];\n        if (!newCallbacks) {\n            newCallbacks = new SortedMap(primitiveComparator);\n        }\n        newCallbacks = newCallbacks.insert(batchId, callback);\n        this.mutationUserCallbacks[this.currentUser.toKey()] = newCallbacks;\n    };\n    /**\n     * Resolves or rejects the user callback for the given batch and then discards\n     * it.\n     */\n    SyncEngine.prototype.processUserCallback = function (batchId, error) {\n        var newCallbacks = this.mutationUserCallbacks[this.currentUser.toKey()];\n        // NOTE: Mutations restored from persistence won't have callbacks, so it's\n        // okay for there to be no callback for this ID.\n        if (newCallbacks) {\n            var callback = newCallbacks.get(batchId);\n            if (callback) {\n                assert(batchId === newCallbacks.minKey(), 'Mutation callbacks processed out-of-order?');\n                if (error) {\n                    callback.reject(error);\n                }\n                else {\n                    callback.resolve();\n                }\n                newCallbacks = newCallbacks.remove(batchId);\n            }\n            this.mutationUserCallbacks[this.currentUser.toKey()] = newCallbacks;\n        }\n    };\n    SyncEngine.prototype.removeAndCleanupQuery = function (queryView) {\n        this.queryViewsByQuery.delete(queryView.query);\n        delete this.queryViewsByTarget[queryView.targetId];\n        this.limboDocumentRefs.removeReferencesForId(queryView.targetId);\n        return this.gcLimboDocuments();\n    };\n    SyncEngine.prototype.updateTrackedLimbos = function (targetId, limboChanges) {\n        for (var _i = 0, limboChanges_1 = limboChanges; _i < limboChanges_1.length; _i++) {\n            var limboChange = limboChanges_1[_i];\n            if (limboChange instanceof AddedLimboDocument) {\n                this.limboDocumentRefs.addReference(limboChange.key, targetId);\n                this.trackLimboChange(limboChange);\n            }\n            else if (limboChange instanceof RemovedLimboDocument) {\n                log.debug(LOG_TAG, 'Document no longer in limbo: ' + limboChange.key);\n                this.limboDocumentRefs.removeReference(limboChange.key, targetId);\n            }\n            else {\n                fail('Unknown limbo change: ' + JSON.stringify(limboChange));\n            }\n        }\n        return this.gcLimboDocuments();\n    };\n    SyncEngine.prototype.trackLimboChange = function (limboChange) {\n        var key = limboChange.key;\n        if (!this.limboTargetsByKey.get(key)) {\n            log.debug(LOG_TAG, 'New document in limbo: ' + key);\n            var limboTargetId = this.targetIdGenerator.next();\n            var query = Query.atPath(key.path);\n            this.limboKeysByTarget[limboTargetId] = key;\n            this.remoteStore.listen(new QueryData(query, limboTargetId, QueryPurpose.Listen));\n            this.limboTargetsByKey = this.limboTargetsByKey.insert(key, limboTargetId);\n        }\n    };\n    SyncEngine.prototype.gcLimboDocuments = function () {\n        var _this = this;\n        // HACK: We can use a null transaction here, because we know that the\n        // reference set is entirely within memory and doesn't need a store engine.\n        return this.limboCollector\n            .collectGarbage(null)\n            .next(function (keys) {\n            keys.forEach(function (key) {\n                var limboTargetId = _this.limboTargetsByKey.get(key);\n                if (limboTargetId === null) {\n                    // This target already got removed, because the query failed.\n                    return;\n                }\n                _this.remoteStore.unlisten(limboTargetId);\n                _this.limboTargetsByKey = _this.limboTargetsByKey.remove(key);\n                delete _this.limboKeysByTarget[limboTargetId];\n            });\n        })\n            .toPromise();\n    };\n    // Visible for testing\n    SyncEngine.prototype.currentLimboDocs = function () {\n        return this.limboTargetsByKey;\n    };\n    SyncEngine.prototype.emitNewSnapsAndNotifyLocalStore = function (changes, remoteEvent) {\n        var _this = this;\n        var newSnaps = [];\n        var docChangesInAllViews = [];\n        var queriesProcessed = [];\n        this.queryViewsByQuery.forEach(function (_, queryView) {\n            queriesProcessed.push(Promise.resolve()\n                .then(function () {\n                var viewDocChanges = queryView.view.computeDocChanges(changes);\n                if (!viewDocChanges.needsRefill) {\n                    return viewDocChanges;\n                }\n                // The query has a limit and some docs were removed, so we need\n                // to re-run the query against the local store to make sure we\n                // didn't lose any good docs that had been past the limit.\n                return _this.localStore.executeQuery(queryView.query).then(function (docs) {\n                    return queryView.view.computeDocChanges(docs, viewDocChanges);\n                });\n            })\n                .then(function (viewDocChanges) {\n                var targetChange = remoteEvent && remoteEvent.targetChanges[queryView.targetId];\n                var viewChange = queryView.view.applyChanges(viewDocChanges, targetChange);\n                return _this.updateTrackedLimbos(queryView.targetId, viewChange.limboChanges).then(function () {\n                    if (viewChange.snapshot) {\n                        newSnaps.push(viewChange.snapshot);\n                        var docChanges = LocalViewChanges.fromSnapshot(viewChange.snapshot);\n                        docChangesInAllViews.push(docChanges);\n                    }\n                });\n            }));\n        });\n        return Promise.all(queriesProcessed)\n            .then(function () {\n            _this.viewHandler(newSnaps);\n            return _this.localStore.notifyLocalViewChanges(docChangesInAllViews);\n        })\n            .then(function () {\n            return _this.localStore.collectGarbage();\n        });\n    };\n    SyncEngine.prototype.assertSubscribed = function (fnName) {\n        assert(this.viewHandler !== null && this.errorHandler !== null, 'Trying to call ' + fnName + ' before calling subscribe().');\n    };\n    SyncEngine.prototype.handleUserChange = function (user) {\n        var _this = this;\n        this.currentUser = user;\n        return this.localStore\n            .handleUserChange(user)\n            .then(function (changes) {\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\n        })\n            .then(function () {\n            return _this.remoteStore.handleUserChange(user);\n        });\n    };\n    return SyncEngine;\n}());\nexport { SyncEngine };\n\n//# sourceMappingURL=sync_engine.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/sync_engine.js\n// module id = 285\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ChangeType } from '../core/view_snapshot';\nimport { documentKeySet } from '../model/collections';\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nvar LocalViewChanges = /** @class */ (function () {\n    function LocalViewChanges(query, addedKeys, removedKeys) {\n        this.query = query;\n        this.addedKeys = addedKeys;\n        this.removedKeys = removedKeys;\n    }\n    LocalViewChanges.fromSnapshot = function (viewSnapshot) {\n        var addedKeys = documentKeySet();\n        var removedKeys = documentKeySet();\n        for (var _i = 0, _a = viewSnapshot.docChanges; _i < _a.length; _i++) {\n            var docChange = _a[_i];\n            switch (docChange.type) {\n                case ChangeType.Added:\n                    addedKeys = addedKeys.add(docChange.doc.key);\n                    break;\n                case ChangeType.Removed:\n                    removedKeys = removedKeys.add(docChange.doc.key);\n                    break;\n                default:\n            }\n        }\n        return new LocalViewChanges(viewSnapshot.query, addedKeys, removedKeys);\n    };\n    return LocalViewChanges;\n}());\nexport { LocalViewChanges };\n\n//# sourceMappingURL=local_view_changes.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/local_view_changes.js\n// module id = 286\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { documentKeySet } from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentSet } from '../model/document_set';\nimport { CurrentStatusUpdate, ResetMapping, UpdateMapping } from '../remote/remote_event';\nimport { assert, fail } from '../util/assert';\nimport { OnlineState } from './types';\nimport { ChangeType, DocumentChangeSet, SyncState, ViewSnapshot } from './view_snapshot';\nvar AddedLimboDocument = /** @class */ (function () {\n    function AddedLimboDocument(key) {\n        this.key = key;\n    }\n    return AddedLimboDocument;\n}());\nexport { AddedLimboDocument };\nvar RemovedLimboDocument = /** @class */ (function () {\n    function RemovedLimboDocument(key) {\n        this.key = key;\n    }\n    return RemovedLimboDocument;\n}());\nexport { RemovedLimboDocument };\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */\nvar View = /** @class */ (function () {\n    function View(query, \n        /** Documents included in the remote target */\n        syncedDocuments) {\n        this.query = query;\n        this.syncedDocuments = syncedDocuments;\n        this.syncState = null;\n        /**\n         * A flag whether the view is current with the backend. A view is considered\n         * current after it has seen the current flag from the backend and did not\n         * lose consistency within the watch stream (e.g. because of an existence\n         * filter mismatch).\n         */\n        this.current = false;\n        /** Documents in the view but not in the remote target */\n        this.limboDocuments = documentKeySet();\n        /** Document Keys that have local changes */\n        this.mutatedKeys = documentKeySet();\n        this.documentSet = new DocumentSet(query.docComparator.bind(query));\n    }\n    /**\n     * Iterates over a set of doc changes, applies the query limit, and computes\n     * what the new results should be, what the changes were, and whether we may\n     * need to go back to the local cache for more results. Does not make any\n     * changes to the view.\n     * @param docChanges The doc changes to apply to this view.\n     * @param previousChanges If this is being called with a refill, then start\n     *        with this set of docs and changes instead of the current view.\n     * @return a new set of docs, changes, and refill flag.\n     */\n    View.prototype.computeDocChanges = function (docChanges, previousChanges) {\n        var _this = this;\n        var changeSet = previousChanges\n            ? previousChanges.changeSet\n            : new DocumentChangeSet();\n        var oldDocumentSet = previousChanges\n            ? previousChanges.documentSet\n            : this.documentSet;\n        var newMutatedKeys = previousChanges\n            ? previousChanges.mutatedKeys\n            : this.mutatedKeys;\n        var newDocumentSet = oldDocumentSet;\n        var needsRefill = false;\n        // Track the last doc in a (full) limit. This is necessary, because some\n        // update (a delete, or an update moving a doc past the old limit) might\n        // mean there is some other document in the local cache that either should\n        // come (1) between the old last limit doc and the new last document, in the\n        // case of updates, or (2) after the new last document, in the case of\n        // deletes. So we keep this doc at the old limit to compare the updates to.\n        //\n        // Note that this should never get used in a refill (when previousChanges is\n        // set), because there will only be adds -- no deletes or updates.\n        var lastDocInLimit = this.query.hasLimit() && oldDocumentSet.size === this.query.limit\n            ? oldDocumentSet.last()\n            : null;\n        docChanges.inorderTraversal(function (key, newMaybeDoc) {\n            var oldDoc = oldDocumentSet.get(key);\n            var newDoc = newMaybeDoc instanceof Document ? newMaybeDoc : null;\n            if (newDoc) {\n                assert(key.isEqual(newDoc.key), 'Mismatching keys found in document changes: ' +\n                    key +\n                    ' != ' +\n                    newDoc.key);\n                newDoc = _this.query.matches(newDoc) ? newDoc : null;\n            }\n            if (newDoc) {\n                newDocumentSet = newDocumentSet.add(newDoc);\n                if (newDoc.hasLocalMutations) {\n                    newMutatedKeys = newMutatedKeys.add(key);\n                }\n                else {\n                    newMutatedKeys = newMutatedKeys.delete(key);\n                }\n            }\n            else {\n                newDocumentSet = newDocumentSet.delete(key);\n                newMutatedKeys = newMutatedKeys.delete(key);\n            }\n            // Calculate change\n            if (oldDoc && newDoc) {\n                var docsEqual = oldDoc.data.isEqual(newDoc.data);\n                if (!docsEqual ||\n                    oldDoc.hasLocalMutations !== newDoc.hasLocalMutations) {\n                    // only report a change if document actually changed\n                    if (docsEqual) {\n                        changeSet.track({ type: ChangeType.Metadata, doc: newDoc });\n                    }\n                    else {\n                        changeSet.track({ type: ChangeType.Modified, doc: newDoc });\n                    }\n                    if (lastDocInLimit &&\n                        _this.query.docComparator(newDoc, lastDocInLimit) > 0) {\n                        // This doc moved from inside the limit to after the limit.\n                        // That means there may be some doc in the local cache that's\n                        // actually less than this one.\n                        needsRefill = true;\n                    }\n                }\n            }\n            else if (!oldDoc && newDoc) {\n                changeSet.track({ type: ChangeType.Added, doc: newDoc });\n            }\n            else if (oldDoc && !newDoc) {\n                changeSet.track({ type: ChangeType.Removed, doc: oldDoc });\n                if (lastDocInLimit) {\n                    // A doc was removed from a full limit query. We'll need to\n                    // requery from the local cache to see if we know about some other\n                    // doc that should be in the results.\n                    needsRefill = true;\n                }\n            }\n        });\n        if (this.query.hasLimit()) {\n            // TODO(klimt): Make DocumentSet size be constant time.\n            while (newDocumentSet.size > this.query.limit) {\n                var oldDoc = newDocumentSet.last();\n                newDocumentSet = newDocumentSet.delete(oldDoc.key);\n                changeSet.track({ type: ChangeType.Removed, doc: oldDoc });\n            }\n        }\n        assert(!needsRefill || !previousChanges, 'View was refilled using docs that themselves needed refilling.');\n        return {\n            documentSet: newDocumentSet,\n            changeSet: changeSet,\n            needsRefill: needsRefill,\n            mutatedKeys: newMutatedKeys\n        };\n    };\n    /**\n     * Updates the view with the given ViewDocumentChanges and updates limbo docs\n     * and sync state from the given (optional) target change.\n     * @param docChanges The set of changes to make to the view's docs.\n     * @param targetChange A target change to apply for computing limbo docs and\n     *        sync state.\n     * @return A new ViewChange with the given docs, changes, and sync state.\n     */\n    View.prototype.applyChanges = function (docChanges, targetChange) {\n        var _this = this;\n        assert(!docChanges.needsRefill, 'Cannot apply changes that need a refill');\n        var oldDocs = this.documentSet;\n        this.documentSet = docChanges.documentSet;\n        this.mutatedKeys = docChanges.mutatedKeys;\n        // Sort changes based on type and query comparator\n        var changes = docChanges.changeSet.getChanges();\n        changes.sort(function (c1, c2) {\n            return (compareChangeType(c1.type, c2.type) ||\n                _this.query.docComparator(c1.doc, c2.doc));\n        });\n        var limboChanges = this.applyTargetChange(targetChange);\n        var synced = this.limboDocuments.size === 0 && this.current;\n        var newSyncState = synced ? SyncState.Synced : SyncState.Local;\n        var syncStateChanged = newSyncState !== this.syncState;\n        this.syncState = newSyncState;\n        if (changes.length === 0 && !syncStateChanged) {\n            // no changes\n            return { limboChanges: limboChanges };\n        }\n        else {\n            var snap = new ViewSnapshot(this.query, docChanges.documentSet, oldDocs, changes, newSyncState === SyncState.Local, !docChanges.mutatedKeys.isEmpty(), syncStateChanged);\n            return {\n                snapshot: snap,\n                limboChanges: limboChanges\n            };\n        }\n    };\n    /**\n     * Applies an OnlineState change to the view, potentially generating a\n     * ViewChange if the view's syncState changes as a result.\n     */\n    View.prototype.applyOnlineStateChange = function (onlineState) {\n        if (this.current && onlineState === OnlineState.Failed) {\n            // If we're offline, set `current` to false and then call applyChanges()\n            // to refresh our syncState and generate a ViewChange as appropriate. We\n            // are guaranteed to get a new TargetChange that sets `current` back to\n            // true once the client is back online.\n            this.current = false;\n            return this.applyChanges({\n                documentSet: this.documentSet,\n                changeSet: new DocumentChangeSet(),\n                mutatedKeys: this.mutatedKeys,\n                needsRefill: false\n            });\n        }\n        else {\n            // No effect, just return a no-op ViewChange.\n            return { limboChanges: [] };\n        }\n    };\n    /**\n     * Returns whether the doc for the given key should be in limbo.\n     */\n    View.prototype.shouldBeInLimbo = function (key) {\n        // If the remote end says it's part of this query, it's not in limbo.\n        if (this.syncedDocuments.has(key)) {\n            return false;\n        }\n        // The local store doesn't think it's a result, so it shouldn't be in limbo.\n        if (!this.documentSet.has(key)) {\n            return false;\n        }\n        // If there are local changes to the doc, they might explain why the server\n        // doesn't know that it's part of the query. So don't put it in limbo.\n        // TODO(klimt): Ideally, we would only consider changes that might actually\n        // affect this specific query.\n        if (this.documentSet.get(key).hasLocalMutations) {\n            return false;\n        }\n        // Everything else is in limbo.\n        return true;\n    };\n    /**\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\n     * Returns the list of changes to which docs are in limbo.\n     */\n    View.prototype.applyTargetChange = function (targetChange) {\n        var _this = this;\n        if (targetChange) {\n            var targetMapping = targetChange.mapping;\n            if (targetMapping instanceof ResetMapping) {\n                this.syncedDocuments = targetMapping.documents;\n            }\n            else if (targetMapping instanceof UpdateMapping) {\n                this.syncedDocuments = targetMapping.applyToKeySet(this.syncedDocuments);\n            }\n            switch (targetChange.currentStatusUpdate) {\n                case CurrentStatusUpdate.MarkCurrent:\n                    this.current = true;\n                    break;\n                case CurrentStatusUpdate.MarkNotCurrent:\n                    this.current = false;\n                    break;\n                case CurrentStatusUpdate.None:\n                    break;\n                default:\n                    fail('Unknown current status update: ' + targetChange.currentStatusUpdate);\n            }\n        }\n        // Recompute the set of limbo docs.\n        // TODO(klimt): Do this incrementally so that it's not quadratic when\n        // updating many documents.\n        var oldLimboDocuments = this.limboDocuments;\n        this.limboDocuments = documentKeySet();\n        if (this.current) {\n            this.documentSet.forEach(function (doc) {\n                if (_this.shouldBeInLimbo(doc.key)) {\n                    _this.limboDocuments = _this.limboDocuments.add(doc.key);\n                }\n            });\n        }\n        // Diff the new limbo docs with the old limbo docs.\n        var changes = [];\n        oldLimboDocuments.forEach(function (key) {\n            if (!_this.limboDocuments.has(key)) {\n                changes.push(new RemovedLimboDocument(key));\n            }\n        });\n        this.limboDocuments.forEach(function (key) {\n            if (!oldLimboDocuments.has(key)) {\n                changes.push(new AddedLimboDocument(key));\n            }\n        });\n        return changes;\n    };\n    return View;\n}());\nexport { View };\nfunction compareChangeType(c1, c2) {\n    var order = function (change) {\n        switch (change) {\n            case ChangeType.Added:\n                return 1;\n            case ChangeType.Modified:\n                return 2;\n            case ChangeType.Metadata:\n                // A metadata change is converted to a modified change at the public\n                // api layer.  Since we sort by document key and then change type,\n                // metadata and modified changes must be sorted equivalently.\n                return 2;\n            case ChangeType.Removed:\n                return 0;\n            default:\n                return fail('Unknown ChangeType: ' + change);\n        }\n    };\n    return order(c1) - order(c2);\n}\n\n//# sourceMappingURL=view.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/view.js\n// module id = 287\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport * as log from '../util/log';\nimport { AutoId } from '../util/misc';\nimport { IndexedDbMutationQueue } from './indexeddb_mutation_queue';\nimport { IndexedDbQueryCache } from './indexeddb_query_cache';\nimport { IndexedDbRemoteDocumentCache } from './indexeddb_remote_document_cache';\nimport { ALL_STORES, DbOwner } from './indexeddb_schema';\nimport { createOrUpgradeDb, SCHEMA_VERSION } from './indexeddb_schema';\nimport { LocalSerializer } from './local_serializer';\nimport { PersistencePromise } from './persistence_promise';\nimport { SimpleDb } from './simple_db';\nvar LOG_TAG = 'IndexedDbPersistence';\n/** If the owner lease is older than 5 seconds, try to take ownership. */\nvar OWNER_LEASE_MAX_AGE_MS = 5000;\n/** Refresh the owner lease every 4 seconds while owner. */\nvar OWNER_LEASE_REFRESH_INTERVAL_MS = 4000;\n/** LocalStorage location to indicate a zombied ownerId (see class comment). */\nvar ZOMBIE_OWNER_LOCALSTORAGE_SUFFIX = 'zombiedOwnerId';\n/** Error when the owner lease cannot be acquired or is lost. */\nvar EXISTING_OWNER_ERROR_MSG = 'There is another tab open with offline' +\n    ' persistence enabled. Only one such tab is allowed at a time. The' +\n    ' other tab must be closed or persistence must be disabled.';\nvar UNSUPPORTED_PLATFORM_ERROR_MSG = 'This platform is either missing' +\n    ' IndexedDB or is known to have an incomplete implementation. Offline' +\n    ' persistence has been disabled.';\n/**\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\n * across sessions.\n *\n * Currently the Firestore SDK only supports a single consumer of the database,\n * but browsers obviously support multiple tabs. IndexedDbPersistence ensures a\n * single consumer of the database via an \"owner lease\" stored in the database.\n *\n * On startup, IndexedDbPersistence assigns itself a random \"ownerId\" and writes\n * it to a special \"owner\" object in the database (if no entry exists already or\n * the current entry is expired). This owner lease is then verified inside every\n * transaction to ensure the lease has not been lost.\n *\n * If a tab opts not to acquire the owner lease (because there's an existing\n * non-expired owner) or loses the owner lease, IndexedDbPersistence enters a\n * failed state and all subsequent operations will automatically fail.\n *\n * The current owner regularly refreshes the owner lease with new timestamps to\n * prevent newly-opened tabs from taking over ownership.\n *\n * Additionally there is an optimization so that when a tab is closed, the owner\n * lease is released immediately (this is especially important to make sure that\n * a refreshed tab is able to immediately re-acquire the owner lease).\n * Unfortunately, IndexedDB cannot be reliably used in window.unload since it is\n * an asynchronous API. So in addition to attempting to give up the lease,\n * the owner writes its ownerId to a \"zombiedOwnerId\" entry in LocalStorage\n * which acts as an indicator that another tab should go ahead and take the\n * owner lease immediately regardless of the current lease timestamp.\n */\nvar IndexedDbPersistence = /** @class */ (function () {\n    function IndexedDbPersistence(prefix, serializer) {\n        this.ownerId = this.generateOwnerId();\n        this.dbName = prefix + IndexedDbPersistence.MAIN_DATABASE;\n        this.serializer = new LocalSerializer(serializer);\n        this.localStoragePrefix = prefix;\n    }\n    IndexedDbPersistence.prototype.start = function () {\n        var _this = this;\n        if (!IndexedDbPersistence.isAvailable()) {\n            this.persistenceError = new FirestoreError(Code.UNIMPLEMENTED, UNSUPPORTED_PLATFORM_ERROR_MSG);\n            return Promise.reject(this.persistenceError);\n        }\n        assert(!this.started, 'IndexedDbPersistence double-started!');\n        this.started = true;\n        return SimpleDb.openOrCreate(this.dbName, SCHEMA_VERSION, createOrUpgradeDb)\n            .then(function (db) {\n            _this.simpleDb = db;\n        })\n            .then(function () { return _this.tryAcquireOwnerLease(); })\n            .then(function () {\n            _this.scheduleOwnerLeaseRefreshes();\n            _this.attachWindowUnloadHook();\n        });\n    };\n    IndexedDbPersistence.prototype.shutdown = function () {\n        var _this = this;\n        assert(this.started, 'IndexedDbPersistence shutdown without start!');\n        this.started = false;\n        this.detachWindowUnloadHook();\n        this.stopOwnerLeaseRefreshes();\n        return this.releaseOwnerLease().then(function () {\n            _this.simpleDb.close();\n        });\n    };\n    IndexedDbPersistence.prototype.getMutationQueue = function (user) {\n        return IndexedDbMutationQueue.forUser(user, this.serializer);\n    };\n    IndexedDbPersistence.prototype.getQueryCache = function () {\n        return new IndexedDbQueryCache(this.serializer);\n    };\n    IndexedDbPersistence.prototype.getRemoteDocumentCache = function () {\n        return new IndexedDbRemoteDocumentCache(this.serializer);\n    };\n    IndexedDbPersistence.prototype.runTransaction = function (action, operation) {\n        var _this = this;\n        if (this.persistenceError) {\n            return Promise.reject(this.persistenceError);\n        }\n        log.debug(LOG_TAG, 'Starting transaction:', action);\n        // Do all transactions as readwrite against all object stores, since we\n        // are the only reader/writer.\n        return this.simpleDb.runTransaction('readwrite', ALL_STORES, function (txn) {\n            // Verify that we still have the owner lease as part of every transaction.\n            return _this.ensureOwnerLease(txn).next(function () { return operation(txn); });\n        });\n    };\n    IndexedDbPersistence.isAvailable = function () {\n        return SimpleDb.isAvailable();\n    };\n    /**\n     * Generates a string used as a prefix when storing data in IndexedDB and\n     * LocalStorage.\n     */\n    IndexedDbPersistence.buildStoragePrefix = function (databaseInfo) {\n        // Use two different prefix formats:\n        //\n        //   * firestore / persistenceKey / projectID . databaseID / ...\n        //   * firestore / persistenceKey / projectID / ...\n        //\n        // projectIDs are DNS-compatible names and cannot contain dots\n        // so there's no danger of collisions.\n        var database = databaseInfo.databaseId.projectId;\n        if (!databaseInfo.databaseId.isDefaultDatabase) {\n            database += '.' + databaseInfo.databaseId.database;\n        }\n        return 'firestore/' + databaseInfo.persistenceKey + '/' + database + '/';\n    };\n    /**\n     * Acquires the owner lease if there's no valid owner. Else returns a rejected\n     * promise.\n     */\n    IndexedDbPersistence.prototype.tryAcquireOwnerLease = function () {\n        var _this = this;\n        // NOTE: Don't use this.runTransaction, since it requires us to already\n        // have the lease.\n        return this.simpleDb.runTransaction('readwrite', [DbOwner.store], function (txn) {\n            var store = txn.store(DbOwner.store);\n            return store.get('owner').next(function (dbOwner) {\n                if (!_this.validOwner(dbOwner)) {\n                    var newDbOwner = new DbOwner(_this.ownerId, Date.now());\n                    log.debug(LOG_TAG, 'No valid owner. Acquiring owner lease. Current owner:', dbOwner, 'New owner:', newDbOwner);\n                    return store.put('owner', newDbOwner);\n                }\n                else {\n                    log.debug(LOG_TAG, 'Valid owner already. Failing. Current owner:', dbOwner);\n                    _this.persistenceError = new FirestoreError(Code.FAILED_PRECONDITION, EXISTING_OWNER_ERROR_MSG);\n                    return PersistencePromise.reject(_this.persistenceError);\n                }\n            });\n        });\n    };\n    /** Checks the owner lease and deletes it if we are the current owner. */\n    IndexedDbPersistence.prototype.releaseOwnerLease = function () {\n        var _this = this;\n        // NOTE: Don't use this.runTransaction, since it requires us to already\n        // have the lease.\n        return this.simpleDb.runTransaction('readwrite', [DbOwner.store], function (txn) {\n            var store = txn.store(DbOwner.store);\n            return store.get('owner').next(function (dbOwner) {\n                if (dbOwner !== null && dbOwner.ownerId === _this.ownerId) {\n                    log.debug(LOG_TAG, 'Releasing owner lease.');\n                    return store.delete('owner');\n                }\n                else {\n                    return PersistencePromise.resolve();\n                }\n            });\n        });\n    };\n    /**\n     * Checks the owner lease and returns a rejected promise if we are not the\n     * current owner. This should be included in every transaction to guard\n     * against losing the owner lease.\n     */\n    IndexedDbPersistence.prototype.ensureOwnerLease = function (txn) {\n        var _this = this;\n        var store = txn.store(DbOwner.store);\n        return store.get('owner').next(function (dbOwner) {\n            if (dbOwner === null || dbOwner.ownerId !== _this.ownerId) {\n                _this.persistenceError = new FirestoreError(Code.FAILED_PRECONDITION, EXISTING_OWNER_ERROR_MSG);\n                return PersistencePromise.reject(_this.persistenceError);\n            }\n            else {\n                return PersistencePromise.resolve();\n            }\n        });\n    };\n    /**\n     * Returns true if the provided owner exists, has a recent timestamp, and\n     * isn't zombied.\n     *\n     * NOTE: To determine if the owner is zombied, this method reads from\n     * LocalStorage which could be mildly expensive.\n     */\n    IndexedDbPersistence.prototype.validOwner = function (dbOwner) {\n        var now = Date.now();\n        var minAcceptable = now - OWNER_LEASE_MAX_AGE_MS;\n        var maxAcceptable = now;\n        if (dbOwner === null) {\n            return false; // no owner.\n        }\n        else if (dbOwner.leaseTimestampMs < minAcceptable) {\n            return false; // owner lease has expired.\n        }\n        else if (dbOwner.leaseTimestampMs > maxAcceptable) {\n            log.error('Persistence owner-lease is in the future. Discarding.', dbOwner);\n            return false;\n        }\n        else if (dbOwner.ownerId === this.getZombiedOwnerId()) {\n            return false; // owner's tab closed.\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Schedules a recurring timer to update the owner lease timestamp to prevent\n     * other tabs from taking the lease.\n     */\n    IndexedDbPersistence.prototype.scheduleOwnerLeaseRefreshes = function () {\n        var _this = this;\n        // NOTE: This doesn't need to be scheduled on the async queue and doing so\n        // would increase the chances of us not refreshing on time if the queue is\n        // backed up for some reason.\n        this.ownerLeaseRefreshHandle = setInterval(function () {\n            var txResult = _this.runTransaction('Refresh owner timestamp', function (txn) {\n                // NOTE: We don't need to validate the current owner contents, since\n                // runTransaction does that automatically.\n                var store = txn.store(DbOwner.store);\n                return store.put('owner', new DbOwner(_this.ownerId, Date.now()));\n            });\n            txResult.catch(function (reason) {\n                // Probably means we lost the lease. Report the error and stop trying to\n                // refresh the lease.\n                log.error(reason);\n                _this.stopOwnerLeaseRefreshes();\n            });\n        }, OWNER_LEASE_REFRESH_INTERVAL_MS);\n    };\n    IndexedDbPersistence.prototype.stopOwnerLeaseRefreshes = function () {\n        if (this.ownerLeaseRefreshHandle) {\n            clearInterval(this.ownerLeaseRefreshHandle);\n            this.ownerLeaseRefreshHandle = null;\n        }\n    };\n    /**\n     * Attaches a window.unload handler that will synchronously write our\n     * ownerId to a \"zombie owner id\" location in localstorage. This can be used\n     * by tabs trying to acquire the lease to determine that the lease should be\n     * acquired immediately even if the timestamp is recent. This is particularly\n     * important for the refresh case (so the tab correctly re-acquires the owner\n     * lease). LocalStorage is used for this rather than IndexedDb because it is\n     * a synchronous API and so can be used reliably from an unload handler.\n     */\n    IndexedDbPersistence.prototype.attachWindowUnloadHook = function () {\n        var _this = this;\n        this.windowUnloadHandler = function () {\n            // Record that we're zombied.\n            _this.setZombiedOwnerId(_this.ownerId);\n            // Attempt graceful shutdown (including releasing our owner lease), but\n            // there's no guarantee it will complete.\n            _this.shutdown();\n        };\n        window.addEventListener('unload', this.windowUnloadHandler);\n    };\n    IndexedDbPersistence.prototype.detachWindowUnloadHook = function () {\n        if (this.windowUnloadHandler) {\n            window.removeEventListener('unload', this.windowUnloadHandler);\n            this.windowUnloadHandler = null;\n        }\n    };\n    /**\n     * Returns any recorded \"zombied owner\" (i.e. a previous owner that became\n     * zombied due to their tab closing) from LocalStorage, or null if no such\n     * record exists.\n     */\n    IndexedDbPersistence.prototype.getZombiedOwnerId = function () {\n        try {\n            var zombiedOwnerId = window.localStorage.getItem(this.zombiedOwnerLocalStorageKey());\n            log.debug(LOG_TAG, 'Zombied ownerID from LocalStorage:', zombiedOwnerId);\n            return zombiedOwnerId;\n        }\n        catch (e) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            log.error('Failed to get zombie owner id.', e);\n            return null;\n        }\n    };\n    /**\n     * Records a zombied owner (an owner that had its tab closed) in LocalStorage\n     * or, if passed null, deletes any recorded zombied owner.\n     */\n    IndexedDbPersistence.prototype.setZombiedOwnerId = function (zombieOwnerId) {\n        try {\n            if (zombieOwnerId === null) {\n                window.localStorage.removeItem(this.zombiedOwnerLocalStorageKey());\n            }\n            else {\n                window.localStorage.setItem(this.zombiedOwnerLocalStorageKey(), zombieOwnerId);\n            }\n        }\n        catch (e) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            log.error('Failed to set zombie owner id.', e);\n        }\n    };\n    IndexedDbPersistence.prototype.zombiedOwnerLocalStorageKey = function () {\n        return this.localStoragePrefix + ZOMBIE_OWNER_LOCALSTORAGE_SUFFIX;\n    };\n    IndexedDbPersistence.prototype.generateOwnerId = function () {\n        // For convenience, just use an AutoId.\n        return AutoId.newId();\n    };\n    /**\n     * The name of the main (and currently only) IndexedDB database. this name is\n     * appended to the prefix provided to the IndexedDbPersistence constructor.\n     */\n    IndexedDbPersistence.MAIN_DATABASE = 'main';\n    return IndexedDbPersistence;\n}());\nexport { IndexedDbPersistence };\n\n//# sourceMappingURL=indexeddb_persistence.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_persistence.js\n// module id = 288\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BATCHID_UNKNOWN, MutationBatch } from '../model/mutation_batch';\nimport { assert, fail } from '../util/assert';\nimport { immediatePredecessor, primitiveComparator } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\nimport * as EncodedResourcePath from './encoded_resource_path';\nimport { DbDocumentMutation, DbMutationBatch, DbMutationQueue } from './indexeddb_schema';\nimport { PersistencePromise } from './persistence_promise';\nimport { SimpleDbTransaction } from './simple_db';\n/** A mutation queue for a specific user, backed by IndexedDB. */\nvar IndexedDbMutationQueue = /** @class */ (function () {\n    function IndexedDbMutationQueue(\n        /**\n         * The normalized userId (e.g. null UID => \"\" userId) used to store /\n         * retrieve mutations.\n         */\n        userId, serializer) {\n        this.userId = userId;\n        this.serializer = serializer;\n        this.garbageCollector = null;\n    }\n    /**\n     * Creates a new mutation queue for the given user.\n     * @param user The user for which to create a mutation queue.\n     * @param serializer The serializer to use when persisting to IndexedDb.\n     */\n    IndexedDbMutationQueue.forUser = function (user, serializer) {\n        // TODO(mcg): Figure out what constraints there are on userIDs\n        // In particular, are there any reserved characters? are empty ids allowed?\n        // For the moment store these together in the same mutations table assuming\n        // that empty userIDs aren't allowed.\n        assert(user.uid !== '', 'UserID must not be an empty string.');\n        var userId = user.isUnauthenticated() ? '' : user.uid;\n        return new IndexedDbMutationQueue(userId, serializer);\n    };\n    IndexedDbMutationQueue.prototype.start = function (transaction) {\n        var _this = this;\n        return IndexedDbMutationQueue.loadNextBatchIdFromDb(transaction)\n            .next(function (nextBatchId) {\n            _this.nextBatchId = nextBatchId;\n            return mutationQueuesStore(transaction).get(_this.userId);\n        })\n            .next(function (metadata) {\n            if (!metadata) {\n                metadata = new DbMutationQueue(_this.userId, BATCHID_UNKNOWN, \n                /*lastStreamToken=*/ '');\n            }\n            _this.metadata = metadata;\n            // On restart, nextBatchId may end up lower than\n            // lastAcknowledgedBatchId since it's computed from the queue\n            // contents, and there may be no mutations in the queue. In this\n            // case, we need to reset lastAcknowledgedBatchId (which is safe\n            // since the queue must be empty).\n            if (_this.metadata.lastAcknowledgedBatchId >= _this.nextBatchId) {\n                return _this.checkEmpty(transaction).next(function (empty) {\n                    assert(empty, 'Reset nextBatchID is only possible when the queue is empty');\n                    _this.metadata.lastAcknowledgedBatchId = BATCHID_UNKNOWN;\n                    return mutationQueuesStore(transaction).put(_this.metadata);\n                });\n            }\n            else {\n                return PersistencePromise.resolve();\n            }\n        });\n    };\n    /**\n     * Returns one larger than the largest batch ID that has been stored. If there\n     * are no mutations returns 0. Note that batch IDs are global.\n     */\n    IndexedDbMutationQueue.loadNextBatchIdFromDb = function (txn) {\n        var maxBatchId = BATCHID_UNKNOWN;\n        return mutationsStore(txn)\n            .iterate({ reverse: true }, function (key, batch, control) {\n            var userId = key[0], batchId = key[1];\n            if (batchId > maxBatchId) {\n                maxBatchId = batch.batchId;\n            }\n            if (userId === '') {\n                // We can't compute a predecessor for the empty string, since it\n                // is lexographically first. That also means that no other\n                // userIds can come before this one, so we can just exit early.\n                control.done();\n            }\n            else {\n                var nextUser = immediatePredecessor(userId);\n                control.skip([nextUser]);\n            }\n        })\n            .next(function () { return maxBatchId + 1; });\n    };\n    IndexedDbMutationQueue.prototype.checkEmpty = function (transaction) {\n        var empty = true;\n        var range = IDBKeyRange.bound(this.keyForBatchId(Number.NEGATIVE_INFINITY), this.keyForBatchId(Number.POSITIVE_INFINITY));\n        return mutationsStore(transaction)\n            .iterate({ range: range }, function (key, value, control) {\n            empty = false;\n            control.done();\n        })\n            .next(function () { return empty; });\n    };\n    IndexedDbMutationQueue.prototype.getNextBatchId = function (transaction) {\n        return PersistencePromise.resolve(this.nextBatchId);\n    };\n    IndexedDbMutationQueue.prototype.getHighestAcknowledgedBatchId = function (transaction) {\n        return PersistencePromise.resolve(this.metadata.lastAcknowledgedBatchId);\n    };\n    IndexedDbMutationQueue.prototype.acknowledgeBatch = function (transaction, batch, streamToken) {\n        var batchId = batch.batchId;\n        assert(batchId > this.metadata.lastAcknowledgedBatchId, 'Mutation batchIDs must be acknowledged in order');\n        this.metadata.lastAcknowledgedBatchId = batchId;\n        this.metadata.lastStreamToken = validateStreamToken(streamToken);\n        return mutationQueuesStore(transaction).put(this.metadata);\n    };\n    IndexedDbMutationQueue.prototype.getLastStreamToken = function (transaction) {\n        return PersistencePromise.resolve(this.metadata.lastStreamToken);\n    };\n    IndexedDbMutationQueue.prototype.setLastStreamToken = function (transaction, streamToken) {\n        this.metadata.lastStreamToken = validateStreamToken(streamToken);\n        return mutationQueuesStore(transaction).put(this.metadata);\n    };\n    IndexedDbMutationQueue.prototype.addMutationBatch = function (transaction, localWriteTime, mutations) {\n        var _this = this;\n        var batchId = this.nextBatchId;\n        this.nextBatchId++;\n        var batch = new MutationBatch(batchId, localWriteTime, mutations);\n        var dbBatch = this.serializer.toDbMutationBatch(this.userId, batch);\n        return mutationsStore(transaction)\n            .put(dbBatch)\n            .next(function () {\n            var promises = [];\n            for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n                var mutation = mutations_1[_i];\n                var encodedPath = EncodedResourcePath.encode(mutation.key.path);\n                var indexKey = DbDocumentMutation.key(_this.userId, mutation.key.path, batchId);\n                documentMutationsStore(transaction).put(indexKey, DbDocumentMutation.PLACEHOLDER);\n            }\n            return PersistencePromise.waitFor(promises);\n        })\n            .next(function () {\n            return batch;\n        });\n    };\n    IndexedDbMutationQueue.prototype.lookupMutationBatch = function (transaction, batchId) {\n        var _this = this;\n        return mutationsStore(transaction)\n            .get(this.keyForBatchId(batchId))\n            .next(function (dbBatch) {\n            return dbBatch ? _this.serializer.fromDbMutationBatch(dbBatch) : null;\n        });\n    };\n    IndexedDbMutationQueue.prototype.getNextMutationBatchAfterBatchId = function (transaction, batchId) {\n        var _this = this;\n        var range = IDBKeyRange.lowerBound(this.keyForBatchId(batchId + 1));\n        var foundBatch = null;\n        return mutationsStore(transaction)\n            .iterate({ range: range }, function (key, dbBatch, control) {\n            if (dbBatch.userId === _this.userId) {\n                assert(dbBatch.batchId > batchId, 'Should have found mutation after ' + batchId);\n                foundBatch = _this.serializer.fromDbMutationBatch(dbBatch);\n            }\n            control.done();\n        })\n            .next(function () { return foundBatch; });\n    };\n    IndexedDbMutationQueue.prototype.getAllMutationBatches = function (transaction) {\n        var _this = this;\n        var range = IDBKeyRange.bound(this.keyForBatchId(BATCHID_UNKNOWN), this.keyForBatchId(Number.POSITIVE_INFINITY));\n        return mutationsStore(transaction)\n            .loadAll(range)\n            .next(function (dbBatches) {\n            return dbBatches.map(function (dbBatch) { return _this.serializer.fromDbMutationBatch(dbBatch); });\n        });\n    };\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesThroughBatchId = function (transaction, batchId) {\n        var _this = this;\n        var range = IDBKeyRange.bound(this.keyForBatchId(BATCHID_UNKNOWN), this.keyForBatchId(batchId));\n        return mutationsStore(transaction)\n            .loadAll(range)\n            .next(function (dbBatches) {\n            return dbBatches.map(function (dbBatch) { return _this.serializer.fromDbMutationBatch(dbBatch); });\n        });\n    };\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey = function (transaction, documentKey) {\n        var _this = this;\n        // Scan the document-mutation index starting with a prefix starting with\n        // the given documentKey.\n        var indexPrefix = DbDocumentMutation.prefixForPath(this.userId, documentKey.path);\n        var indexStart = IDBKeyRange.lowerBound(indexPrefix);\n        var results = [];\n        return documentMutationsStore(transaction)\n            .iterate({ range: indexStart }, function (indexKey, _, control) {\n            var userID = indexKey[0], encodedPath = indexKey[1], batchID = indexKey[2];\n            // Only consider rows matching exactly the specific key of\n            // interest. Note that because we order by path first, and we\n            // order terminators before path separators, we'll encounter all\n            // the index rows for documentKey contiguously. In particular, all\n            // the rows for documentKey will occur before any rows for\n            // documents nested in a subcollection beneath documentKey so we\n            // can stop as soon as we hit any such row.\n            var path = EncodedResourcePath.decode(encodedPath);\n            if (userID !== _this.userId || !documentKey.path.isEqual(path)) {\n                control.done();\n                return;\n            }\n            var mutationKey = _this.keyForBatchId(batchID);\n            // Look up the mutation batch in the store.\n            // PORTING NOTE: because iteration is callback driven in the web,\n            // we just look up the key instead of keeping an open iterator\n            // like iOS.\n            return mutationsStore(transaction)\n                .get(mutationKey)\n                .next(function (dbBatch) {\n                if (dbBatch === null) {\n                    fail('Dangling document-mutation reference found: ' +\n                        indexKey +\n                        ' which points to ' +\n                        mutationKey);\n                }\n                results.push(_this.serializer.fromDbMutationBatch(dbBatch));\n            });\n        })\n            .next(function () { return results; });\n    };\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingQuery = function (transaction, query) {\n        var _this = this;\n        assert(!query.isDocumentQuery(), \"Document queries shouldn't go down this path\");\n        var queryPath = query.path;\n        var immediateChildrenLength = queryPath.length + 1;\n        // TODO(mcg): Actually implement a single-collection query\n        //\n        // This is actually executing an ancestor query, traversing the whole\n        // subtree below the collection which can be horrifically inefficient for\n        // some structures. The right way to solve this is to implement the full\n        // value index, but that's not in the cards in the near future so this is\n        // the best we can do for the moment.\n        //\n        // Since we don't yet index the actual properties in the mutations, our\n        // current approach is to just return all mutation batches that affect\n        // documents in the collection being queried.\n        var indexPrefix = DbDocumentMutation.prefixForPath(this.userId, queryPath);\n        var encodedQueryPath = indexPrefix[1];\n        var indexStart = IDBKeyRange.lowerBound(indexPrefix);\n        // Collect up unique batchIDs encountered during a scan of the index. Use a\n        // SortedSet to accumulate batch IDs so they can be traversed in order in a\n        // scan of the main table.\n        var uniqueBatchIDs = new SortedSet(primitiveComparator);\n        return documentMutationsStore(transaction)\n            .iterate({ range: indexStart }, function (indexKey, _, control) {\n            var userID = indexKey[0], encodedPath = indexKey[1], batchID = indexKey[2];\n            var path = EncodedResourcePath.decode(encodedPath);\n            if (userID !== _this.userId || !queryPath.isPrefixOf(path)) {\n                control.done();\n                return;\n            }\n            // Rows with document keys more than one segment longer than the\n            // query path can't be matches. For example, a query on 'rooms'\n            // can't match the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            if (path.length !== immediateChildrenLength) {\n                return;\n            }\n            uniqueBatchIDs = uniqueBatchIDs.add(batchID);\n        })\n            .next(function () {\n            var results = [];\n            var promises = [];\n            // TODO(rockwood): Implement this using iterate.\n            uniqueBatchIDs.forEach(function (batchID) {\n                var mutationKey = _this.keyForBatchId(batchID);\n                promises.push(mutationsStore(transaction)\n                    .get(mutationKey)\n                    .next(function (mutation) {\n                    if (mutation === null) {\n                        fail('Dangling document-mutation reference found, ' +\n                            'which points to ' +\n                            mutationKey);\n                    }\n                    results.push(_this.serializer.fromDbMutationBatch(mutation));\n                }));\n            });\n            return PersistencePromise.waitFor(promises).next(function () { return results; });\n        });\n    };\n    IndexedDbMutationQueue.prototype.removeMutationBatches = function (transaction, batches) {\n        var txn = mutationsStore(transaction);\n        var indexTxn = documentMutationsStore(transaction);\n        var promises = [];\n        var _loop_1 = function (batch) {\n            var range = IDBKeyRange.only(this_1.keyForBatchId(batch.batchId));\n            var numDeleted = 0;\n            var removePromise = txn.iterate({ range: range }, function (key, value, control) {\n                numDeleted++;\n                return control.delete();\n            });\n            promises.push(removePromise.next(function () {\n                assert(numDeleted === 1, 'Dangling document-mutation reference found: Missing batch ' +\n                    batch.batchId);\n            }));\n            for (var _i = 0, _a = batch.mutations; _i < _a.length; _i++) {\n                var mutation = _a[_i];\n                var indexKey = DbDocumentMutation.key(this_1.userId, mutation.key.path, batch.batchId);\n                promises.push(indexTxn.delete(indexKey));\n                if (this_1.garbageCollector !== null) {\n                    this_1.garbageCollector.addPotentialGarbageKey(mutation.key);\n                }\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\n            var batch = batches_1[_i];\n            _loop_1(batch);\n        }\n        return PersistencePromise.waitFor(promises);\n    };\n    IndexedDbMutationQueue.prototype.performConsistencyCheck = function (txn) {\n        var _this = this;\n        return this.checkEmpty(txn).next(function (empty) {\n            if (!empty) {\n                return PersistencePromise.resolve();\n            }\n            // Verify that there are no entries in the documentMutations index if\n            // the queue is empty.\n            var startRange = IDBKeyRange.lowerBound(DbDocumentMutation.prefixForUser(_this.userId));\n            var danglingMutationReferences = [];\n            return documentMutationsStore(txn)\n                .iterate({ range: startRange }, function (key, _, control) {\n                var userID = key[0];\n                if (userID !== _this.userId) {\n                    control.done();\n                    return;\n                }\n                else {\n                    var path = EncodedResourcePath.decode(key[1]);\n                    danglingMutationReferences.push(path);\n                }\n            })\n                .next(function () {\n                assert(danglingMutationReferences.length === 0, 'Document leak -- detected dangling mutation references when queue is empty. Dangling keys: ' +\n                    danglingMutationReferences.map(function (p) { return p.canonicalString(); }));\n            });\n        });\n    };\n    IndexedDbMutationQueue.prototype.setGarbageCollector = function (gc) {\n        this.garbageCollector = gc;\n    };\n    IndexedDbMutationQueue.prototype.containsKey = function (txn, key) {\n        var _this = this;\n        var indexKey = DbDocumentMutation.prefixForPath(this.userId, key.path);\n        var encodedPath = indexKey[1];\n        var startRange = IDBKeyRange.lowerBound(indexKey);\n        var containsKey = false;\n        return documentMutationsStore(txn)\n            .iterate({ range: startRange, keysOnly: true }, function (key, _, control) {\n            var userID = key[0], keyPath = key[1], batchID = key[2];\n            if (userID === _this.userId && keyPath === encodedPath) {\n                containsKey = true;\n            }\n            control.done();\n        })\n            .next(function () { return containsKey; });\n    };\n    /**\n     * Creates a [userId, batchId] key for use with the DbMutationQueue object\n     * store.\n     */\n    IndexedDbMutationQueue.prototype.keyForBatchId = function (batchId) {\n        return [this.userId, batchId];\n    };\n    return IndexedDbMutationQueue;\n}());\nexport { IndexedDbMutationQueue };\nfunction validateStreamToken(token) {\n    assert(typeof token === 'string', 'Persisting non-string stream token not supported.');\n    return token;\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutations object store.\n */\nfunction mutationsStore(txn) {\n    return getStore(txn, DbMutationBatch.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */\nfunction documentMutationsStore(txn) {\n    return getStore(txn, DbDocumentMutation.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */\nfunction mutationQueuesStore(txn) {\n    return getStore(txn, DbMutationQueue.store);\n}\n/**\n * Helper to get a typed SimpleDbStore from a transaction.\n */\nfunction getStore(txn, store) {\n    if (txn instanceof SimpleDbTransaction) {\n        return txn.store(store);\n    }\n    else {\n        return fail('Invalid transaction object provided!');\n    }\n}\n\n//# sourceMappingURL=indexeddb_mutation_queue.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_mutation_queue.js\n// module id = 289\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Timestamp } from '../core/timestamp';\nimport { documentKeySet } from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { assert, fail } from '../util/assert';\nimport { immediateSuccessor } from '../util/misc';\nimport * as EncodedResourcePath from './encoded_resource_path';\nimport { DbTarget, DbTargetDocument, DbTargetGlobal } from './indexeddb_schema';\nimport { PersistencePromise } from './persistence_promise';\nimport { SimpleDbTransaction } from './simple_db';\nvar IndexedDbQueryCache = /** @class */ (function () {\n    function IndexedDbQueryCache(serializer) {\n        this.serializer = serializer;\n        /**\n         * The last received snapshot version. We store this seperately from the\n         * metadata to avoid the extra conversion to/from DbTimestamp.\n         */\n        this.lastRemoteSnapshotVersion = SnapshotVersion.MIN;\n        /**\n         * A cached copy of the metadata for the query cache.\n         */\n        this.metadata = new DbTargetGlobal(\n        /*highestTargetId=*/ 0, \n        /*lastListenSequenceNumber=*/ 0, SnapshotVersion.MIN.toTimestamp());\n        /** The garbage collector to notify about potential garbage keys. */\n        this.garbageCollector = null;\n    }\n    IndexedDbQueryCache.prototype.start = function (transaction) {\n        var _this = this;\n        return globalTargetStore(transaction)\n            .get(DbTargetGlobal.key)\n            .next(function (metadata) {\n            if (metadata !== null) {\n                _this.metadata = metadata;\n                var lastSavedVersion = metadata.lastRemoteSnapshotVersion;\n                _this.lastRemoteSnapshotVersion = SnapshotVersion.fromTimestamp(new Timestamp(lastSavedVersion.seconds, lastSavedVersion.nanos));\n            }\n            return PersistencePromise.resolve();\n        });\n    };\n    IndexedDbQueryCache.prototype.getHighestTargetId = function () {\n        return this.metadata.highestTargetId;\n    };\n    IndexedDbQueryCache.prototype.getLastRemoteSnapshotVersion = function () {\n        return this.lastRemoteSnapshotVersion;\n    };\n    IndexedDbQueryCache.prototype.setLastRemoteSnapshotVersion = function (transaction, snapshotVersion) {\n        this.lastRemoteSnapshotVersion = snapshotVersion;\n        this.metadata.lastRemoteSnapshotVersion = snapshotVersion.toTimestamp();\n        return globalTargetStore(transaction).put(DbTargetGlobal.key, this.metadata);\n    };\n    IndexedDbQueryCache.prototype.addQueryData = function (transaction, queryData) {\n        var _this = this;\n        var targetId = queryData.targetId;\n        var addedQueryPromise = targetsStore(transaction).put(this.serializer.toDbTarget(queryData));\n        if (targetId > this.metadata.highestTargetId) {\n            this.metadata.highestTargetId = targetId;\n            return addedQueryPromise.next(function () {\n                return globalTargetStore(transaction).put(DbTargetGlobal.key, _this.metadata);\n            });\n        }\n        else {\n            return addedQueryPromise;\n        }\n    };\n    IndexedDbQueryCache.prototype.removeQueryData = function (transaction, queryData) {\n        return this.removeMatchingKeysForTargetId(transaction, queryData.targetId).next(function () {\n            targetsStore(transaction).delete(queryData.targetId);\n        });\n    };\n    IndexedDbQueryCache.prototype.getQueryData = function (transaction, query) {\n        var _this = this;\n        // Iterating by the canonicalId may yield more than one result because\n        // canonicalId values are not required to be unique per target. This query\n        // depends on the queryTargets index to be efficent.\n        var canonicalId = query.canonicalId();\n        var range = IDBKeyRange.bound([canonicalId, Number.NEGATIVE_INFINITY], [canonicalId, Number.POSITIVE_INFINITY]);\n        var result = null;\n        return targetsStore(transaction)\n            .iterate({ range: range, index: DbTarget.queryTargetsIndexName }, function (key, value, control) {\n            var found = _this.serializer.fromDbTarget(value);\n            // After finding a potential match, check that the query is\n            // actually equal to the requested query.\n            if (query.isEqual(found.query)) {\n                result = found;\n                control.done();\n            }\n        })\n            .next(function () { return result; });\n    };\n    IndexedDbQueryCache.prototype.addMatchingKeys = function (txn, keys, targetId) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // Indexeddb.\n        var promises = [];\n        var store = documentTargetStore(txn);\n        keys.forEach(function (key) {\n            var path = EncodedResourcePath.encode(key.path);\n            promises.push(store.put(new DbTargetDocument(targetId, path)));\n        });\n        return PersistencePromise.waitFor(promises);\n    };\n    IndexedDbQueryCache.prototype.removeMatchingKeys = function (txn, keys, targetId) {\n        var _this = this;\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        var promises = [];\n        var store = documentTargetStore(txn);\n        keys.forEach(function (key) {\n            var path = EncodedResourcePath.encode(key.path);\n            promises.push(store.delete([targetId, path]));\n            if (_this.garbageCollector !== null) {\n                _this.garbageCollector.addPotentialGarbageKey(key);\n            }\n        });\n        return PersistencePromise.waitFor(promises);\n    };\n    IndexedDbQueryCache.prototype.removeMatchingKeysForTargetId = function (txn, targetId) {\n        var store = documentTargetStore(txn);\n        var range = IDBKeyRange.bound([targetId], [targetId + 1], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        return this.notifyGCForRemovedKeys(txn, range).next(function () {\n            return store.delete(range);\n        });\n    };\n    IndexedDbQueryCache.prototype.notifyGCForRemovedKeys = function (txn, range) {\n        var _this = this;\n        var store = documentTargetStore(txn);\n        if (this.garbageCollector !== null && this.garbageCollector.isEager) {\n            // In order to generate garbage events properly, we need to read these\n            // keys before deleting.\n            return store.iterate({ range: range, keysOnly: true }, function (key, _, control) {\n                var path = EncodedResourcePath.decode(key[1]);\n                var docKey = new DocumentKey(path);\n                // Paranoid assertion in case the the collector is set to null\n                // during the iteration.\n                assert(_this.garbageCollector !== null, 'GarbageCollector for query cache set to null during key removal.');\n                _this.garbageCollector.addPotentialGarbageKey(docKey);\n            });\n        }\n        else {\n            return PersistencePromise.resolve();\n        }\n    };\n    IndexedDbQueryCache.prototype.getMatchingKeysForTargetId = function (txn, targetId) {\n        var promises = [];\n        var range = IDBKeyRange.bound([targetId], [targetId + 1], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        var store = documentTargetStore(txn);\n        var result = documentKeySet();\n        return store\n            .iterate({ range: range, keysOnly: true }, function (key, _, control) {\n            var path = EncodedResourcePath.decode(key[1]);\n            var docKey = new DocumentKey(path);\n            result = result.add(docKey);\n        })\n            .next(function () { return result; });\n    };\n    IndexedDbQueryCache.prototype.setGarbageCollector = function (gc) {\n        this.garbageCollector = gc;\n    };\n    IndexedDbQueryCache.prototype.containsKey = function (txn, key) {\n        assert(txn !== null, 'Persistence Transaction cannot be null for query cache containsKey');\n        var path = EncodedResourcePath.encode(key.path);\n        var range = IDBKeyRange.bound([path], [immediateSuccessor(path)], \n        /*lowerOpen=*/ false, \n        /*upperOpen=*/ true);\n        var count = 0;\n        return documentTargetStore(txn)\n            .iterate({\n            index: DbTargetDocument.documentTargetsIndex,\n            keysOnly: true,\n            range: range\n        }, function (key, _, control) {\n            count++;\n            control.done();\n        })\n            .next(function () { return count > 0; });\n    };\n    return IndexedDbQueryCache;\n}());\nexport { IndexedDbQueryCache };\n/**\n * Helper to get a typed SimpleDbStore for the queries object store.\n */\nfunction targetsStore(txn) {\n    return getStore(txn, DbTarget.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the target globals object store.\n */\nfunction globalTargetStore(txn) {\n    return getStore(txn, DbTargetGlobal.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the document target object store.\n */\nfunction documentTargetStore(txn) {\n    return getStore(txn, DbTargetDocument.store);\n}\n/**\n * Helper to get a typed SimpleDbStore from a transaction.\n */\nfunction getStore(txn, store) {\n    if (txn instanceof SimpleDbTransaction) {\n        return txn.store(store);\n    }\n    else {\n        return fail('Invalid transaction object provided!');\n    }\n}\n\n//# sourceMappingURL=indexeddb_query_cache.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_query_cache.js\n// module id = 290\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { documentMap } from '../model/collections';\nimport { Document } from '../model/document';\nimport { fail } from '../util/assert';\nimport { DbRemoteDocument } from './indexeddb_schema';\nimport { SimpleDbTransaction } from './simple_db';\nvar IndexedDbRemoteDocumentCache = /** @class */ (function () {\n    function IndexedDbRemoteDocumentCache(serializer) {\n        this.serializer = serializer;\n    }\n    IndexedDbRemoteDocumentCache.prototype.addEntry = function (transaction, maybeDocument) {\n        return remoteDocumentsStore(transaction).put(dbKey(maybeDocument.key), this.serializer.toDbRemoteDocument(maybeDocument));\n    };\n    IndexedDbRemoteDocumentCache.prototype.removeEntry = function (transaction, documentKey) {\n        return remoteDocumentsStore(transaction).delete(dbKey(documentKey));\n    };\n    IndexedDbRemoteDocumentCache.prototype.getEntry = function (transaction, documentKey) {\n        var _this = this;\n        return remoteDocumentsStore(transaction)\n            .get(dbKey(documentKey))\n            .next(function (dbRemoteDoc) {\n            return dbRemoteDoc\n                ? _this.serializer.fromDbRemoteDocument(dbRemoteDoc)\n                : null;\n        });\n    };\n    IndexedDbRemoteDocumentCache.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n        var _this = this;\n        var results = documentMap();\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n        var startKey = query.path.toArray();\n        var range = IDBKeyRange.lowerBound(startKey);\n        return remoteDocumentsStore(transaction)\n            .iterate({ range: range }, function (key, dbRemoteDoc, control) {\n            var maybeDoc = _this.serializer.fromDbRemoteDocument(dbRemoteDoc);\n            if (!query.path.isPrefixOf(maybeDoc.key.path)) {\n                control.done();\n            }\n            else if (maybeDoc instanceof Document && query.matches(maybeDoc)) {\n                results = results.insert(maybeDoc.key, maybeDoc);\n            }\n        })\n            .next(function () { return results; });\n    };\n    return IndexedDbRemoteDocumentCache;\n}());\nexport { IndexedDbRemoteDocumentCache };\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */\nfunction remoteDocumentsStore(txn) {\n    if (txn instanceof SimpleDbTransaction) {\n        return txn.store(DbRemoteDocument.store);\n    }\n    else {\n        return fail('Invalid transaction object provided!');\n    }\n}\nfunction dbKey(docKey) {\n    return docKey.path.toArray();\n}\n\n//# sourceMappingURL=indexeddb_remote_document_cache.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/indexeddb_remote_document_cache.js\n// module id = 291\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Timestamp } from '../core/timestamp';\nimport { Document, NoDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { MutationBatch } from '../model/mutation_batch';\nimport { assert, fail } from '../util/assert';\nimport { DbMutationBatch, DbNoDocument, DbRemoteDocument, DbTarget, DbTimestamp } from './indexeddb_schema';\nimport { QueryData, QueryPurpose } from './query_data';\n/** Serializer for values stored in the LocalStore. */\nvar LocalSerializer = /** @class */ (function () {\n    function LocalSerializer(remoteSerializer) {\n        this.remoteSerializer = remoteSerializer;\n    }\n    /** Decodes a remote document from storage locally to a Document. */\n    LocalSerializer.prototype.fromDbRemoteDocument = function (remoteDoc) {\n        if (remoteDoc.document) {\n            return this.remoteSerializer.fromDocument(remoteDoc.document);\n        }\n        else if (remoteDoc.noDocument) {\n            var key = DocumentKey.fromSegments(remoteDoc.noDocument.path);\n            var readTime = remoteDoc.noDocument.readTime;\n            var timestamp = new Timestamp(readTime.seconds, readTime.nanos);\n            return new NoDocument(key, SnapshotVersion.fromTimestamp(timestamp));\n        }\n        else {\n            return fail('Unexpected DbRemoteDocument');\n        }\n    };\n    /** Encodes a document for storage locally. */\n    LocalSerializer.prototype.toDbRemoteDocument = function (maybeDoc) {\n        if (maybeDoc instanceof Document) {\n            var doc = this.remoteSerializer.toDocument(maybeDoc);\n            return new DbRemoteDocument(null, doc);\n        }\n        else {\n            var path = maybeDoc.key.path.toArray();\n            var timestamp = maybeDoc.version.toTimestamp();\n            var readTime = new DbTimestamp(timestamp.seconds, timestamp.nanos);\n            return new DbRemoteDocument(new DbNoDocument(path, readTime), null);\n        }\n    };\n    /** Encodes a batch of mutations into a DbMutationBatch for local storage. */\n    LocalSerializer.prototype.toDbMutationBatch = function (userId, batch) {\n        var _this = this;\n        var serializedMutations = batch.mutations.map(function (m) {\n            return _this.remoteSerializer.toMutation(m);\n        });\n        return new DbMutationBatch(userId, batch.batchId, batch.localWriteTime.toEpochMilliseconds(), serializedMutations);\n    };\n    /** Decodes a DbMutationBatch into a MutationBatch */\n    LocalSerializer.prototype.fromDbMutationBatch = function (dbBatch) {\n        var _this = this;\n        var mutations = dbBatch.mutations.map(function (m) {\n            return _this.remoteSerializer.fromMutation(m);\n        });\n        var timestamp = Timestamp.fromEpochMilliseconds(dbBatch.localWriteTimeMs);\n        return new MutationBatch(dbBatch.batchId, timestamp, mutations);\n    };\n    /** Decodes a DbTarget into QueryData */\n    LocalSerializer.prototype.fromDbTarget = function (dbTarget) {\n        var readTime = new Timestamp(dbTarget.readTime.seconds, dbTarget.readTime.nanos);\n        var version = SnapshotVersion.fromTimestamp(readTime);\n        var query;\n        if (isDocumentQuery(dbTarget.query)) {\n            query = this.remoteSerializer.fromDocumentsTarget(dbTarget.query);\n        }\n        else {\n            query = this.remoteSerializer.fromQueryTarget(dbTarget.query);\n        }\n        return new QueryData(query, dbTarget.targetId, QueryPurpose.Listen, version, dbTarget.resumeToken);\n    };\n    /** Encodes QueryData into a DbTarget for storage locally. */\n    LocalSerializer.prototype.toDbTarget = function (queryData) {\n        assert(QueryPurpose.Listen === queryData.purpose, 'Only queries with purpose ' +\n            QueryPurpose.Listen +\n            ' may be stored, got ' +\n            queryData.purpose);\n        var timestamp = queryData.snapshotVersion.toTimestamp();\n        var dbTimestamp = new DbTimestamp(timestamp.seconds, timestamp.nanos);\n        var queryProto;\n        if (queryData.query.isDocumentQuery()) {\n            queryProto = this.remoteSerializer.toDocumentsTarget(queryData.query);\n        }\n        else {\n            queryProto = this.remoteSerializer.toQueryTarget(queryData.query);\n        }\n        assert(typeof queryData.resumeToken === 'string', 'Persisting non-string resume token not supported.');\n        var resumeToken = queryData.resumeToken;\n        // lastListenSequenceNumber is always 0 until we do real GC.\n        return new DbTarget(queryData.targetId, queryData.query.canonicalId(), dbTimestamp, resumeToken, 0, queryProto);\n    };\n    return LocalSerializer;\n}());\nexport { LocalSerializer };\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\nfunction isDocumentQuery(dbQuery) {\n    return dbQuery.documents !== undefined;\n}\n\n//# sourceMappingURL=local_serializer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/local_serializer.js\n// module id = 292\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { TargetIdGenerator } from '../core/target_id_generator';\nimport { Timestamp } from '../core/timestamp';\nimport { documentKeySet } from '../model/collections';\nimport { BATCHID_UNKNOWN } from '../model/mutation_batch';\nimport { ResetMapping, UpdateMapping } from '../remote/remote_event';\nimport { assert, fail } from '../util/assert';\nimport * as log from '../util/log';\nimport * as objUtils from '../util/obj';\nimport { LocalDocumentsView } from './local_documents_view';\nimport { PersistencePromise } from './persistence_promise';\nimport { QueryData, QueryPurpose } from './query_data';\nimport { ReferenceSet } from './reference_set';\nimport { RemoteDocumentChangeBuffer } from './remote_document_change_buffer';\nvar LOG_TAG = 'LocalStore';\n/**\n * Local storage in the Firestore client. Coordinates persistence components\n * like the mutation queue and remote document cache to present a\n * latency-compensated view of stored data.\n *\n * The LocalStore is responsible for accepting mutations from the Sync Engine.\n * Writes from the client are put into a queue as provisional Mutations until\n * they are processed by the RemoteStore and confirmed as having been written\n * to the server.\n *\n * The local store provides the local version of documents that have been\n * modified locally. It maintains the constraint:\n *\n *   LocalDocument = RemoteDocument + Active(LocalMutations)\n *\n * (Active mutations are those that are enqueued and have not been previously\n * acknowledged or rejected).\n *\n * The RemoteDocument (\"ground truth\") state is provided via the\n * applyChangeBatch method. It will be some version of a server-provided\n * document OR will be a server-provided document PLUS acknowledged mutations:\n *\n *   RemoteDocument' = RemoteDocument + Acknowledged(LocalMutations)\n *\n * Note that this \"dirty\" version of a RemoteDocument will not be identical to a\n * server base version, since it has LocalMutations added to it pending getting\n * an authoritative copy from the server.\n *\n * Since LocalMutations can be rejected by the server, we have to be able to\n * revert a LocalMutation that has already been applied to the LocalDocument\n * (typically done by replaying all remaining LocalMutations to the\n * RemoteDocument to re-apply).\n *\n * The LocalStore is responsible for the garbage collection of the documents it\n * contains. For now, it every doc referenced by a view, the mutation queue, or\n * the RemoteStore.\n *\n * It also maintains the persistence of mapping queries to resume tokens and\n * target ids. It needs to know this data about queries to properly know what\n * docs it would be allowed to garbage collect.\n *\n * The LocalStore must be able to efficiently execute queries against its local\n * cache of the documents, to provide the initial set of results before any\n * remote changes have been received.\n *\n * Note: In TypeScript, most methods return Promises since the implementation\n * may rely on fetching data from IndexedDB which is async.\n * These Promises will only be rejected on an I/O error or other internal\n * (unexpected) failure (e.g. failed assert) and always represent an\n * unrecoverable error (should be caught / reported by the async_queue).\n */\nvar LocalStore = /** @class */ (function () {\n    function LocalStore(\n        /** Manages our in-memory or durable persistence. */\n        persistence, initialUser, \n        /**\n         * The garbage collector collects documents that should no longer be\n         * cached (e.g. if they are no longer retained by the above reference sets\n         * and the garbage collector is performing eager collection).\n         */\n        garbageCollector) {\n        this.persistence = persistence;\n        this.garbageCollector = garbageCollector;\n        /**\n         * The set of document references maintained by any local views.\n         */\n        this.localViewReferences = new ReferenceSet();\n        /** Maps a targetID to data about its query. */\n        this.targetIds = {};\n        /** Used to generate targetIDs for queries tracked locally. */\n        this.targetIdGenerator = TargetIdGenerator.forLocalStore();\n        /**\n         * A heldBatchResult is a mutation batch result (from a write acknowledgement)\n         * that arrived before the watch stream got notified of a snapshot that\n         * includes the write. So we \"hold\" it until the watch stream catches up. It\n         * ensures that the local write remains visible (latency compensation) and\n         * doesn't temporarily appear reverted because the watch stream is slower than\n         * the write stream and so wasn't reflecting it.\n         *\n         * NOTE: Eventually we want to move this functionality into the remote store.\n         */\n        this.heldBatchResults = [];\n        this.mutationQueue = persistence.getMutationQueue(initialUser);\n        this.remoteDocuments = persistence.getRemoteDocumentCache();\n        this.queryCache = persistence.getQueryCache();\n        this.localDocuments = new LocalDocumentsView(this.remoteDocuments, this.mutationQueue);\n        this.garbageCollector.addGarbageSource(this.localViewReferences);\n        this.garbageCollector.addGarbageSource(this.queryCache);\n        this.garbageCollector.addGarbageSource(this.mutationQueue);\n    }\n    /** Performs any initial startup actions required by the local store. */\n    LocalStore.prototype.start = function () {\n        var _this = this;\n        return this.persistence.runTransaction('Start LocalStore', function (txn) {\n            return _this.startMutationQueue(txn).next(function () { return _this.startQueryCache(txn); });\n        });\n    };\n    /**\n     * Tells the LocalStore that the currently authenticated user has changed.\n     *\n     * In response the local store switches the mutation queue to the new user and\n     * returns any resulting document changes.\n     */\n    LocalStore.prototype.handleUserChange = function (user) {\n        var _this = this;\n        return this.persistence.runTransaction('Handle user change', function (txn) {\n            // Swap out the mutation queue, grabbing the pending mutation batches\n            // before and after.\n            var oldBatches;\n            return _this.mutationQueue\n                .getAllMutationBatches(txn)\n                .next(function (promisedOldBatches) {\n                oldBatches = promisedOldBatches;\n                _this.garbageCollector.removeGarbageSource(_this.mutationQueue);\n                _this.mutationQueue = _this.persistence.getMutationQueue(user);\n                _this.garbageCollector.addGarbageSource(_this.mutationQueue);\n                return _this.startMutationQueue(txn);\n            })\n                .next(function () {\n                // Recreate our LocalDocumentsView using the new\n                // MutationQueue.\n                _this.localDocuments = new LocalDocumentsView(_this.remoteDocuments, _this.mutationQueue);\n                return _this.mutationQueue.getAllMutationBatches(txn);\n            })\n                .next(function (newBatches) {\n                // Union the old/new changed keys.\n                var changedKeys = documentKeySet();\n                for (var _i = 0, _a = [oldBatches, newBatches]; _i < _a.length; _i++) {\n                    var batches = _a[_i];\n                    for (var _b = 0, batches_1 = batches; _b < batches_1.length; _b++) {\n                        var batch = batches_1[_b];\n                        for (var _c = 0, _d = batch.mutations; _c < _d.length; _c++) {\n                            var mutation = _d[_c];\n                            changedKeys = changedKeys.add(mutation.key);\n                        }\n                    }\n                }\n                // Return the set of all (potentially) changed documents as the\n                // result of the user change.\n                return _this.localDocuments.getDocuments(txn, changedKeys);\n            });\n        });\n    };\n    LocalStore.prototype.startQueryCache = function (txn) {\n        var _this = this;\n        return this.queryCache.start(txn).next(function () {\n            var targetId = _this.queryCache.getHighestTargetId();\n            _this.targetIdGenerator = TargetIdGenerator.forLocalStore(targetId);\n        });\n    };\n    LocalStore.prototype.startMutationQueue = function (txn) {\n        var _this = this;\n        return this.mutationQueue\n            .start(txn)\n            .next(function () {\n            // If we have any leftover mutation batch results from a prior run,\n            // just drop them.\n            // TODO(http://b/33446471): We probably need to repopulate\n            // heldBatchResults or similar instead, but that is not\n            // straightforward since we're not persisting the write ack versions.\n            _this.heldBatchResults = [];\n            return _this.mutationQueue.getHighestAcknowledgedBatchId(txn);\n        })\n            .next(function (highestAck) {\n            // TODO(mikelehen): This is the only usage of\n            // getAllMutationBatchesThroughBatchId(). Consider removing it in\n            // favor of a getAcknowledgedBatches() method.\n            if (highestAck !== BATCHID_UNKNOWN) {\n                return _this.mutationQueue.getAllMutationBatchesThroughBatchId(txn, highestAck);\n            }\n            else {\n                return PersistencePromise.resolve([]);\n            }\n        })\n            .next(function (ackedBatches) {\n            if (ackedBatches.length > 0) {\n                return _this.mutationQueue.removeMutationBatches(txn, ackedBatches);\n            }\n            else {\n                return PersistencePromise.resolve();\n            }\n        });\n    };\n    /* Accept locally generated Mutations and commit them to storage. */\n    LocalStore.prototype.localWrite = function (mutations) {\n        var _this = this;\n        return this.persistence.runTransaction('Locally write mutations', function (txn) {\n            var batch;\n            var localWriteTime = Timestamp.now();\n            return _this.mutationQueue\n                .addMutationBatch(txn, localWriteTime, mutations)\n                .next(function (promisedBatch) {\n                batch = promisedBatch;\n                // TODO(koss): This is doing an N^2 update by replaying ALL the\n                // mutations on each document (instead of just the ones added) in\n                // this batch.\n                var keys = batch.keys();\n                return _this.localDocuments.getDocuments(txn, keys);\n            })\n                .next(function (changedDocuments) {\n                return { batchId: batch.batchId, changes: changedDocuments };\n            });\n        });\n    };\n    /**\n     * Acknowledge the given batch.\n     *\n     * On the happy path when a batch is acknowledged, the local store will\n     *\n     *  + remove the batch from the mutation queue;\n     *  + apply the changes to the remote document cache;\n     *  + recalculate the latency compensated view implied by those changes (there\n     *    may be mutations in the queue that affect the documents but haven't been\n     *    acknowledged yet); and\n     *  + give the changed documents back the sync engine\n     *\n     * @returns The resulting (modified) documents.\n     */\n    LocalStore.prototype.acknowledgeBatch = function (batchResult) {\n        var _this = this;\n        return this.persistence.runTransaction('Acknowledge batch', function (txn) {\n            var affected;\n            return _this.mutationQueue\n                .acknowledgeBatch(txn, batchResult.batch, batchResult.streamToken)\n                .next(function () {\n                if (_this.shouldHoldBatchResult(batchResult.commitVersion)) {\n                    _this.heldBatchResults.push(batchResult);\n                    affected = documentKeySet();\n                    return PersistencePromise.resolve();\n                }\n                else {\n                    var documentBuffer_1 = new RemoteDocumentChangeBuffer(_this.remoteDocuments);\n                    return _this.releaseBatchResults(txn, [batchResult], documentBuffer_1).next(function (promisedAffectedKeys) {\n                        affected = promisedAffectedKeys;\n                        return documentBuffer_1.apply(txn);\n                    });\n                }\n            })\n                .next(function () {\n                return _this.mutationQueue.performConsistencyCheck(txn);\n            })\n                .next(function () {\n                return _this.localDocuments.getDocuments(txn, affected);\n            });\n        });\n    };\n    /**\n     * Remove mutations from the MutationQueue for the specified batch;\n     * LocalDocuments will be recalculated.\n     *\n     * @returns The resulting modified documents.\n     */\n    LocalStore.prototype.rejectBatch = function (batchId) {\n        var _this = this;\n        return this.persistence.runTransaction('Reject batch', function (txn) {\n            var toReject;\n            var affectedKeys;\n            return _this.mutationQueue\n                .lookupMutationBatch(txn, batchId)\n                .next(function (promisedToReject) {\n                assert(promisedToReject != null, 'Attempt to reject nonexistent batch!');\n                toReject = promisedToReject;\n                return _this.mutationQueue\n                    .getHighestAcknowledgedBatchId(txn)\n                    .next(function (lastAcked) {\n                    assert(batchId > lastAcked, \"Acknowledged batches can't be rejected.\");\n                    return toReject;\n                });\n            })\n                .next(function () {\n                return _this.removeMutationBatch(txn, toReject);\n            })\n                .next(function (promisedAffectedKeys) {\n                affectedKeys = promisedAffectedKeys;\n                return _this.mutationQueue.performConsistencyCheck(txn);\n            })\n                .next(function () {\n                return _this.localDocuments.getDocuments(txn, affectedKeys);\n            });\n        });\n    };\n    /** Returns the last recorded stream token for the current user. */\n    LocalStore.prototype.getLastStreamToken = function () {\n        var _this = this;\n        return this.persistence.runTransaction('Get last stream token', function (txn) {\n            return _this.mutationQueue.getLastStreamToken(txn);\n        });\n    };\n    /**\n     * Sets the stream token for the current user without acknowledging any\n     * mutation batch. This is usually only useful after a stream handshake or in\n     * response to an error that requires clearing the stream token.\n     */\n    LocalStore.prototype.setLastStreamToken = function (streamToken) {\n        var _this = this;\n        return this.persistence.runTransaction('Set last stream token', function (txn) {\n            return _this.mutationQueue.setLastStreamToken(txn, streamToken);\n        });\n    };\n    /**\n     * Returns the last consistent snapshot processed (used by the RemoteStore to\n     * determine whether to buffer incoming snapshots from the backend).\n     */\n    LocalStore.prototype.getLastRemoteSnapshotVersion = function () {\n        return this.queryCache.getLastRemoteSnapshotVersion();\n    };\n    /**\n     * Update the \"ground-state\" (remote) documents. We assume that the remote\n     * event reflects any write batches that have been acknowledged or rejected\n     * (i.e. we do not re-apply local mutations to updates from this event).\n     *\n     * LocalDocuments are re-calculated if there are remaining mutations in the\n     * queue.\n     */\n    LocalStore.prototype.applyRemoteEvent = function (remoteEvent) {\n        var _this = this;\n        var documentBuffer = new RemoteDocumentChangeBuffer(this.remoteDocuments);\n        return this.persistence.runTransaction('Apply remote event', function (txn) {\n            var promises = [];\n            objUtils.forEachNumber(remoteEvent.targetChanges, function (targetId, change) {\n                // Do not ref/unref unassigned targetIds - it may lead to leaks.\n                var queryData = _this.targetIds[targetId];\n                if (!queryData)\n                    return;\n                var mapping = change.mapping;\n                if (mapping) {\n                    // First make sure that all references are deleted\n                    if (mapping instanceof ResetMapping) {\n                        promises.push(_this.queryCache\n                            .removeMatchingKeysForTargetId(txn, targetId)\n                            .next(function () {\n                            return _this.queryCache.addMatchingKeys(txn, mapping.documents, targetId);\n                        }));\n                    }\n                    else if (mapping instanceof UpdateMapping) {\n                        promises.push(_this.queryCache\n                            .removeMatchingKeys(txn, mapping.removedDocuments, targetId)\n                            .next(function () {\n                            return _this.queryCache.addMatchingKeys(txn, mapping.addedDocuments, targetId);\n                        }));\n                    }\n                    else {\n                        return fail('Unknown mapping type: ' + JSON.stringify(mapping));\n                    }\n                }\n                // Update the resume token if the change includes one. Don't clear\n                // any preexisting value.\n                var resumeToken = change.resumeToken;\n                if (resumeToken.length > 0) {\n                    queryData = queryData.update({\n                        resumeToken: resumeToken,\n                        snapshotVersion: change.snapshotVersion\n                    });\n                    _this.targetIds[targetId] = queryData;\n                    promises.push(_this.queryCache.addQueryData(txn, queryData));\n                }\n            });\n            var changedDocKeys = documentKeySet();\n            remoteEvent.documentUpdates.forEach(function (key, doc) {\n                changedDocKeys = changedDocKeys.add(key);\n                promises.push(documentBuffer.getEntry(txn, key).next(function (existingDoc) {\n                    // Make sure we don't apply an old document version to the remote\n                    // cache, though we make an exception for SnapshotVersion.MIN which\n                    // can happen for manufactured events (e.g. in the case of a limbo\n                    // document resolution failing).\n                    if (existingDoc == null ||\n                        doc.version.isEqual(SnapshotVersion.MIN) ||\n                        doc.version.compareTo(existingDoc.version) >= 0) {\n                        documentBuffer.addEntry(doc);\n                    }\n                    else {\n                        log.debug(LOG_TAG, 'Ignoring outdated watch update for ', key, '. Current version:', existingDoc.version, ' Watch version:', doc.version);\n                    }\n                    // The document might be garbage because it was unreferenced by\n                    // everything. Make sure to mark it as garbage if it is...\n                    _this.garbageCollector.addPotentialGarbageKey(key);\n                }));\n            });\n            // HACK: The only reason we allow a null snapshot version is so that we\n            // can synthesize remote events when we get permission denied errors while\n            // trying to resolve the state of a locally cached document that is in\n            // limbo.\n            var lastRemoteVersion = _this.queryCache.getLastRemoteSnapshotVersion();\n            var remoteVersion = remoteEvent.snapshotVersion;\n            if (!remoteVersion.isEqual(SnapshotVersion.MIN)) {\n                assert(remoteVersion.compareTo(lastRemoteVersion) >= 0, 'Watch stream reverted to previous snapshot?? ' +\n                    remoteVersion +\n                    ' < ' +\n                    lastRemoteVersion);\n                promises.push(_this.queryCache.setLastRemoteSnapshotVersion(txn, remoteVersion));\n            }\n            var releasedWriteKeys;\n            return PersistencePromise.waitFor(promises)\n                .next(function () { return _this.releaseHeldBatchResults(txn, documentBuffer); })\n                .next(function (promisedReleasedWriteKeys) {\n                releasedWriteKeys = promisedReleasedWriteKeys;\n                return documentBuffer.apply(txn);\n            })\n                .next(function () {\n                return _this.localDocuments.getDocuments(txn, changedDocKeys.unionWith(releasedWriteKeys));\n            });\n        });\n    };\n    /**\n     * Notify local store of the changed views to locally pin documents.\n     */\n    LocalStore.prototype.notifyLocalViewChanges = function (viewChanges) {\n        var _this = this;\n        return this.persistence.runTransaction('Notify local view changes', function (txn) {\n            var promises = [];\n            var _loop_1 = function (view) {\n                promises.push(_this.queryCache\n                    .getQueryData(txn, view.query)\n                    .next(function (queryData) {\n                    assert(queryData !== null, 'Local view changes contain unallocated query.');\n                    var targetId = queryData.targetId;\n                    _this.localViewReferences.addReferences(view.addedKeys, targetId);\n                    _this.localViewReferences.removeReferences(view.removedKeys, targetId);\n                }));\n            };\n            for (var _i = 0, viewChanges_1 = viewChanges; _i < viewChanges_1.length; _i++) {\n                var view = viewChanges_1[_i];\n                _loop_1(view);\n            }\n            return PersistencePromise.waitFor(promises);\n        });\n    };\n    /**\n     * Gets the mutation batch after the passed in batchId in the mutation queue\n     * or null if empty.\n     * @param afterBatchId If provided, the batch to search after.\n     * @returns The next mutation or null if there wasn't one.\n     */\n    LocalStore.prototype.nextMutationBatch = function (afterBatchId) {\n        var _this = this;\n        return this.persistence.runTransaction('Get next mutation batch', function (txn) {\n            if (afterBatchId === undefined) {\n                afterBatchId = BATCHID_UNKNOWN;\n            }\n            return _this.mutationQueue.getNextMutationBatchAfterBatchId(txn, afterBatchId);\n        });\n    };\n    /**\n     * Read the current value of a Document with a given key or null if not\n     * found - used for testing.\n     */\n    LocalStore.prototype.readDocument = function (key) {\n        var _this = this;\n        return this.persistence.runTransaction('read document', function (txn) {\n            return _this.localDocuments.getDocument(txn, key);\n        });\n    };\n    /**\n     * Assigns the given query an internal ID so that its results can be pinned so\n     * they don't get GC'd. A query must be allocated in the local store before\n     * the store can be used to manage its view.\n     */\n    LocalStore.prototype.allocateQuery = function (query) {\n        var _this = this;\n        return this.persistence.runTransaction('Allocate query', function (txn) {\n            var queryData;\n            return _this.queryCache\n                .getQueryData(txn, query)\n                .next(function (cached) {\n                if (cached) {\n                    // This query has been listened to previously, so reuse the\n                    // previous targetID.\n                    // TODO(mcg): freshen last accessed date?\n                    queryData = cached;\n                    return PersistencePromise.resolve();\n                }\n                else {\n                    var targetId = _this.targetIdGenerator.next();\n                    queryData = new QueryData(query, targetId, QueryPurpose.Listen);\n                    return _this.queryCache.addQueryData(txn, queryData);\n                }\n            })\n                .next(function () {\n                assert(!_this.targetIds[queryData.targetId], 'Tried to allocate an already allocated query: ' + query);\n                _this.targetIds[queryData.targetId] = queryData;\n                return queryData;\n            });\n        });\n    };\n    /** Unpin all the documents associated with the given query. */\n    LocalStore.prototype.releaseQuery = function (query) {\n        var _this = this;\n        return this.persistence.runTransaction('Release query', function (txn) {\n            return _this.queryCache\n                .getQueryData(txn, query)\n                .next(function (queryData) {\n                assert(queryData != null, 'Tried to release nonexistent query: ' + query);\n                _this.localViewReferences.removeReferencesForId(queryData.targetId);\n                delete _this.targetIds[queryData.targetId];\n                if (_this.garbageCollector.isEager) {\n                    return _this.queryCache.removeQueryData(txn, queryData);\n                }\n                else {\n                    return PersistencePromise.resolve();\n                }\n            })\n                .next(function () {\n                // If this was the last watch target, then we won't get any more\n                // watch snapshots, so we should release any held batch results.\n                if (objUtils.isEmpty(_this.targetIds)) {\n                    var documentBuffer_2 = new RemoteDocumentChangeBuffer(_this.remoteDocuments);\n                    return _this.releaseHeldBatchResults(txn, documentBuffer_2).next(function () {\n                        documentBuffer_2.apply(txn);\n                    });\n                }\n                else {\n                    return PersistencePromise.resolve();\n                }\n            });\n        });\n    };\n    /**\n     * Runs the specified query against all the documents in the local store and\n     * returns the results.\n     */\n    LocalStore.prototype.executeQuery = function (query) {\n        var _this = this;\n        return this.persistence.runTransaction('Execute query', function (txn) {\n            return _this.localDocuments.getDocumentsMatchingQuery(txn, query);\n        });\n    };\n    /**\n     * Returns the keys of the documents that are associated with the given\n     * target id in the remote table.\n     */\n    LocalStore.prototype.remoteDocumentKeys = function (targetId) {\n        var _this = this;\n        return this.persistence.runTransaction('Remote document keys', function (txn) {\n            return _this.queryCache.getMatchingKeysForTargetId(txn, targetId);\n        });\n    };\n    /**\n     * Collect garbage if necessary.\n     * Should be called periodically by Sync Engine to recover resources. The\n     * implementation must guarantee that GC won't happen in other places than\n     * this method call.\n     */\n    LocalStore.prototype.collectGarbage = function () {\n        var _this = this;\n        // Call collectGarbage regardless of whether isGCEnabled so the referenceSet\n        // doesn't continue to accumulate the garbage keys.\n        return this.persistence.runTransaction('Garbage collection', function (txn) {\n            return _this.garbageCollector.collectGarbage(txn).next(function (garbage) {\n                var promises = [];\n                garbage.forEach(function (key) {\n                    promises.push(_this.remoteDocuments.removeEntry(txn, key));\n                });\n                return PersistencePromise.waitFor(promises);\n            });\n        });\n    };\n    LocalStore.prototype.releaseHeldBatchResults = function (txn, documentBuffer) {\n        var toRelease = [];\n        for (var _i = 0, _a = this.heldBatchResults; _i < _a.length; _i++) {\n            var batchResult = _a[_i];\n            if (!this.isRemoteUpToVersion(batchResult.commitVersion)) {\n                break;\n            }\n            toRelease.push(batchResult);\n        }\n        if (toRelease.length === 0) {\n            return PersistencePromise.resolve(documentKeySet());\n        }\n        else {\n            this.heldBatchResults.splice(0, toRelease.length);\n            return this.releaseBatchResults(txn, toRelease, documentBuffer);\n        }\n    };\n    LocalStore.prototype.isRemoteUpToVersion = function (version) {\n        // If there are no watch targets, then we won't get remote snapshots, and\n        // we are always \"up-to-date.\"\n        var lastRemoteVersion = this.queryCache.getLastRemoteSnapshotVersion();\n        return (version.compareTo(lastRemoteVersion) <= 0 ||\n            objUtils.isEmpty(this.targetIds));\n    };\n    LocalStore.prototype.shouldHoldBatchResult = function (version) {\n        // Check if watcher isn't up to date or prior results are already held.\n        return (!this.isRemoteUpToVersion(version) || this.heldBatchResults.length > 0);\n    };\n    LocalStore.prototype.releaseBatchResults = function (txn, batchResults, documentBuffer) {\n        var _this = this;\n        var promiseChain = PersistencePromise.resolve();\n        var _loop_2 = function (batchResult) {\n            promiseChain = promiseChain.next(function () {\n                return _this.applyWriteToRemoteDocuments(txn, batchResult, documentBuffer);\n            });\n        };\n        for (var _i = 0, batchResults_1 = batchResults; _i < batchResults_1.length; _i++) {\n            var batchResult = batchResults_1[_i];\n            _loop_2(batchResult);\n        }\n        return promiseChain.next(function () {\n            return _this.removeMutationBatches(txn, batchResults.map(function (result) { return result.batch; }));\n        });\n    };\n    LocalStore.prototype.removeMutationBatch = function (txn, batch) {\n        return this.removeMutationBatches(txn, [batch]);\n    };\n    /** Removes all the mutation batches named in the given array. */\n    LocalStore.prototype.removeMutationBatches = function (txn, batches) {\n        var affectedDocs = documentKeySet();\n        for (var _i = 0, batches_2 = batches; _i < batches_2.length; _i++) {\n            var batch = batches_2[_i];\n            for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n                var mutation = _b[_a];\n                var key = mutation.key;\n                affectedDocs = affectedDocs.add(key);\n            }\n        }\n        return this.mutationQueue\n            .removeMutationBatches(txn, batches)\n            .next(function () { return affectedDocs; });\n    };\n    LocalStore.prototype.applyWriteToRemoteDocuments = function (txn, batchResult, documentBuffer) {\n        var batch = batchResult.batch;\n        var docKeys = batch.keys();\n        var promiseChain = PersistencePromise.resolve();\n        docKeys.forEach(function (docKey) {\n            promiseChain = promiseChain\n                .next(function () {\n                return documentBuffer.getEntry(txn, docKey);\n            })\n                .next(function (remoteDoc) {\n                var doc = remoteDoc;\n                var ackVersion = batchResult.docVersions.get(docKey);\n                assert(ackVersion !== null, 'ackVersions should contain every doc in the write.');\n                if (!doc || doc.version.compareTo(ackVersion) < 0) {\n                    doc = batch.applyToRemoteDocument(docKey, doc, batchResult);\n                    if (!doc) {\n                        assert(!remoteDoc, 'Mutation batch ' +\n                            batch +\n                            ' applied to document ' +\n                            remoteDoc +\n                            ' resulted in null');\n                    }\n                    else {\n                        documentBuffer.addEntry(doc);\n                    }\n                }\n            });\n        });\n        return promiseChain;\n    };\n    return LocalStore;\n}());\nexport { LocalStore };\n\n//# sourceMappingURL=local_store.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/local_store.js\n// module id = 293\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { documentKeySet, documentMap, maybeDocumentMap } from '../model/collections';\nimport { Document, NoDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { fail } from '../util/assert';\nimport { PersistencePromise } from './persistence_promise';\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */\nvar LocalDocumentsView = /** @class */ (function () {\n    function LocalDocumentsView(remoteDocumentCache, mutationQueue) {\n        this.remoteDocumentCache = remoteDocumentCache;\n        this.mutationQueue = mutationQueue;\n    }\n    /**\n     * Get the local view of the document identified by `key`.\n     *\n     * @return Local view of the document or null if we don't have any cached\n     * state for it.\n     */\n    LocalDocumentsView.prototype.getDocument = function (transaction, key) {\n        var _this = this;\n        return this.remoteDocumentCache\n            .getEntry(transaction, key)\n            .next(function (remoteDoc) {\n            return _this.computeLocalDocument(transaction, key, remoteDoc);\n        });\n    };\n    /**\n     * Gets the local view of the documents identified by `keys`.\n     *\n     * If we don't have cached state for a document in `keys`, a NoDocument will\n     * be stored for that key in the resulting set.\n     */\n    LocalDocumentsView.prototype.getDocuments = function (transaction, keys) {\n        var _this = this;\n        var promises = [];\n        var results = maybeDocumentMap();\n        keys.forEach(function (key) {\n            promises.push(_this.getDocument(transaction, key).next(function (maybeDoc) {\n                // TODO(http://b/32275378): Don't conflate missing / deleted.\n                if (!maybeDoc) {\n                    maybeDoc = new NoDocument(key, SnapshotVersion.forDeletedDoc());\n                }\n                results = results.insert(key, maybeDoc);\n            }));\n        });\n        return PersistencePromise.waitFor(promises).next(function () { return results; });\n    };\n    /** Performs a query against the local view of all documents. */\n    LocalDocumentsView.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n        if (DocumentKey.isDocumentKey(query.path)) {\n            return this.getDocumentsMatchingDocumentQuery(transaction, query.path);\n        }\n        else {\n            return this.getDocumentsMatchingCollectionQuery(transaction, query);\n        }\n    };\n    LocalDocumentsView.prototype.getDocumentsMatchingDocumentQuery = function (transaction, docPath) {\n        // Just do a simple document lookup.\n        return this.getDocument(transaction, new DocumentKey(docPath)).next(function (maybeDoc) {\n            var result = documentMap();\n            if (maybeDoc instanceof Document) {\n                result = result.insert(maybeDoc.key, maybeDoc);\n            }\n            return result;\n        });\n    };\n    LocalDocumentsView.prototype.getDocumentsMatchingCollectionQuery = function (transaction, query) {\n        var _this = this;\n        // Query the remote documents and overlay mutations.\n        // TODO(mikelehen): There may be significant overlap between the mutations\n        // affecting these remote documents and the\n        // getAllMutationBatchesAffectingQuery() mutations. Consider optimizing.\n        var results;\n        return this.remoteDocumentCache\n            .getDocumentsMatchingQuery(transaction, query)\n            .next(function (queryResults) {\n            return _this.computeLocalDocuments(transaction, queryResults);\n        })\n            .next(function (promisedResults) {\n            results = promisedResults;\n            // Now use the mutation queue to discover any other documents that may\n            // match the query after applying mutations.\n            return _this.mutationQueue.getAllMutationBatchesAffectingQuery(transaction, query);\n        })\n            .next(function (matchingMutationBatches) {\n            var matchingKeys = documentKeySet();\n            for (var _i = 0, matchingMutationBatches_1 = matchingMutationBatches; _i < matchingMutationBatches_1.length; _i++) {\n                var batch = matchingMutationBatches_1[_i];\n                for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n                    var mutation = _b[_a];\n                    // TODO(mikelehen): PERF: Check if this mutation actually\n                    // affects the query to reduce work.\n                    if (!results.get(mutation.key)) {\n                        matchingKeys = matchingKeys.add(mutation.key);\n                    }\n                }\n            }\n            // Now add in the results for the matchingKeys.\n            var promises = [];\n            matchingKeys.forEach(function (key) {\n                promises.push(_this.getDocument(transaction, key).next(function (doc) {\n                    if (doc instanceof Document) {\n                        results = results.insert(doc.key, doc);\n                    }\n                }));\n            });\n            return PersistencePromise.waitFor(promises);\n        })\n            .next(function () {\n            // Finally, filter out any documents that don't actually match\n            // the query.\n            results.forEach(function (key, doc) {\n                if (!query.matches(doc)) {\n                    results = results.remove(key);\n                }\n            });\n            return results;\n        });\n    };\n    /**\n     * Takes a remote document and applies local mutations to generate the local\n     * view of the document.\n     * @param transaction The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey The key of the document (necessary when remoteDocument\n     *     is null).\n     * @param document The base remote document to apply mutations to or null.\n     */\n    LocalDocumentsView.prototype.computeLocalDocument = function (transaction, documentKey, document) {\n        return this.mutationQueue\n            .getAllMutationBatchesAffectingDocumentKey(transaction, documentKey)\n            .next(function (batches) {\n            for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\n                var batch = batches_1[_i];\n                document = batch.applyToLocalView(documentKey, document);\n            }\n            return document;\n        });\n    };\n    /**\n     * Takes a set of remote documents and applies local mutations to generate the\n     * local view of the documents.\n     * @param transaction The transaction in which to perform any persistence\n     *     operations.\n     * @param documents The base remote documents to apply mutations to.\n     * @return The local view of the documents.\n     */\n    LocalDocumentsView.prototype.computeLocalDocuments = function (transaction, documents) {\n        var _this = this;\n        var promises = [];\n        documents.forEach(function (key, doc) {\n            promises.push(_this.computeLocalDocument(transaction, key, doc).next(function (mutatedDoc) {\n                if (mutatedDoc instanceof Document) {\n                    documents = documents.insert(mutatedDoc.key, mutatedDoc);\n                }\n                else if (mutatedDoc instanceof NoDocument) {\n                    documents = documents.remove(mutatedDoc.key);\n                }\n                else {\n                    fail('Unknown MaybeDocument: ' + mutatedDoc);\n                }\n            }));\n        });\n        return PersistencePromise.waitFor(promises).next(function () { return documents; });\n    };\n    return LocalDocumentsView;\n}());\nexport { LocalDocumentsView };\n\n//# sourceMappingURL=local_documents_view.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/local_documents_view.js\n// module id = 294\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { maybeDocumentMap } from '../model/collections';\nimport { assert } from '../util/assert';\nimport { PersistencePromise } from './persistence_promise';\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * NOTE: This class was introduced in iOS to work around a limitation in\n * LevelDB. Given IndexedDb has full transaction support with\n * read-your-own-writes capability, this class is not technically needed, but\n * has been preserved as a convenience and to aid portability.\n */\nvar RemoteDocumentChangeBuffer = /** @class */ (function () {\n    function RemoteDocumentChangeBuffer(remoteDocumentCache) {\n        this.remoteDocumentCache = remoteDocumentCache;\n        this.changes = maybeDocumentMap();\n    }\n    /** Buffers a `RemoteDocumentCache.addEntry()` call. */\n    RemoteDocumentChangeBuffer.prototype.addEntry = function (maybeDocument) {\n        var changes = this.assertChanges();\n        this.changes = changes.insert(maybeDocument.key, maybeDocument);\n    };\n    // NOTE: removeEntry() is not presently necessary and so is omitted.\n    /**\n     * Looks up an entry in the cache. The buffered changes will first be checked,\n     * and if no buffered change applies, this will forward to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey The key of the entry to look up.\n     * @return The cached Document or NoDocument entry, or null if we have nothing\n     * cached.\n     */\n    RemoteDocumentChangeBuffer.prototype.getEntry = function (transaction, documentKey) {\n        var changes = this.assertChanges();\n        var bufferedEntry = changes.get(documentKey);\n        if (bufferedEntry) {\n            return PersistencePromise.resolve(bufferedEntry);\n        }\n        else {\n            return this.remoteDocumentCache.getEntry(transaction, documentKey);\n        }\n    };\n    /**\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\n     * the provided transaction.\n     */\n    RemoteDocumentChangeBuffer.prototype.apply = function (transaction) {\n        var _this = this;\n        var changes = this.assertChanges();\n        var promises = [];\n        changes.forEach(function (key, maybeDoc) {\n            promises.push(_this.remoteDocumentCache.addEntry(transaction, maybeDoc));\n        });\n        // We should not be used to buffer any more changes.\n        this.changes = null;\n        return PersistencePromise.waitFor(promises);\n    };\n    /** Helper to assert this.changes is not null and return it. */\n    RemoteDocumentChangeBuffer.prototype.assertChanges = function () {\n        assert(this.changes !== null, 'Changes have already been applied.');\n        return this.changes;\n    };\n    return RemoteDocumentChangeBuffer;\n}());\nexport { RemoteDocumentChangeBuffer };\n\n//# sourceMappingURL=remote_document_change_buffer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/remote_document_change_buffer.js\n// module id = 295\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert } from '../util/assert';\nimport { debug } from '../util/log';\nimport { MemoryMutationQueue } from './memory_mutation_queue';\nimport { MemoryQueryCache } from './memory_query_cache';\nimport { MemoryRemoteDocumentCache } from './memory_remote_document_cache';\nvar LOG_TAG = 'MemoryPersistence';\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\nvar MemoryPersistence = /** @class */ (function () {\n    function MemoryPersistence() {\n        /**\n         * Note that these are retained here to make it easier to write tests\n         * affecting both the in-memory and IndexedDB-backed persistence layers. Tests\n         * can create a new LocalStore wrapping this Persistence instance and this\n         * will make the in-memory persistence layer behave as if it were actually\n         * persisting values.\n         */\n        this.mutationQueues = {};\n        this.remoteDocumentCache = new MemoryRemoteDocumentCache();\n        this.queryCache = new MemoryQueryCache();\n        this.started = false;\n    }\n    MemoryPersistence.prototype.start = function () {\n        assert(!this.started, 'MemoryPersistence double-started!');\n        this.started = true;\n        // No durable state to read on startup.\n        return Promise.resolve();\n    };\n    MemoryPersistence.prototype.shutdown = function () {\n        // No durable state to ensure is closed on shutdown.\n        assert(this.started, 'MemoryPersistence shutdown without start!');\n        this.started = false;\n        return Promise.resolve();\n    };\n    MemoryPersistence.prototype.getMutationQueue = function (user) {\n        var queue = this.mutationQueues[user.toKey()];\n        if (!queue) {\n            queue = new MemoryMutationQueue();\n            this.mutationQueues[user.toKey()] = queue;\n        }\n        return queue;\n    };\n    MemoryPersistence.prototype.getQueryCache = function () {\n        return this.queryCache;\n    };\n    MemoryPersistence.prototype.getRemoteDocumentCache = function () {\n        return this.remoteDocumentCache;\n    };\n    MemoryPersistence.prototype.runTransaction = function (action, operation) {\n        debug(LOG_TAG, 'Starting transaction:', action);\n        return operation(new MemoryPersistenceTransaction()).toPromise();\n    };\n    return MemoryPersistence;\n}());\nexport { MemoryPersistence };\n/** Dummy class since memory persistence doesn't actually use transactions. */\nvar MemoryPersistenceTransaction = /** @class */ (function () {\n    function MemoryPersistenceTransaction() {\n    }\n    return MemoryPersistenceTransaction;\n}());\n\n//# sourceMappingURL=memory_persistence.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/memory_persistence.js\n// module id = 296\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DocumentKey } from '../model/document_key';\nimport { BATCHID_UNKNOWN, MutationBatch } from '../model/mutation_batch';\nimport { emptyByteString } from '../platform/platform';\nimport { assert } from '../util/assert';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\nimport { PersistencePromise } from './persistence_promise';\nimport { DocReference } from './reference_set';\nvar MemoryMutationQueue = /** @class */ (function () {\n    function MemoryMutationQueue() {\n        /**\n         * The set of all mutations that have been sent but not yet been applied to\n         * the backend.\n         */\n        this.mutationQueue = [];\n        /** Next value to use when assigning sequential IDs to each mutation batch. */\n        this.nextBatchId = 1;\n        /** The highest acknowledged mutation in the queue. */\n        this.highestAcknowledgedBatchId = BATCHID_UNKNOWN;\n        /** The last received stream token from the server, used to acknowledge which\n         * responses the client has processed. Stream tokens are opaque checkpoint\n         * markers whose only real value is their inclusion in the next request.\n         */\n        this.lastStreamToken = emptyByteString();\n        /** The garbage collector to notify about potential garbage keys. */\n        this.garbageCollector = null;\n        /** An ordered mapping between documents and the mutations batch IDs. */\n        this.batchesByDocumentKey = new SortedSet(DocReference.compareByKey);\n    }\n    MemoryMutationQueue.prototype.start = function (transaction) {\n        // NOTE: The queue may be shutdown / started multiple times, since we\n        // maintain the queue for the duration of the app session in case a user\n        // logs out / back in. To behave like the LevelDB-backed MutationQueue (and\n        // accommodate tests that expect as much), we reset nextBatchId and\n        // highestAcknowledgedBatchId if the queue is empty.\n        if (this.mutationQueue.length === 0) {\n            this.nextBatchId = 1;\n            this.highestAcknowledgedBatchId = BATCHID_UNKNOWN;\n        }\n        assert(this.highestAcknowledgedBatchId < this.nextBatchId, 'highestAcknowledgedBatchId must be less than the nextBatchId');\n        return PersistencePromise.resolve();\n    };\n    MemoryMutationQueue.prototype.checkEmpty = function (transaction) {\n        return PersistencePromise.resolve(this.mutationQueue.length === 0);\n    };\n    MemoryMutationQueue.prototype.getNextBatchId = function (transaction) {\n        return PersistencePromise.resolve(this.nextBatchId);\n    };\n    MemoryMutationQueue.prototype.getHighestAcknowledgedBatchId = function (transaction) {\n        return PersistencePromise.resolve(this.highestAcknowledgedBatchId);\n    };\n    MemoryMutationQueue.prototype.acknowledgeBatch = function (transaction, batch, streamToken) {\n        var batchId = batch.batchId;\n        assert(batchId > this.highestAcknowledgedBatchId, 'Mutation batchIDs must be acknowledged in order');\n        var batchIndex = this.indexOfExistingBatchId(batchId, 'acknowledged');\n        // Verify that the batch in the queue is the one to be acknowledged.\n        var check = this.mutationQueue[batchIndex];\n        assert(batchId === check.batchId, 'Queue ordering failure: expected batch ' +\n            batchId +\n            ', got batch ' +\n            check.batchId);\n        assert(!check.isTombstone(), \"Can't acknowledge a previously removed batch\");\n        this.highestAcknowledgedBatchId = batchId;\n        this.lastStreamToken = streamToken;\n        return PersistencePromise.resolve();\n    };\n    MemoryMutationQueue.prototype.getLastStreamToken = function (transaction) {\n        return PersistencePromise.resolve(this.lastStreamToken);\n    };\n    MemoryMutationQueue.prototype.setLastStreamToken = function (transaction, streamToken) {\n        this.lastStreamToken = streamToken;\n        return PersistencePromise.resolve();\n    };\n    MemoryMutationQueue.prototype.addMutationBatch = function (transaction, localWriteTime, mutations) {\n        assert(mutations.length !== 0, 'Mutation batches should not be empty');\n        var batchId = this.nextBatchId;\n        this.nextBatchId++;\n        if (this.mutationQueue.length > 0) {\n            var prior = this.mutationQueue[this.mutationQueue.length - 1];\n            assert(prior.batchId < batchId, 'Mutation batchIDs must be monotonically increasing order');\n        }\n        var batch = new MutationBatch(batchId, localWriteTime, mutations);\n        this.mutationQueue.push(batch);\n        // Track references by document key.\n        for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\n            var mutation = mutations_1[_i];\n            this.batchesByDocumentKey = this.batchesByDocumentKey.add(new DocReference(mutation.key, batchId));\n        }\n        return PersistencePromise.resolve(batch);\n    };\n    MemoryMutationQueue.prototype.lookupMutationBatch = function (transaction, batchId) {\n        return PersistencePromise.resolve(this.findMutationBatch(batchId));\n    };\n    MemoryMutationQueue.prototype.getNextMutationBatchAfterBatchId = function (transaction, batchId) {\n        var size = this.mutationQueue.length;\n        // All batches with batchId <= this.highestAcknowledgedBatchId have been\n        // acknowledged so the first unacknowledged batch after batchID will have a\n        // batchID larger than both of these values.\n        batchId = Math.max(batchId + 1, this.highestAcknowledgedBatchId);\n        // The requested batchId may still be out of range so normalize it to the\n        // start of the queue.\n        var rawIndex = this.indexOfBatchId(batchId);\n        var index = rawIndex < 0 ? 0 : rawIndex;\n        // Finally return the first non-tombstone batch.\n        for (; index < size; index++) {\n            var batch = this.mutationQueue[index];\n            if (!batch.isTombstone()) {\n                return PersistencePromise.resolve(batch);\n            }\n        }\n        return PersistencePromise.resolve(null);\n    };\n    MemoryMutationQueue.prototype.getAllMutationBatches = function (transaction) {\n        return PersistencePromise.resolve(this.getAllLiveMutationBatchesBeforeIndex(this.mutationQueue.length));\n    };\n    MemoryMutationQueue.prototype.getAllMutationBatchesThroughBatchId = function (transaction, batchId) {\n        var count = this.mutationQueue.length;\n        var endIndex = this.indexOfBatchId(batchId);\n        if (endIndex < 0) {\n            endIndex = 0;\n        }\n        else if (endIndex >= count) {\n            endIndex = count;\n        }\n        else {\n            // The endIndex is in the queue so increment to pull everything in the\n            // queue including it.\n            endIndex++;\n        }\n        return PersistencePromise.resolve(this.getAllLiveMutationBatchesBeforeIndex(endIndex));\n    };\n    MemoryMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey = function (transaction, documentKey) {\n        var _this = this;\n        var start = new DocReference(documentKey, 0);\n        var end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n        var result = [];\n        this.batchesByDocumentKey.forEachInRange([start, end], function (ref) {\n            assert(documentKey.isEqual(ref.key), \"Should only iterate over a single key's batches\");\n            var batch = _this.findMutationBatch(ref.targetOrBatchId);\n            assert(batch !== null, 'Batches in the index must exist in the main table');\n            result.push(batch);\n        });\n        return PersistencePromise.resolve(result);\n    };\n    MemoryMutationQueue.prototype.getAllMutationBatchesAffectingQuery = function (transaction, query) {\n        var _this = this;\n        // Use the query path as a prefix for testing if a document matches the\n        // query.\n        var prefix = query.path;\n        var immediateChildrenPathLength = prefix.length + 1;\n        // Construct a document reference for actually scanning the index. Unlike\n        // the prefix the document key in this reference must have an even number of\n        // segments. The empty segment can be used a suffix of the query path\n        // because it precedes all other segments in an ordered traversal.\n        var startPath = prefix;\n        if (!DocumentKey.isDocumentKey(startPath)) {\n            startPath = startPath.child('');\n        }\n        var start = new DocReference(new DocumentKey(startPath), 0);\n        // Find unique batchIDs referenced by all documents potentially matching the\n        // query.\n        var uniqueBatchIDs = new SortedSet(primitiveComparator);\n        this.batchesByDocumentKey.forEachWhile(function (ref) {\n            var rowKeyPath = ref.key.path;\n            if (!prefix.isPrefixOf(rowKeyPath)) {\n                return false;\n            }\n            else {\n                // Rows with document keys more than one segment longer than the query\n                // path can't be matches. For example, a query on 'rooms' can't match\n                // the document /rooms/abc/messages/xyx.\n                // TODO(mcg): we'll need a different scanner when we implement\n                // ancestor queries.\n                if (rowKeyPath.length === immediateChildrenPathLength) {\n                    uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n                }\n                return true;\n            }\n        }, start);\n        // Construct an array of matching batches, sorted by batchID to ensure that\n        // multiple mutations affecting the same document key are applied in order.\n        var result = [];\n        uniqueBatchIDs.forEach(function (batchId) {\n            var batch = _this.findMutationBatch(batchId);\n            if (batch !== null) {\n                result.push(batch);\n            }\n        });\n        return PersistencePromise.resolve(result);\n    };\n    MemoryMutationQueue.prototype.removeMutationBatches = function (transaction, batches) {\n        var batchCount = batches.length;\n        assert(batchCount > 0, 'Should not remove mutations when none exist.');\n        var firstBatchId = batches[0].batchId;\n        var queueCount = this.mutationQueue.length;\n        // Find the position of the first batch for removal. This need not be the\n        // first entry in the queue.\n        var startIndex = this.indexOfExistingBatchId(firstBatchId, 'removed');\n        assert(this.mutationQueue[startIndex].batchId === firstBatchId, 'Removed batches must exist in the queue');\n        // Check that removed batches are contiguous (while excluding tombstones).\n        var batchIndex = 1;\n        var queueIndex = startIndex + 1;\n        while (batchIndex < batchCount && queueIndex < queueCount) {\n            var batch = this.mutationQueue[queueIndex];\n            if (batch.isTombstone()) {\n                queueIndex++;\n                continue;\n            }\n            assert(batch.batchId === batches[batchIndex].batchId, 'Removed batches must be contiguous in the queue');\n            batchIndex++;\n            queueIndex++;\n        }\n        // Only actually remove batches if removing at the front of the queue.\n        // Previously rejected batches may have left tombstones in the queue, so\n        // expand the removal range to include any tombstones.\n        if (startIndex === 0) {\n            for (; queueIndex < queueCount; queueIndex++) {\n                var batch = this.mutationQueue[queueIndex];\n                if (!batch.isTombstone()) {\n                    break;\n                }\n            }\n            var length_1 = queueIndex - startIndex;\n            this.mutationQueue.splice(startIndex, length_1);\n        }\n        else {\n            // Mark the tombstones\n            for (var i = startIndex; i < queueIndex; i++) {\n                this.mutationQueue[i] = this.mutationQueue[i].toTombstone();\n            }\n        }\n        var references = this.batchesByDocumentKey;\n        for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\n            var batch = batches_1[_i];\n            var batchId = batch.batchId;\n            for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\n                var mutation = _b[_a];\n                var key = mutation.key;\n                if (this.garbageCollector !== null) {\n                    this.garbageCollector.addPotentialGarbageKey(key);\n                }\n                var ref = new DocReference(key, batchId);\n                references = references.delete(ref);\n            }\n        }\n        this.batchesByDocumentKey = references;\n        return PersistencePromise.resolve();\n    };\n    MemoryMutationQueue.prototype.setGarbageCollector = function (garbageCollector) {\n        this.garbageCollector = garbageCollector;\n    };\n    MemoryMutationQueue.prototype.containsKey = function (txn, key) {\n        var ref = new DocReference(key, 0);\n        var firstRef = this.batchesByDocumentKey.firstAfterOrEqual(ref);\n        return PersistencePromise.resolve(key.isEqual(firstRef && firstRef.key));\n    };\n    MemoryMutationQueue.prototype.performConsistencyCheck = function (txn) {\n        if (this.mutationQueue.length === 0) {\n            assert(this.batchesByDocumentKey.isEmpty(), 'Document leak -- detected dangling mutation references when queue is empty.');\n        }\n        return PersistencePromise.resolve();\n    };\n    /**\n     * A private helper that collects all the mutations batches in the queue up to\n     * but not including the given endIndex. All tombstones in the queue are\n     * excluded.\n     */\n    MemoryMutationQueue.prototype.getAllLiveMutationBatchesBeforeIndex = function (endIndex) {\n        var result = [];\n        for (var i = 0; i < endIndex; i++) {\n            var batch = this.mutationQueue[i];\n            if (!batch.isTombstone()) {\n                result.push(batch);\n            }\n        }\n        return result;\n    };\n    /**\n     * Finds the index of the given batchId in the mutation queue and asserts that\n     * the resulting index is within the bounds of the queue.\n     *\n     * @param batchId The batchId to search for\n     * @param action A description of what the caller is doing, phrased in passive\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n     */\n    MemoryMutationQueue.prototype.indexOfExistingBatchId = function (batchId, action) {\n        var index = this.indexOfBatchId(batchId);\n        assert(index >= 0 && index < this.mutationQueue.length, 'Batches must exist to be ' + action);\n        return index;\n    };\n    /**\n     * Finds the index of the given batchId in the mutation queue. This operation\n     * is O(1).\n     *\n     * @return The computed index of the batch with the given batchId, based on\n     * the state of the queue. Note this index can be negative if the requested\n     * batchId has already been remvoed from the queue or past the end of the\n     * queue if the batchId is larger than the last added batch.\n     */\n    MemoryMutationQueue.prototype.indexOfBatchId = function (batchId) {\n        if (this.mutationQueue.length === 0) {\n            // As an index this is past the end of the queue\n            return 0;\n        }\n        // Examine the front of the queue to figure out the difference between the\n        // batchId and indexes in the array. Note that since the queue is ordered\n        // by batchId, if the first batch has a larger batchId then the requested\n        // batchId doesn't exist in the queue.\n        var firstBatchId = this.mutationQueue[0].batchId;\n        return batchId - firstBatchId;\n    };\n    /**\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\n     * other functions that uses this code easier to read and more efficent.\n     */\n    MemoryMutationQueue.prototype.findMutationBatch = function (batchId) {\n        var index = this.indexOfBatchId(batchId);\n        if (index < 0 || index >= this.mutationQueue.length) {\n            return null;\n        }\n        var batch = this.mutationQueue[index];\n        assert(batch.batchId === batchId, 'If found batch must match');\n        return batch.isTombstone() ? null : batch;\n    };\n    return MemoryMutationQueue;\n}());\nexport { MemoryMutationQueue };\n\n//# sourceMappingURL=memory_mutation_queue.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/memory_mutation_queue.js\n// module id = 297\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { ObjectMap } from '../util/obj_map';\nimport { PersistencePromise } from './persistence_promise';\nimport { ReferenceSet } from './reference_set';\nvar MemoryQueryCache = /** @class */ (function () {\n    function MemoryQueryCache() {\n        /**\n         * Maps a query to the data about that query\n         */\n        this.queries = new ObjectMap(function (q) { return q.canonicalId(); });\n        /** The last received snapshot version. */\n        this.lastRemoteSnapshotVersion = SnapshotVersion.MIN;\n        /** The highest numbered target ID encountered. */\n        this.highestTargetId = 0;\n        /**\n         * A ordered bidirectional mapping between documents and the remote target\n         * IDs.\n         */\n        this.references = new ReferenceSet();\n    }\n    MemoryQueryCache.prototype.start = function (transaction) {\n        // Nothing to do.\n        return PersistencePromise.resolve();\n    };\n    MemoryQueryCache.prototype.getLastRemoteSnapshotVersion = function () {\n        return this.lastRemoteSnapshotVersion;\n    };\n    MemoryQueryCache.prototype.getHighestTargetId = function () {\n        return this.highestTargetId;\n    };\n    MemoryQueryCache.prototype.setLastRemoteSnapshotVersion = function (transaction, snapshotVersion) {\n        this.lastRemoteSnapshotVersion = snapshotVersion;\n        return PersistencePromise.resolve();\n    };\n    MemoryQueryCache.prototype.addQueryData = function (transaction, queryData) {\n        this.queries.set(queryData.query, queryData);\n        var targetId = queryData.targetId;\n        if (targetId > this.highestTargetId) {\n            this.highestTargetId = targetId;\n        }\n        return PersistencePromise.resolve();\n    };\n    MemoryQueryCache.prototype.removeQueryData = function (transaction, queryData) {\n        this.queries.delete(queryData.query);\n        this.references.removeReferencesForId(queryData.targetId);\n        return PersistencePromise.resolve();\n    };\n    MemoryQueryCache.prototype.getQueryData = function (transaction, query) {\n        var queryData = this.queries.get(query) || null;\n        return PersistencePromise.resolve(queryData);\n    };\n    MemoryQueryCache.prototype.addMatchingKeys = function (txn, keys, targetId) {\n        this.references.addReferences(keys, targetId);\n        return PersistencePromise.resolve();\n    };\n    MemoryQueryCache.prototype.removeMatchingKeys = function (txn, keys, targetId) {\n        this.references.removeReferences(keys, targetId);\n        return PersistencePromise.resolve();\n    };\n    MemoryQueryCache.prototype.removeMatchingKeysForTargetId = function (txn, targetId) {\n        this.references.removeReferencesForId(targetId);\n        return PersistencePromise.resolve();\n    };\n    MemoryQueryCache.prototype.getMatchingKeysForTargetId = function (txn, targetId) {\n        var matchingKeys = this.references.referencesForId(targetId);\n        return PersistencePromise.resolve(matchingKeys);\n    };\n    MemoryQueryCache.prototype.setGarbageCollector = function (gc) {\n        this.references.setGarbageCollector(gc);\n    };\n    MemoryQueryCache.prototype.containsKey = function (txn, key) {\n        return this.references.containsKey(txn, key);\n    };\n    return MemoryQueryCache;\n}());\nexport { MemoryQueryCache };\n\n//# sourceMappingURL=memory_query_cache.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/memory_query_cache.js\n// module id = 298\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { documentMap, maybeDocumentMap } from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { PersistencePromise } from './persistence_promise';\nvar MemoryRemoteDocumentCache = /** @class */ (function () {\n    function MemoryRemoteDocumentCache() {\n        this.docs = maybeDocumentMap();\n    }\n    MemoryRemoteDocumentCache.prototype.addEntry = function (transaction, maybeDocument) {\n        this.docs = this.docs.insert(maybeDocument.key, maybeDocument);\n        return PersistencePromise.resolve();\n    };\n    MemoryRemoteDocumentCache.prototype.removeEntry = function (transaction, documentKey) {\n        this.docs = this.docs.remove(documentKey);\n        return PersistencePromise.resolve();\n    };\n    MemoryRemoteDocumentCache.prototype.getEntry = function (transaction, documentKey) {\n        return PersistencePromise.resolve(this.docs.get(documentKey));\n    };\n    MemoryRemoteDocumentCache.prototype.getDocumentsMatchingQuery = function (transaction, query) {\n        var results = documentMap();\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n        var prefix = new DocumentKey(query.path.child(''));\n        var iterator = this.docs.getIteratorFrom(prefix);\n        while (iterator.hasNext()) {\n            var _a = iterator.getNext(), key = _a.key, maybeDoc = _a.value;\n            if (!query.path.isPrefixOf(key.path)) {\n                break;\n            }\n            if (maybeDoc instanceof Document && query.matches(maybeDoc)) {\n                results = results.insert(maybeDoc.key, maybeDoc);\n            }\n        }\n        return PersistencePromise.resolve(results);\n    };\n    return MemoryRemoteDocumentCache;\n}());\nexport { MemoryRemoteDocumentCache };\n\n//# sourceMappingURL=memory_remote_document_cache.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/memory_remote_document_cache.js\n// module id = 299\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { documentKeySet } from '../model/collections';\nimport { PersistencePromise } from './persistence_promise';\n/**\n * A garbage collector implementation that does absolutely nothing. It ignores\n * all addGarbageSource and addPotentialGarbageKey messages and and never\n * produces any garbage.\n */\nvar NoOpGarbageCollector = /** @class */ (function () {\n    function NoOpGarbageCollector() {\n        this.isEager = false;\n    }\n    NoOpGarbageCollector.prototype.addGarbageSource = function (garbageSource) {\n        // Not tracking garbage so don't track sources.\n    };\n    NoOpGarbageCollector.prototype.removeGarbageSource = function (garbageSource) {\n        // Not tracking garbage so don't track sources.\n    };\n    NoOpGarbageCollector.prototype.addPotentialGarbageKey = function (key) {\n        // Not tracking garbage so ignore.\n    };\n    NoOpGarbageCollector.prototype.collectGarbage = function (txn) {\n        return PersistencePromise.resolve(documentKeySet());\n    };\n    return NoOpGarbageCollector;\n}());\nexport { NoOpGarbageCollector };\n\n//# sourceMappingURL=no_op_garbage_collector.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/local/no_op_garbage_collector.js\n// module id = 300\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { maybeDocumentMap } from '../model/collections';\nimport { assert } from '../util/assert';\nimport { PersistentListenStream, PersistentWriteStream } from './persistent_stream';\n/**\n * Datastore is a wrapper around the external Google Cloud Datastore grpc API,\n * which provides an interface that is more convenient for the rest of the\n * client SDK architecture to consume.\n */\nvar Datastore = /** @class */ (function () {\n    function Datastore(databaseInfo, queue, connection, credentials, serializer, initialBackoffDelay) {\n        this.databaseInfo = databaseInfo;\n        this.queue = queue;\n        this.connection = connection;\n        this.credentials = credentials;\n        this.serializer = serializer;\n        this.initialBackoffDelay = initialBackoffDelay;\n    }\n    Datastore.prototype.newPersistentWriteStream = function () {\n        return new PersistentWriteStream(this.databaseInfo, this.queue, this.connection, this.credentials, this.serializer, this.initialBackoffDelay);\n    };\n    Datastore.prototype.newPersistentWatchStream = function () {\n        return new PersistentListenStream(this.databaseInfo, this.queue, this.connection, this.credentials, this.serializer, this.initialBackoffDelay);\n    };\n    Datastore.prototype.commit = function (mutations) {\n        var _this = this;\n        var params = {\n            database: this.serializer.encodedDatabaseId,\n            writes: mutations.map(function (m) { return _this.serializer.toMutation(m); })\n        };\n        return this.invokeRPC('Commit', params).then(function (response) {\n            return _this.serializer.fromWriteResults(response.writeResults);\n        });\n    };\n    Datastore.prototype.lookup = function (keys) {\n        var _this = this;\n        var params = {\n            database: this.serializer.encodedDatabaseId,\n            documents: keys.map(function (k) { return _this.serializer.toName(k); })\n        };\n        return this.invokeStreamingRPC('BatchGetDocuments', params).then(function (response) {\n            var docs = maybeDocumentMap();\n            response.forEach(function (proto) {\n                var doc = _this.serializer.fromMaybeDocument(proto);\n                docs = docs.insert(doc.key, doc);\n            });\n            var result = [];\n            keys.forEach(function (key) {\n                var doc = docs.get(key);\n                assert(!!doc, 'Missing entity in write response for ' + key);\n                result.push(doc);\n            });\n            return result;\n        });\n    };\n    /** Gets an auth token and invokes the provided RPC. */\n    Datastore.prototype.invokeRPC = function (rpcName, request) {\n        var _this = this;\n        // TODO(mikelehen): Retry (with backoff) on token failures?\n        return this.credentials.getToken(/*forceRefresh=*/ false).then(function (token) {\n            return _this.connection.invokeRPC(rpcName, request, token);\n        });\n    };\n    /** Gets an auth token and invokes the provided RPC with streamed results. */\n    Datastore.prototype.invokeStreamingRPC = function (rpcName, request) {\n        var _this = this;\n        // TODO(mikelehen): Retry (with backoff) on token failures?\n        return this.credentials.getToken(/*forceRefresh=*/ false).then(function (token) {\n            return _this.connection.invokeStreamingRPC(rpcName, request, token);\n        });\n    };\n    return Datastore;\n}());\nexport { Datastore };\n\n//# sourceMappingURL=datastore.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/datastore.js\n// module id = 301\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport * as log from '../util/log';\nimport { ExponentialBackoff } from './backoff';\nimport { isNullOrUndefined } from '../util/types';\nvar LOG_TAG = 'PersistentStream';\nvar PersistentStreamState;\n(function (PersistentStreamState) {\n    /**\n     * The streaming RPC is not running and there's no error condition.\n     * Calling `start` will start the stream immediately without backoff.\n     * While in this state isStarted will return false.\n     */\n    PersistentStreamState[PersistentStreamState[\"Initial\"] = 0] = \"Initial\";\n    /**\n     * The stream is starting, and is waiting for an auth token to attach to\n     * the initial request. While in this state, isStarted will return\n     * true but isOpen will return false.\n     */\n    PersistentStreamState[PersistentStreamState[\"Auth\"] = 1] = \"Auth\";\n    /**\n     * The streaming RPC is up and running. Requests and responses can flow\n     * freely. Both isStarted and isOpen will return true.\n     */\n    PersistentStreamState[PersistentStreamState[\"Open\"] = 2] = \"Open\";\n    /**\n     * The stream encountered an error. The next start attempt will back off.\n     * While in this state isStarted() will return false.\n     *\n     */\n    PersistentStreamState[PersistentStreamState[\"Error\"] = 3] = \"Error\";\n    /**\n     * An in-between state after an error where the stream is waiting before\n     * re-starting. After\n     * waiting is complete, the stream will try to open. While in this\n     * state isStarted() will return YES but isOpen will return false.\n     */\n    PersistentStreamState[PersistentStreamState[\"Backoff\"] = 4] = \"Backoff\";\n    /**\n     * The stream has been explicitly stopped; no further events will be emitted.\n     */\n    PersistentStreamState[PersistentStreamState[\"Stopped\"] = 5] = \"Stopped\";\n})(PersistentStreamState || (PersistentStreamState = {}));\n/**\n * Initial backoff time in milliseconds after an error.\n * Set to 1s according to https://cloud.google.com/apis/design/errors.\n */\nvar BACKOFF_INITIAL_DELAY_MS = 1000;\n/** Maximum backoff time in milliseconds */\nvar BACKOFF_MAX_DELAY_MS = 60 * 1000;\nvar BACKOFF_FACTOR = 1.5;\n/** The time a stream stays open after it is marked idle. */\nvar IDLE_TIMEOUT_MS = 60 * 1000;\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be `start`ed before messages can\n * be sent and received. The PersistentStream will call the onOpen function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a `start` fail, PersistentStream will call the registered\n * onClose with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\nvar PersistentStream = /** @class */ (function () {\n    function PersistentStream(queue, connection, credentialsProvider, \n        // Used for faster retries in testing\n        initialBackoffDelay) {\n        this.queue = queue;\n        this.connection = connection;\n        this.credentialsProvider = credentialsProvider;\n        this.idle = false;\n        this.stream = null;\n        this.listener = null;\n        this.backoff = new ExponentialBackoff(initialBackoffDelay ? initialBackoffDelay : BACKOFF_INITIAL_DELAY_MS, BACKOFF_FACTOR, BACKOFF_MAX_DELAY_MS);\n        this.state = PersistentStreamState.Initial;\n    }\n    /**\n     * Returns true if `start` has been called and no error has occurred. True\n     * indicates the stream is open or in the process of opening (which\n     * encompasses respecting backoff, getting auth tokens, and starting the\n     * actual RPC). Use `isOpen` to determine if the stream is open and ready for\n     * outbound requests.\n     */\n    PersistentStream.prototype.isStarted = function () {\n        return (this.state === PersistentStreamState.Backoff ||\n            this.state === PersistentStreamState.Auth ||\n            this.state === PersistentStreamState.Open);\n    };\n    /**\n     * Returns true if the underlying RPC is open (the openHandler has been\n     * called) and the stream is ready for outbound requests.\n     */\n    PersistentStream.prototype.isOpen = function () {\n        return this.state === PersistentStreamState.Open;\n    };\n    /**\n     * Starts the RPC. Only allowed if isStarted returns false. The stream is\n     * not immediately ready for use: onOpen will be invoked when the RPC is ready\n     * for outbound requests, at which point isOpen will return true.\n     *\n     *  When start returns, isStarted will return true.\n     */\n    PersistentStream.prototype.start = function (listener) {\n        if (this.state === PersistentStreamState.Error) {\n            this.performBackoff(listener);\n            return;\n        }\n        assert(this.state === PersistentStreamState.Initial, 'Already started');\n        this.listener = listener;\n        this.auth();\n    };\n    /**\n     * Stops the RPC. This call is idempotent and allowed regardless of the\n     * current isStarted state.\n     *\n     * When stop returns, isStarted and isOpen will both return false.\n     */\n    PersistentStream.prototype.stop = function () {\n        if (this.isStarted()) {\n            this.close(PersistentStreamState.Stopped);\n        }\n    };\n    /**\n     * After an error the stream will usually back off on the next attempt to\n     * start it. If the error warrants an immediate restart of the stream, the\n     * sender can use this to indicate that the receiver should not back off.\n     *\n     * Each error will call the onClose function. That function can decide to\n     * inhibit backoff if required.\n     */\n    PersistentStream.prototype.inhibitBackoff = function () {\n        assert(!this.isStarted(), 'Can only inhibit backoff in a stopped state');\n        this.state = PersistentStreamState.Initial;\n        this.backoff.reset();\n    };\n    /**\n     * Initializes the idle timer. If no write takes place within one minute, the\n     * WebChannel stream will be closed.\n     */\n    PersistentStream.prototype.markIdle = function () {\n        var _this = this;\n        this.idle = true;\n        this.queue\n            .schedule(function () {\n            return _this.handleIdleCloseTimer();\n        }, IDLE_TIMEOUT_MS)\n            .catch(function (err) {\n            // When the AsyncQueue gets drained during testing, pending Promises\n            // (including these idle checks) will get rejected. We special-case\n            // these cancelled idle checks to make sure that these specific Promise\n            // rejections are not considered unhandled.\n            assert(err.code === Code.CANCELLED, \"Received unexpected error in idle timeout closure. Expected CANCELLED, but was: \" + err);\n        });\n    };\n    /** Sends a message to the underlying stream. */\n    PersistentStream.prototype.sendRequest = function (msg) {\n        this.cancelIdleCheck();\n        this.stream.send(msg);\n    };\n    /** Called by the idle timer when the stream should close due to inactivity. */\n    PersistentStream.prototype.handleIdleCloseTimer = function () {\n        if (this.isOpen() && this.idle) {\n            // When timing out an idle stream there's no reason to force the stream into backoff when\n            // it restarts so set the stream state to Initial instead of Error.\n            return this.close(PersistentStreamState.Initial);\n        }\n        return Promise.resolve();\n    };\n    /** Marks the stream as active again. */\n    PersistentStream.prototype.cancelIdleCheck = function () {\n        this.idle = false;\n    };\n    /**\n     * Closes the stream and cleans up as necessary:\n     *\n     * * closes the underlying GRPC stream;\n     * * calls the onClose handler with the given 'error';\n     * * sets internal stream state to 'finalState';\n     * * adjusts the backoff timer based on the error\n     *\n     * A new stream can be opened by calling `start` unless `finalState` is set to\n     * `PersistentStreamState.Stopped`.\n     *\n     * @param finalState the intended state of the stream after closing.\n     * @param error the error the connection was closed with.\n     */\n    PersistentStream.prototype.close = function (finalState, error) {\n        assert(finalState === PersistentStreamState.Error || isNullOrUndefined(error), \"Can't provide an error when not in an error state.\");\n        this.cancelIdleCheck();\n        if (finalState !== PersistentStreamState.Error) {\n            // If this is an intentional close ensure we don't delay our next connection attempt.\n            this.backoff.reset();\n        }\n        else if (error && error.code === Code.RESOURCE_EXHAUSTED) {\n            // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n            log.error(error.toString());\n            log.error('Using maximum backoff delay to prevent overloading the backend.');\n            this.backoff.resetToMax();\n        }\n        // Clean up the underlying stream because we are no longer interested in events.\n        if (this.stream !== null) {\n            this.tearDown();\n            this.stream.close();\n            this.stream = null;\n        }\n        // This state must be assigned before calling onClose() to allow the callback to\n        // inhibit backoff or otherwise manipulate the state in its non-started state.\n        this.state = finalState;\n        var listener = this.listener;\n        // Clear the listener to avoid bleeding of events from the underlying streams.\n        this.listener = null;\n        // If the caller explicitly requested a stream stop, don't notify them of a closing stream (it\n        // could trigger undesirable recovery logic, etc.).\n        if (finalState !== PersistentStreamState.Stopped) {\n            return listener.onClose(error);\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    /**\n     * Can be overridden to perform additional cleanup before the stream is closed.\n     * Calling super.tearDown() is not required.\n     */\n    PersistentStream.prototype.tearDown = function () { };\n    PersistentStream.prototype.auth = function () {\n        var _this = this;\n        assert(this.state === PersistentStreamState.Initial, 'Must be in initial state to auth');\n        this.state = PersistentStreamState.Auth;\n        this.credentialsProvider.getToken(/*forceRefresh=*/ false).then(function (token) {\n            // Normally we'd have to schedule the callback on the AsyncQueue.\n            // However, the following calls are safe to be called outside the\n            // AsyncQueue since they don't chain asynchronous calls\n            _this.startStream(token);\n        }, function (error) {\n            _this.queue.schedule(function () {\n                if (_this.state !== PersistentStreamState.Stopped) {\n                    // Stream can be stopped while waiting for authorization.\n                    var rpcError = new FirestoreError(Code.UNKNOWN, 'Fetching auth token failed: ' + error.message);\n                    return _this.handleStreamClose(rpcError);\n                }\n                else {\n                    return Promise.resolve();\n                }\n            });\n        });\n    };\n    PersistentStream.prototype.startStream = function (token) {\n        var _this = this;\n        if (this.state === PersistentStreamState.Stopped) {\n            // Stream can be stopped while waiting for authorization.\n            return;\n        }\n        assert(this.state === PersistentStreamState.Auth, 'Trying to start stream in a non-auth state');\n        // Helper function to dispatch to AsyncQueue and make sure that any\n        // close will seem instantaneous and events are prevented from being\n        // raised after the close call\n        var dispatchIfStillActive = function (stream, fn) {\n            _this.queue.schedule(function () {\n                // Only raise events if the stream instance has not changed\n                if (_this.stream === stream) {\n                    return fn();\n                }\n                else {\n                    return Promise.resolve();\n                }\n            });\n        };\n        // Only start stream if listener has not changed\n        if (this.listener !== null) {\n            var currentStream_1 = this.startRpc(token);\n            this.stream = currentStream_1;\n            this.stream.onOpen(function () {\n                dispatchIfStillActive(currentStream_1, function () {\n                    assert(_this.state === PersistentStreamState.Auth, 'Expected stream to be in state auth, but was ' + _this.state);\n                    _this.state = PersistentStreamState.Open;\n                    return _this.listener.onOpen();\n                });\n            });\n            this.stream.onClose(function (error) {\n                dispatchIfStillActive(currentStream_1, function () {\n                    return _this.handleStreamClose(error);\n                });\n            });\n            this.stream.onMessage(function (msg) {\n                dispatchIfStillActive(currentStream_1, function () {\n                    return _this.onMessage(msg);\n                });\n            });\n        }\n    };\n    PersistentStream.prototype.performBackoff = function (listener) {\n        var _this = this;\n        assert(this.state === PersistentStreamState.Error, 'Should only perform backoff in an error case');\n        this.state = PersistentStreamState.Backoff;\n        this.backoff.backoffAndWait().then(function () {\n            // Backoff does not run on the AsyncQueue, so we need to reschedule to\n            // make sure the queue blocks\n            _this.queue.schedule(function () {\n                if (_this.state === PersistentStreamState.Stopped) {\n                    // Stream can be stopped while waiting for backoff to complete.\n                    return Promise.resolve();\n                }\n                _this.state = PersistentStreamState.Initial;\n                _this.start(listener);\n                assert(_this.isStarted(), 'PersistentStream should have started');\n                return Promise.resolve();\n            });\n        });\n    };\n    PersistentStream.prototype.handleStreamClose = function (error) {\n        assert(this.isStarted(), \"Can't handle server close on non-started stream\");\n        log.debug(LOG_TAG, \"close with error: \" + error);\n        this.stream = null;\n        // In theory the stream could close cleanly, however, in our current model\n        // we never expect this to happen because if we stop a stream ourselves,\n        // this callback will never be called. To prevent cases where we retry\n        // without a backoff accidentally, we set the stream to error in all cases.\n        return this.close(PersistentStreamState.Error, error);\n    };\n    return PersistentStream;\n}());\nexport { PersistentStream };\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the openHandler, any number of listen and\n * unlisten calls calls can be sent to control what changes will be sent from\n * the server for ListenResponses.\n */\nvar PersistentListenStream = /** @class */ (function (_super) {\n    __extends(PersistentListenStream, _super);\n    function PersistentListenStream(databaseInfo, queue, connection, credentials, serializer, initialBackoffDelay) {\n        var _this = _super.call(this, queue, connection, credentials, initialBackoffDelay) || this;\n        _this.databaseInfo = databaseInfo;\n        _this.serializer = serializer;\n        return _this;\n    }\n    PersistentListenStream.prototype.startRpc = function (token) {\n        return this.connection.openStream('Listen', token);\n    };\n    PersistentListenStream.prototype.onMessage = function (watchChangeProto) {\n        // A successful response means the stream is healthy\n        this.backoff.reset();\n        var watchChange = this.serializer.fromWatchChange(watchChangeProto);\n        var snapshot = this.serializer.versionFromListenResponse(watchChangeProto);\n        return this.listener.onWatchChange(watchChange, snapshot);\n    };\n    /**\n     * Registers interest in the results of the given query. If the query\n     * includes a resumeToken it will be included in the request. Results that\n     * affect the query will be streamed back as WatchChange messages that\n     * reference the targetId.\n     */\n    PersistentListenStream.prototype.watch = function (queryData) {\n        var request = {};\n        request.database = this.serializer.encodedDatabaseId;\n        request.addTarget = this.serializer.toTarget(queryData);\n        var labels = this.serializer.toListenRequestLabels(queryData);\n        if (labels) {\n            request.labels = labels;\n        }\n        this.sendRequest(request);\n    };\n    /**\n     * Unregisters interest in the results of the query associated with the\n     * given targetId.\n     */\n    PersistentListenStream.prototype.unwatch = function (targetId) {\n        var request = {};\n        request.database = this.serializer.encodedDatabaseId;\n        request.removeTarget = targetId;\n        this.sendRequest(request);\n    };\n    return PersistentListenStream;\n}(PersistentStream));\nexport { PersistentListenStream };\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */\nvar PersistentWriteStream = /** @class */ (function (_super) {\n    __extends(PersistentWriteStream, _super);\n    function PersistentWriteStream(databaseInfo, queue, connection, credentials, serializer, initialBackoffDelay) {\n        var _this = _super.call(this, queue, connection, credentials, initialBackoffDelay) || this;\n        _this.databaseInfo = databaseInfo;\n        _this.serializer = serializer;\n        _this.handshakeComplete_ = false;\n        return _this;\n    }\n    Object.defineProperty(PersistentWriteStream.prototype, \"handshakeComplete\", {\n        /**\n         * Tracks whether or not a handshake has been successfully exchanged and\n         * the stream is ready to accept mutations.\n         */\n        get: function () {\n            return this.handshakeComplete_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Override of PersistentStream.start\n    PersistentWriteStream.prototype.start = function (listener) {\n        this.handshakeComplete_ = false;\n        _super.prototype.start.call(this, listener);\n    };\n    PersistentWriteStream.prototype.tearDown = function () {\n        if (this.handshakeComplete_) {\n            this.writeMutations([]);\n        }\n    };\n    PersistentWriteStream.prototype.startRpc = function (token) {\n        return this.connection.openStream('Write', token);\n    };\n    PersistentWriteStream.prototype.onMessage = function (responseProto) {\n        // Always capture the last stream token.\n        assert(!!responseProto.streamToken, 'Got a write response without a stream token');\n        this.lastStreamToken = responseProto.streamToken;\n        if (!this.handshakeComplete_) {\n            // The first response is always the handshake response\n            assert(!responseProto.writeResults || responseProto.writeResults.length === 0, 'Got mutation results for handshake');\n            this.handshakeComplete_ = true;\n            return this.listener.onHandshakeComplete();\n        }\n        else {\n            // A successful first write response means the stream is healthy,\n            // Note, that we could consider a successful handshake healthy, however,\n            // the write itself might be causing an error we want to back off from.\n            this.backoff.reset();\n            var results = this.serializer.fromWriteResults(responseProto.writeResults);\n            var commitVersion = this.serializer.fromVersion(responseProto.commitTime);\n            return this.listener.onMutationResult(commitVersion, results);\n        }\n    };\n    /**\n     * Sends an initial streamToken to the server, performing the handshake\n     * required to make the StreamingWrite RPC work. Subsequent\n     * calls should wait until onHandshakeComplete was called.\n     */\n    PersistentWriteStream.prototype.writeHandshake = function () {\n        assert(this.isOpen(), 'Writing handshake requires an opened stream');\n        assert(!this.handshakeComplete_, 'Handshake already completed');\n        // TODO(dimond): Support stream resumption. We intentionally do not set the\n        // stream token on the handshake, ignoring any stream token we might have.\n        var request = {};\n        request.database = this.serializer.encodedDatabaseId;\n        this.sendRequest(request);\n    };\n    /** Sends a group of mutations to the Firestore backend to apply. */\n    PersistentWriteStream.prototype.writeMutations = function (mutations) {\n        var _this = this;\n        assert(this.isOpen(), 'Writing mutations requires an opened stream');\n        assert(this.handshakeComplete_, 'Handshake must be complete before writing mutations');\n        assert(this.lastStreamToken.length > 0, 'Trying to write mutation without a token');\n        var request = {\n            // Protos are typed with string, but we support UInt8Array on Node\n            // tslint:disable-next-line:no-any\n            streamToken: this.lastStreamToken,\n            writes: mutations.map(function (mutation) { return _this.serializer.toMutation(mutation); })\n        };\n        this.sendRequest(request);\n    };\n    return PersistentWriteStream;\n}(PersistentStream));\nexport { PersistentWriteStream };\n\n//# sourceMappingURL=persistent_stream.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/persistent_stream.js\n// module id = 302\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as log from '../util/log';\nimport { Deferred } from '../util/promise';\nvar LOG_TAG = 'ExponentialBackoff';\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nvar ExponentialBackoff = /** @class */ (function () {\n    function ExponentialBackoff(\n        /**\n         * The initial delay (used as the base delay on the first retry attempt).\n         * Note that jitter will still be applied, so the actual delay could be as\n         * little as 0.5*initialDelayMs.\n         */\n        initialDelayMs, \n        /**\n         * The multiplier to use to determine the extended base delay after each\n         * attempt.\n         */\n        backoffFactor, \n        /**\n         * The maximum base delay after which no further backoff is performed.\n         * Note that jitter will still be applied, so the actual delay could be as\n         * much as 1.5*maxDelayMs.\n         */\n        maxDelayMs) {\n        this.initialDelayMs = initialDelayMs;\n        this.backoffFactor = backoffFactor;\n        this.maxDelayMs = maxDelayMs;\n        this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */\n    ExponentialBackoff.prototype.reset = function () {\n        this.currentBaseMs = 0;\n    };\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n    ExponentialBackoff.prototype.resetToMax = function () {\n        this.currentBaseMs = this.maxDelayMs;\n    };\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts.\n     */\n    ExponentialBackoff.prototype.backoffAndWait = function () {\n        var def = new Deferred();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        var delayWithJitterMs = this.currentBaseMs + this.jitterDelayMs();\n        if (this.currentBaseMs > 0) {\n            log.debug(LOG_TAG, \"Backing off for \" + delayWithJitterMs + \" ms \" +\n                (\"(base delay: \" + this.currentBaseMs + \" ms)\"));\n        }\n        setTimeout(function () {\n            def.resolve();\n        }, delayWithJitterMs);\n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.currentBaseMs *= this.backoffFactor;\n        if (this.currentBaseMs < this.initialDelayMs) {\n            this.currentBaseMs = this.initialDelayMs;\n        }\n        if (this.currentBaseMs > this.maxDelayMs) {\n            this.currentBaseMs = this.maxDelayMs;\n        }\n        return def.promise;\n    };\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n    ExponentialBackoff.prototype.jitterDelayMs = function () {\n        return (Math.random() - 0.5) * this.currentBaseMs;\n    };\n    return ExponentialBackoff;\n}());\nexport { ExponentialBackoff };\n\n//# sourceMappingURL=backoff.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/backoff.js\n// module id = 303\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Transaction } from '../core/transaction';\nimport { OnlineState } from '../core/types';\nimport { QueryData, QueryPurpose } from '../local/query_data';\nimport { NoDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { BATCHID_UNKNOWN, MutationBatchResult } from '../model/mutation_batch';\nimport { emptyByteString } from '../platform/platform';\nimport { assert } from '../util/assert';\nimport { Code } from '../util/error';\nimport * as log from '../util/log';\nimport * as objUtils from '../util/obj';\nimport { ResetMapping, UpdateMapping } from './remote_event';\nimport { isPermanentError } from './rpc_error';\nimport { WatchChangeAggregator, WatchTargetChange, WatchTargetChangeState } from './watch_change';\nvar LOG_TAG = 'RemoteStore';\n// TODO(b/35853402): Negotiate this with the stream.\nvar MAX_PENDING_WRITES = 10;\n// The RemoteStore notifies an onlineStateHandler with OnlineState.Failed if we\n// fail to connect to the backend. This subsequently triggers get() requests to\n// fail or use cached data, etc. Unfortunately, our connections have\n// historically been subject to various transient failures. So we wait for\n// multiple failures before notifying the onlineStateHandler.\nvar ONLINE_ATTEMPTS_BEFORE_FAILURE = 2;\n/**\n * RemoteStore - An interface to remotely stored data, basically providing a\n * wrapper around the Datastore that is more reliable for the rest of the\n * system.\n *\n * RemoteStore is responsible for maintaining the connection to the server.\n * - maintaining a list of active listens.\n * - reconnecting when the connection is dropped.\n * - resuming all the active listens on reconnect.\n *\n * RemoteStore handles all incoming events from the Datastore.\n * - listening to the watch stream and repackaging the events as RemoteEvents\n * - notifying SyncEngine of any changes to the active listens.\n *\n * RemoteStore takes writes from other components and handles them reliably.\n * - pulling pending mutations from LocalStore and sending them to Datastore.\n * - retrying mutations that failed because of network problems.\n * - acking mutations to the SyncEngine once they are accepted or rejected.\n */\nvar RemoteStore = /** @class */ (function () {\n    function RemoteStore(\n        /**\n         * The local store, used to fill the write pipeline with outbound\n         * mutations and resolve existence filter mismatches.\n         */\n        localStore, \n        /** The client-side proxy for interacting with the backend. */\n        datastore, onlineStateHandler) {\n        this.localStore = localStore;\n        this.datastore = datastore;\n        this.onlineStateHandler = onlineStateHandler;\n        this.pendingWrites = [];\n        this.lastBatchSeen = BATCHID_UNKNOWN;\n        /**\n         * A mapping of watched targets that the client cares about tracking and the\n         * user has explicitly called a 'listen' for this target.\n         *\n         * These targets may or may not have been sent to or acknowledged by the\n         * server. On re-establishing the listen stream, these targets should be sent\n         * to the server. The targets removed with unlistens are removed eagerly\n         * without waiting for confirmation from the listen stream.\n         */\n        this.listenTargets = {};\n        /**\n         * A mapping of targetId to pending acks needed.\n         *\n         * If a targetId is present in this map, then we're waiting for watch to\n         * acknowledge a removal or addition of the target. If a target is not in this\n         * mapping, and it's in the listenTargets map, then we consider the target to\n         * be active.\n         *\n         * We increment the count here every time we issue a request over the stream\n         * to watch or unwatch. We then decrement the count every time we get a target\n         * added or target removed message from the server. Once the count is equal to\n         * 0 we know that the client and server are in the same state (once this state\n         * is reached the targetId is removed from the map to free the memory).\n         */\n        this.pendingTargetResponses = {};\n        this.accumulatedWatchChanges = [];\n        this.watchStream = null;\n        this.writeStream = null;\n        /**\n         * The online state of the watch stream. The state is set to healthy if and\n         * only if there are messages received by the backend.\n         */\n        this.watchStreamOnlineState = OnlineState.Unknown;\n        /** A count of consecutive failures to open the stream. */\n        this.watchStreamFailures = 0;\n        /** Whether the client should fire offline warning. */\n        this.shouldWarnOffline = true;\n    }\n    /**\n     * Starts up the remote store, creating streams, restoring state from\n     * LocalStore, etc.\n     */\n    RemoteStore.prototype.start = function () {\n        return this.enableNetwork();\n    };\n    /**\n     * Updates our OnlineState to the new state, updating local state\n     * and notifying the onlineStateHandler as appropriate. Idempotent.\n     */\n    RemoteStore.prototype.updateOnlineState = function (newState) {\n        if (newState !== this.watchStreamOnlineState) {\n            if (newState === OnlineState.Healthy) {\n                // We've connected to watch at least once. Don't warn the developer about\n                // being offline going forward.\n                this.shouldWarnOffline = false;\n            }\n            else if (newState === OnlineState.Unknown) {\n                // The state is set to unknown when a healthy stream is closed (e.g. due to\n                // a token timeout) or when we have no active listens and therefore there's\n                // no need to start the stream. Assuming there is (possibly in the future)\n                // an active listen, then we will eventually move to state Online or Failed,\n                // but we always want to make at least ONLINE_ATTEMPTS_BEFORE_FAILURE\n                // attempts before failing, so we reset the count here.\n                this.watchStreamFailures = 0;\n            }\n            this.watchStreamOnlineState = newState;\n            this.onlineStateHandler(newState);\n        }\n    };\n    /**\n     * Updates our OnlineState as appropriate after the watch stream reports a\n     * failure. The first failure moves us to the 'Unknown' state. We then may\n     * allow multiple failures (based on ONLINE_ATTEMPTS_BEFORE_FAILURE) before we\n     * actually transition to OnlineState.Failed.\n     */\n    RemoteStore.prototype.updateOnlineStateAfterFailure = function () {\n        if (this.watchStreamOnlineState === OnlineState.Healthy) {\n            this.updateOnlineState(OnlineState.Unknown);\n        }\n        else {\n            this.watchStreamFailures++;\n            if (this.watchStreamFailures >= ONLINE_ATTEMPTS_BEFORE_FAILURE) {\n                if (this.shouldWarnOffline) {\n                    log.error('Could not reach Firestore backend.');\n                    this.shouldWarnOffline = false;\n                }\n                this.updateOnlineState(OnlineState.Failed);\n            }\n        }\n    };\n    RemoteStore.prototype.isNetworkEnabled = function () {\n        assert((this.watchStream == null) === (this.writeStream == null), 'WatchStream and WriteStream should both be null or non-null');\n        return this.watchStream != null;\n    };\n    /** Re-enables the network. Idempotent. */\n    RemoteStore.prototype.enableNetwork = function () {\n        var _this = this;\n        if (this.isNetworkEnabled()) {\n            return Promise.resolve();\n        }\n        // Create new streams (but note they're not started yet).\n        this.watchStream = this.datastore.newPersistentWatchStream();\n        this.writeStream = this.datastore.newPersistentWriteStream();\n        // Load any saved stream token from persistent storage\n        return this.localStore.getLastStreamToken().then(function (token) {\n            _this.writeStream.lastStreamToken = token;\n            if (_this.shouldStartWatchStream()) {\n                _this.startWatchStream();\n            }\n            _this.updateOnlineState(OnlineState.Unknown);\n            return _this.fillWritePipeline(); // This may start the writeStream.\n        });\n    };\n    /**\n     * Temporarily disables the network. The network can be re-enabled using\n     * enableNetwork().\n     */\n    RemoteStore.prototype.disableNetwork = function () {\n        this.disableNetworkInternal();\n        // Set the OnlineState to failed so get()'s return from cache, etc.\n        this.updateOnlineState(OnlineState.Failed);\n        return Promise.resolve();\n    };\n    /**\n     * Disables the network, if it is currently enabled.\n     */\n    RemoteStore.prototype.disableNetworkInternal = function () {\n        if (this.isNetworkEnabled()) {\n            // NOTE: We're guaranteed not to get any further events from these streams (not even a close\n            // event).\n            this.watchStream.stop();\n            this.writeStream.stop();\n            this.cleanUpWatchStreamState();\n            this.cleanUpWriteStreamState();\n            this.writeStream = null;\n            this.watchStream = null;\n        }\n    };\n    RemoteStore.prototype.shutdown = function () {\n        log.debug(LOG_TAG, 'RemoteStore shutting down.');\n        this.disableNetworkInternal();\n        // Set the OnlineState to Unknown (rather than Failed) to avoid potentially\n        // triggering spurious listener events with cached data, etc.\n        this.updateOnlineState(OnlineState.Unknown);\n        return Promise.resolve();\n    };\n    /** Starts new listen for the given query. Uses resume token if provided */\n    RemoteStore.prototype.listen = function (queryData) {\n        assert(!objUtils.contains(this.listenTargets, queryData.targetId), 'listen called with duplicate targetId!');\n        // Mark this as something the client is currently listening for.\n        this.listenTargets[queryData.targetId] = queryData;\n        if (this.shouldStartWatchStream()) {\n            // The listen will be sent in onWatchStreamOpen\n            this.startWatchStream();\n        }\n        else if (this.isNetworkEnabled() && this.watchStream.isOpen()) {\n            this.sendWatchRequest(queryData);\n        }\n    };\n    /** Removes the listen from server */\n    RemoteStore.prototype.unlisten = function (targetId) {\n        assert(objUtils.contains(this.listenTargets, targetId), 'unlisten called without assigned target ID!');\n        var queryData = this.listenTargets[targetId];\n        delete this.listenTargets[targetId];\n        if (this.isNetworkEnabled() && this.watchStream.isOpen()) {\n            this.sendUnwatchRequest(targetId);\n            if (objUtils.isEmpty(this.listenTargets)) {\n                this.watchStream.markIdle();\n            }\n        }\n    };\n    /**\n     * We need to increment the the expected number of pending responses we're due\n     * from watch so we wait for the ack to process any messages from this target.\n     */\n    RemoteStore.prototype.sendWatchRequest = function (queryData) {\n        this.recordPendingTargetRequest(queryData.targetId);\n        this.watchStream.watch(queryData);\n    };\n    /**\n     * We need to increment the expected number of pending responses we're due\n     * from watch so we wait for the removal on the server before we process any\n     * messages from this target.\n     */\n    RemoteStore.prototype.sendUnwatchRequest = function (targetId) {\n        this.recordPendingTargetRequest(targetId);\n        this.watchStream.unwatch(targetId);\n    };\n    /**\n     * Increment the mapping of how many acks are needed from watch before we can\n     * consider the server to be 'in-sync' with the client's active targets.\n     */\n    RemoteStore.prototype.recordPendingTargetRequest = function (targetId) {\n        // For each request we get we need to record we need a response for it.\n        this.pendingTargetResponses[targetId] =\n            (this.pendingTargetResponses[targetId] || 0) + 1;\n    };\n    RemoteStore.prototype.startWatchStream = function () {\n        assert(this.shouldStartWatchStream(), 'startWriteStream() called when shouldStartWatchStream() is false.');\n        this.watchStream.start({\n            onOpen: this.onWatchStreamOpen.bind(this),\n            onClose: this.onWatchStreamClose.bind(this),\n            onWatchChange: this.onWatchStreamChange.bind(this)\n        });\n    };\n    /**\n     * Returns whether the watch stream should be started because there are\n     * active targets trying to be listened too\n     */\n    RemoteStore.prototype.shouldStartWatchStream = function () {\n        return (this.isNetworkEnabled() &&\n            !this.watchStream.isStarted() &&\n            !objUtils.isEmpty(this.listenTargets));\n    };\n    RemoteStore.prototype.cleanUpWatchStreamState = function () {\n        // If the connection is closed then we'll never get a snapshot version for\n        // the accumulated changes and so we'll never be able to complete the batch.\n        // When we start up again the server is going to resend these changes\n        // anyway, so just toss the accumulated state.\n        this.accumulatedWatchChanges = [];\n        this.pendingTargetResponses = {};\n    };\n    RemoteStore.prototype.onWatchStreamOpen = function () {\n        var _this = this;\n        // TODO(b/35852690): close the stream again (with some timeout?) if no watch\n        // targets are active\n        objUtils.forEachNumber(this.listenTargets, function (targetId, queryData) {\n            _this.sendWatchRequest(queryData);\n        });\n        return Promise.resolve();\n    };\n    RemoteStore.prototype.onWatchStreamClose = function (error) {\n        assert(this.isNetworkEnabled(), 'onWatchStreamClose() should only be called when the network is enabled');\n        this.cleanUpWatchStreamState();\n        // If there was an error, retry the connection.\n        if (this.shouldStartWatchStream()) {\n            this.updateOnlineStateAfterFailure();\n            this.startWatchStream();\n        }\n        else {\n            // No need to restart watch stream because there are no active targets.\n            // The online state is set to unknown because there is no active attempt\n            // at establishing a connection\n            this.updateOnlineState(OnlineState.Unknown);\n        }\n        return Promise.resolve();\n    };\n    RemoteStore.prototype.onWatchStreamChange = function (watchChange, snapshotVersion) {\n        // Mark the connection as healthy because we got a message from the server\n        this.updateOnlineState(OnlineState.Healthy);\n        if (watchChange instanceof WatchTargetChange &&\n            watchChange.state === WatchTargetChangeState.Removed &&\n            watchChange.cause) {\n            // There was an error on a target, don't wait for a consistent snapshot\n            // to raise events\n            return this.handleTargetError(watchChange);\n        }\n        // Accumulate watch changes but don't process them if there's no\n        // snapshotVersion or it's older than a previous snapshot we've processed\n        // (can happen after we resume a target using a resume token).\n        this.accumulatedWatchChanges.push(watchChange);\n        if (!snapshotVersion.isEqual(SnapshotVersion.MIN) &&\n            snapshotVersion.compareTo(this.localStore.getLastRemoteSnapshotVersion()) >= 0) {\n            var changes = this.accumulatedWatchChanges;\n            this.accumulatedWatchChanges = [];\n            return this.handleWatchChangeBatch(snapshotVersion, changes);\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    /**\n     * Takes a batch of changes from the Datastore, repackages them as a\n     * RemoteEvent, and passes that on to the listener, which is typically the\n     * SyncEngine.\n     */\n    RemoteStore.prototype.handleWatchChangeBatch = function (snapshotVersion, changes) {\n        var _this = this;\n        var aggregator = new WatchChangeAggregator(snapshotVersion, this.listenTargets, this.pendingTargetResponses);\n        aggregator.addChanges(changes);\n        var remoteEvent = aggregator.createRemoteEvent();\n        // Get the new response counts from the aggregator\n        this.pendingTargetResponses = aggregator.pendingTargetResponses;\n        var promises = [];\n        // Handle existence filters and existence filter mismatches.\n        objUtils.forEachNumber(aggregator.existenceFilters, function (targetId, filter) {\n            var queryData = _this.listenTargets[targetId];\n            if (!queryData) {\n                // A watched target might have been removed already.\n                return;\n            }\n            var query = queryData.query;\n            if (query.isDocumentQuery()) {\n                if (filter.count === 0) {\n                    // The existence filter told us the document does not exist.\n                    // We need to deduce that this document does not exist and apply\n                    // a deleted document to our updates. Without applying a deleted\n                    // document there might be another query that will raise this\n                    // document as part of a snapshot until it is resolved,\n                    // essentially exposing inconsistency between queries.\n                    var key = new DocumentKey(query.path);\n                    var deletedDoc = new NoDocument(key, snapshotVersion);\n                    remoteEvent.addDocumentUpdate(deletedDoc);\n                }\n                else {\n                    assert(filter.count === 1, 'Single document existence filter with count: ' + filter.count);\n                }\n            }\n            else {\n                // Not a document query.\n                var promise = _this.localStore\n                    .remoteDocumentKeys(targetId)\n                    .then(function (trackedRemote) {\n                    if (remoteEvent.targetChanges[targetId]) {\n                        var mapping = remoteEvent.targetChanges[targetId].mapping;\n                        if (mapping !== null) {\n                            if (mapping instanceof UpdateMapping) {\n                                trackedRemote = mapping.applyToKeySet(trackedRemote);\n                            }\n                            else {\n                                assert(mapping instanceof ResetMapping, 'Expected either reset or update mapping but got something else: ' +\n                                    mapping);\n                                trackedRemote = mapping.documents;\n                            }\n                        }\n                    }\n                    if (trackedRemote.size !== filter.count) {\n                        // Existence filter mismatch, resetting mapping.\n                        // Make sure the mismatch is exposed in the remote event.\n                        remoteEvent.handleExistenceFilterMismatch(targetId);\n                        // Clear the resume token for the query, since we're in a\n                        // known mismatch state.\n                        var newQueryData = new QueryData(query, targetId, queryData.purpose);\n                        _this.listenTargets[targetId] = newQueryData;\n                        // Cause a hard reset by unwatching and rewatching\n                        // immediately, but deliberately don't send a resume token\n                        // so that we get a full update.\n                        // Make sure we expect that this acks are going to happen.\n                        _this.sendUnwatchRequest(targetId);\n                        // Mark the query we send as being on behalf of an existence\n                        // filter mismatch, but don't actually retain that in\n                        // listenTargets. This ensures that we flag the first\n                        // re-listen this way without impacting future listens of\n                        // this target (that might happen e.g. on reconnect).\n                        var requestQueryData = new QueryData(query, targetId, QueryPurpose.ExistenceFilterMismatch);\n                        _this.sendWatchRequest(requestQueryData);\n                    }\n                });\n                promises.push(promise);\n            }\n        });\n        return Promise.all(promises).then(function () {\n            // Update in-memory resume tokens. LocalStore will update the\n            // persistent view of these when applying the completed RemoteEvent.\n            objUtils.forEachNumber(remoteEvent.targetChanges, function (targetId, change) {\n                if (change.resumeToken.length > 0) {\n                    var queryData = _this.listenTargets[targetId];\n                    // A watched target might have been removed already.\n                    if (queryData) {\n                        _this.listenTargets[targetId] = queryData.update({\n                            resumeToken: change.resumeToken,\n                            snapshotVersion: change.snapshotVersion\n                        });\n                    }\n                }\n            });\n            // Finally handle remote event\n            return _this.syncEngine.applyRemoteEvent(remoteEvent);\n        });\n    };\n    /** Handles an error on a target */\n    RemoteStore.prototype.handleTargetError = function (watchChange) {\n        var _this = this;\n        assert(!!watchChange.cause, 'Handling target error without a cause');\n        var error = watchChange.cause;\n        var promiseChain = Promise.resolve();\n        watchChange.targetIds.forEach(function (targetId) {\n            promiseChain = promiseChain.then(function () {\n                if (objUtils.contains(_this.listenTargets, targetId)) {\n                    delete _this.listenTargets[targetId];\n                    return _this.syncEngine.rejectListen(targetId, error);\n                }\n                else {\n                    // A watched target might have been removed already.\n                    return Promise.resolve();\n                }\n            });\n        });\n        return promiseChain;\n    };\n    RemoteStore.prototype.cleanUpWriteStreamState = function () {\n        this.lastBatchSeen = BATCHID_UNKNOWN;\n        log.debug(LOG_TAG, 'Stopping write stream with ' +\n            this.pendingWrites.length +\n            ' pending writes');\n        this.pendingWrites = [];\n    };\n    /**\n     * Notifies that there are new mutations to process in the queue. This is\n     * typically called by SyncEngine after it has sent mutations to LocalStore.\n     */\n    RemoteStore.prototype.fillWritePipeline = function () {\n        var _this = this;\n        if (!this.canWriteMutations()) {\n            return Promise.resolve();\n        }\n        else {\n            return this.localStore\n                .nextMutationBatch(this.lastBatchSeen)\n                .then(function (batch) {\n                if (batch === null) {\n                    if (_this.pendingWrites.length === 0) {\n                        _this.writeStream.markIdle();\n                    }\n                    return Promise.resolve();\n                }\n                else {\n                    _this.commit(batch);\n                    return _this.fillWritePipeline();\n                }\n            });\n        }\n    };\n    /**\n     * Returns true if the backend can accept additional write requests.\n     *\n     * When sending mutations to the write stream (e.g. in fillWritePipeline),\n     * call this method first to check if more mutations can be sent.\n     *\n     * Currently the only thing that can prevent the backend from accepting\n     * write requests is if there are too many requests already outstanding. As\n     * writes complete the backend will be able to accept more.\n     */\n    RemoteStore.prototype.canWriteMutations = function () {\n        return (this.isNetworkEnabled() && this.pendingWrites.length < MAX_PENDING_WRITES);\n    };\n    // For testing\n    RemoteStore.prototype.outstandingWrites = function () {\n        return this.pendingWrites.length;\n    };\n    /**\n     * Given mutations to commit, actually commits them to the Datastore. Note\n     * that this does *not* return a Promise specifically because the AsyncQueue\n     * should not block operations for this.\n     */\n    RemoteStore.prototype.commit = function (batch) {\n        assert(this.canWriteMutations(), \"commit called when batches can't be written\");\n        this.lastBatchSeen = batch.batchId;\n        this.pendingWrites.push(batch);\n        if (this.shouldStartWriteStream()) {\n            this.startWriteStream();\n        }\n        else if (this.isNetworkEnabled() && this.writeStream.handshakeComplete) {\n            this.writeStream.writeMutations(batch.mutations);\n        }\n    };\n    RemoteStore.prototype.shouldStartWriteStream = function () {\n        return (this.isNetworkEnabled() &&\n            !this.writeStream.isStarted() &&\n            this.pendingWrites.length > 0);\n    };\n    RemoteStore.prototype.startWriteStream = function () {\n        assert(this.shouldStartWriteStream(), 'startWriteStream() called when shouldStartWriteStream() is false.');\n        this.writeStream.start({\n            onOpen: this.onWriteStreamOpen.bind(this),\n            onClose: this.onWriteStreamClose.bind(this),\n            onHandshakeComplete: this.onWriteHandshakeComplete.bind(this),\n            onMutationResult: this.onMutationResult.bind(this)\n        });\n    };\n    RemoteStore.prototype.onWriteStreamOpen = function () {\n        this.writeStream.writeHandshake();\n        return Promise.resolve();\n    };\n    RemoteStore.prototype.onWriteHandshakeComplete = function () {\n        var _this = this;\n        // Record the stream token.\n        return this.localStore\n            .setLastStreamToken(this.writeStream.lastStreamToken)\n            .then(function () {\n            // Drain any pending writes.\n            //\n            // Note that at this point pendingWrites contains mutations that\n            // have already been accepted by fillWritePipeline/commitBatch. If\n            // the pipeline is full, canWriteMutations will be false, despite\n            // the fact that we actually need to send mutations over.\n            //\n            // This also means that this method indirectly respects the limits\n            // imposed by canWriteMutations since writes can't be added to the\n            // pendingWrites array when canWriteMutations is false. If the\n            // limits imposed by canWriteMutations actually protect us from\n            // DOSing ourselves then those limits won't be exceeded here and\n            // we'll continue to make progress.\n            for (var _i = 0, _a = _this.pendingWrites; _i < _a.length; _i++) {\n                var batch = _a[_i];\n                _this.writeStream.writeMutations(batch.mutations);\n            }\n        });\n    };\n    RemoteStore.prototype.onMutationResult = function (commitVersion, results) {\n        var _this = this;\n        // This is a response to a write containing mutations and should be\n        // correlated to the first pending write.\n        assert(this.pendingWrites.length > 0, 'Got result for empty pending writes');\n        var batch = this.pendingWrites.shift();\n        var success = MutationBatchResult.from(batch, commitVersion, results, this.writeStream.lastStreamToken);\n        return this.syncEngine.applySuccessfulWrite(success).then(function () {\n            // It's possible that with the completion of this mutation another\n            // slot has freed up.\n            return _this.fillWritePipeline();\n        });\n    };\n    RemoteStore.prototype.onWriteStreamClose = function (error) {\n        var _this = this;\n        assert(this.isNetworkEnabled(), 'onWriteStreamClose() should only be called when the network is enabled');\n        // If the write stream closed due to an error, invoke the error callbacks if\n        // there are pending writes.\n        if (error && this.pendingWrites.length > 0) {\n            assert(!!error, 'We have pending writes, but the write stream closed without an error');\n            // A promise that is resolved after we processed the error\n            var errorHandling = void 0;\n            if (this.writeStream.handshakeComplete) {\n                // This error affects the actual write.\n                errorHandling = this.handleWriteError(error);\n            }\n            else {\n                // If there was an error before the handshake has finished, it's\n                // possible that the server is unable to process the stream token\n                // we're sending. (Perhaps it's too old?)\n                errorHandling = this.handleHandshakeError(error);\n            }\n            return errorHandling.then(function () {\n                // The write stream might have been started by refilling the write\n                // pipeline for failed writes\n                if (_this.shouldStartWriteStream()) {\n                    _this.startWriteStream();\n                }\n            });\n        }\n        else {\n            // No pending writes, nothing to do\n            return Promise.resolve();\n        }\n    };\n    RemoteStore.prototype.handleHandshakeError = function (error) {\n        // Reset the token if it's a permanent error or the error code is\n        // ABORTED, signaling the write stream is no longer valid.\n        if (isPermanentError(error.code) || error.code === Code.ABORTED) {\n            log.debug(LOG_TAG, 'RemoteStore error before completed handshake; resetting stream token: ', this.writeStream.lastStreamToken);\n            this.writeStream.lastStreamToken = emptyByteString();\n            return this.localStore.setLastStreamToken(emptyByteString());\n        }\n        else {\n            // Some other error, don't reset stream token. Our stream logic will\n            // just retry with exponential backoff.\n            return Promise.resolve();\n        }\n    };\n    RemoteStore.prototype.handleWriteError = function (error) {\n        var _this = this;\n        if (isPermanentError(error.code)) {\n            // This was a permanent error, the request itself was the problem\n            // so it's not going to succeed if we resend it.\n            var batch = this.pendingWrites.shift();\n            // In this case it's also unlikely that the server itself is melting\n            // down -- this was just a bad request so inhibit backoff on the next\n            // restart.\n            this.writeStream.inhibitBackoff();\n            return this.syncEngine\n                .rejectFailedWrite(batch.batchId, error)\n                .then(function () {\n                // It's possible that with the completion of this mutation\n                // another slot has freed up.\n                return _this.fillWritePipeline();\n            });\n        }\n        else {\n            // Transient error, just let the retry logic kick in.\n            return Promise.resolve();\n        }\n    };\n    RemoteStore.prototype.createTransaction = function () {\n        return new Transaction(this.datastore);\n    };\n    RemoteStore.prototype.handleUserChange = function (user) {\n        log.debug(LOG_TAG, 'RemoteStore changing users: uid=', user.uid);\n        // If the network has been explicitly disabled, make sure we don't\n        // accidentally re-enable it.\n        if (this.isNetworkEnabled()) {\n            // Tear down and re-create our network streams. This will ensure we get a fresh auth token\n            // for the new user and re-fill the write pipeline with new mutations from the LocalStore\n            // (since mutations are per-user).\n            this.disableNetworkInternal();\n            this.updateOnlineState(OnlineState.Unknown);\n            return this.enableNetwork();\n        }\n    };\n    return RemoteStore;\n}());\nexport { RemoteStore };\n\n//# sourceMappingURL=remote_store.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/remote/remote_store.js\n// module id = 304\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SnapshotVersion } from './snapshot_version';\nimport { documentVersionMap } from '../model/collections';\nimport { NoDocument } from '../model/document';\nimport { DeleteMutation, Precondition } from '../model/mutation';\nimport { Code, FirestoreError } from '../util/error';\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nvar Transaction = /** @class */ (function () {\n    function Transaction(datastore) {\n        this.datastore = datastore;\n        // The version of each document that was read during this transaction.\n        this.readVersions = documentVersionMap();\n        this.mutations = [];\n        this.committed = false;\n    }\n    Transaction.prototype.recordVersion = function (doc) {\n        var docVersion = doc.version;\n        if (doc instanceof NoDocument) {\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            docVersion = SnapshotVersion.forDeletedDoc();\n        }\n        var existingVersion = this.readVersions.get(doc.key);\n        if (existingVersion !== null) {\n            if (!docVersion.isEqual(existingVersion)) {\n                // This transaction will fail no matter what.\n                throw new FirestoreError(Code.ABORTED, 'Document version changed between two reads.');\n            }\n        }\n        else {\n            this.readVersions = this.readVersions.insert(doc.key, docVersion);\n        }\n    };\n    Transaction.prototype.lookup = function (keys) {\n        var _this = this;\n        if (this.committed) {\n            return Promise.reject('Transaction has already completed.');\n        }\n        if (this.mutations.length > 0) {\n            return Promise.reject('Transactions lookups are invalid after writes.');\n        }\n        return this.datastore.lookup(keys).then(function (docs) {\n            docs.forEach(function (doc) { return _this.recordVersion(doc); });\n            return docs;\n        });\n    };\n    Transaction.prototype.write = function (mutations) {\n        if (this.committed) {\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'Transaction has already completed.');\n        }\n        this.mutations = this.mutations.concat(mutations);\n    };\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n    Transaction.prototype.precondition = function (key) {\n        var version = this.readVersions.get(key);\n        if (version) {\n            return Precondition.updateTime(version);\n        }\n        else {\n            return Precondition.NONE;\n        }\n    };\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n    Transaction.prototype.preconditionForUpdate = function (key) {\n        var version = this.readVersions.get(key);\n        if (version && version.isEqual(SnapshotVersion.forDeletedDoc())) {\n            // The document doesn't exist, so fail the transaction.\n            throw new FirestoreError(Code.FAILED_PRECONDITION, \"Can't update a document that doesn't exist.\");\n        }\n        else if (version) {\n            // Document exists, base precondition on document update time.\n            return Precondition.updateTime(version);\n        }\n        else {\n            // Document was not read, so we just use the preconditions for a blind\n            // update.\n            return Precondition.exists(true);\n        }\n    };\n    Transaction.prototype.set = function (key, data) {\n        this.write(data.toMutations(key, this.precondition(key)));\n    };\n    Transaction.prototype.update = function (key, data) {\n        this.write(data.toMutations(key, this.preconditionForUpdate(key)));\n    };\n    Transaction.prototype.delete = function (key) {\n        this.write([new DeleteMutation(key, this.precondition(key))]);\n        // Since the delete will be applied before all following writes, we need to\n        // ensure that the precondition for the next write will be exists: false.\n        this.readVersions = this.readVersions.insert(key, SnapshotVersion.forDeletedDoc());\n    };\n    Transaction.prototype.commit = function () {\n        var _this = this;\n        var unwritten = this.readVersions;\n        // For each mutation, note that the doc was written.\n        this.mutations.forEach(function (mutation) {\n            unwritten = unwritten.remove(mutation.key);\n        });\n        if (!unwritten.isEmpty()) {\n            return Promise.reject(Error('Every document read in a transaction must also be written.'));\n        }\n        return this.datastore.commit(this.mutations).then(function () {\n            _this.committed = true;\n        });\n    };\n    return Transaction;\n}());\nexport { Transaction };\n\n//# sourceMappingURL=transaction.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/core/transaction.js\n// module id = 305\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\nvar AsyncObserver = /** @class */ (function () {\n    function AsyncObserver(observer) {\n        this.observer = observer;\n        /**\n         * When set to true, will not raise future events. Necessary to deal with\n         * async detachment of listener.\n         */\n        this.muted = false;\n    }\n    AsyncObserver.prototype.next = function (value) {\n        this.scheduleEvent(this.observer.next, value);\n    };\n    AsyncObserver.prototype.error = function (error) {\n        this.scheduleEvent(this.observer.error, error);\n    };\n    AsyncObserver.prototype.mute = function () {\n        this.muted = true;\n    };\n    AsyncObserver.prototype.scheduleEvent = function (eventHandler, event) {\n        var _this = this;\n        if (!this.muted) {\n            setTimeout(function () {\n                if (!_this.muted) {\n                    eventHandler(event);\n                }\n            }, 0);\n        }\n    };\n    return AsyncObserver;\n}());\nexport { AsyncObserver };\n\n//# sourceMappingURL=async_observer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/async_observer.js\n// module id = 306\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assert, fail } from './assert';\nimport * as log from './log';\nimport { Deferred } from './promise';\nimport { Code, FirestoreError } from './error';\nvar AsyncQueue = /** @class */ (function () {\n    function AsyncQueue() {\n        // The last promise in the queue.\n        this.tail = Promise.resolve();\n        // A list with timeout handles and their respective deferred promises.\n        // Contains an entry for each operation that is queued to run in the future\n        // (i.e. it has a delay that has not yet elapsed). Prior to cleanup, this list\n        // may also contain entries that have already been run (in which case `handle` is\n        // null).\n        this.delayedOperations = [];\n        // The number of operations that are queued to be run in the future (i.e. they\n        // have a delay that has not yet elapsed). Unlike `delayedOperations`, this\n        // is guaranteed to only contain operations that have not yet been run.\n        //\n        // Visible for testing.\n        this.delayedOperationsCount = 0;\n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.operationInProgress = false;\n    }\n    /**\n     * Adds a new operation to the queue. Returns a promise that will be resolved\n     * when the promise returned by the new operation is (with its value).\n     *\n     * Can optionally specify a delay (in milliseconds) to wait before queuing the\n     * operation.\n     */\n    AsyncQueue.prototype.schedule = function (op, delay) {\n        var _this = this;\n        if (this.failure) {\n            fail('AsyncQueue is already failed: ' +\n                (this.failure.stack || this.failure.message));\n        }\n        if ((delay || 0) > 0) {\n            this.delayedOperationsCount++;\n            var delayedOp_1 = {\n                handle: null,\n                op: op,\n                deferred: new Deferred()\n            };\n            delayedOp_1.handle = setTimeout(function () {\n                _this.scheduleInternal(function () {\n                    return delayedOp_1.op().then(function (result) {\n                        delayedOp_1.deferred.resolve(result);\n                    });\n                });\n                delayedOp_1.handle = null;\n                _this.delayedOperationsCount--;\n                if (_this.delayedOperationsCount === 0) {\n                    _this.delayedOperations = [];\n                }\n            }, delay);\n            this.delayedOperations.push(delayedOp_1);\n            return delayedOp_1.deferred.promise;\n        }\n        else {\n            return this.scheduleInternal(op);\n        }\n    };\n    AsyncQueue.prototype.scheduleInternal = function (op) {\n        var _this = this;\n        this.tail = this.tail.then(function () {\n            _this.operationInProgress = true;\n            return op()\n                .catch(function (error) {\n                _this.failure = error;\n                _this.operationInProgress = false;\n                var message = error.stack || error.message || '';\n                log.error('INTERNAL UNHANDLED ERROR: ', message);\n                // Escape the promise chain and throw the error globally so that\n                // e.g. any global crash reporting library detects and reports it.\n                // (but not for simulated errors in our tests since this breaks mocha)\n                if (message.indexOf('Firestore Test Simulated Error') < 0) {\n                    setTimeout(function () {\n                        throw error;\n                    }, 0);\n                }\n                // Re-throw the error so that this.tail becomes a rejected Promise and\n                // all further attempts to chain (via .then) will just short-circuit\n                // and return the rejected Promise.\n                throw error;\n            })\n                .then(function () {\n                _this.operationInProgress = false;\n            });\n        });\n        return this.tail;\n    };\n    /**\n     * Verifies there's an operation currently in-progress on the AsyncQueue.\n     * Unfortunately we can't verify that the running code is in the promise chain\n     * of that operation, so this isn't a foolproof check, but it should be enough\n     * to catch some bugs.\n     */\n    AsyncQueue.prototype.verifyOperationInProgress = function () {\n        assert(this.operationInProgress, 'verifyOpInProgress() called when no op in progress on this queue.');\n    };\n    /**\n     * Waits until all currently scheduled tasks are finished executing. Tasks\n     * scheduled with a delay can be rejected or queued for immediate execution.\n     */\n    AsyncQueue.prototype.drain = function (executeDelayedTasks) {\n        var _this = this;\n        this.delayedOperations.forEach(function (entry) {\n            if (entry.handle) {\n                clearTimeout(entry.handle);\n                if (executeDelayedTasks) {\n                    _this.scheduleInternal(entry.op).then(entry.deferred.resolve, entry.deferred.reject);\n                }\n                else {\n                    entry.deferred.reject(new FirestoreError(Code.CANCELLED, 'Operation cancelled by shutdown'));\n                }\n            }\n        });\n        this.delayedOperations = [];\n        this.delayedOperationsCount = 0;\n        return this.schedule(function () { return Promise.resolve(); });\n    };\n    return AsyncQueue;\n}());\nexport { AsyncQueue };\n\n//# sourceMappingURL=async_queue.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/util/async_queue.js\n// module id = 307\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { User } from '../auth/user';\nimport { assert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nvar OAuthToken = /** @class */ (function () {\n    function OAuthToken(value, user) {\n        this.user = user;\n        this.type = 'OAuth';\n        this.authHeaders = { Authorization: \"Bearer \" + value };\n    }\n    return OAuthToken;\n}());\nexport { OAuthToken };\n/** A CredentialsProvider that always yields an empty token. */\nvar EmptyCredentialsProvider = /** @class */ (function () {\n    function EmptyCredentialsProvider() {\n        /**\n         * Stores the User listener registered with setUserChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.userListener = null;\n    }\n    EmptyCredentialsProvider.prototype.getToken = function (forceRefresh) {\n        return Promise.resolve(null);\n    };\n    EmptyCredentialsProvider.prototype.setUserChangeListener = function (listener) {\n        assert(!this.userListener, 'Can only call setUserChangeListener() once.');\n        this.userListener = listener;\n        // Fire with initial user.\n        listener(User.UNAUTHENTICATED);\n    };\n    EmptyCredentialsProvider.prototype.removeUserChangeListener = function () {\n        assert(this.userListener !== null, 'removeUserChangeListener() when no listener registered');\n        this.userListener = null;\n    };\n    return EmptyCredentialsProvider;\n}());\nexport { EmptyCredentialsProvider };\nvar FirebaseCredentialsProvider = /** @class */ (function () {\n    function FirebaseCredentialsProvider(app) {\n        var _this = this;\n        this.app = app;\n        /**\n         * The auth token listener registered with FirebaseApp, retained here so we\n         * can unregister it.\n         */\n        this.tokenListener = null;\n        /**\n         * Counter used to detect if the user changed while a getToken request was\n         * outstanding.\n         */\n        this.userCounter = 0;\n        /** The User listener registered with setUserChangeListener(). */\n        this.userListener = null;\n        // We listen for token changes but all we really care about is knowing when\n        // the uid may have changed.\n        this.tokenListener = function () {\n            var newUser = _this.getUser();\n            if (!_this.currentUser || !newUser.isEqual(_this.currentUser)) {\n                _this.currentUser = newUser;\n                _this.userCounter++;\n                if (_this.userListener) {\n                    _this.userListener(_this.currentUser);\n                }\n            }\n        };\n        this.userCounter = 0;\n        // Will fire at least once where we set this.currentUser\n        this.app.INTERNAL.addAuthTokenListener(this.tokenListener);\n    }\n    FirebaseCredentialsProvider.prototype.getToken = function (forceRefresh) {\n        var _this = this;\n        assert(this.tokenListener != null, 'getToken cannot be called after listener removed.');\n        // Take note of the current value of the userCounter so that this method can\n        // fail (with an ABORTED error) if there is a user change while the request\n        // is outstanding.\n        var initialUserCounter = this.userCounter;\n        return this.app.INTERNAL.getToken(forceRefresh).then(function (tokenData) {\n            // Cancel the request since the user changed while the request was\n            // outstanding so the response is likely for a previous user (which\n            // user, we can't be sure).\n            if (_this.userCounter !== initialUserCounter) {\n                throw new FirestoreError(Code.ABORTED, 'getToken aborted due to uid change.');\n            }\n            else {\n                if (tokenData) {\n                    assert(typeof tokenData.accessToken === 'string', 'Invalid tokenData returned from getToken():' + tokenData);\n                    return new OAuthToken(tokenData.accessToken, _this.currentUser);\n                }\n                else {\n                    return null;\n                }\n            }\n        });\n    };\n    FirebaseCredentialsProvider.prototype.setUserChangeListener = function (listener) {\n        assert(!this.userListener, 'Can only call setUserChangeListener() once.');\n        this.userListener = listener;\n        // Fire the initial event, but only if we received the initial user\n        if (this.currentUser) {\n            listener(this.currentUser);\n        }\n    };\n    FirebaseCredentialsProvider.prototype.removeUserChangeListener = function () {\n        assert(this.tokenListener != null, 'removeUserChangeListener() called twice');\n        assert(this.userListener !== null, 'removeUserChangeListener() called when no listener registered');\n        this.app.INTERNAL.removeAuthTokenListener(this.tokenListener);\n        this.tokenListener = null;\n        this.userListener = null;\n    };\n    FirebaseCredentialsProvider.prototype.getUser = function () {\n        // TODO(mikelehen): Remove this check once we're shipping with firebase.js.\n        if (typeof this.app.INTERNAL.getUid !== 'function') {\n            fail('This version of the Firestore SDK requires at least version' +\n                ' 3.7.0 of firebase.js.');\n        }\n        var currentUid = this.app.INTERNAL.getUid();\n        assert(currentUid === null || typeof currentUid === 'string', 'Received invalid UID: ' + currentUid);\n        return new User(currentUid);\n    };\n    return FirebaseCredentialsProvider;\n}());\nexport { FirebaseCredentialsProvider };\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * TODO(b/33147818) this implementation violates the current assumption that\n * tokens are immutable.  We need to either revisit this assumption or come\n * up with some way for FPA to use the listen/unlisten interface.\n */\nvar FirstPartyToken = /** @class */ (function () {\n    function FirstPartyToken(gapi, sessionIndex) {\n        this.gapi = gapi;\n        this.sessionIndex = sessionIndex;\n        this.type = 'FirstParty';\n        this.user = User.FIRST_PARTY;\n        assert(this.gapi &&\n            this.gapi['auth'] &&\n            this.gapi['auth']['getAuthHeaderValueForFirstParty'], 'unexpected gapi interface');\n    }\n    Object.defineProperty(FirstPartyToken.prototype, \"authHeaders\", {\n        get: function () {\n            return {\n                Authorization: this.gapi['auth']['getAuthHeaderValueForFirstParty']([]),\n                'X-Goog-AuthUser': this.sessionIndex\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FirstPartyToken;\n}());\nexport { FirstPartyToken };\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nvar FirstPartyCredentialsProvider = /** @class */ (function () {\n    function FirstPartyCredentialsProvider(gapi, sessionIndex) {\n        this.gapi = gapi;\n        this.sessionIndex = sessionIndex;\n        assert(this.gapi &&\n            this.gapi['auth'] &&\n            this.gapi['auth']['getAuthHeaderValueForFirstParty'], 'unexpected gapi interface');\n    }\n    FirstPartyCredentialsProvider.prototype.getToken = function (forceRefresh) {\n        return Promise.resolve(new FirstPartyToken(this.gapi, this.sessionIndex));\n    };\n    // TODO(33108925): can someone switch users w/o a page refresh?\n    // TODO(33110621): need to understand token/session lifecycle\n    FirstPartyCredentialsProvider.prototype.setUserChangeListener = function (listener) {\n        // Fire with initial uid.\n        listener(User.FIRST_PARTY);\n    };\n    FirstPartyCredentialsProvider.prototype.removeUserChangeListener = function () { };\n    return FirstPartyCredentialsProvider;\n}());\nexport { FirstPartyCredentialsProvider };\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\nexport function makeCredentialsProvider(credentials) {\n    if (!credentials) {\n        return new EmptyCredentialsProvider();\n    }\n    switch (credentials.type) {\n        case 'gapi':\n            return new FirstPartyCredentialsProvider(credentials.client, credentials.sessionIndex || '0');\n        case 'provider':\n            return credentials.client;\n        default:\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'makeCredentialsProvider failed due to invalid credential type');\n    }\n}\n\n//# sourceMappingURL=credentials.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/api/credentials.js\n// module id = 308\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nvar User = /** @class */ (function () {\n    function User(uid) {\n        this.uid = uid;\n    }\n    User.prototype.isUnauthenticated = function () {\n        return this.uid == null;\n    };\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n    User.prototype.toKey = function () {\n        if (this.isUnauthenticated()) {\n            return 'anonymous-user';\n        }\n        else {\n            return 'uid:' + this.uid;\n        }\n    };\n    User.prototype.isEqual = function (otherUser) {\n        return otherUser.uid === this.uid;\n    };\n    /** A user with a null UID. */\n    User.UNAUTHENTICATED = new User(null);\n    // TODO(mikelehen): Look into getting a proper uid-equivalent for\n    // non-FirebaseAuth providers.\n    User.GOOGLE_CREDENTIALS = new User('google-credentials-uid');\n    User.FIRST_PARTY = new User('first-party-uid');\n    return User;\n}());\nexport { User };\n\n//# sourceMappingURL=user.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/auth/user.js\n// module id = 309\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function isPartialObserver(obj) {\n    return implementsAnyMethods(obj, ['next', 'error', 'complete']);\n}\n/**\n * Returns true if obj is an object and contains at least one of the specified\n * methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    var object = obj;\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in object && typeof object[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\n\n//# sourceMappingURL=observer.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/api/observer.js\n// module id = 310\n// module chunks = 5","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Timestamp } from '../core/timestamp';\nimport { ObjectValue } from '../model/field_value';\nimport { ArrayValue, BlobValue, BooleanValue, DoubleValue, GeoPointValue, IntegerValue, NullValue, RefValue, StringValue, TimestampValue } from '../model/field_value';\nimport { FieldMask, FieldTransform, PatchMutation, ServerTimestampTransform, SetMutation, TransformMutation } from '../model/mutation';\nimport { FieldPath } from '../model/path';\nimport { assert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport { isPlainObject, valueDescription } from '../util/input_validation';\nimport { primitiveComparator } from '../util/misc';\nimport * as objUtils from '../util/obj';\nimport { SortedMap } from '../util/sorted_map';\nimport * as typeUtils from '../util/types';\nimport { Blob } from './blob';\nimport { FieldPath as ExternalFieldPath, fromDotSeparatedString } from './field_path';\nimport { DeleteFieldValueImpl, FieldValueImpl, ServerTimestampFieldValueImpl } from './field_value';\nimport { GeoPoint } from './geo_point';\nvar RESERVED_FIELD_REGEX = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\nvar ParsedSetData = /** @class */ (function () {\n    function ParsedSetData(data, fieldMask, fieldTransforms) {\n        this.data = data;\n        this.fieldMask = fieldMask;\n        this.fieldTransforms = fieldTransforms;\n    }\n    ParsedSetData.prototype.toMutations = function (key, precondition) {\n        var mutations = [];\n        if (this.fieldMask !== null) {\n            mutations.push(new PatchMutation(key, this.data, this.fieldMask, precondition));\n        }\n        else {\n            mutations.push(new SetMutation(key, this.data, precondition));\n        }\n        if (this.fieldTransforms.length > 0) {\n            mutations.push(new TransformMutation(key, this.fieldTransforms));\n        }\n        return mutations;\n    };\n    return ParsedSetData;\n}());\nexport { ParsedSetData };\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nvar ParsedUpdateData = /** @class */ (function () {\n    function ParsedUpdateData(data, fieldMask, fieldTransforms) {\n        this.data = data;\n        this.fieldMask = fieldMask;\n        this.fieldTransforms = fieldTransforms;\n    }\n    ParsedUpdateData.prototype.toMutations = function (key, precondition) {\n        var mutations = [\n            new PatchMutation(key, this.data, this.fieldMask, precondition)\n        ];\n        if (this.fieldTransforms.length > 0) {\n            mutations.push(new TransformMutation(key, this.fieldTransforms));\n        }\n        return mutations;\n    };\n    return ParsedUpdateData;\n}());\nexport { ParsedUpdateData };\n/*\n * Represents what type of API method provided the data being parsed; useful\n * for determining which error conditions apply during parsing and providing\n * better error messages.\n */\nvar UserDataSource;\n(function (UserDataSource) {\n    UserDataSource[UserDataSource[\"Set\"] = 0] = \"Set\";\n    UserDataSource[UserDataSource[\"Update\"] = 1] = \"Update\";\n    UserDataSource[UserDataSource[\"MergeSet\"] = 2] = \"MergeSet\";\n    UserDataSource[UserDataSource[\"QueryValue\"] = 3] = \"QueryValue\"; // from a where clause or cursor bound\n})(UserDataSource || (UserDataSource = {}));\nfunction isWrite(dataSource) {\n    switch (dataSource) {\n        case UserDataSource.Set: // fall through\n        case UserDataSource.MergeSet: // fall through\n        case UserDataSource.Update:\n            return true;\n        case UserDataSource.QueryValue:\n            return false;\n        default:\n            throw fail(\"Unexpected case for UserDataSource: \" + dataSource);\n    }\n}\n/** A \"context\" object passed around while parsing user data. */\nvar ParseContext = /** @class */ (function () {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param dataSource Indicates what kind of API method this data came from.\n     * @param methodName The name of the method the user called to create this\n     *     ParseContext.\n     * @param path A path within the object being parsed. This could be an empty\n     *     path (in which case the context represents the root of the data being\n     *     parsed), or a nonempty path (indicating the context represents a nested\n     *     location within the data).\n     * @param arrayElement Whether or not this context corresponds to an element\n     *     of an array.\n     * @param fieldTransforms A mutable list of field transforms encountered while\n     *     parsing the data.\n     * @param fieldMask A mutable list of field paths encountered while parsing\n     *     the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    function ParseContext(dataSource, methodName, path, arrayElement, fieldTransforms, fieldMask) {\n        this.dataSource = dataSource;\n        this.methodName = methodName;\n        this.path = path;\n        this.arrayElement = arrayElement;\n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        if (fieldTransforms === undefined) {\n            this.validatePath();\n        }\n        this.arrayElement = arrayElement !== undefined ? arrayElement : false;\n        this.fieldTransforms = fieldTransforms || [];\n        this.fieldMask = fieldMask || [];\n    }\n    ParseContext.prototype.childContextForField = function (field) {\n        var childPath = this.path == null ? null : this.path.child(field);\n        var context = new ParseContext(this.dataSource, this.methodName, childPath, \n        /*arrayElement=*/ false, this.fieldTransforms, this.fieldMask);\n        context.validatePathSegment(field);\n        return context;\n    };\n    ParseContext.prototype.childContextForFieldPath = function (field) {\n        var childPath = this.path == null ? null : this.path.child(field);\n        var context = new ParseContext(this.dataSource, this.methodName, childPath, \n        /*arrayElement=*/ false, this.fieldTransforms, this.fieldMask);\n        context.validatePath();\n        return context;\n    };\n    ParseContext.prototype.childContextForArray = function (index) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // null.\n        return new ParseContext(this.dataSource, this.methodName, \n        /*path=*/ null, \n        /*arrayElement=*/ true, this.fieldTransforms, this.fieldMask);\n    };\n    ParseContext.prototype.createError = function (reason) {\n        var fieldDescription = this.path === null || this.path.isEmpty()\n            ? ''\n            : \" (found in field \" + this.path.toString() + \")\";\n        return new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + this.methodName + \"() called with invalid data. \" +\n            reason +\n            fieldDescription);\n    };\n    ParseContext.prototype.validatePath = function () {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path === null) {\n            return;\n        }\n        for (var i = 0; i < this.path.length; i++) {\n            this.validatePathSegment(this.path.get(i));\n        }\n    };\n    ParseContext.prototype.validatePathSegment = function (segment) {\n        if (isWrite(this.dataSource) && RESERVED_FIELD_REGEX.test(segment)) {\n            throw this.createError('Document fields cannot begin and end with __');\n        }\n    };\n    ParseContext.prototype.isWrite = function () {\n        return (this.dataSource === UserDataSource.Set ||\n            this.dataSource === UserDataSource.Update);\n    };\n    return ParseContext;\n}());\n/**\n * A placeholder object for DocumentReferences in this file, in order to\n * avoid a circular dependency. See the comments for `DataPreConverter` for\n * the full context.\n */\nvar DocumentKeyReference = /** @class */ (function () {\n    function DocumentKeyReference(databaseId, key) {\n        this.databaseId = databaseId;\n        this.key = key;\n    }\n    return DocumentKeyReference;\n}());\nexport { DocumentKeyReference };\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nvar UserDataConverter = /** @class */ (function () {\n    function UserDataConverter(preConverter) {\n        this.preConverter = preConverter;\n    }\n    /** Parse document data from a non-merge set() call. */\n    UserDataConverter.prototype.parseSetData = function (methodName, input) {\n        var context = new ParseContext(UserDataSource.Set, methodName, FieldPath.EMPTY_PATH);\n        validatePlainObject('Data must be an object, but it was:', context, input);\n        var updateData = this.parseData(input, context);\n        return new ParsedSetData(updateData, \n        /* fieldMask= */ null, context.fieldTransforms);\n    };\n    /** Parse document data from a set() call with '{merge:true}'. */\n    UserDataConverter.prototype.parseMergeData = function (methodName, input) {\n        var context = new ParseContext(UserDataSource.MergeSet, methodName, FieldPath.EMPTY_PATH);\n        validatePlainObject('Data must be an object, but it was:', context, input);\n        var updateData = this.parseData(input, context);\n        var fieldMask = new FieldMask(context.fieldMask);\n        return new ParsedSetData(updateData, fieldMask, context.fieldTransforms);\n    };\n    /** Parse update data from an update() call. */\n    UserDataConverter.prototype.parseUpdateData = function (methodName, input) {\n        var _this = this;\n        var context = new ParseContext(UserDataSource.Update, methodName, FieldPath.EMPTY_PATH);\n        validatePlainObject('Data must be an object, but it was:', context, input);\n        var fieldMaskPaths = [];\n        var updateData = ObjectValue.EMPTY;\n        objUtils.forEach(input, function (key, value) {\n            var path = fieldPathFromDotSeparatedString(methodName, key);\n            var childContext = context.childContextForFieldPath(path);\n            value = _this.runPreConverter(value, childContext);\n            if (value instanceof DeleteFieldValueImpl) {\n                // Add it to the field mask, but don't add anything to updateData.\n                fieldMaskPaths.push(path);\n            }\n            else {\n                var parsedValue = _this.parseData(value, childContext);\n                if (parsedValue != null) {\n                    fieldMaskPaths.push(path);\n                    updateData = updateData.set(path, parsedValue);\n                }\n            }\n        });\n        var mask = new FieldMask(fieldMaskPaths);\n        return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n    };\n    /** Parse update data from a list of field/value arguments. */\n    UserDataConverter.prototype.parseUpdateVarargs = function (methodName, field, value, moreFieldsAndValues) {\n        var context = new ParseContext(UserDataSource.Update, methodName, FieldPath.EMPTY_PATH);\n        var keys = [fieldPathFromArgument(methodName, field)];\n        var values = [value];\n        if (moreFieldsAndValues.length % 2 !== 0) {\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() needs to be called with an even number \" +\n                'of arguments that alternate between field names and values.');\n        }\n        for (var i = 0; i < moreFieldsAndValues.length; i += 2) {\n            keys.push(fieldPathFromArgument(methodName, moreFieldsAndValues[i]));\n            values.push(moreFieldsAndValues[i + 1]);\n        }\n        var fieldMaskPaths = [];\n        var updateData = ObjectValue.EMPTY;\n        for (var i = 0; i < keys.length; ++i) {\n            var path = keys[i];\n            var childContext = context.childContextForFieldPath(path);\n            var value_1 = this.runPreConverter(values[i], childContext);\n            if (value_1 instanceof DeleteFieldValueImpl) {\n                // Add it to the field mask, but don't add anything to updateData.\n                fieldMaskPaths.push(path);\n            }\n            else {\n                var parsedValue = this.parseData(value_1, childContext);\n                if (parsedValue != null) {\n                    fieldMaskPaths.push(path);\n                    updateData = updateData.set(path, parsedValue);\n                }\n            }\n        }\n        var mask = new FieldMask(fieldMaskPaths);\n        return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n    };\n    /**\n     * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n     * bound).\n     */\n    UserDataConverter.prototype.parseQueryValue = function (methodName, input) {\n        var context = new ParseContext(UserDataSource.QueryValue, methodName, FieldPath.EMPTY_PATH);\n        var parsed = this.parseData(input, context);\n        assert(parsed != null, 'Parsed data should not be null.');\n        assert(context.fieldTransforms.length === 0, 'Field transforms should have been disallowed.');\n        return parsed;\n    };\n    /** Sends data through this.preConverter, handling any thrown errors. */\n    UserDataConverter.prototype.runPreConverter = function (input, context) {\n        try {\n            return this.preConverter(input);\n        }\n        catch (e) {\n            var message = errorMessage(e);\n            throw context.createError(message);\n        }\n    };\n    /**\n     * Internal helper for parsing user data.\n     *\n     * @param input Data to be parsed.\n     * @param context A context object representing the current path being parsed,\n     * the source of the data being parsed, etc.\n     * @return The parsed value, or null if the value was a FieldValue sentinel\n     * that should not be included in the resulting parsed data.\n     */\n    UserDataConverter.prototype.parseData = function (input, context) {\n        input = this.runPreConverter(input, context);\n        if (input instanceof Array) {\n            // TODO(b/34871131): Include the path containing the array in the error\n            // message.\n            if (context.arrayElement) {\n                throw context.createError('Nested arrays are not supported');\n            }\n            // If context.path is null we are already inside an array and we don't\n            // support field mask paths more granular than the top-level array.\n            if (context.path) {\n                context.fieldMask.push(context.path);\n            }\n            return this.parseArray(input, context);\n        }\n        else if (looksLikeJsonObject(input)) {\n            validatePlainObject('Unsupported field value:', context, input);\n            return this.parseObject(input, context);\n        }\n        else {\n            // If context.path is null, we are inside an array and we should have\n            // already added the root of the array to the field mask.\n            if (context.path) {\n                context.fieldMask.push(context.path);\n            }\n            return this.parseScalarValue(input, context);\n        }\n    };\n    UserDataConverter.prototype.parseArray = function (array, context) {\n        var result = [];\n        var entryIndex = 0;\n        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n            var entry = array_1[_i];\n            var parsedEntry = this.parseData(entry, context.childContextForArray(entryIndex));\n            if (parsedEntry == null) {\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                parsedEntry = NullValue.INSTANCE;\n            }\n            result.push(parsedEntry);\n            entryIndex++;\n        }\n        return new ArrayValue(result);\n    };\n    UserDataConverter.prototype.parseObject = function (obj, context) {\n        var _this = this;\n        var result = new SortedMap(primitiveComparator);\n        objUtils.forEach(obj, function (key, val) {\n            var parsedValue = _this.parseData(val, context.childContextForField(key));\n            if (parsedValue != null) {\n                result = result.insert(key, parsedValue);\n            }\n        });\n        return new ObjectValue(result);\n    };\n    /**\n     * Helper to parse a scalar value (i.e. not an Object or Array)\n     *\n     * @return The parsed value, or null if the value was a FieldValue sentinel\n     * that should not be included in the resulting parsed data.\n     */\n    UserDataConverter.prototype.parseScalarValue = function (value, context) {\n        if (value === null) {\n            return NullValue.INSTANCE;\n        }\n        else if (typeof value === 'number') {\n            if (typeUtils.isSafeInteger(value)) {\n                return new IntegerValue(value);\n            }\n            else {\n                return new DoubleValue(value);\n            }\n        }\n        else if (typeof value === 'boolean') {\n            return BooleanValue.of(value);\n        }\n        else if (typeof value === 'string') {\n            return new StringValue(value);\n        }\n        else if (value instanceof Date) {\n            return new TimestampValue(Timestamp.fromDate(value));\n        }\n        else if (value instanceof GeoPoint) {\n            return new GeoPointValue(value);\n        }\n        else if (value instanceof Blob) {\n            return new BlobValue(value);\n        }\n        else if (value instanceof DocumentKeyReference) {\n            return new RefValue(value.databaseId, value.key);\n        }\n        else if (value instanceof FieldValueImpl) {\n            if (value instanceof DeleteFieldValueImpl) {\n                if (context.dataSource === UserDataSource.MergeSet) {\n                    return null;\n                }\n                else if (context.dataSource === UserDataSource.Update) {\n                    assert(context.path == null || context.path.length > 0, 'FieldValue.delete() at the top level should have already' +\n                        ' been handled.');\n                    throw context.createError('FieldValue.delete() can only appear at the top level ' +\n                        'of your update data');\n                }\n                else {\n                    // We shouldn't encounter delete sentinels for queries or non-merge set() calls.\n                    throw context.createError('FieldValue.delete() can only be used with update() and set() with {merge:true}');\n                }\n            }\n            else if (value instanceof ServerTimestampFieldValueImpl) {\n                if (!isWrite(context.dataSource)) {\n                    throw context.createError('FieldValue.serverTimestamp() can only be used with set()' +\n                        ' and update()');\n                }\n                if (context.path === null) {\n                    throw context.createError('FieldValue.serverTimestamp() is not currently' +\n                        ' supported inside arrays');\n                }\n                context.fieldTransforms.push(new FieldTransform(context.path, ServerTimestampTransform.instance));\n                // Return null so this value is omitted from the parsed result.\n                return null;\n            }\n            else {\n                return fail('Unknown FieldValue type: ' + value);\n            }\n        }\n        else {\n            throw context.createError(\"Unsupported field value: \" + valueDescription(value));\n        }\n    };\n    return UserDataConverter;\n}());\nexport { UserDataConverter };\n/**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */\nfunction looksLikeJsonObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        !(input instanceof Array) &&\n        !(input instanceof Date) &&\n        !(input instanceof GeoPoint) &&\n        !(input instanceof Blob) &&\n        !(input instanceof DocumentKeyReference) &&\n        !(input instanceof FieldValueImpl));\n}\nfunction validatePlainObject(message, context, input) {\n    if (!looksLikeJsonObject(input) || !isPlainObject(input)) {\n        var description = valueDescription(input);\n        if (description === 'an object') {\n            // Massage the error if it was an object.\n            throw context.createError(message + ' a custom object');\n        }\n        else {\n            throw context.createError(message + ' ' + description);\n        }\n    }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nexport function fieldPathFromArgument(methodName, path) {\n    if (path instanceof ExternalFieldPath) {\n        return path._internalPath;\n    }\n    else if (typeof path === 'string') {\n        return fieldPathFromDotSeparatedString(methodName, path);\n    }\n    else {\n        var message = 'Field path arguments must be of type string or FieldPath.';\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() called with invalid data. \" + message);\n    }\n}\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName The publicly visible method name\n * @param path The dot-separated string form of a field path which will be split\n * on dots.\n */\nfunction fieldPathFromDotSeparatedString(methodName, path) {\n    try {\n        return fromDotSeparatedString(path)._internalPath;\n    }\n    catch (e) {\n        var message = errorMessage(e);\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() called with invalid data. \" + message);\n    }\n}\n/**\n * Extracts the message from a caught exception, which should be an Error object\n * though JS doesn't guarantee that.\n */\nfunction errorMessage(error) {\n    return error instanceof Error ? error.message : error.toString();\n}\n\n//# sourceMappingURL=user_data_converter.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/esm/src/api/user_data_converter.js\n// module id = 311\n// module chunks = 5"],"sourceRoot":""}