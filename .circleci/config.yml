version: 2
jobs:
  verify:
    working_directory: ~/repo
    docker:
      - image: circleci/node:9.11.2

    steps:
      - checkout

      - restore_cache:
          keys:
          - cache-v2-{{ checksum "package.json" }}-{{ arch }}
      - run: npm ci
      - save_cache:
          paths:
            - ~/.npm
            - ./node-modules
            - ./package-lock.json
          key: cache-v2-{{ checksum "package.json" }}-{{ arch }}

      - run: npm run lint
      - run: npm run test
      - run: npm run coverage

  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:9.11.2

    steps:
      - checkout

      - restore_cache:
          keys:
          - cache-v2-{{ checksum "package.json" }}-{{ arch }}
      - run: yarn install
      - save_cache:
          paths:
            - ~/.npm
            - ./node-modules
            - ./package-lock.json
          key: cache-v2-{{ checksum "package.json" }}-{{ arch }}

      - run: npm run build
      - persist_to_workspace:
          root: build
          paths:
            - .

  # verify if tag matches package.json version
  verify_version_match:
    working_directory: ~/repo
    docker:
      - image: circleci/node:9.11.2
    steps:
      - checkout
      - run:
          command: |
            repo_tag=$(git describe --tags)
            pkg_tag=$(node -p "require('./package.json').version")
            if [ "${repo_tag}" != "${pkg_tag}" ]; then echo "Tag ${repo_tag} and application version ${pkg_tag} differ"; exit 1;  fi


  # deploy github releases
  deploy_gr:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.9
    steps:
      # prepare
      - checkout
      - attach_workspace:
          at: ~/repo/build
      # download github release tool
      - run: go get -u github.com/tcnksm/ghr
      # prepare artifacts
      - run: mkdir -p ~/repo/release
      - run: tar -zcvf build.tar.gz ~/repo/build && mv build.tar.gz ~/repo/release
      - run: cp CHANGELOG.md ~/repo/release
      # github release
      - run:
          command: |
            ghr -t "${GITHUB_TOKEN}" \
              -u "${CIRCLE_PROJECT_USERNAME}" \
              -r "${CIRCLE_PROJECT_REPONAME}" \
              --replace `git describe --tags` \
              ~/repo/release

  deploy_gp:
    working_directory: ~/repo
    docker:
      - image: circleci/node:9.11.2
    steps:
      # prepare
      - checkout
      - attach_workspace:
          at: ~/repo/build
      # setup everything
      - run:
          command: |
            npm install gh-pages --no-save ; \
            git config --global user.email "build_${CIRCLE_BUILD_NUM}@circleci.com" ; \
            git config --global user.name "CircleCI"
      #  do release
      - run:
          command: |
            ./node_modules/.bin/gh-pages \
              -d build \
              -m "Released with CircleCI@${CIRCLE_BUILD_NUM}"


workflows:
  version: 2
  korni_pipeline:
    jobs:
      - verify:
          filters:
            branches:
              ignore:
                - gh-pages
            tags:
              only: /.*/
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
            tags:
              only: /.*/
      - verify_version_match:
          requires:
            - build
            - verify
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)$/
      - deploy_gr:
          requires:
            - verify_version_match
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)$/
      - deploy_gp:
          requires:
            - verify_version_match
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)$/
